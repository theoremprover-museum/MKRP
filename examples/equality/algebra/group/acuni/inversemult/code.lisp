;;; -*- Package: MKRP; Base: 10; Mode: LISP; Syntax: Common-lisp -*-

(CONSTRUCTION  "Genera 8.0.1 Logical Pathnames Translation Files NEWEST IP-TCP 422.2 RPC 415.0 Embedding Support 407.0 UX Support 416.0 Experimental Network RPC 415.0 Experimental NFS Client 415.0 CLX 419.0 C Runtime 416.0 Compiler Tools Package 411.0 Compiler Tools Runtime 411.0 C Packages 413.0 Minimal Lexer Runtime 416.0 Lexer Package 415.0 Syntax Editor Runtime 411.0 Experimental X Server 409.0 X Remote Screen 418.1 KKL 20.1 HADES 16.0 Waltz 7.0 COLUMN 7.0 MKRP 49.10 GENTRAFO 1.0" "24-NOV,1991 22:35" 
   ("                                                                                                                     "
   "*********************************************************************************************************************"
   "                                                                                                                     "
   " FORMULA:  Date: 24-NOV,1991 20:53"
   "           Axioms und Theorems for this proof have been read from"
   "              Axiom-File: NIL"
   "            Theorem-File: NIL"
   "                                                                                                                     "
   "*********************************************************************************************************************"
   ))

(AXIOMS.INFIX    ((* ABELIAN GROUP *)
   (ALL X + (0 X) = X)
   (ALL X + (- (X) X) = 0)
   (AC (+))))

(THEOREMS.INFIX ((* THEOREM *)
   (ALL |X,Y| + (- (X) - (Y)) = - (+ (X Y)))))

(AXIOMS.PREFIX   (COMMENT
   (ALL 3 (+ 2 ((5 4 3) 3) NIL))
   (ALL 6 (+ 2 ((5 (7 6) 6) 4) NIL))
   (+ 0 NIL NIL)))

(THEOREMS.PREFIX (COMMENT
   (ALL 9 (ALL 8 (+ 2 ((5 (7 8) (7 9)) (7 (5 8 9))) NIL)))))

(OPTIONS (TWO_RULES)
    (TWO_RULES.MAXLEVEL . 1)
    (TWO_SUPPRESS.NORULES)
    (RED.I_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.I_CLAUSE.PURITY . PARTIAL)
    (RED.I_CLAUSE.TAUTOLOGY . T)
    (RED.I_CLAUSE.TAUTOLOGY.RECHECK . PARTIAL)
    (RED.I_CLAUSE.SUBSUMPTION . T)
    (RED.I_CLAUSE.SUBSUMPTION.RECHECK . PARTIAL)
    (RED.I_CLAUSE.REPL.FACTORING . T)
    (RED.I_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.I_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.I_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.I_CLAUSE.REWRITING . DEM)
    (RED.I_LINK.INCOMPATIBILITY . T)
    (RED.I_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.I_LINK.TAUTOLOGY.RECHECK)
    (RED.I_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.I_LINK.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.D_CLAUSE.PURITY . PARTIAL)
    (RED.D_CLAUSE.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_CLAUSE.TAUTOLOGY.RECHECK)
    (RED.D_CLAUSE.SUBSUMPTION.FORWARD . REMOVE-INHIBIT)
    (RED.D_CLAUSE.SUBSUMPTION.BACKWARD . REMOVE)
    (RED.D_CLAUSE.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.REPL.FACTORING . T)
    (RED.D_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.D_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.D_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.D_CLAUSE.REWRITING . DEM)
    (RED.D_LINK.INCOMPATIBILITY . T)
    (RED.D_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_LINK.TAUTOLOGY.RECHECK)
    (RED.D_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.D_LINK.SUBSUMPTION.RECHECK)
    (FAC_INITIAL)
    (FAC_EACH.STEP)
    (STR_RESOLUTION . SET-OF-SUPPORT)
    (STR_R.SELECTION * 10 (+ 2 VARIABLES (* 2 DEPTH) (* 3 NOLIT)))
    (STR_LINK.DEPTH)
    (STR_TERM.DEPTH)
    (STR_FINITE.DOMAIN . T)
    (TERM_UNITS . T)
    (TERM_ITERATIONS . 0)
    (TERM_SET.OF.SUPPORT)
    (TERM_BREADTH.FIRST)
    (SORT_LITERALS)
    (ER_PARAMODULATION . HEURISTIC-COMPLETION)
    (ER_P.SELECTION * WEIGHT (IF SUPPORT 1 1.5) (IF EQUATIONAL 1 2))
    (ER_COMPLETION . UNFAILING)
    (ER_CP.REDUCTION . T)
    (ER_ORDERING . POLYNOMIAL)
    (ER_OPERATOR.ORDERING * - + 0 1)
    (ER_KNUTH.BENDIX.WEIGHT (+ 1) (* 1) (- 0) (0 1) (1 1))
    (ER_POLYNOMIAL.WEIGHT (+ (X Y) (+ (* X Y) X)) (* (X Y) (+ (* X Y) X)) (- (X) (* X X)) (0 NIL 3) (1 NIL 3))
    (ER_NARROW.DEPTH . 0)
    (ER_NARROW.NEXT . DEPTH)
    (ER_NARROW.TEST NORM C DELTA SL N)
    (ER_COMPILE)
    (GEN_SPLITTING . 0)
    (GEN_PRESIMPLIFICATION . T)
    (GEN_MIN.EXPRESSION.LENGTH.FOR.FILE)
    (GEN_MIN.EXPRESSION.SIZE.FOR.FILE)
    (GEN_MANUAL.CONTROL)
    (GEN_MAXIMUM.STEPS)
    (GEN_GRAPH.SAVING)
    (GEN_SAVE.FILE . SAVEDEFAULT)
    (GEN_LISP.GARBAGE.COLLECTION)
    (GEN_COMMON.LISP)
    (TR_PREPROCESSING)
    (TR_STEP.MODE . LR)
    (TR_DUMP)
    (TR_CLAUSE.MODE . I)
    (TR_LINK.MODE . I)
    (TR_TRACE.FILE)
    (TR_TERMINAL . T)
    (PR_LATEX)
    (PR_INFIX.FORM . T)
    (PR_PREFIX.FORM)
    (PR_OPTIONS)
    (PR_AXIOM.CLAUSES . T)
    (PR_SYMBOLS)
    (PR_DIRECT.PROOF . T)
    (PR_VARIABLE.PRINT.NAMES X Y Z U V W XX YY ZZ UU VV WW XXX YYY ZZZ UUU VVV WWW)
    (PR_PROTOCOL . T)
    (PR_LEFT.MARGIN . 3)
    (PR_RIGHT.MARGIN . 117)
    (PR_LINELENGTH . 114)
    (PR_LITERALS)
   )

(LINK.COLOURS (R RIW RD S SI SIW SID T TI TIW P PIW PD RIWD))

(AXIOMS (START.TIME 72911949)
   (PARTIAL   (CLAUSE 12 R.= AXIOM ((10 . ANY)) ((+ 2 (10 10)) ))(CLAUSE 19 A.+ NIL ((15 . ANY)(14 . ANY)(13 . ANY)) ((+ 2 ((5 13 (5 14 15)) (5 (5 13 14) 15))) ))(CLAUSE 21 A1 AXIOM ((3 . ANY)) ((+ 2 ((5 4 3) 3)) )))
   (PARTIAL   (CLAUSE 43 A2 AXIOM ((6 . ANY)) ((+ 2 ((5 (7 6) 6) 4)) )))
   (END.TIME 72952167)
   (FINAL 12 19 21 43)
   (SYMBOLS 
   (LET (NEW.ADDRESS)
   (LIST (PROG1 (CONS    2 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "=" '(ANY ANY))))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED SYMMETRIC REFLEXIVE)))
   (PROG1 (CONS    1 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "FALSE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (PROG1 (CONS    0 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "TRUE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (CONS    4 (DT-CONSTANT.CREATE "0" 'ANY))
   (CONS    7 (DT-FUNCTION.CREATE "-" 'ANY '(ANY) 'NIL))
   (PROG1 (CONS    5 (SETQ NEW.ADDRESS (DT-FUNCTION.CREATE "+" 'ANY '(ANY ANY) 'NIL)))
   (DT-FUNCTION.ADD.ATTRIBUTES NEW.ADDRESS '(AC))))))
   (RESULT))

(THEOREMS (SPLITPART.IDENTIFIER 1)
   (START.TIME 72952410)
   (PARTIAL   (CLAUSE 8 T3 THEOREM () ((- 2 ((5 (7 67) (7 66)) (7 (5 67 66)))) )))
   (INITIAL   (CLAUSE 12 R.= AXIOM ((10 . ANY)) ((+ 2 (10 10)) ))
(CLAUSE 19 A.+ NIL ((15 . ANY)(14 . ANY)(13 . ANY)) ((+ 2 ((5 13 (5 14 15)) (5 (5 13 14) 15))) ))
(CLAUSE 21 A1 AXIOM ((3 . ANY)) ((+ 2 ((5 4 3) 3)) ))
(CLAUSE 43 A2 AXIOM ((6 . ANY)) ((+ 2 ((5 (7 6) 6) 4)) ))
(CLAUSE 8 T3 THEOREM () ((- 2 ((5 (7 67) (7 66)) (7 (5 67 66)))) ))   )
   (END.TIME 73013362)
   (FINAL 12 19 21 43 8)
   (SYMBOLS 
   (LET (NEW.ADDRESS)
   (LIST (PROG1 (CONS    2 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "=" '(ANY ANY))))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED SYMMETRIC REFLEXIVE)))
   (PROG1 (CONS    1 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "FALSE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (PROG1 (CONS    0 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "TRUE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (CONS   67 (DT-CONSTANT.CREATE "c_2" 'ANY))
   (CONS   66 (DT-CONSTANT.CREATE "c_1" 'ANY))
   (CONS    4 (DT-CONSTANT.CREATE "0" 'ANY))
   (CONS    7 (DT-FUNCTION.CREATE "-" 'ANY '(ANY) 'NIL))
   (PROG1 (CONS    5 (SETQ NEW.ADDRESS (DT-FUNCTION.CREATE "+" 'ANY '(ANY ANY) 'NIL)))
   (DT-FUNCTION.ADD.ATTRIBUTES NEW.ADDRESS '(AC))))))
   (RESULT))
(indices ((8 3) (43 2) (21 1) (19 NIL) (12 NIL)))

(SPLITPARTS "Genera 8.0.1 Logical Pathnames Translation Files NEWEST IP-TCP 422.2 RPC 415.0 Embedding Support 407.0 UX Support 416.0 Experimental Network RPC 415.0 Experimental NFS Client 415.0 CLX 419.0 C Runtime 416.0 Compiler Tools Package 411.0 Compiler Tools Runtime 411.0 C Packages 413.0 Minimal Lexer Runtime 416.0 Lexer Package 415.0 Syntax Editor Runtime 411.0 Experimental X Server 409.0 X Remote Screen 418.1 KKL 20.1 HADES 16.0 Waltz 7.0 COLUMN 7.0 MKRP 49.10 GENTRAFO 1.0" "24-NOV,1991 22:38" NIL)

(OPTIONS (TWO_RULES)
    (TWO_RULES.MAXLEVEL . 1)
    (TWO_SUPPRESS.NORULES)
    (RED.I_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.I_CLAUSE.PURITY . PARTIAL)
    (RED.I_CLAUSE.TAUTOLOGY . T)
    (RED.I_CLAUSE.TAUTOLOGY.RECHECK . PARTIAL)
    (RED.I_CLAUSE.SUBSUMPTION . T)
    (RED.I_CLAUSE.SUBSUMPTION.RECHECK . PARTIAL)
    (RED.I_CLAUSE.REPL.FACTORING . T)
    (RED.I_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.I_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.I_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.I_CLAUSE.REWRITING . DEM)
    (RED.I_LINK.INCOMPATIBILITY . T)
    (RED.I_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.I_LINK.TAUTOLOGY.RECHECK)
    (RED.I_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.I_LINK.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.D_CLAUSE.PURITY . PARTIAL)
    (RED.D_CLAUSE.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_CLAUSE.TAUTOLOGY.RECHECK)
    (RED.D_CLAUSE.SUBSUMPTION.FORWARD . REMOVE-INHIBIT)
    (RED.D_CLAUSE.SUBSUMPTION.BACKWARD . REMOVE)
    (RED.D_CLAUSE.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.REPL.FACTORING . T)
    (RED.D_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.D_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.D_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.D_CLAUSE.REWRITING . DEM)
    (RED.D_LINK.INCOMPATIBILITY . T)
    (RED.D_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_LINK.TAUTOLOGY.RECHECK)
    (RED.D_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.D_LINK.SUBSUMPTION.RECHECK)
    (FAC_INITIAL)
    (FAC_EACH.STEP)
    (STR_RESOLUTION . SET-OF-SUPPORT)
    (STR_R.SELECTION * 10 (+ 2 VARIABLES (* 2 DEPTH) (* 3 NOLIT)))
    (STR_LINK.DEPTH)
    (STR_TERM.DEPTH)
    (STR_FINITE.DOMAIN . T)
    (TERM_UNITS . T)
    (TERM_ITERATIONS . 0)
    (TERM_SET.OF.SUPPORT)
    (TERM_BREADTH.FIRST)
    (SORT_LITERALS)
    (ER_PARAMODULATION . HEURISTIC-COMPLETION)
    (ER_P.SELECTION * WEIGHT (IF SUPPORT 1 1.5) (IF EQUATIONAL 1 2))
    (ER_COMPLETION . UNFAILING)
    (ER_CP.REDUCTION . T)
    (ER_ORDERING . POLYNOMIAL)
    (ER_OPERATOR.ORDERING * - + 0 1)
    (ER_KNUTH.BENDIX.WEIGHT (+ 1) (* 1) (- 0) (0 1) (1 1))
    (ER_POLYNOMIAL.WEIGHT (+ (X Y) (+ (* X Y) X)) (* (X Y) (+ (* X Y) X)) (- (X) (* X X)) (0 NIL 3) (1 NIL 3))
    (ER_NARROW.DEPTH . 0)
    (ER_NARROW.NEXT . DEPTH)
    (ER_NARROW.TEST NORM C DELTA SL N)
    (ER_COMPILE)
    (GEN_SPLITTING . 0)
    (GEN_PRESIMPLIFICATION . T)
    (GEN_MIN.EXPRESSION.LENGTH.FOR.FILE)
    (GEN_MIN.EXPRESSION.SIZE.FOR.FILE)
    (GEN_MANUAL.CONTROL)
    (GEN_MAXIMUM.STEPS)
    (GEN_GRAPH.SAVING)
    (GEN_SAVE.FILE . SAVEDEFAULT)
    (GEN_LISP.GARBAGE.COLLECTION)
    (GEN_COMMON.LISP)
    (TR_PREPROCESSING)
    (TR_STEP.MODE . LR)
    (TR_DUMP)
    (TR_CLAUSE.MODE . I)
    (TR_LINK.MODE . I)
    (TR_TRACE.FILE)
    (TR_TERMINAL . T)
    (PR_LATEX)
    (PR_INFIX.FORM . T)
    (PR_PREFIX.FORM)
    (PR_OPTIONS)
    (PR_AXIOM.CLAUSES . T)
    (PR_SYMBOLS)
    (PR_DIRECT.PROOF . T)
    (PR_VARIABLE.PRINT.NAMES X Y Z U V W XX YY ZZ UU VV WW XXX YYY ZZZ UUU VVV WWW)
    (PR_PROTOCOL . T)
    (PR_LEFT.MARGIN . 3)
    (PR_RIGHT.MARGIN . 117)
    (PR_LINELENGTH . 114)
    (PR_LITERALS)
   )

(REFUTATION (START.TIME 73015919)

(OPTIONS (TWO_RULES)
    (TWO_RULES.MAXLEVEL . 1)
    (TWO_SUPPRESS.NORULES)
    (RED.I_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.I_CLAUSE.PURITY . PARTIAL)
    (RED.I_CLAUSE.TAUTOLOGY . T)
    (RED.I_CLAUSE.TAUTOLOGY.RECHECK . PARTIAL)
    (RED.I_CLAUSE.SUBSUMPTION . T)
    (RED.I_CLAUSE.SUBSUMPTION.RECHECK . PARTIAL)
    (RED.I_CLAUSE.REPL.FACTORING . T)
    (RED.I_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.I_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.I_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.I_CLAUSE.REWRITING . DEM)
    (RED.I_LINK.INCOMPATIBILITY . T)
    (RED.I_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.I_LINK.TAUTOLOGY.RECHECK)
    (RED.I_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.I_LINK.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.D_CLAUSE.PURITY . PARTIAL)
    (RED.D_CLAUSE.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_CLAUSE.TAUTOLOGY.RECHECK)
    (RED.D_CLAUSE.SUBSUMPTION.FORWARD . REMOVE-INHIBIT)
    (RED.D_CLAUSE.SUBSUMPTION.BACKWARD . REMOVE)
    (RED.D_CLAUSE.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.REPL.FACTORING . T)
    (RED.D_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.D_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.D_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.D_CLAUSE.REWRITING . DEM)
    (RED.D_LINK.INCOMPATIBILITY . T)
    (RED.D_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_LINK.TAUTOLOGY.RECHECK)
    (RED.D_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.D_LINK.SUBSUMPTION.RECHECK)
    (FAC_INITIAL)
    (FAC_EACH.STEP)
    (STR_RESOLUTION . SET-OF-SUPPORT)
    (STR_R.SELECTION * 10 (+ 2 VARIABLES (* 2 DEPTH) (* 3 NOLIT)))
    (STR_LINK.DEPTH)
    (STR_TERM.DEPTH)
    (STR_FINITE.DOMAIN . T)
    (TERM_UNITS . T)
    (TERM_ITERATIONS . 0)
    (TERM_SET.OF.SUPPORT)
    (TERM_BREADTH.FIRST)
    (SORT_LITERALS)
    (ER_PARAMODULATION . HEURISTIC-COMPLETION)
    (ER_P.SELECTION * WEIGHT (IF SUPPORT 1 1.5) (IF EQUATIONAL 1 2))
    (ER_COMPLETION . UNFAILING)
    (ER_CP.REDUCTION . T)
    (ER_ORDERING . POLYNOMIAL)
    (ER_OPERATOR.ORDERING * - + 0 1)
    (ER_KNUTH.BENDIX.WEIGHT (+ 1) (* 1) (- 0) (0 1) (1 1))
    (ER_POLYNOMIAL.WEIGHT (+ (X Y) (+ (* X Y) X)) (* (X Y) (+ (* X Y) X)) (- (X) (* X X)) (0 NIL 3) (1 NIL 3))
    (ER_NARROW.DEPTH . 0)
    (ER_NARROW.NEXT . DEPTH)
    (ER_NARROW.TEST NORM C DELTA SL N)
    (ER_COMPILE)
    (GEN_SPLITTING . 0)
    (GEN_PRESIMPLIFICATION . T)
    (GEN_MIN.EXPRESSION.LENGTH.FOR.FILE)
    (GEN_MIN.EXPRESSION.SIZE.FOR.FILE)
    (GEN_MANUAL.CONTROL)
    (GEN_MAXIMUM.STEPS)
    (GEN_GRAPH.SAVING)
    (GEN_SAVE.FILE . SAVEDEFAULT)
    (GEN_LISP.GARBAGE.COLLECTION)
    (GEN_COMMON.LISP)
    (TR_PREPROCESSING)
    (TR_STEP.MODE . LR)
    (TR_DUMP)
    (TR_CLAUSE.MODE . I)
    (TR_LINK.MODE . I)
    (TR_TRACE.FILE)
    (TR_TERMINAL . T)
    (PR_LATEX)
    (PR_INFIX.FORM . T)
    (PR_PREFIX.FORM)
    (PR_OPTIONS)
    (PR_AXIOM.CLAUSES . T)
    (PR_SYMBOLS)
    (PR_DIRECT.PROOF . T)
    (PR_VARIABLE.PRINT.NAMES X Y Z U V W XX YY ZZ UU VV WW XXX YYY ZZZ UUU VVV WWW)
    (PR_PROTOCOL . T)
    (PR_LEFT.MARGIN . 3)
    (PR_RIGHT.MARGIN . 117)
    (PR_LINELENGTH . 114)
    (PR_LITERALS)
   )
   (INITIAL   (CLAUSE 12 R.= AXIOM ((10 . ANY)) ((+ 2 (10 10)) ))
(CLAUSE 19 A.+ NIL ((15 . ANY)(14 . ANY)(13 . ANY)) ((+ 2 ((5 13 (5 14 15)) (5 (5 13 14) 15))) ))
(CLAUSE 21 A1 AXIOM ((3 . ANY)) ((+ 2 ((5 4 3) 3)) ))
(CLAUSE 43 A2 AXIOM ((6 . ANY)) ((+ 2 ((5 (7 6) 6) 4)) ))
(CLAUSE 8 T3 THEOREM () ((- 2 ((5 (7 67) (7 66)) (7 (5 67 66)))) ))   )
   (OPERATION (CLAUSE 38 P1 (21 43) () ((+ 2 (4 (7 4))) ))
   (PARAMODULATION 43 1 (1) 21 1 (1) NIL (6 4 3 (7 4)) 38))
   (OPERATION (CLAUSE 204 P2 (19 43) ((63 . ANY)(201 . ANY)) ((+ 2 ((5 (7 201) (5 201 63)) (5 4 63))) ))
   (PARAMODULATION 43 1 (1) 19 1 (2 1) NIL (6 53 13 (7 53) 14 53) 204))
   (OPERATION (CLAUSE 204 P2 (19 43) ((63 . ANY)(201 . ANY)) ((+ 2 ((5 (7 201) (5 201 63)) 63)) ))
   (REWRITE 21 1 204))
   (OPERATION (CLAUSE 212 P3 (204 43) ((56 . ANY)) ((+ 2 ((5 (7 (7 56)) 4) 56)) ))
   (PARAMODULATION 43 1 (1) 204 1 (1 2) NIL (6 348 201 (7 348) 63 348) 212))
   (OPERATION (CLAUSE 212 P3 (204 43) ((56 . ANY)) ((+ 2 ((7 (7 56)) 56)) ))
   (REWRITE 21 1 212))
   (OPERATION (CLAUSE 251 P4 (204 43) ((247 . ANY)(248 . ANY)) ((+ 2 ((5 (7 (5 248 (7 (5 247 248)))) 4) 247)) ))
   (PARAMODULATION 43 1 (1) 204 1 (1 2) NIL (6 (5 348 349) 201 (5 349 (7 (5 348 349))) 63 348) 251))
   (OPERATION (CLAUSE 251 P4 (204 43) ((247 . ANY)(248 . ANY)) ((+ 2 ((7 (5 248 (7 (5 247 248)))) 247)) ))
   (REWRITE 21 1 251))
   (OPERATION (CLAUSE 267 P5 (204 43) ((257 . ANY)(258 . ANY)) ((+ 2 ((5 (7 258) 4) (5 257 (7 (5 257 258))))) ))
   (PARAMODULATION 43 1 (1) 204 1 (1 2) NIL (6 (5 348 349) 201 349 63 (5 348 (7 (5 348 349)))) 267))
   (OPERATION (CLAUSE 267 P5 (204 43) ((257 . ANY)(258 . ANY)) ((+ 2 ((7 258) (5 257 (7 (5 257 258))))) ))
   (REWRITE 21 1 267))
   (OPERATION (CLAUSE 251 P4 (204 43) ((247 . ANY)) ((+ 2 ((7 (7 247)) 247)) ))
   (REWRITE 267 1 251))
   (OPERATION (CLAUSE 251 P4 (204 43) ((247 . ANY)) ((+ 2 (247 247)) ))
   (REWRITE 212 1 251))
   (OPERATION (CLAUSE 1785 P6 (204 267) ((1801 . ANY)(1804 . ANY)(1791 . ANY)) ((+ 2 ((5 (7 1791) (7 1804)) (5 1801 (7 (5 1804 (5 1791 1801)))))) ))
   (PARAMODULATION 267 1 (2) 204 1 (1 2) NIL (257 (5 306 303) 201 306 63 (5 303 (7 (5 258 (5 306 303))))) 1785))
   (OPERATION (CLAUSE 1785 P6 (204 267) ((1804 . ANY)(1791 . ANY)) ((+ 2 ((5 (7 1791) (7 1804)) (7 (5 1804 1791)))) ))
   (REWRITE 267 1 1785))
   (OPERATION (CLAUSE 1785 P6 (204 267) ((1804 . ANY)(1791 . ANY)) ((+ 2 ((5 (7 1791) (7 1804)) (7 (5 1804 1791)))) ))
   (REPLACEMENT.OPERATION (1804 66 1791 67) (1785 8)
  (((1785 . 1) (8 . 1) SYMMETRIC))
  (NIL)
  NIL))
   (END.TIME 74875994)
   (SYMBOLS 
   (LET (NEW.ADDRESS)
   (LIST (PROG1 (CONS    2 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "=" '(ANY ANY))))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED SYMMETRIC REFLEXIVE)))
   (PROG1 (CONS    1 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "FALSE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (PROG1 (CONS    0 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "TRUE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (CONS   67 (DT-CONSTANT.CREATE "c_2" 'ANY))
   (CONS   66 (DT-CONSTANT.CREATE "c_1" 'ANY))
   (CONS    4 (DT-CONSTANT.CREATE "0" 'ANY))
   (CONS    7 (DT-FUNCTION.CREATE "-" 'ANY '(ANY) 'NIL))
   (PROG1 (CONS    5 (SETQ NEW.ADDRESS (DT-FUNCTION.CREATE "+" 'ANY '(ANY ANY) 'NIL)))
   (DT-FUNCTION.ADD.ATTRIBUTES NEW.ADDRESS '(AC))))))
   (SPLITPART.IDENTIFIER 1)
   (RESULT SUCCESS 1785)
)