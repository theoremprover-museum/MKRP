;;; -*- Package: MKRP; Base: 10; Mode: LISP; Syntax: Common-lisp -*-
(CTL-INITIAL.GRAPH '(1) NIL 'NIL T NIL (PROGN (PROGN (DS-RESET))
(PROGN (DT-RESET))

(PROG ((ADDRLIST
        '(18797 18802 18807 18812 18817 18822 18827 18832 18837 18842 18847 18852 18857 18862
          18867 18872 18877 18882 18887 18892 18897 18902 18907 18912 18917 18922 18927 18932
          18937 18942 18947 18952 18957 18962 18967 18972 18977 18982 18987 18992 18997 19002
          19007 19012 19017 19022 19027 19032 19037 19042 19047 19052 19057 19062 19067 19072
          19077 19082 19087 19092 19097 19102 19107 19112 19117 19122 19127 19132 19137 19142
          19147 19152 19157 19162 19167 19172 19177 19182 19187 19192 19197 19202 19207 19212
          19217 19222 19227 19232 19237 19242 19247 19252 19257 19262 19267 19272 19277 19282
          19287 19292 19297 19302 19307 19312 19317 19322 19327 19332 19337 19342 19347 19352
          19357 19362 19367 19372 19377 19382 19387 19392 19397 19402 19407 19412 19417 19422
          19427 19432 19437 19442 19447 19452 19498 19503 END -65 19521 19526 -64 19544 19549
          19567 19585 19603 19621 19626 19631 -61 -52 -51 -50 -49 -48 19636 19641 19646 19682
          19687 19692 -47 19697 -40 -38 -37 -36 19702 19707 -35 -32 -31 -30 -29 -28 19712
          19717 19722 19740 19758 19794 19799 19835 19840 19845 19850 19855 19860 19865 19901
          19906 19911 19457 19493 19925 19930 19944 19949 19954 19969 19984 19999))
       (DATALIST
        '(15 "TRUE" NIL NIL NIL (DEFINED) NIL ((- 0 (POSITIVE))) ((+ 0 (NEGATIVE)))
          ((+ 0 (NIL))) ((- 0 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "FALSE" NIL NIL
          NIL (DEFINED) NIL ((- 1 (POSITIVE))) ((+ 1 (NEGATIVE))) ((+ 1 (NIL))) ((- 1 (NIL)))
          NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "=" ((43 1) (21 1) (19 1) (12 1)) ((8 1))
          (ANY ANY) (DEFINED SYMMETRIC REFLEXIVE) 12 ((- 2 (POSITIVE . SYMMETRIC)))
          ((+ 2 (NEGATIVE . SYMMETRIC))) ((+ 2 (NIL . SYMMETRIC))) ((- 2 (NIL . SYMMETRIC)))
          NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL
          (HD*STACK NIL HD*OBJECT 15581 ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY "0"
          (HD*OBJECT 15591 DT*ST-KIND NIL) CONSTANT 14 "+" (AC) ANY (ANY ANY) NIL NIL NIL NIL
          NIL 2 ANY (HD*OBJECT 15898 DT*ST-KIND NIL) FUNCTION 5 ANY NIL
          (HD*OBJECT 16019 HD*STACK NIL ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 14 "-" NIL
          ANY (ANY) NIL NIL NIL NIL NIL 1 ANY (HD*OBJECT 16039 DT*ST-KIND NIL) FUNCTION 5 ANY
          NIL (HD*OBJECT 15611) VARIABLE 5 ANY NIL NIL VARIABLE 36 "R.=" AXIOM 0 (10) (10 11)
          1 (REFLEXIVITY) NIL NIL ((1) (2)) NIL T + 2 (10 10) (RED*UNFAIL NIL) (10) NIL
          ATP.MEMORY.NOBIND NIL ATP.MEMORY.NOBIND NIL NIL (23 22) NIL NIL NIL NIL NIL NIL NIL
          NIL NIL (RED*LS_LITNOS.RELATION NIL) CLAUSE 5 ANY NIL (HD*STACK NIL HD*OBJECT 15857)
          VARIABLE 5 ANY NIL (HD*STACK NIL HD*OBJECT 15621) VARIABLE 5 ANY NIL
          (HD*STACK NIL HD*OBJECT 15601) VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 5 ANY NIL NIL VARIABLE 36 "A.+" NIL 0 (15 14 13) (15 16 14 17 13 18) 1 NIL
          NIL NIL NIL 2 T + 2 ((5 13 (5 14 15)) (5 (5 13 14) 15)) (DS*IRR T) (15 14 13) NIL
          ATP.MEMORY.NOBIND NIL ATP.MEMORY.NOBIND NIL NIL (23 22) NIL NIL NIL NIL NIL NIL
          (58 57 56 55) NIL NIL (RED*LS_LITNOS.RELATION NIL CONS*A 5) CLAUSE 5 ANY NIL
          (HD*OBJECT 15979) VARIABLE 36 "A1" AXIOM 0 (3) (3 20) 1 NIL NIL NIL NIL 1 T + 2
          ((5 4 3) 3) (RED*RULE (21 NIL 16 (5 4 41) 41 NIL) INDEX 1) (3) NIL ATP.MEMORY.NOBIND
          NIL ATP.MEMORY.NOBIND NIL NIL NIL NIL NIL NIL NIL NIL NIL (63 60) NIL NIL NIL CLAUSE
          18 19 1 1 ((10 (5 15 (5 14 13)))) SYMMETRIC 12 NIL NIL NIL NIL NIL NIL NIL
          ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL S 18 19 1 1 ((10 (5 15 (5 14 13))))
          SYMMETRIC 12 NIL NIL NIL NIL NIL NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL S 5
          ANY NIL (HD*OBJECT 15929) VARIABLE 5 ANY NIL (HD*OBJECT 15949) VARIABLE 5 ANY NIL
          (HD*OBJECT 15939) VARIABLE 5 ANY NIL (HD*OBJECT 15969) VARIABLE 5 ANY NIL
          (HD*OBJECT 15959) VARIABLE 5 ANY NIL (HD*OBJECT 15989) VARIABLE 5 ANY NIL
          (HD*OBJECT 16029) VARIABLE 5 ANY NIL (HD*OBJECT 16112) VARIABLE 36 "A2" AXIOM 0 (6)
          (6 42) 1 NIL NIL NIL NIL 1 T + 2 ((5 (7 6) 6) 4)
          (RED*RULE (43 NIL 8 (5 (7 41) 41) 4 NIL) INDEX 2) (6) NIL ATP.MEMORY.NOBIND NIL
          ATP.MEMORY.NOBIND NIL NIL NIL NIL NIL NIL NIL NIL NIL (63 60 58 57 56 55) NIL NIL
          NIL CLAUSE 5 ANY NIL (HD*OBJECT 16009) VARIABLE 5 ANY NIL (HD*OBJECT 16062) VARIABLE
          5 ANY NIL (HD*OBJECT 15999) VARIABLE 5 ANY NIL (HD*OBJECT 16082) VARIABLE 5 ANY NIL
          (HD*OBJECT 16072) VARIABLE 18 43 1 1 ((6 53 13 (7 53) 14 53)) NIL 19 (1) (2 1) NIL
          ((+ 2 ((5 (7 171) (5 171 168)) 168))) 14 (168 171) NIL ATP.MEMORY.NOBIND
          ATP.MEMORY.NOBIND NIL P 18 43 1 1 ((6 (5 54 53) 13 (5 54 (7 (5 54 53))) 14 53)) NIL
          19 (1) (2 1) NIL ((+ 2 ((5 (5 177 (7 (5 177 176))) (5 176 173)) 173))) 20
          (173 176 177) NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL P 18 43 1 1
          ((6 (5 54 53) 13 54 14 (5 53 (7 (5 54 53))))) NIL 19 (1) (2 1) NIL
          ((+ 2 ((5 183 (5 (5 182 (7 (5 183 182))) 179)) 179))) 20 (179 182 183) NIL
          ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL P 18 43 1 1 ((6 54 13 54 14 (7 54))) NIL 19
          (1) (2 1) NIL ((+ 2 ((5 188 (5 (7 188) 185)) 185))) 14 (185 188) NIL
          ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL P 5 ANY NIL (HD*OBJECT 16092) VARIABLE 18 43
          1 1 ((6 4 3 (7 4))) NIL 21 (1) (1) NIL ((+ 2 (4 (7 4)))) 8 NIL NIL ATP.MEMORY.NOBIND
          ATP.MEMORY.NOBIND NIL P 5 ANY NIL (HD*OBJECT 16102) VARIABLE 18 21 1 1
          ((3 (7 4) 6 4)) NIL 43 (1) (1) NIL ((+ 2 ((7 4) 4))) 8 NIL NIL ATP.MEMORY.NOBIND
          ATP.MEMORY.NOBIND NIL P 5 ANY "C_1" (HD*OBJECT 16142 DT*ST-KIND SYS-CONST) CONSTANT
          5 ANY "C_2" (HD*OBJECT 16132 DT*ST-KIND SYS-CONST) CONSTANT 36 "T3" THEOREM 0 NIL
          NIL 1 NIL NIL NIL NIL NIL T - 2 ((5 (7 67) (7 66)) (7 (5 67 66))) (INDEX 3) NIL NIL
          ATP.MEMORY.NOBIND NIL ATP.MEMORY.NOBIND NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
          NIL NIL CLAUSE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE
          5 ANY NIL NIL VARIABLE 5 ANY NIL (HD*OBJECT NIL HD*STACK NIL) VARIABLE 5 ANY NIL
          (HD*OBJECT NIL HD*STACK NIL) VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE
          5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL (HD*OBJECT NIL HD*STACK NIL)
          VARIABLE 5 ANY NIL (HD*OBJECT NIL HD*STACK NIL) VARIABLE 5 ANY NIL
          (HD*OBJECT NIL HD*STACK NIL) VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE
          5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL (HD*OBJECT NIL HD*STACK NIL)
          VARIABLE 5 ANY NIL (HD*OBJECT NIL HD*STACK NIL) VARIABLE 5 ANY NIL
          (HD*OBJECT NIL HD*STACK NIL) VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE
          5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL (HD*OBJECT NIL HD*STACK NIL)
          VARIABLE 5 ANY NIL (HD*OBJECT NIL HD*STACK NIL) VARIABLE 5 ANY NIL
          (HD*OBJECT NIL HD*STACK NIL) VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE
          5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL (HD*OBJECT NIL HD*STACK NIL)
          VARIABLE 5 ANY NIL (HD*OBJECT NIL HD*STACK NIL) VARIABLE 5 ANY NIL NIL VARIABLE 5
          ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL
          (HD*OBJECT NIL HD*STACK NIL) VARIABLE 5 ANY NIL (HD*OBJECT NIL HD*STACK NIL)
          VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL (HD*OBJECT NIL HD*STACK NIL) VARIABLE 5
          ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL (HD*OBJECT NIL HD*STACK NIL)
          VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL (HD*OBJECT NIL HD*STACK NIL) VARIABLE 5
          ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL (HD*OBJECT NIL HD*STACK NIL)
          VARIABLE 5 ANY NIL (HD*OBJECT NIL HD*STACK NIL) VARIABLE 5 ANY NIL NIL VARIABLE 5
          ANY NIL (HD*OBJECT NIL HD*STACK NIL) VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 5 ANY NIL (HD*OBJECT NIL HD*STACK NIL) VARIABLE 5 ANY NIL
          (HD*OBJECT NIL HD*STACK NIL) VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL
          (HD*OBJECT NIL HD*STACK NIL) VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE
          5 ANY NIL (HD*OBJECT NIL HD*STACK NIL) VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL
          (HD*OBJECT NIL HD*STACK NIL) VARIABLE 5 ANY NIL (HD*OBJECT NIL HD*STACK NIL)
          VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY
          NIL NIL VARIABLE 5 ANY NIL (HD*OBJECT NIL HD*STACK NIL) VARIABLE 5 ANY NIL
          (HD*OBJECT NIL HD*STACK NIL) VARIABLE 5 ANY NIL (HD*OBJECT NIL HD*STACK NIL)
          VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY
          NIL NIL VARIABLE 5 ANY NIL (HD*OBJECT NIL HD*STACK NIL) VARIABLE 5 ANY NIL
          (HD*OBJECT NIL HD*STACK NIL) VARIABLE 5 ANY NIL (HD*OBJECT NIL HD*STACK NIL)
          VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY
          NIL NIL VARIABLE 5 ANY NIL (HD*OBJECT NIL HD*STACK NIL) VARIABLE 5 ANY NIL
          (HD*OBJECT NIL HD*STACK NIL) VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE
          5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL (HD*OBJECT NIL HD*STACK NIL)
          VARIABLE 5 ANY NIL (HD*OBJECT NIL HD*STACK NIL) VARIABLE 5 ANY NIL
          (HD*OBJECT NIL HD*STACK NIL) VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE
          5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL (HD*OBJECT NIL HD*STACK NIL)
          VARIABLE 5 ANY NIL (HD*OBJECT NIL HD*STACK NIL) VARIABLE 5 ANY NIL NIL VARIABLE 5
          ANY NIL (HD*OBJECT NIL HD*STACK NIL) VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 5 ANY NIL (HD*OBJECT NIL HD*STACK NIL) VARIABLE 5 ANY NIL NIL VARIABLE 5
          ANY NIL (HD*OBJECT NIL HD*STACK NIL) VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 5 ANY NIL (HD*OBJECT NIL HD*STACK NIL) VARIABLE 5 ANY NIL
          (HD*OBJECT NIL HD*STACK NIL) VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL
          (HD*OBJECT NIL HD*STACK NIL) VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE
          5 ANY NIL (HD*OBJECT NIL HD*STACK NIL) VARIABLE 5 ANY NIL
          (HD*OBJECT NIL HD*STACK NIL) VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL
          (HD*OBJECT NIL HD*STACK NIL) VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE
          5 ANY NIL (HD*OBJECT NIL HD*STACK NIL) VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL
          (HD*OBJECT NIL HD*STACK NIL) VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE
          5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL (HD*OBJECT NIL HD*STACK NIL)
          VARIABLE 5 ANY NIL NIL VARIABLE))
       (INCREMENT (- MEM*SIZE 20000))
       COUNTER1)
      (MEM-RESET)
      (COND ((> MEM*SIZE 20000)
             (SETQ COUNTER1 200)
             (MAPC #'(LAMBDA (RADDR)
                       (SETF (AREF MEM*MEMORY (DECF COUNTER1))
                              (COND ((EQL RADDR 'ATP.MEMORY.NIL) RADDR)
                                    ((EQL 'END RADDR) RADDR)
                                    ((OR (EQL RADDR 0)
                                         (MINUSP RADDR))
                                     RADDR)
                                    (T (+ RADDR INCREMENT)))))
                   ADDRLIST)
             (SETQ COUNTER1 MEM*SIZE)
             (MAPC #'(LAMBDA (DATA) (SETF (AREF MEM*MEMORY (DECF COUNTER1)) DATA)) DATALIST))
            (T (UNLESS (= MEM*SIZE 20000)
                 (MEM-INITIALIZE 20000))
               (SETQ COUNTER1 200)
               (MAPC #'(LAMBDA (RADDR) (SETF (AREF MEM*MEMORY (DECF COUNTER1)) RADDR))
                     ADDRLIST)
               (SETQ COUNTER1 MEM*SIZE)
               (MAPC #'(LAMBDA (DATA) (SETF (AREF MEM*MEMORY (DECF COUNTER1)) DATA)) DATALIST))
            )
      (SETQ MEM*NEXT.RADR (IF (> MEM*SIZE 20000) (+ 18792 INCREMENT) 18792))
      (SETQ MEM*NEXT.VADR 200
            MEM*REST (- MEM*NEXT.RADR MEM*NEXT.VADR -1)
            MEM*FIRST.REUSABLE.VADR 27
            MEM*LAST.REUSABLE.VADR 65))

(PROGN (SETQ DT*SORT.ALL (QUOTE (ANY))) (SETQ DT*SORT.NR (QUOTE 2)) (SETQ DT*SORT.PROPERTIES (QUOTE (DT*MAX.SUBSORTS DT*LEAST.SUPERSORTS DT*TRANSITIVE.CLOSURE DT*INVERSE.TRANSITIVE.CLOSURE DT*MINIMAL.SUBSORTS DT*DIRECT.SUBSORTS DT*DIRECT.SUPERSORTS DT*DISJOINT.SORTS DT*COMPLETION.SORT))) (SETQ DT*SORT.COMMON.COMPUTE.FLAG (QUOTE NIL)) (SETQ DT*ELEMENT.PREDICATE (QUOTE NIL)) (SETQ DT*OMEGA.CONSTANT (QUOTE NIL)) (SETQ DT*VARIABLE.COUNTER (QUOTE 0)) (SETQ DT*CONSTANT.COUNTER (QUOTE 0)) (SETQ DT*CONSTANT.ALL (QUOTE (67 66 4))) (SETQ DT*ABBREVIATIONS (QUOTE NIL)) (SETQ DT*FUNCTION.COUNTER (QUOTE 0)) (SETQ DT*FUNCTION.ALL (QUOTE (7 5))) (SETQ DT*FUNCTION.ADMISSIBLE.THEORIES (QUOTE (ASSOCIATIVE))) (SETQ DT*FUNCTION.ACTUAL.THEORIES (QUOTE (AC))) (SETQ DT*FUNCTION.WITH.ARGUMENT.SYMMETRIES (QUOTE NIL)) (SETQ DT*FUNCTION.COMPONENTS (QUOTE (PNAME ATTRIBUTES MAX.RANGE.SORT MAX.DOMAIN.SORTS MIN.RANGE.SORTS SORT.LIST SORT.LIST.INVERSE SORT.TREE.CALC ARGUMENT.SYMMETRIES ARITY G.L.B.OF.RANGES))) (SETQ DT*PREDICATE.ADMISSABLE.ATTRIBUTES (QUOTE (SYMMETRIC DEFINED REFLEXIVE))) (SETQ DT*PREDICATE.COUNTER (QUOTE 0)) (SETQ DT*EQUALITY.SYMBOLS (QUOTE ("=" ":=" "=:" ":=:"))) (SETQ DT*EQUALITY.PREDICATES (QUOTE (2))) (SETQ DT*NONEQUALITY.PREDICATES (QUOTE (1 0))) (SETQ DT*PREDICATE.ALL (QUOTE (2 1 0))) (SETQ DT*PREDICATE.WITH.ATTRIBUTES (QUOTE NIL)) (SETQ DT*PREDICATE.COMPONENTS (QUOTE (PNAME POSITIVE.OCCURRENCES NEGATIVE.OCCURRENCES DOMAINSORTS ATTRIBUTES REFL.CLAUSE +ROTHERSIDES -ROTHERSIDES +SOTHERSIDES -SOTHERSIDES +TOTHERSIDES -TOTHERSIDES))) (SETQ DT*TRUE.PREDICATE (QUOTE 0)) (SETQ DT*FALSE.PREDICATE (QUOTE 1)) (SETQ DT*UNI.CREATES.VARIABLES (QUOTE NIL)) (SETQ DT*SIGN.MINUS.SYMBOLS (QUOTE (- --))) (SETQ DT*SIGN.PLUS.SYMBOLS (QUOTE (+ ++))) (SETQ DT*SYMBOL.KINDS (QUOTE (CONSTANT.ALL FUNCTION.ALL PREDICATE.ALL)))) 
(PROGN) 
(PROGN (PROGN)) 
(PROGN (PROGN (SETF (GET (QUOTE ANY) (QUOTE DT*SORT.NUMBER)) (QUOTE 1)) (SETF (GET (QUOTE ANY) (QUOTE DT*DIRECT.SUBSORTS)) (QUOTE NIL)) (SETF (GET (QUOTE ANY) (QUOTE DT*TRANSITIVE.CLOSURE)) (QUOTE (ANY))) (SETF (GET (QUOTE ANY) (QUOTE DT*MAX.SUBSORTS)) (QUOTE ((ANY ANY)))) (SETF (GET (QUOTE ANY) (QUOTE DT*MINIMAL.SUBSORTS)) (QUOTE (ANY))) (SETF (GET (QUOTE ANY) (QUOTE DT*DIRECT.SUPERSORTS)) (QUOTE NIL)) (SETF (GET (QUOTE ANY) (QUOTE DT*INVERSE.TRANSITIVE.CLOSURE)) (QUOTE (ANY))))) (PROGN (SETQ DS*RULES (QUOTE NIL)) (SETQ DS*FINITE.DOMAIN (QUOTE NIL)))
(PROGN)
(PROGN)
(PROGN)
(PROGN (SETQ CG*RECOLOUR (QUOTE ((R . RD) (P . PD) (SI . SID) (RIW . RIWD)))) (SETQ CG*OBJECTCLASSES (QUOTE (CLAUSES R RIW RD S SI SIW SID T TI TIW P PIW PD RIWD))) (SETQ CG*SAVESTACK (QUOTE NIL)) (SETQ CG*GRAPH.REGISTER (QUOTE (PROGN (PROG ((ALL.PROPLIST (QUOTE (CLAUSES ((0) 0) R ((0) 0) RIW ((0) 0) RD ((0) 0) S ((0) 0) SI ((0) 0) SIW ((0) 0) SID ((0) 0) T ((0) 0) TI ((0) 0) TIW ((0) 0) P ((0) 0) PIW ((0) 0) PD ((0) 0) RIWD ((0) 0)))) (INSERTED.PROPLIST (QUOTE (CLAUSES ((0) 0) R ((0) 0) RIW ((0) 0) RD ((0) 0) S ((0) 0) SI ((0) 0) SIW ((0) 0) SID ((0) 0) T ((0) 0) TI ((0) 0) TIW ((0) 0) P ((0) 0) PIW ((0) 0) PD ((0) 0) RIWD ((0) 0)))) (CHANGED.PROPLIST (QUOTE (CLAUSES ((0) 0) R ((0) 0) RIW ((0) 0) RD ((0) 0) S ((0) 0) SI ((0) 0) SIW ((0) 0) SID ((0) 0) T ((0) 0) TI ((0) 0) TIW ((0) 0) P ((0) 0) PIW ((0) 0) PD ((0) 0) RIWD ((0) 0)))) (REMOVED.PROPLIST (QUOTE (CLAUSES ((0) 0) R ((0) 0) RIW ((0) 0) RD ((0) 0) S ((0) 0) SI ((0) 0) SIW ((0) 0) SID ((0) 0) T ((0) 0) TI ((0) 0) TIW ((0) 0) P ((0) 0) PIW ((0) 0) PD ((0) 0) RIWD ((0) 0))))) (SMAPC (FUNCTION (LAMBDA (OBJECTLIST) (RPLACA OBJECTLIST (LAST OBJECTLIST)))) (FUNCTION CDDR) (CDR ALL.PROPLIST)) (SETF (SYMBOL-PLIST (QUOTE CG*OBJECTS.ALL)) ALL.PROPLIST) (SMAPC (FUNCTION (LAMBDA (OBJECTLIST) (RPLACA OBJECTLIST (LAST OBJECTLIST)))) (FUNCTION CDDR) (CDR INSERTED.PROPLIST)) (SETF (SYMBOL-PLIST (QUOTE CG*OBJECTS.INSERTED)) INSERTED.PROPLIST) (SMAPC (FUNCTION (LAMBDA (OBJECTLIST) (RPLACA OBJECTLIST (LAST OBJECTLIST)))) (FUNCTION CDDR) (CDR CHANGED.PROPLIST)) (SETF (SYMBOL-PLIST (QUOTE CG*OBJECTS.CHANGED)) CHANGED.PROPLIST) (SMAPC (FUNCTION (LAMBDA (OBJECTLIST) (RPLACA OBJECTLIST (LAST OBJECTLIST)))) (FUNCTION CDDR) (CDR REMOVED.PROPLIST)) (SETF (SYMBOL-PLIST (QUOTE CG*OBJECTS.REMOVED)) REMOVED.PROPLIST))))) (SETQ CG*CHANGE.QUEUE.LITERALS (QUOTE (NIL))) (PROG ((ALL.PROPLIST (QUOTE (CLAUSES ((8) 5 12 19 21 43 8) R ((0) 0) RIW ((0) 0) RD ((0) 0) S ((23) 2 22 23) SI ((0) 0) SIW ((0) 0) SID ((0) 0) T ((0) 0) TI ((0) 0) TIW ((0) 0) P ((63) 6 55 56 57 58 60 63) PIW ((0) 0) PD ((0) 0) RIWD ((0) 0)))) (INSERTED.PROPLIST (QUOTE (CLAUSES ((0) 0) R ((0) 0) RIW ((0) 0) RD ((0) 0) S ((0) 0) SI ((0) 0) SIW ((0) 0) SID ((0) 0) T ((0) 0) TI ((0) 0) TIW ((0) 0) P ((0) 0) PIW ((0) 0) PD ((0) 0) RIWD ((0) 0)))) (CHANGED.PROPLIST (QUOTE (CLAUSES ((0) 0) R ((0) 0) RIW ((0) 0) RD ((0) 0) S ((0) 0) SI ((0) 0) SIW ((0) 0) SID ((0) 0) T ((0) 0) TI ((0) 0) TIW ((0) 0) P ((0) 0) PIW ((0) 0) PD ((0) 0) RIWD ((0) 0)))) (REMOVED.PROPLIST (QUOTE (CLAUSES ((0) 0) R ((0) 0) RIW ((0) 0) RD ((0) 0) S ((0) 0) SI ((0) 0) SIW ((0) 0) SID ((0) 0) T ((0) 0) TI ((0) 0) TIW ((0) 0) P ((0) 0) PIW ((0) 0) PD ((0) 0) RIWD ((0) 0))))) (SMAPC (FUNCTION (LAMBDA (OBJECTLIST) (RPLACA OBJECTLIST (LAST OBJECTLIST)))) (FUNCTION CDDR) (CDR ALL.PROPLIST)) (SETF (SYMBOL-PLIST (QUOTE CG*OBJECTS.ALL)) ALL.PROPLIST) (SMAPC (FUNCTION (LAMBDA (OBJECTLIST) (RPLACA OBJECTLIST (LAST OBJECTLIST)))) (FUNCTION CDDR) (CDR INSERTED.PROPLIST)) (SETF (SYMBOL-PLIST (QUOTE CG*OBJECTS.INSERTED)) INSERTED.PROPLIST) (SMAPC (FUNCTION (LAMBDA (OBJECTLIST) (RPLACA OBJECTLIST (LAST OBJECTLIST)))) (FUNCTION CDDR) (CDR CHANGED.PROPLIST)) (SETF (SYMBOL-PLIST (QUOTE CG*OBJECTS.CHANGED)) CHANGED.PROPLIST) (SMAPC (FUNCTION (LAMBDA (OBJECTLIST) (RPLACA OBJECTLIST (LAST OBJECTLIST)))) (FUNCTION CDDR) (CDR REMOVED.PROPLIST)) (SETF (SYMBOL-PLIST (QUOTE CG*OBJECTS.REMOVED)) REMOVED.PROPLIST)))
(PROGN (C "Operation save expression.") (SETQ OP*LINK.COLOURS.LITERAL.INITIAL (QUOTE (R S T RI SI TI RIW SIW TIW))) (SETQ OP*CLAUSECOUNTER (QUOTE 3)) (SETQ OP*COUNTER.RESOLVENTS (QUOTE 0)) (SETQ OP*COUNTER.PARAMODULANTS (QUOTE 0)) (SETQ OP*COUNTER.FACTORS (QUOTE 0)) (SETQ OP*COLOURS.CIRCLE.LINKS (QUOTE (SIW))))
(PROGN (C "Save expression of reduction.") (SETQ RED*RW_RULES (QUOTE NIL) RDS*RW_ASSIGN (QUOTE NIL) RDS*RW_VARIABLES (QUOTE ((ANY (41) (41)))) RED*RW_RULES.COMPLETION (QUOTE ((43 . 1) (21 . 1) (19 . 1))) RED*RW_RULES.UNFAILING (QUOTE ((12 . 1))) RED*GRAPH.ISOLATION (QUOTE T)) (RDS-RULE.PUT (QUOTE RECHECK.INFO) (QUOTE RED*CLAUSE.TAUTOLOGY) (QUOTE NIL)) (RDS-RULE.PUT (QUOTE RECHECK.INFO) (QUOTE RED*CLAUSE.REPL.RESOLUTION.SUBJECT) (QUOTE NIL)) (RDS-RULE.PUT (QUOTE RECHECK.INFO) (QUOTE RED*CLAUSE.SUBSUMPTION.SUBJECT) (QUOTE NIL)) (RDS-RULE.PUT (QUOTE RECHECK.INFO) (QUOTE RED*LINK.SUBSUMPTION.SUBJECT) (QUOTE NIL)) (RDS-RULE.PUT (QUOTE RECHECK.INFO) (QUOTE RED*LINK.TAUTOLOGY) (QUOTE NIL)))))