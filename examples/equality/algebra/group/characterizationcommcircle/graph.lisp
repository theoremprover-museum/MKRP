;;; -*- Package: MKRP; Base: 10; Mode: LISP; Syntax: Common-lisp -*-
(CTL-INITIAL.GRAPH '(1) T 'NIL T NIL (PROGN (PROGN (DS-RESET))
(PROGN (DT-RESET))

(PROG ((ADDRLIST
        '(8175 8180 8185 8190 8195 8200 8205 8210 8215 8220 8225 8230 8235 8240 8245 8250 8255
          8260 8265 8270 8275 8280 8285 8290 8295 8300 8305 8310 8315 8320 8325 8330 8335 8340
          8345 8350 8355 8360 8365 8370 8375 8380 8385 8390 8395 8400 8405 8410 8415 8420 8425
          8430 8435 8440 8445 8450 8455 8460 8465 8470 8475 8480 8485 8490 8495 8500 8505 8510
          8515 8520 8525 8530 8535 8540 8545 8550 8555 8560 8565 8570 8575 8580 8585 8590 8595
          8600 8605 8610 8615 8620 8625 8630 8635 8640 8645 8650 8655 8660 8665 8670 8675 8680
          8685 8690 8695 8700 8705 8710 8715 8720 8725 8730 8735 8740 8758 8776 8794 8812 8830
          8848 8866 8997 9002 9007 9012 9017 9022 9027 9032 9037 9042 9047 9052 9057 9062 9067
          9072 9077 9082 9087 9092 9097 9102 9107 9112 9117 9122 9127 9132 9137 9142 9147 9152
          9157 9162 9167 9172 9177 9182 9187 9192 9197 9202 9207 9212 9217 9222 9227 9232 9237
          9242 9247 9252 9257 9262 9267 9272 END -76 -75 9290 9308 9326 9344 9362 -74 -68 -67
          -66 -65 -64 9380 9398 8992 9416 9434 8956 8938 8920 9452 9470 9488 9506 9524 9542
          9560 9578 9596 9632 9667 9672 8884 8902 9708 9713 -63 -38 9749 9754 9759 9764 9769
          -37 -31 9805 9810 9815 9820 9856 9861 9866 9637 9642 9871 9876 9647 9652 9881 9886
          9657 9662 9891 9896 9910 9915 9920 9925 9939 9944 9949 9954 9969 9984 9999))
       (DATALIST
        '(15 "TRUE" NIL NIL NIL (DEFINED) NIL ((- 0 (POSITIVE))) ((+ 0 (NEGATIVE)))
          ((+ 0 (NIL))) ((- 0 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "FALSE" NIL NIL
          NIL (DEFINED) NIL ((- 1 (POSITIVE))) ((+ 1 (NEGATIVE))) ((+ 1 (NIL))) ((- 1 (NIL)))
          NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "=" ((45 1) (40 1) (36 1) (29 1) (25 1))
          ((60 1)) (ANY ANY) (DEFINED SYMMETRIC REFLEXIVE) 25 ((- 2 (POSITIVE . SYMMETRIC)))
          ((+ 2 (NEGATIVE . SYMMETRIC))) ((+ 2 (NIL . SYMMETRIC))) ((- 2 (NIL . SYMMETRIC)))
          NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
          VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 14 "+" NIL ANY (ANY ANY) NIL NIL NIL NIL
          NIL 2 ANY (DT*ST-KIND NIL) FUNCTION 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
          VARIABLE 5 ANY "0" (DT*ST-KIND NIL) CONSTANT 5 ANY NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 14 "-" NIL ANY (ANY) NIL NIL NIL NIL NIL 1
          ANY (DT*ST-KIND NIL) FUNCTION 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5
          ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
          VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 36 "R.=" AXIOM 0 (23) (23 24) 1 (REFLEXIVITY) NIL NIL ((1) (2)) NIL T + 2
          (23 23) (RED*UNFAIL NIL) (23) NIL ATP.MEMORY.NOBIND NIL ATP.MEMORY.NOBIND NIL NIL
          (48) NIL NIL NIL NIL NIL NIL NIL NIL NIL (RED*LS_LITNOS.RELATION NIL) CLAUSE 5 ANY
          NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 36 "A1" AXIOM 0
          (5 4 3) (5 26 4 27 3 28) 1 NIL NIL NIL NIL 1 T + 2 ((6 (6 3 4) 5) (6 3 (6 4 5)))
          (RED*RULE (29 NIL 19 (6 (6 32 33) 34) (6 32 (6 33 34)) NIL) INDEX 1) (5 4 3) NIL
          ATP.MEMORY.NOBIND NIL ATP.MEMORY.NOBIND NIL NIL (47 46) NIL NIL NIL NIL NIL NIL
          (72 71 70 62 59 52 51 50 49) NIL NIL (RED*LS_LITNOS.RELATION NIL) CLAUSE 5 ANY NIL
          NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 36
          "A2" AXIOM 0 (7) (7 35) 1 NIL NIL NIL NIL 1 T + 2 ((6 8 7) 7)
          (RED*RULE (36 NIL 3 (6 8 32) 32 NIL) INDEX 2) (7) NIL ATP.MEMORY.NOBIND NIL
          ATP.MEMORY.NOBIND NIL NIL NIL NIL NIL NIL NIL NIL NIL (73 69 61 58 54 53) NIL NIL
          NIL CLAUSE 5 ANY NIL NIL VARIABLE 36 "A3" AXIOM 0 (9) (9 39) 1 NIL NIL NIL NIL 1 T +
          2 ((6 9 (10 9)) 8) (CG*CHANGED T RED*RULE (40 NIL 8 (6 32 (10 32)) 8 NIL) INDEX 3)
          (9) NIL ATP.MEMORY.NOBIND NIL ATP.MEMORY.NOBIND NIL NIL NIL NIL NIL NIL NIL NIL NIL
          (73 72 71 70 69) NIL NIL NIL CLAUSE 5 ANY "C_1" (DT*ST-KIND SYS-CONST) CONSTANT 5
          ANY "C_2" (DT*ST-KIND SYS-CONST) CONSTANT 5 ANY "C_3" (DT*ST-KIND SYS-CONST)
          CONSTANT 5 ANY "C_4" (DT*ST-KIND SYS-CONST) CONSTANT 5 ANY "C_5"
          (DT*ST-KIND SYS-CONST) CONSTANT 5 ANY "C_6" (DT*ST-KIND SYS-CONST) CONSTANT 5 ANY
          NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 36 "T4" THEOREM 0 (12 11) (12 21 11 22) 1
          NIL NIL (1) ((1)) NIL T + 2 ((6 11 12) (6 12 11))
          (RED*UNFAIL ((45 NIL 17 (6 32 33) (6 33 32) NIL)) INDEX 4) (12 11) NIL
          ATP.MEMORY.NOBIND NIL ATP.MEMORY.NOBIND NIL NIL (48 47 46) NIL NIL NIL NIL NIL NIL
          (139 138 137 136 135 134 133 42 41 55 56 57 62 61 59 58 54 53 52 51 50 49) NIL NIL
          (RED*LS_LITNOS.RELATION NIL) CLAUSE 18 45 1 1 ((11 (6 4 4) 12 4 5 4 3 4)) SYMMETRIC
          29 NIL NIL NIL NIL NIL NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL S 18 45 1 1
          ((12 (6 4 4) 11 4 5 4 3 4)) SYMMETRIC 29 NIL NIL NIL NIL NIL NIL NIL
          ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL S 18 45 1 1 ((23 (6 12 12) 11 12)) SYMMETRIC
          25 NIL NIL NIL NIL NIL NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL S 18 45 1 1
          ((11 (6 3 4) 12 5)) NIL 29 (1) (1) NIL
          ((+ 2 ((6 146 (6 148 147)) (6 148 (6 147 146))))) 18 (147 148 146) NIL
          ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL P 18 45 1 1 ((12 (6 3 4) 11 5)) NIL 29 (2)
          (1) NIL ((+ 2 ((6 151 (6 153 152)) (6 153 (6 152 151))))) 18 (152 153 151) NIL
          ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL P 18 45 1 1 ((11 3 12 4)) NIL 29 (1) (1 1)
          NIL ((+ 2 ((6 157 (6 158 156)) (6 158 (6 157 156))))) 18 (156 158 157) NIL
          ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL P 18 45 1 1 ((12 3 11 4)) NIL 29 (2) (1 1)
          NIL ((+ 2 ((6 162 (6 163 161)) (6 163 (6 162 161))))) 18 (161 163 162) NIL
          ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL P 18 45 1 1 ((11 8 12 7)) NIL 36 (1) (1) NIL
          ((+ 2 ((6 166 8) 166))) 9 (166) NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL P 18 45
          1 1 ((12 8 11 7)) NIL 36 (2) (1) NIL ((+ 2 ((6 169 8) 169))) 9 (169) NIL
          ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL P 18 36 1 1 ((11 8 7 12)) NIL 45 (1) (1) NIL
          ((+ 2 (171 (6 171 8)))) 9 (171) NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL P 18 29
          1 1 ((11 (6 3 4) 5 12)) NIL 45 (1) (1) NIL
          ((+ 2 ((6 175 (6 174 176)) (6 176 (6 175 174))))) 18 (176 174 175) NIL
          ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL P 18 36 1 1 ((12 8 7 11)) NIL 45 (1) (2) NIL
          ((+ 2 ((6 180 8) 180))) 9 (180) NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL P 18 29
          1 1 ((12 (6 3 4) 5 11)) NIL 45 (1) (2) NIL
          ((+ 2 ((6 185 (6 183 182)) (6 183 (6 182 185))))) 18 (182 183 185) NIL
          ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL P 18 36 1 1 ((9 8 7 (10 8))) NIL 40 (1) (1)
          NIL ((+ 2 ((10 8) 8))) 8 NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL P 18 29 1 1
          ((9 (6 3 4) 5 (10 (6 3 4)))) NIL 40 (1) (1) NIL
          ((+ 2 ((6 196 (6 195 (10 (6 196 195)))) 8))) 17 (195 196) NIL ATP.MEMORY.NOBIND
          ATP.MEMORY.NOBIND NIL P 18 40 1 1 ((9 (6 3 4) 5 (10 (6 3 4)))) NIL 29 (1) (1) NIL
          ((+ 2 (8 (6 201 (6 200 (10 (6 201 200))))))) 17 (200 201) NIL ATP.MEMORY.NOBIND
          ATP.MEMORY.NOBIND NIL P 18 40 1 1 ((9 3 4 (10 3))) NIL 29 (1) (1 1) NIL
          ((+ 2 (203 (6 205 (6 (10 205) 203))))) 14 (205 203) NIL ATP.MEMORY.NOBIND
          ATP.MEMORY.NOBIND NIL P 18 40 1 1 ((9 8 7 (10 8))) NIL 36 (1) (1) NIL
          ((+ 2 (8 (10 8)))) 8 NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL P 5 ANY NIL NIL
          VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY
          NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY
          NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY
          NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY
          NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY
          NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY
          NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY
          NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY
          NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 36 "T5" THEOREM 0 NIL
          NIL 1 NIL NIL NIL NIL NIL T - 2 ((6 44 (6 43 (6 44 43))) (6 44 (6 44 (6 43 43))))
          (CG*CHANGED T INDEX 5) NIL NIL ATP.MEMORY.NOBIND NIL ATP.MEMORY.NOBIND NIL NIL NIL
          NIL NIL NIL NIL NIL NIL (139 138 137 136 135 134 133 42 41 55 56 57) NIL NIL NIL
          CLAUSE 18 45 1 1 ((11 44 12 (6 43 (6 44 43)))) NIL 60 (1) (1) NIL
          ((- 2 ((6 43 (6 44 (6 44 43))) (6 44 (6 44 (6 43 43)))))) 24 NIL NIL
          ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL P 18 45 1 1 ((12 44 11 (6 43 (6 44 43))))
          NIL 60 (2) (1) NIL ((- 2 ((6 43 (6 44 (6 44 43))) (6 44 (6 44 (6 43 43)))))) 24 NIL
          NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL P 18 45 1 1 ((11 43 12 (6 44 43))) NIL
          60 (1) (1 2) NIL ((- 2 ((6 44 (6 44 (6 43 43))) (6 44 (6 44 (6 43 43)))))) 24 NIL
          NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL P 18 45 1 1 ((12 43 11 (6 44 43))) NIL
          60 (2) (1 2) NIL ((- 2 ((6 44 (6 44 (6 43 43))) (6 44 (6 44 (6 43 43)))))) 24 NIL
          NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL P 18 45 1 1 ((11 44 12 43)) NIL 60 (1)
          (1 2 2) NIL ((- 2 ((6 44 (6 43 (6 44 43))) (6 44 (6 44 (6 43 43)))))) 24 NIL NIL
          ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL P 18 45 1 1 ((12 44 11 43)) NIL 60 (2)
          (1 2 2) NIL ((- 2 ((6 44 (6 43 (6 44 43))) (6 44 (6 44 (6 43 43)))))) 24 NIL NIL
          ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL P 18 45 1 1 ((11 44 12 (6 44 (6 43 43))))
          NIL 60 (1) (2) NIL ((- 2 ((6 44 (6 43 (6 44 43))) (6 44 (6 43 (6 44 43)))))) 24 NIL
          NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL P 18 45 1 1 ((12 44 11 (6 44 (6 43 43))))
          NIL 60 (2) (2) NIL ((- 2 ((6 44 (6 43 (6 44 43))) (6 44 (6 43 (6 44 43)))))) 24 NIL
          NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL P 18 45 1 1 ((11 44 12 (6 43 43))) NIL
          60 (1) (2 2) NIL ((- 2 ((6 44 (6 43 (6 44 43))) (6 44 (6 43 (6 44 43)))))) 24 NIL
          NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL P 18 45 1 1 ((12 44 11 (6 43 43))) NIL
          60 (2) (2 2) NIL ((- 2 ((6 44 (6 43 (6 44 43))) (6 44 (6 43 (6 44 43)))))) 24 NIL
          NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL P 18 45 1 1 ((11 43 12 43)) NIL 60 (1)
          (2 2 2) NIL ((- 2 ((6 44 (6 43 (6 44 43))) (6 44 (6 44 (6 43 43)))))) 24 NIL NIL
          ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL P 18 45 1 1 ((12 43 11 43)) NIL 60 (2)
          (2 2 2) NIL ((- 2 ((6 44 (6 43 (6 44 43))) (6 44 (6 44 (6 43 43)))))) 24 NIL NIL
          ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL P 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY
          NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY
          NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY
          NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY
          NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY
          NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY
          NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY
          NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY
          NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY
          NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY
          NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY
          NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY
          NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY
          NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY
          NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY
          NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY
          NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE))
       (INCREMENT (- MEM*SIZE 10000))
       COUNTER1)
      (MEM-RESET)
      (COND ((> MEM*SIZE 10000)
             (SETQ COUNTER1 254)
             (MAPC #'(LAMBDA (RADDR)
                       (SETF (AREF MEM*MEMORY (DECF COUNTER1))
                              (COND ((EQL RADDR 'ATP.MEMORY.NIL) RADDR)
                                    ((EQL 'END RADDR) RADDR)
                                    ((OR (EQL RADDR 0)
                                         (MINUSP RADDR))
                                     RADDR)
                                    (T (+ RADDR INCREMENT)))))
                   ADDRLIST)
             (SETQ COUNTER1 MEM*SIZE)
             (MAPC #'(LAMBDA (DATA) (SETF (AREF MEM*MEMORY (DECF COUNTER1)) DATA)) DATALIST))
            (T (UNLESS (= MEM*SIZE 10000)
                 (MEM-INITIALIZE 10000))
               (SETQ COUNTER1 254)
               (MAPC #'(LAMBDA (RADDR) (SETF (AREF MEM*MEMORY (DECF COUNTER1)) RADDR))
                     ADDRLIST)
               (SETQ COUNTER1 MEM*SIZE)
               (MAPC #'(LAMBDA (DATA) (SETF (AREF MEM*MEMORY (DECF COUNTER1)) DATA)) DATALIST))
            )
      (SETQ MEM*NEXT.RADR (IF (> MEM*SIZE 10000) (+ 8170 INCREMENT) 8170))
      (SETQ MEM*NEXT.VADR 254
            MEM*REST (- MEM*NEXT.RADR MEM*NEXT.VADR -1)
            MEM*FIRST.REUSABLE.VADR 30
            MEM*LAST.REUSABLE.VADR 76))

(PROGN (SETQ DT*SORT.ALL (QUOTE (ANY))) (SETQ DT*SORT.NR (QUOTE 2)) (SETQ DT*SORT.PROPERTIES (QUOTE (DT*MAX.SUBSORTS DT*LEAST.SUPERSORTS DT*TRANSITIVE.CLOSURE DT*INVERSE.TRANSITIVE.CLOSURE DT*MINIMAL.SUBSORTS DT*DIRECT.SUBSORTS DT*DIRECT.SUPERSORTS DT*DISJOINT.SORTS DT*COMPLETION.SORT))) (SETQ DT*SORT.COMMON.COMPUTE.FLAG (QUOTE NIL)) (SETQ DT*ELEMENT.PREDICATE (QUOTE 4)) (SETQ DT*OMEGA.CONSTANT (QUOTE 3)) (SETQ DT*VARIABLE.COUNTER (QUOTE 0)) (SETQ DT*CONSTANT.COUNTER (QUOTE 0)) (SETQ DT*CONSTANT.ALL (QUOTE (18 17 14 13 44 43 8))) (SETQ DT*ABBREVIATIONS (QUOTE NIL)) (SETQ DT*FUNCTION.COUNTER (QUOTE 0)) (SETQ DT*FUNCTION.ALL (QUOTE (10 6))) (SETQ DT*FUNCTION.ADMISSIBLE.THEORIES (QUOTE (ASSOCIATIVE))) (SETQ DT*FUNCTION.ACTUAL.THEORIES (QUOTE NIL)) (SETQ DT*FUNCTION.WITH.ARGUMENT.SYMMETRIES (QUOTE NIL)) (SETQ DT*FUNCTION.COMPONENTS (QUOTE (PNAME ATTRIBUTES MAX.RANGE.SORT MAX.DOMAIN.SORTS MIN.RANGE.SORTS SORT.LIST SORT.LIST.INVERSE SORT.TREE.CALC ARGUMENT.SYMMETRIES ARITY G.L.B.OF.RANGES))) (SETQ DT*PREDICATE.ADMISSABLE.ATTRIBUTES (QUOTE (SYMMETRIC DEFINED REFLEXIVE))) (SETQ DT*PREDICATE.COUNTER (QUOTE 0)) (SETQ DT*EQUALITY.SYMBOLS (QUOTE ("=" ":=" "=:" ":=:"))) (SETQ DT*EQUALITY.PREDICATES (QUOTE (2))) (SETQ DT*NONEQUALITY.PREDICATES (QUOTE (1 0))) (SETQ DT*PREDICATE.ALL (QUOTE (2 1 0))) (SETQ DT*PREDICATE.WITH.ATTRIBUTES (QUOTE NIL)) (SETQ DT*PREDICATE.COMPONENTS (QUOTE (PNAME POSITIVE.OCCURRENCES NEGATIVE.OCCURRENCES DOMAINSORTS ATTRIBUTES REFL.CLAUSE +ROTHERSIDES -ROTHERSIDES +SOTHERSIDES -SOTHERSIDES +TOTHERSIDES -TOTHERSIDES))) (SETQ DT*TRUE.PREDICATE (QUOTE 0)) (SETQ DT*FALSE.PREDICATE (QUOTE 1)) (SETQ DT*UNI.CREATES.VARIABLES (QUOTE NIL)) (SETQ DT*SIGN.MINUS.SYMBOLS (QUOTE (- --))) (SETQ DT*SIGN.PLUS.SYMBOLS (QUOTE (+ ++))) (SETQ DT*SYMBOL.KINDS (QUOTE (CONSTANT.ALL FUNCTION.ALL PREDICATE.ALL)))) 
(PROGN) 
(PROGN (PROGN)) 
(PROGN (PROGN (SETF (GET (QUOTE ANY) (QUOTE DT*SORT.NUMBER)) (QUOTE 1)) (SETF (GET (QUOTE ANY) (QUOTE DT*DIRECT.SUBSORTS)) (QUOTE NIL)) (SETF (GET (QUOTE ANY) (QUOTE DT*TRANSITIVE.CLOSURE)) (QUOTE (ANY))) (SETF (GET (QUOTE ANY) (QUOTE DT*MAX.SUBSORTS)) (QUOTE ((ANY ANY)))) (SETF (GET (QUOTE ANY) (QUOTE DT*MINIMAL.SUBSORTS)) (QUOTE (ANY))) (SETF (GET (QUOTE ANY) (QUOTE DT*DIRECT.SUPERSORTS)) (QUOTE NIL)) (SETF (GET (QUOTE ANY) (QUOTE DT*INVERSE.TRANSITIVE.CLOSURE)) (QUOTE (ANY))))) (PROGN (SETQ DS*RULES (QUOTE NIL)) (SETQ DS*FINITE.DOMAIN (QUOTE NIL)))
(PROGN)
(PROGN)
(PROGN)
(PROGN (SETQ CG*RECOLOUR (QUOTE ((R . RD) (P . PD) (SI . SID) (RIW . RIWD)))) (SETQ CG*OBJECTCLASSES (QUOTE (CLAUSES R RIW RD S SI SIW SID T TI TIW P PIW PD RIWD))) (SETQ CG*SAVESTACK (QUOTE NIL)) (SETQ CG*GRAPH.REGISTER (QUOTE (PROGN (PROG ((ALL.PROPLIST (QUOTE (CLAUSES ((0) 0) R ((0) 0) RIW ((0) 0) RD ((0) 0) S ((0) 0) SI ((0) 0) SIW ((0) 0) SID ((0) 0) T ((0) 0) TI ((0) 0) TIW ((0) 0) P ((0) 0) PIW ((0) 0) PD ((0) 0) RIWD ((0) 0)))) (INSERTED.PROPLIST (QUOTE (CLAUSES ((0) 0) R ((0) 0) RIW ((0) 0) RD ((0) 0) S ((0) 0) SI ((0) 0) SIW ((0) 0) SID ((0) 0) T ((0) 0) TI ((0) 0) TIW ((0) 0) P ((0) 0) PIW ((0) 0) PD ((0) 0) RIWD ((0) 0)))) (CHANGED.PROPLIST (QUOTE (CLAUSES ((0) 0) R ((0) 0) RIW ((0) 0) RD ((0) 0) S ((0) 0) SI ((0) 0) SIW ((0) 0) SID ((0) 0) T ((0) 0) TI ((0) 0) TIW ((0) 0) P ((0) 0) PIW ((0) 0) PD ((0) 0) RIWD ((0) 0)))) (REMOVED.PROPLIST (QUOTE (CLAUSES ((0) 0) R ((0) 0) RIW ((0) 0) RD ((0) 0) S ((0) 0) SI ((0) 0) SIW ((0) 0) SID ((0) 0) T ((0) 0) TI ((0) 0) TIW ((0) 0) P ((0) 0) PIW ((0) 0) PD ((0) 0) RIWD ((0) 0))))) (SMAPC (FUNCTION (LAMBDA (OBJECTLIST) (RPLACA OBJECTLIST (LAST OBJECTLIST)))) (FUNCTION CDDR) (CDR ALL.PROPLIST)) (SETF (SYMBOL-PLIST (QUOTE CG*OBJECTS.ALL)) ALL.PROPLIST) (SMAPC (FUNCTION (LAMBDA (OBJECTLIST) (RPLACA OBJECTLIST (LAST OBJECTLIST)))) (FUNCTION CDDR) (CDR INSERTED.PROPLIST)) (SETF (SYMBOL-PLIST (QUOTE CG*OBJECTS.INSERTED)) INSERTED.PROPLIST) (SMAPC (FUNCTION (LAMBDA (OBJECTLIST) (RPLACA OBJECTLIST (LAST OBJECTLIST)))) (FUNCTION CDDR) (CDR CHANGED.PROPLIST)) (SETF (SYMBOL-PLIST (QUOTE CG*OBJECTS.CHANGED)) CHANGED.PROPLIST) (SMAPC (FUNCTION (LAMBDA (OBJECTLIST) (RPLACA OBJECTLIST (LAST OBJECTLIST)))) (FUNCTION CDDR) (CDR REMOVED.PROPLIST)) (SETF (SYMBOL-PLIST (QUOTE CG*OBJECTS.REMOVED)) REMOVED.PROPLIST))))) (SETQ CG*CHANGE.QUEUE.LITERALS (QUOTE (NIL))) (PROG ((ALL.PROPLIST (QUOTE (CLAUSES ((60) 6 25 29 36 40 45 60) R ((0) 0) RIW ((0) 0) RD ((0) 0) S ((48) 3 46 47 48) SI ((0) 0) SIW ((0) 0) SID ((0) 0) T ((0) 0) TI ((0) 0) TIW ((0) 0) P ((139) 27 49 50 51 52 53 54 58 59 61 62 69 70 71 72 73 57 56 55 41 42 133 134 135 136 137 138 139) PIW ((0) 0) PD ((0) 0) RIWD ((0) 0)))) (INSERTED.PROPLIST (QUOTE (CLAUSES ((0) 0) R ((0) 0) RIW ((0) 0) RD ((0) 0) S ((0) 0) SI ((0) 0) SIW ((0) 0) SID ((0) 0) T ((0) 0) TI ((0) 0) TIW ((0) 0) P ((0) 0) PIW ((0) 0) PD ((0) 0) RIWD ((0) 0)))) (CHANGED.PROPLIST (QUOTE (CLAUSES ((0) 0) R ((0) 0) RIW ((0) 0) RD ((0) 0) S ((0) 0) SI ((0) 0) SIW ((0) 0) SID ((0) 0) T ((0) 0) TI ((0) 0) TIW ((0) 0) P ((0) 0) PIW ((0) 0) PD ((0) 0) RIWD ((0) 0)))) (REMOVED.PROPLIST (QUOTE (CLAUSES ((0) 0) R ((0) 0) RIW ((0) 0) RD ((0) 0) S ((0) 0) SI ((0) 0) SIW ((0) 0) SID ((0) 0) T ((0) 0) TI ((0) 0) TIW ((0) 0) P ((0) 0) PIW ((0) 0) PD ((0) 0) RIWD ((0) 0))))) (SMAPC (FUNCTION (LAMBDA (OBJECTLIST) (RPLACA OBJECTLIST (LAST OBJECTLIST)))) (FUNCTION CDDR) (CDR ALL.PROPLIST)) (SETF (SYMBOL-PLIST (QUOTE CG*OBJECTS.ALL)) ALL.PROPLIST) (SMAPC (FUNCTION (LAMBDA (OBJECTLIST) (RPLACA OBJECTLIST (LAST OBJECTLIST)))) (FUNCTION CDDR) (CDR INSERTED.PROPLIST)) (SETF (SYMBOL-PLIST (QUOTE CG*OBJECTS.INSERTED)) INSERTED.PROPLIST) (SMAPC (FUNCTION (LAMBDA (OBJECTLIST) (RPLACA OBJECTLIST (LAST OBJECTLIST)))) (FUNCTION CDDR) (CDR CHANGED.PROPLIST)) (SETF (SYMBOL-PLIST (QUOTE CG*OBJECTS.CHANGED)) CHANGED.PROPLIST) (SMAPC (FUNCTION (LAMBDA (OBJECTLIST) (RPLACA OBJECTLIST (LAST OBJECTLIST)))) (FUNCTION CDDR) (CDR REMOVED.PROPLIST)) (SETF (SYMBOL-PLIST (QUOTE CG*OBJECTS.REMOVED)) REMOVED.PROPLIST)))
(PROGN (C "Operation save expression.") (SETQ OP*LINK.COLOURS.LITERAL.INITIAL (QUOTE (R S T RI SI TI RIW SIW TIW))) (SETQ OP*CLAUSECOUNTER (QUOTE 5)) (SETQ OP*COUNTER.RESOLVENTS (QUOTE 0)) (SETQ OP*COUNTER.PARAMODULANTS (QUOTE 0)) (SETQ OP*COUNTER.FACTORS (QUOTE 0)) (SETQ OP*COLOURS.CIRCLE.LINKS (QUOTE (SIW))))
(PROGN (C "Save expression of reduction.") (SETQ RED*RW_RULES (QUOTE NIL) RDS*RW_ASSIGN (QUOTE NIL) RDS*RW_VARIABLES (QUOTE ((ANY (32 33 34) (32 33 34)))) RED*RW_RULES.COMPLETION (QUOTE ((40 . 1) (36 . 1) (29 . 1))) RED*RW_RULES.UNFAILING (QUOTE ((45 . 1) (25 . 1))) RED*GRAPH.ISOLATION (QUOTE T)) (RDS-RULE.PUT (QUOTE RECHECK.INFO) (QUOTE RED*CLAUSE.TAUTOLOGY) (QUOTE NIL)) (RDS-RULE.PUT (QUOTE RECHECK.INFO) (QUOTE RED*CLAUSE.REPL.RESOLUTION.SUBJECT) (QUOTE NIL)) (RDS-RULE.PUT (QUOTE RECHECK.INFO) (QUOTE RED*CLAUSE.SUBSUMPTION.SUBJECT) (QUOTE NIL)) (RDS-RULE.PUT (QUOTE RECHECK.INFO) (QUOTE RED*LINK.SUBSUMPTION.SUBJECT) (QUOTE NIL)) (RDS-RULE.PUT (QUOTE RECHECK.INFO) (QUOTE RED*LINK.TAUTOLOGY) (QUOTE NIL)))))(CTL-INITIAL.GRAPH '(2) T 'NIL T NIL (PROGN (PROGN (DS-RESET))
(PROGN (DT-RESET))

(PROG ((ADDRLIST
        '(8755 8760 8765 8770 8775 8780 8785 8790 8795 8800 8805 8810 8815 8820 8825 8830 8835
          8840 8845 8850 8855 8860 8865 8870 8875 8880 8885 8890 8895 8900 8905 8910 8915 8920
          8925 8930 8935 8940 8945 8950 8955 8960 8965 8970 8975 8980 8985 8990 8995 9000 9005
          9010 9015 9020 9025 9030 9035 9040 9045 9050 9055 9060 9065 9070 9075 9080 9085 9090
          9095 9100 9105 9110 9115 9120 9125 9130 9135 9140 9145 9150 9155 9160 9165 9170 9175
          9180 9185 9190 9195 9200 9205 9210 9215 9220 9225 9230 9235 9240 9245 9250 9255 9260
          9265 9270 9275 9280 9285 9290 9326 END -74 -73 9344 -72 -70 9362 -69 9380 -67 9398
          -65 9416 9434 -63 9452 -60 -58 9470 -57 9488 -55 -53 -52 9506 9524 9542 9560 9578
          9614 9649 9654 -51 9672 9708 9713 -42 -38 9749 9754 9759 9764 9769 -37 -31 9805 9810
          9815 9820 9856 9861 9866 9619 9624 9871 9876 9629 9634 9881 9886 9639 9644 9891 9896
          9910 9915 9920 9925 9939 9944 9949 9954 9969 9984 9999))
       (DATALIST
        '(15 "TRUE" NIL NIL NIL (DEFINED) NIL ((- 0 (POSITIVE))) ((+ 0 (NEGATIVE)))
          ((+ 0 (NIL))) ((- 0 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "FALSE" NIL NIL
          NIL (DEFINED) NIL ((- 1 (POSITIVE))) ((+ 1 (NEGATIVE))) ((+ 1 (NIL))) ((- 1 (NIL)))
          NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "=" ((45 1) (40 1) (36 1) (29 1) (25 1))
          ((75 1)) (ANY ANY) (DEFINED SYMMETRIC REFLEXIVE) 25 ((- 2 (POSITIVE . SYMMETRIC)))
          ((+ 2 (NEGATIVE . SYMMETRIC))) ((+ 2 (NIL . SYMMETRIC))) ((- 2 (NIL . SYMMETRIC)))
          NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
          VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 14 "+" NIL ANY (ANY ANY) NIL NIL NIL NIL
          NIL 2 ANY (DT*ST-KIND NIL) FUNCTION 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
          VARIABLE 5 ANY "0" (DT*ST-KIND NIL) CONSTANT 5 ANY NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 14 "-" NIL ANY (ANY) NIL NIL NIL NIL NIL 1
          ANY (DT*ST-KIND NIL) FUNCTION 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5
          ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
          VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 36 "R.=" AXIOM 0 (23) (23 24) 1 (REFLEXIVITY) NIL NIL ((1) (2)) NIL T + 2
          (23 23) (RED*UNFAIL NIL) (23) NIL ATP.MEMORY.NOBIND NIL ATP.MEMORY.NOBIND NIL NIL
          (46) NIL NIL NIL NIL NIL NIL NIL NIL NIL (RED*LS_LITNOS.RELATION NIL) CLAUSE 5 ANY
          NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 36 "A1" AXIOM 0
          (5 4 3) (5 26 4 27 3 28) 1 NIL NIL NIL NIL 1 T + 2 ((6 (6 3 4) 5) (6 3 (6 4 5)))
          (RED*RULE (29 NIL 55 (6 (6 32 33) 34) (6 32 (6 33 34)) NIL) INDEX 1) (5 4 3) NIL
          ATP.MEMORY.NOBIND NIL ATP.MEMORY.NOBIND NIL NIL NIL NIL NIL NIL NIL NIL NIL
          (66 64 61 59 56 54 50 49 48 47 41) NIL NIL NIL CLAUSE 5 ANY NIL NIL VARIABLE 5 ANY
          NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 36 "A2" AXIOM 0 (7)
          (7 35) 1 NIL NIL NIL NIL 1 T + 2 ((6 8 7) 7)
          (RED*RULE (36 NIL 22 (6 8 32) 32 NIL) INDEX 2) (7) NIL ATP.MEMORY.NOBIND NIL
          ATP.MEMORY.NOBIND NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL CLAUSE 5 ANY
          NIL NIL VARIABLE 36 "A3" AXIOM 0 (9) (9 39) 1 NIL NIL NIL NIL 1 T + 2
          ((6 (10 9) 9) 8) (RED*RULE (40 NIL 1 (6 (10 32) 32) 8 NIL) INDEX 3) (9) NIL
          ATP.MEMORY.NOBIND NIL ATP.MEMORY.NOBIND NIL NIL NIL NIL NIL NIL NIL NIL NIL (62 41)
          NIL NIL NIL CLAUSE 18 40 1 1 ((3 (10 4) 9 4)) NIL 29 (1) (1 1) NIL
          ((+ 2 (81 (6 (10 82) (6 82 81))))) 14 (82 81) NIL ATP.MEMORY.NOBIND
          ATP.MEMORY.NOBIND NIL P 5 ANY "C_1" (DT*ST-KIND SYS-CONST) CONSTANT 5 ANY "C_2"
          (DT*ST-KIND SYS-CONST) CONSTANT 5 ANY "C_3" (DT*ST-KIND SYS-CONST) CONSTANT 5 ANY
          "C_4" (DT*ST-KIND SYS-CONST) CONSTANT 5 ANY "C_5" (DT*ST-KIND SYS-CONST) CONSTANT 5
          ANY "C_6" (DT*ST-KIND SYS-CONST) CONSTANT 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 36 "T4" THEOREM 0 (16 15) (16 21 15 22) 1 NIL NIL (1) ((1) (2)) NIL T + 2
          ((6 15 (6 16 (6 15 16))) (6 15 (6 15 (6 16 16))))
          (RED*UNFAIL
           ((45 NIL 0 (6 32 (6 33 (6 32 33))) (6 32 (6 32 (6 33 33))) NIL)
            (45 NIL 1 (6 32 (6 32 (6 33 33))) (6 32 (6 33 (6 32 33))) NIL))
           CG*CHANGED T INDEX 6)
          (16 15) NIL ATP.MEMORY.NOBIND NIL ATP.MEMORY.NOBIND NIL NIL (46) NIL NIL NIL NIL NIL
          NIL (66 64 62 61 59 56 54 50 49 48 47) (71 68) NIL (RED*LS_LITNOS.RELATION NIL)
          CLAUSE 18 45 1 1 ((23 (6 15 (6 15 (6 15 15))) 16 15)) SYMMETRIC 25 NIL NIL NIL NIL
          NIL NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL S 18 45 1 1
          ((15 (6 3 4) 5 (6 16 (6 (6 3 4) 16)))) NIL 29 (1) (1) NIL
          ((+ 2 ((6 88 (6 87 (6 88 (6 87 (6 84 84))))) (6 88 (6 87 (6 84 (6 88 (6 87 84))))))))
          36 (84 87 88) NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL P 18 45 1 1
          ((15 (6 3 4) 5 (6 (6 3 4) (6 16 16)))) NIL 29 (2) (1) NIL
          ((+ 2 ((6 93 (6 92 (6 89 (6 93 (6 92 89))))) (6 93 (6 92 (6 93 (6 92 (6 89 89))))))))
          36 (89 92 93) NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL P 18 45 1 1
          ((15 3 4 (6 16 (6 3 16)))) NIL 29 (1) (1 1) NIL
          ((+ 2 ((6 98 (6 98 (6 94 (6 94 96)))) (6 98 (6 94 (6 98 (6 94 96))))))) 30 (96 94 98)
          NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL P 18 45 1 1 ((15 3 4 (6 3 (6 16 16))))
          NIL 29 (2) (1 1) NIL
          ((+ 2 ((6 103 (6 99 (6 103 (6 99 101)))) (6 103 (6 103 (6 99 (6 99 101))))))) 30
          (101 99 103) NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL P 18 29 1 1
          ((15 (6 3 4) 5 (6 16 (6 (6 3 4) 16)))) NIL 45 (1) (1) NIL
          ((+ 2
              ((6 115 (6 114 (6 116 (6 115 (6 114 116)))))
               (6 115 (6 114 (6 115 (6 114 (6 116 116))))))))
          36 (116 114 115) NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL P 18 29 1 1
          ((16 (6 3 4) 5 (6 15 (6 3 4)))) NIL 45 (1) (1 2) NIL
          ((+ 2
              ((6 125 (6 123 (6 122 (6 125 (6 123 122)))))
               (6 125 (6 125 (6 123 (6 122 (6 123 122))))))))
          36 (122 123 125) NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL P 18 29 1 1
          ((15 (6 3 4) 5 16)) NIL 45 (1) (1 2 2) NIL
          ((+ 2
              ((6 134 (6 133 (6 135 (6 134 (6 133 135)))))
               (6 134 (6 133 (6 134 (6 133 (6 135 135))))))))
          36 (135 133 134) NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL P 18 29 1 1
          ((15 (6 3 4) 5 (6 (6 3 4) (6 16 16)))) NIL 45 (1) (2) NIL
          ((+ 2
              ((6 142 (6 141 (6 143 (6 142 (6 141 143)))))
               (6 142 (6 141 (6 142 (6 141 (6 143 143))))))))
          36 (143 141 142) NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL P 18 40 1 1
          ((15 (10 (6 16 16)) 9 (6 16 16))) NIL 45 (1) (2 2) NIL
          ((+ 2 ((6 (10 (6 146 146)) (6 146 (6 (10 (6 146 146)) 146))) (6 (10 (6 146 146)) 8)))
           )
          33 (146) NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL P 18 29 1 1
          ((15 (6 3 4) 5 (6 16 16))) NIL 45 (1) (2 2) NIL
          ((+ 2
              ((6 153 (6 152 (6 154 (6 153 (6 152 154)))))
               (6 153 (6 152 (6 153 (6 152 (6 154 154))))))))
          36 (154 152 153) NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL P 18 29 1 1
          ((16 (6 3 4) 5 (6 3 4))) NIL 45 (1) (2 2 2) NIL
          ((+ 2
              ((6 163 (6 161 (6 160 (6 163 (6 161 160)))))
               (6 163 (6 163 (6 161 (6 160 (6 161 160))))))))
          36 (160 161 163) NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL P 18 45 1 1
          ((22 15 16 (6 21 (6 15 21)))) NIL 45 (1) (1 2 2) NIL
          ((+ 2
              ((6 175 (6 174 (6 175 (6 174 (6 175 (6 175 (6 174 174)))))))
               (6 175 (6 175 (6 174 (6 175 (6 174 (6 174 (6 175 174))))))))))
          48 (174 175) NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL PIW 18 45 1 1
          ((22 15 16 (6 15 (6 21 21)))) NIL 45 (2) (1 2 2) NIL
          ((+ 2
              ((6 179 (6 179 (6 178 (6 178 (6 179 (6 178 (6 179 178)))))))
               (6 179 (6 179 (6 179 (6 178 (6 178 (6 179 (6 178 178))))))))))
          48 (178 179) NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL PIW 36 "T5" THEOREM 0 NIL
          NIL 1 NIL NIL NIL NIL NIL T - 2 ((10 (6 14 13)) (6 (10 14) (10 13))) (INDEX 7) NIL
          NIL ATP.MEMORY.NOBIND NIL ATP.MEMORY.NOBIND NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
          NIL NIL NIL CLAUSE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY
          NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY
          NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY
          NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY
          NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY
          NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY
          NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY
          NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY
          NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY
          NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY
          NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY
          NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY
          NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY
          NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY
          NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY
          NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE))
       (INCREMENT (- MEM*SIZE 10000))
       COUNTER1)
      (MEM-RESET)
      (COND ((> MEM*SIZE 10000)
             (SETQ COUNTER1 184)
             (MAPC #'(LAMBDA (RADDR)
                       (SETF (AREF MEM*MEMORY (DECF COUNTER1))
                              (COND ((EQL RADDR 'ATP.MEMORY.NIL) RADDR)
                                    ((EQL 'END RADDR) RADDR)
                                    ((OR (EQL RADDR 0)
                                         (MINUSP RADDR))
                                     RADDR)
                                    (T (+ RADDR INCREMENT)))))
                   ADDRLIST)
             (SETQ COUNTER1 MEM*SIZE)
             (MAPC #'(LAMBDA (DATA) (SETF (AREF MEM*MEMORY (DECF COUNTER1)) DATA)) DATALIST))
            (T (UNLESS (= MEM*SIZE 10000)
                 (MEM-INITIALIZE 10000))
               (SETQ COUNTER1 184)
               (MAPC #'(LAMBDA (RADDR) (SETF (AREF MEM*MEMORY (DECF COUNTER1)) RADDR))
                     ADDRLIST)
               (SETQ COUNTER1 MEM*SIZE)
               (MAPC #'(LAMBDA (DATA) (SETF (AREF MEM*MEMORY (DECF COUNTER1)) DATA)) DATALIST))
            )
      (SETQ MEM*NEXT.RADR (IF (> MEM*SIZE 10000) (+ 8750 INCREMENT) 8750))
      (SETQ MEM*NEXT.VADR 184
            MEM*REST (- MEM*NEXT.RADR MEM*NEXT.VADR -1)
            MEM*FIRST.REUSABLE.VADR 30
            MEM*LAST.REUSABLE.VADR 74))

(PROGN (SETQ DT*SORT.ALL (QUOTE (ANY))) (SETQ DT*SORT.NR (QUOTE 2)) (SETQ DT*SORT.PROPERTIES (QUOTE (DT*MAX.SUBSORTS DT*LEAST.SUPERSORTS DT*TRANSITIVE.CLOSURE DT*INVERSE.TRANSITIVE.CLOSURE DT*MINIMAL.SUBSORTS DT*DIRECT.SUBSORTS DT*DIRECT.SUPERSORTS DT*DISJOINT.SORTS DT*COMPLETION.SORT))) (SETQ DT*SORT.COMMON.COMPUTE.FLAG (QUOTE NIL)) (SETQ DT*ELEMENT.PREDICATE (QUOTE 4)) (SETQ DT*OMEGA.CONSTANT (QUOTE 3)) (SETQ DT*VARIABLE.COUNTER (QUOTE 0)) (SETQ DT*CONSTANT.COUNTER (QUOTE 0)) (SETQ DT*CONSTANT.ALL (QUOTE (18 17 14 13 44 43 8))) (SETQ DT*ABBREVIATIONS (QUOTE NIL)) (SETQ DT*FUNCTION.COUNTER (QUOTE 0)) (SETQ DT*FUNCTION.ALL (QUOTE (10 6))) (SETQ DT*FUNCTION.ADMISSIBLE.THEORIES (QUOTE (ASSOCIATIVE))) (SETQ DT*FUNCTION.ACTUAL.THEORIES (QUOTE NIL)) (SETQ DT*FUNCTION.WITH.ARGUMENT.SYMMETRIES (QUOTE NIL)) (SETQ DT*FUNCTION.COMPONENTS (QUOTE (PNAME ATTRIBUTES MAX.RANGE.SORT MAX.DOMAIN.SORTS MIN.RANGE.SORTS SORT.LIST SORT.LIST.INVERSE SORT.TREE.CALC ARGUMENT.SYMMETRIES ARITY G.L.B.OF.RANGES))) (SETQ DT*PREDICATE.ADMISSABLE.ATTRIBUTES (QUOTE (SYMMETRIC DEFINED REFLEXIVE))) (SETQ DT*PREDICATE.COUNTER (QUOTE 0)) (SETQ DT*EQUALITY.SYMBOLS (QUOTE ("=" ":=" "=:" ":=:"))) (SETQ DT*EQUALITY.PREDICATES (QUOTE (2))) (SETQ DT*NONEQUALITY.PREDICATES (QUOTE (1 0))) (SETQ DT*PREDICATE.ALL (QUOTE (2 1 0))) (SETQ DT*PREDICATE.WITH.ATTRIBUTES (QUOTE NIL)) (SETQ DT*PREDICATE.COMPONENTS (QUOTE (PNAME POSITIVE.OCCURRENCES NEGATIVE.OCCURRENCES DOMAINSORTS ATTRIBUTES REFL.CLAUSE +ROTHERSIDES -ROTHERSIDES +SOTHERSIDES -SOTHERSIDES +TOTHERSIDES -TOTHERSIDES))) (SETQ DT*TRUE.PREDICATE (QUOTE 0)) (SETQ DT*FALSE.PREDICATE (QUOTE 1)) (SETQ DT*UNI.CREATES.VARIABLES (QUOTE NIL)) (SETQ DT*SIGN.MINUS.SYMBOLS (QUOTE (- --))) (SETQ DT*SIGN.PLUS.SYMBOLS (QUOTE (+ ++))) (SETQ DT*SYMBOL.KINDS (QUOTE (CONSTANT.ALL FUNCTION.ALL PREDICATE.ALL)))) 
(PROGN) 
(PROGN (PROGN)) 
(PROGN (PROGN (SETF (GET (QUOTE ANY) (QUOTE DT*SORT.NUMBER)) (QUOTE 1)) (SETF (GET (QUOTE ANY) (QUOTE DT*DIRECT.SUBSORTS)) (QUOTE NIL)) (SETF (GET (QUOTE ANY) (QUOTE DT*TRANSITIVE.CLOSURE)) (QUOTE (ANY))) (SETF (GET (QUOTE ANY) (QUOTE DT*MAX.SUBSORTS)) (QUOTE ((ANY ANY)))) (SETF (GET (QUOTE ANY) (QUOTE DT*MINIMAL.SUBSORTS)) (QUOTE (ANY))) (SETF (GET (QUOTE ANY) (QUOTE DT*DIRECT.SUPERSORTS)) (QUOTE NIL)) (SETF (GET (QUOTE ANY) (QUOTE DT*INVERSE.TRANSITIVE.CLOSURE)) (QUOTE (ANY))))) (PROGN (SETQ DS*RULES (QUOTE NIL)) (SETQ DS*FINITE.DOMAIN (QUOTE NIL)))
(PROGN)
(PROGN)
(PROGN)
(PROGN (SETQ CG*RECOLOUR (QUOTE ((R . RD) (P . PD) (SI . SID) (RIW . RIWD)))) (SETQ CG*OBJECTCLASSES (QUOTE (CLAUSES R RIW RD S SI SIW SID T TI TIW P PIW PD RIWD))) (SETQ CG*SAVESTACK (QUOTE NIL)) (SETQ CG*GRAPH.REGISTER (QUOTE (PROGN (PROG ((ALL.PROPLIST (QUOTE (CLAUSES ((0) 0) R ((0) 0) RIW ((0) 0) RD ((0) 0) S ((0) 0) SI ((0) 0) SIW ((0) 0) SID ((0) 0) T ((0) 0) TI ((0) 0) TIW ((0) 0) P ((0) 0) PIW ((0) 0) PD ((0) 0) RIWD ((0) 0)))) (INSERTED.PROPLIST (QUOTE (CLAUSES ((0) 0) R ((0) 0) RIW ((0) 0) RD ((0) 0) S ((0) 0) SI ((0) 0) SIW ((0) 0) SID ((0) 0) T ((0) 0) TI ((0) 0) TIW ((0) 0) P ((0) 0) PIW ((0) 0) PD ((0) 0) RIWD ((0) 0)))) (CHANGED.PROPLIST (QUOTE (CLAUSES ((0) 0) R ((0) 0) RIW ((0) 0) RD ((0) 0) S ((0) 0) SI ((0) 0) SIW ((0) 0) SID ((0) 0) T ((0) 0) TI ((0) 0) TIW ((0) 0) P ((0) 0) PIW ((0) 0) PD ((0) 0) RIWD ((0) 0)))) (REMOVED.PROPLIST (QUOTE (CLAUSES ((0) 0) R ((0) 0) RIW ((0) 0) RD ((0) 0) S ((0) 0) SI ((0) 0) SIW ((0) 0) SID ((0) 0) T ((0) 0) TI ((0) 0) TIW ((0) 0) P ((0) 0) PIW ((0) 0) PD ((0) 0) RIWD ((0) 0))))) (SMAPC (FUNCTION (LAMBDA (OBJECTLIST) (RPLACA OBJECTLIST (LAST OBJECTLIST)))) (FUNCTION CDDR) (CDR ALL.PROPLIST)) (SETF (SYMBOL-PLIST (QUOTE CG*OBJECTS.ALL)) ALL.PROPLIST) (SMAPC (FUNCTION (LAMBDA (OBJECTLIST) (RPLACA OBJECTLIST (LAST OBJECTLIST)))) (FUNCTION CDDR) (CDR INSERTED.PROPLIST)) (SETF (SYMBOL-PLIST (QUOTE CG*OBJECTS.INSERTED)) INSERTED.PROPLIST) (SMAPC (FUNCTION (LAMBDA (OBJECTLIST) (RPLACA OBJECTLIST (LAST OBJECTLIST)))) (FUNCTION CDDR) (CDR CHANGED.PROPLIST)) (SETF (SYMBOL-PLIST (QUOTE CG*OBJECTS.CHANGED)) CHANGED.PROPLIST) (SMAPC (FUNCTION (LAMBDA (OBJECTLIST) (RPLACA OBJECTLIST (LAST OBJECTLIST)))) (FUNCTION CDDR) (CDR REMOVED.PROPLIST)) (SETF (SYMBOL-PLIST (QUOTE CG*OBJECTS.REMOVED)) REMOVED.PROPLIST))))) (SETQ CG*CHANGE.QUEUE.LITERALS (QUOTE (NIL))) (PROG ((ALL.PROPLIST (QUOTE (CLAUSES ((75) 6 25 29 36 40 45 75) R ((0) 0) RIW ((0) 0) RD ((0) 0) S ((46) 1 46) SI ((0) 0) SIW ((0) 0) SID ((0) 0) T ((0) 0) TI ((0) 0) TIW ((0) 0) P ((66) 12 41 47 48 49 50 54 56 59 61 62 64 66) PIW ((71) 2 68 71) PD ((0) 0) RIWD ((0) 0)))) (INSERTED.PROPLIST (QUOTE (CLAUSES ((0) 0) R ((0) 0) RIW ((0) 0) RD ((0) 0) S ((0) 0) SI ((0) 0) SIW ((0) 0) SID ((0) 0) T ((0) 0) TI ((0) 0) TIW ((0) 0) P ((0) 0) PIW ((0) 0) PD ((0) 0) RIWD ((0) 0)))) (CHANGED.PROPLIST (QUOTE (CLAUSES ((0) 0) R ((0) 0) RIW ((0) 0) RD ((0) 0) S ((0) 0) SI ((0) 0) SIW ((0) 0) SID ((0) 0) T ((0) 0) TI ((0) 0) TIW ((0) 0) P ((0) 0) PIW ((0) 0) PD ((0) 0) RIWD ((0) 0)))) (REMOVED.PROPLIST (QUOTE (CLAUSES ((0) 0) R ((0) 0) RIW ((0) 0) RD ((0) 0) S ((0) 0) SI ((0) 0) SIW ((0) 0) SID ((0) 0) T ((0) 0) TI ((0) 0) TIW ((0) 0) P ((0) 0) PIW ((0) 0) PD ((0) 0) RIWD ((0) 0))))) (SMAPC (FUNCTION (LAMBDA (OBJECTLIST) (RPLACA OBJECTLIST (LAST OBJECTLIST)))) (FUNCTION CDDR) (CDR ALL.PROPLIST)) (SETF (SYMBOL-PLIST (QUOTE CG*OBJECTS.ALL)) ALL.PROPLIST) (SMAPC (FUNCTION (LAMBDA (OBJECTLIST) (RPLACA OBJECTLIST (LAST OBJECTLIST)))) (FUNCTION CDDR) (CDR INSERTED.PROPLIST)) (SETF (SYMBOL-PLIST (QUOTE CG*OBJECTS.INSERTED)) INSERTED.PROPLIST) (SMAPC (FUNCTION (LAMBDA (OBJECTLIST) (RPLACA OBJECTLIST (LAST OBJECTLIST)))) (FUNCTION CDDR) (CDR CHANGED.PROPLIST)) (SETF (SYMBOL-PLIST (QUOTE CG*OBJECTS.CHANGED)) CHANGED.PROPLIST) (SMAPC (FUNCTION (LAMBDA (OBJECTLIST) (RPLACA OBJECTLIST (LAST OBJECTLIST)))) (FUNCTION CDDR) (CDR REMOVED.PROPLIST)) (SETF (SYMBOL-PLIST (QUOTE CG*OBJECTS.REMOVED)) REMOVED.PROPLIST)))
(PROGN (C "Operation save expression.") (SETQ OP*LINK.COLOURS.LITERAL.INITIAL (QUOTE (R S T RI SI TI RIW SIW TIW))) (SETQ OP*CLAUSECOUNTER (QUOTE 5)) (SETQ OP*COUNTER.RESOLVENTS (QUOTE 0)) (SETQ OP*COUNTER.PARAMODULANTS (QUOTE 0)) (SETQ OP*COUNTER.FACTORS (QUOTE 0)) (SETQ OP*COLOURS.CIRCLE.LINKS (QUOTE (SIW))))
(PROGN (C "Save expression of reduction.") (SETQ RED*RW_RULES (QUOTE NIL) RDS*RW_ASSIGN (QUOTE NIL) RDS*RW_VARIABLES (QUOTE ((ANY (32 33 34) (32 33 34)))) RED*RW_RULES.COMPLETION (QUOTE ((40 . 1) (36 . 1) (29 . 1))) RED*RW_RULES.UNFAILING (QUOTE ((45 . 1) (25 . 1))) RED*GRAPH.ISOLATION (QUOTE T)) (RDS-RULE.PUT (QUOTE RECHECK.INFO) (QUOTE RED*CLAUSE.TAUTOLOGY) (QUOTE NIL)) (RDS-RULE.PUT (QUOTE RECHECK.INFO) (QUOTE RED*CLAUSE.REPL.RESOLUTION.SUBJECT) (QUOTE NIL)) (RDS-RULE.PUT (QUOTE RECHECK.INFO) (QUOTE RED*CLAUSE.SUBSUMPTION.SUBJECT) (QUOTE NIL)) (RDS-RULE.PUT (QUOTE RECHECK.INFO) (QUOTE RED*LINK.SUBSUMPTION.SUBJECT) (QUOTE NIL)) (RDS-RULE.PUT (QUOTE RECHECK.INFO) (QUOTE RED*LINK.TAUTOLOGY) (QUOTE NIL)))))(CTL-INITIAL.GRAPH '(3) T 'NIL T NIL (PROGN (PROGN (DS-RESET))
(PROGN (DT-RESET))

(PROG ((ADDRLIST
        '(9333 9338 9343 9348 9353 9358 9363 9368 9373 9378 9383 9388 9393 9398 9403 9408 9413
          9418 9423 9428 9433 9438 9443 9448 9453 9458 9463 9468 9473 9478 9483 9488 9524 END
          -50 9542 9560 9578 9614 9649 9654 -49 9672 9708 9713 -42 -38 9749 9754 9759 9764
          9769 -37 -31 9805 9810 9815 9820 9856 9861 9866 9619 9624 9871 9876 9629 9634 9881
          9886 9639 9644 9891 9896 9910 9915 9920 9925 9939 9944 9949 9954 9969 9984 9999))
       (DATALIST
        '(15 "TRUE" NIL NIL NIL (DEFINED) NIL ((- 0 (POSITIVE))) ((+ 0 (NEGATIVE)))
          ((+ 0 (NIL))) ((- 0 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "FALSE" NIL NIL
          NIL (DEFINED) NIL ((- 1 (POSITIVE))) ((+ 1 (NEGATIVE))) ((+ 1 (NIL))) ((- 1 (NIL)))
          NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "=" ((45 1) (40 1) (36 1) (29 1) (25 1))
          ((51 1)) (ANY ANY) (DEFINED SYMMETRIC REFLEXIVE) 25 ((- 2 (POSITIVE . SYMMETRIC)))
          ((+ 2 (NEGATIVE . SYMMETRIC))) ((+ 2 (NIL . SYMMETRIC))) ((- 2 (NIL . SYMMETRIC)))
          NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
          VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 14 "+" NIL ANY (ANY ANY) NIL NIL NIL NIL
          NIL 2 ANY (DT*ST-KIND NIL) FUNCTION 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
          VARIABLE 5 ANY "0" (DT*ST-KIND NIL) CONSTANT 5 ANY NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 14 "-" NIL ANY (ANY) NIL NIL NIL NIL NIL 1
          ANY (DT*ST-KIND NIL) FUNCTION 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5
          ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
          VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 36 "R.=" AXIOM 0 (23) (23 24) 1 (REFLEXIVITY) NIL NIL ((1) (2)) NIL T + 2
          (23 23) (RED*UNFAIL NIL) (23) NIL ATP.MEMORY.NOBIND NIL ATP.MEMORY.NOBIND NIL NIL
          NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL CLAUSE 5 ANY NIL NIL VARIABLE 5 ANY NIL
          NIL VARIABLE 5 ANY NIL NIL VARIABLE 36 "A1" AXIOM 0 (5 4 3) (5 26 4 27 3 28) 1 NIL
          NIL NIL NIL 1 T + 2 ((6 (6 3 4) 5) (6 3 (6 4 5)))
          (RED*RULE (29 NIL 5 (6 (6 32 33) 34) (6 32 (6 33 34)) NIL) INDEX 1) (5 4 3) NIL
          ATP.MEMORY.NOBIND NIL ATP.MEMORY.NOBIND NIL NIL NIL NIL NIL NIL NIL NIL NIL (41) NIL
          NIL NIL CLAUSE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE
          5 ANY NIL NIL VARIABLE 36 "A2" AXIOM 0 (7) (7 35) 1 NIL NIL NIL NIL 1 T + 2
          ((6 8 7) 7) (RED*RULE (36 NIL 2 (6 8 32) 32 NIL) INDEX 2) (7) NIL ATP.MEMORY.NOBIND
          NIL ATP.MEMORY.NOBIND NIL NIL NIL NIL NIL NIL NIL NIL NIL (48) NIL NIL NIL CLAUSE 5
          ANY NIL NIL VARIABLE 36 "A3" AXIOM 0 (9) (9 39) 1 NIL NIL NIL NIL 1 T + 2
          ((6 (10 9) 9) 8) (RED*RULE (40 NIL 1 (6 (10 32) 32) 8 NIL) INDEX 3) (9) NIL
          ATP.MEMORY.NOBIND NIL ATP.MEMORY.NOBIND NIL NIL NIL NIL NIL NIL NIL NIL NIL
          (47 46 41) NIL NIL NIL CLAUSE 18 40 1 1 ((3 (10 4) 9 4)) NIL 29 (1) (1 1) NIL
          ((+ 2 (57 (6 (10 58) (6 58 57))))) 14 (58 57) NIL ATP.MEMORY.NOBIND
          ATP.MEMORY.NOBIND NIL P 5 ANY "C_1" (DT*ST-KIND SYS-CONST) CONSTANT 5 ANY "C_2"
          (DT*ST-KIND SYS-CONST) CONSTANT 5 ANY "C_3" (DT*ST-KIND SYS-CONST) CONSTANT 5 ANY
          "C_4" (DT*ST-KIND SYS-CONST) CONSTANT 5 ANY "C_5" (DT*ST-KIND SYS-CONST) CONSTANT 5
          ANY "C_6" (DT*ST-KIND SYS-CONST) CONSTANT 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 36 "T4" THEOREM 0 (20 19) (20 21 19 22) 1 NIL NIL NIL NIL 1 T + 2
          ((10 (6 19 20)) (6 (10 19) (10 20)))
          (RED*RULE (45 NIL 3 (10 (6 32 33)) (6 (10 32) (10 33)) NIL) INDEX 8) (20 19) NIL
          ATP.MEMORY.NOBIND NIL ATP.MEMORY.NOBIND NIL NIL NIL NIL NIL NIL NIL NIL NIL
          (48 47 46) NIL NIL NIL CLAUSE 18 45 1 1 ((9 (6 19 20))) NIL 40 (1) (1 1) NIL
          ((+ 2 ((6 (10 61) (6 (10 60) (6 61 60))) 8))) 19 (60 61) NIL ATP.MEMORY.NOBIND
          ATP.MEMORY.NOBIND NIL P 18 40 1 1 ((19 (10 20) 9 20)) NIL 45 (1) (1 1) NIL
          ((+ 2 ((10 8) 8))) 8 (64) NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL P 18 36 1 1
          ((19 8 7 20)) NIL 45 (1) (1 1) NIL ((+ 2 ((10 67) (6 (10 8) (10 67))))) 15 (67) NIL
          ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL P 36 "T5" THEOREM 0 NIL NIL 1 NIL NIL NIL
          NIL NIL T - 2 ((6 18 17) (6 17 18)) (INDEX 9) NIL NIL ATP.MEMORY.NOBIND NIL
          ATP.MEMORY.NOBIND NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL CLAUSE 5 ANY
          NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY
          NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY
          NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY
          NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY
          NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL
          VARIABLE))
       (INCREMENT (- MEM*SIZE 10000))
       COUNTER1)
      (MEM-RESET)
      (COND ((> MEM*SIZE 10000)
             (SETQ COUNTER1 84)
             (MAPC #'(LAMBDA (RADDR)
                       (SETF (AREF MEM*MEMORY (DECF COUNTER1))
                              (COND ((EQL RADDR 'ATP.MEMORY.NIL) RADDR)
                                    ((EQL 'END RADDR) RADDR)
                                    ((OR (EQL RADDR 0)
                                         (MINUSP RADDR))
                                     RADDR)
                                    (T (+ RADDR INCREMENT)))))
                   ADDRLIST)
             (SETQ COUNTER1 MEM*SIZE)
             (MAPC #'(LAMBDA (DATA) (SETF (AREF MEM*MEMORY (DECF COUNTER1)) DATA)) DATALIST))
            (T (UNLESS (= MEM*SIZE 10000)
                 (MEM-INITIALIZE 10000))
               (SETQ COUNTER1 84)
               (MAPC #'(LAMBDA (RADDR) (SETF (AREF MEM*MEMORY (DECF COUNTER1)) RADDR))
                     ADDRLIST)
               (SETQ COUNTER1 MEM*SIZE)
               (MAPC #'(LAMBDA (DATA) (SETF (AREF MEM*MEMORY (DECF COUNTER1)) DATA)) DATALIST))
            )
      (SETQ MEM*NEXT.RADR (IF (> MEM*SIZE 10000) (+ 9328 INCREMENT) 9328))
      (SETQ MEM*NEXT.VADR 84
            MEM*REST (- MEM*NEXT.RADR MEM*NEXT.VADR -1)
            MEM*FIRST.REUSABLE.VADR 30
            MEM*LAST.REUSABLE.VADR 50))

(PROGN (SETQ DT*SORT.ALL (QUOTE (ANY))) (SETQ DT*SORT.NR (QUOTE 2)) (SETQ DT*SORT.PROPERTIES (QUOTE (DT*MAX.SUBSORTS DT*LEAST.SUPERSORTS DT*TRANSITIVE.CLOSURE DT*INVERSE.TRANSITIVE.CLOSURE DT*MINIMAL.SUBSORTS DT*DIRECT.SUBSORTS DT*DIRECT.SUPERSORTS DT*DISJOINT.SORTS DT*COMPLETION.SORT))) (SETQ DT*SORT.COMMON.COMPUTE.FLAG (QUOTE NIL)) (SETQ DT*ELEMENT.PREDICATE (QUOTE 4)) (SETQ DT*OMEGA.CONSTANT (QUOTE 3)) (SETQ DT*VARIABLE.COUNTER (QUOTE 0)) (SETQ DT*CONSTANT.COUNTER (QUOTE 0)) (SETQ DT*CONSTANT.ALL (QUOTE (18 17 14 13 44 43 8))) (SETQ DT*ABBREVIATIONS (QUOTE NIL)) (SETQ DT*FUNCTION.COUNTER (QUOTE 0)) (SETQ DT*FUNCTION.ALL (QUOTE (10 6))) (SETQ DT*FUNCTION.ADMISSIBLE.THEORIES (QUOTE (ASSOCIATIVE))) (SETQ DT*FUNCTION.ACTUAL.THEORIES (QUOTE NIL)) (SETQ DT*FUNCTION.WITH.ARGUMENT.SYMMETRIES (QUOTE NIL)) (SETQ DT*FUNCTION.COMPONENTS (QUOTE (PNAME ATTRIBUTES MAX.RANGE.SORT MAX.DOMAIN.SORTS MIN.RANGE.SORTS SORT.LIST SORT.LIST.INVERSE SORT.TREE.CALC ARGUMENT.SYMMETRIES ARITY G.L.B.OF.RANGES))) (SETQ DT*PREDICATE.ADMISSABLE.ATTRIBUTES (QUOTE (SYMMETRIC DEFINED REFLEXIVE))) (SETQ DT*PREDICATE.COUNTER (QUOTE 0)) (SETQ DT*EQUALITY.SYMBOLS (QUOTE ("=" ":=" "=:" ":=:"))) (SETQ DT*EQUALITY.PREDICATES (QUOTE (2))) (SETQ DT*NONEQUALITY.PREDICATES (QUOTE (1 0))) (SETQ DT*PREDICATE.ALL (QUOTE (2 1 0))) (SETQ DT*PREDICATE.WITH.ATTRIBUTES (QUOTE NIL)) (SETQ DT*PREDICATE.COMPONENTS (QUOTE (PNAME POSITIVE.OCCURRENCES NEGATIVE.OCCURRENCES DOMAINSORTS ATTRIBUTES REFL.CLAUSE +ROTHERSIDES -ROTHERSIDES +SOTHERSIDES -SOTHERSIDES +TOTHERSIDES -TOTHERSIDES))) (SETQ DT*TRUE.PREDICATE (QUOTE 0)) (SETQ DT*FALSE.PREDICATE (QUOTE 1)) (SETQ DT*UNI.CREATES.VARIABLES (QUOTE NIL)) (SETQ DT*SIGN.MINUS.SYMBOLS (QUOTE (- --))) (SETQ DT*SIGN.PLUS.SYMBOLS (QUOTE (+ ++))) (SETQ DT*SYMBOL.KINDS (QUOTE (CONSTANT.ALL FUNCTION.ALL PREDICATE.ALL)))) 
(PROGN) 
(PROGN (PROGN)) 
(PROGN (PROGN (SETF (GET (QUOTE ANY) (QUOTE DT*SORT.NUMBER)) (QUOTE 1)) (SETF (GET (QUOTE ANY) (QUOTE DT*DIRECT.SUBSORTS)) (QUOTE NIL)) (SETF (GET (QUOTE ANY) (QUOTE DT*TRANSITIVE.CLOSURE)) (QUOTE (ANY))) (SETF (GET (QUOTE ANY) (QUOTE DT*MAX.SUBSORTS)) (QUOTE ((ANY ANY)))) (SETF (GET (QUOTE ANY) (QUOTE DT*MINIMAL.SUBSORTS)) (QUOTE (ANY))) (SETF (GET (QUOTE ANY) (QUOTE DT*DIRECT.SUPERSORTS)) (QUOTE NIL)) (SETF (GET (QUOTE ANY) (QUOTE DT*INVERSE.TRANSITIVE.CLOSURE)) (QUOTE (ANY))))) (PROGN (SETQ DS*RULES (QUOTE NIL)) (SETQ DS*FINITE.DOMAIN (QUOTE NIL)))
(PROGN)
(PROGN)
(PROGN)
(PROGN (SETQ CG*RECOLOUR (QUOTE ((R . RD) (P . PD) (SI . SID) (RIW . RIWD)))) (SETQ CG*OBJECTCLASSES (QUOTE (CLAUSES R RIW RD S SI SIW SID T TI TIW P PIW PD RIWD))) (SETQ CG*SAVESTACK (QUOTE NIL)) (SETQ CG*GRAPH.REGISTER (QUOTE (PROGN (PROG ((ALL.PROPLIST (QUOTE (CLAUSES ((0) 0) R ((0) 0) RIW ((0) 0) RD ((0) 0) S ((0) 0) SI ((0) 0) SIW ((0) 0) SID ((0) 0) T ((0) 0) TI ((0) 0) TIW ((0) 0) P ((0) 0) PIW ((0) 0) PD ((0) 0) RIWD ((0) 0)))) (INSERTED.PROPLIST (QUOTE (CLAUSES ((0) 0) R ((0) 0) RIW ((0) 0) RD ((0) 0) S ((0) 0) SI ((0) 0) SIW ((0) 0) SID ((0) 0) T ((0) 0) TI ((0) 0) TIW ((0) 0) P ((0) 0) PIW ((0) 0) PD ((0) 0) RIWD ((0) 0)))) (CHANGED.PROPLIST (QUOTE (CLAUSES ((0) 0) R ((0) 0) RIW ((0) 0) RD ((0) 0) S ((0) 0) SI ((0) 0) SIW ((0) 0) SID ((0) 0) T ((0) 0) TI ((0) 0) TIW ((0) 0) P ((0) 0) PIW ((0) 0) PD ((0) 0) RIWD ((0) 0)))) (REMOVED.PROPLIST (QUOTE (CLAUSES ((0) 0) R ((0) 0) RIW ((0) 0) RD ((0) 0) S ((0) 0) SI ((0) 0) SIW ((0) 0) SID ((0) 0) T ((0) 0) TI ((0) 0) TIW ((0) 0) P ((0) 0) PIW ((0) 0) PD ((0) 0) RIWD ((0) 0))))) (SMAPC (FUNCTION (LAMBDA (OBJECTLIST) (RPLACA OBJECTLIST (LAST OBJECTLIST)))) (FUNCTION CDDR) (CDR ALL.PROPLIST)) (SETF (SYMBOL-PLIST (QUOTE CG*OBJECTS.ALL)) ALL.PROPLIST) (SMAPC (FUNCTION (LAMBDA (OBJECTLIST) (RPLACA OBJECTLIST (LAST OBJECTLIST)))) (FUNCTION CDDR) (CDR INSERTED.PROPLIST)) (SETF (SYMBOL-PLIST (QUOTE CG*OBJECTS.INSERTED)) INSERTED.PROPLIST) (SMAPC (FUNCTION (LAMBDA (OBJECTLIST) (RPLACA OBJECTLIST (LAST OBJECTLIST)))) (FUNCTION CDDR) (CDR CHANGED.PROPLIST)) (SETF (SYMBOL-PLIST (QUOTE CG*OBJECTS.CHANGED)) CHANGED.PROPLIST) (SMAPC (FUNCTION (LAMBDA (OBJECTLIST) (RPLACA OBJECTLIST (LAST OBJECTLIST)))) (FUNCTION CDDR) (CDR REMOVED.PROPLIST)) (SETF (SYMBOL-PLIST (QUOTE CG*OBJECTS.REMOVED)) REMOVED.PROPLIST))))) (SETQ CG*CHANGE.QUEUE.LITERALS (QUOTE (NIL))) (PROG ((ALL.PROPLIST (QUOTE (CLAUSES ((51) 6 25 29 36 40 45 51) R ((0) 0) RIW ((0) 0) RD ((0) 0) S ((0) 0) SI ((0) 0) SIW ((0) 0) SID ((0) 0) T ((0) 0) TI ((0) 0) TIW ((0) 0) P ((48) 4 41 46 47 48) PIW ((0) 0) PD ((0) 0) RIWD ((0) 0)))) (INSERTED.PROPLIST (QUOTE (CLAUSES ((0) 0) R ((0) 0) RIW ((0) 0) RD ((0) 0) S ((0) 0) SI ((0) 0) SIW ((0) 0) SID ((0) 0) T ((0) 0) TI ((0) 0) TIW ((0) 0) P ((0) 0) PIW ((0) 0) PD ((0) 0) RIWD ((0) 0)))) (CHANGED.PROPLIST (QUOTE (CLAUSES ((0) 0) R ((0) 0) RIW ((0) 0) RD ((0) 0) S ((0) 0) SI ((0) 0) SIW ((0) 0) SID ((0) 0) T ((0) 0) TI ((0) 0) TIW ((0) 0) P ((0) 0) PIW ((0) 0) PD ((0) 0) RIWD ((0) 0)))) (REMOVED.PROPLIST (QUOTE (CLAUSES ((0) 0) R ((0) 0) RIW ((0) 0) RD ((0) 0) S ((0) 0) SI ((0) 0) SIW ((0) 0) SID ((0) 0) T ((0) 0) TI ((0) 0) TIW ((0) 0) P ((0) 0) PIW ((0) 0) PD ((0) 0) RIWD ((0) 0))))) (SMAPC (FUNCTION (LAMBDA (OBJECTLIST) (RPLACA OBJECTLIST (LAST OBJECTLIST)))) (FUNCTION CDDR) (CDR ALL.PROPLIST)) (SETF (SYMBOL-PLIST (QUOTE CG*OBJECTS.ALL)) ALL.PROPLIST) (SMAPC (FUNCTION (LAMBDA (OBJECTLIST) (RPLACA OBJECTLIST (LAST OBJECTLIST)))) (FUNCTION CDDR) (CDR INSERTED.PROPLIST)) (SETF (SYMBOL-PLIST (QUOTE CG*OBJECTS.INSERTED)) INSERTED.PROPLIST) (SMAPC (FUNCTION (LAMBDA (OBJECTLIST) (RPLACA OBJECTLIST (LAST OBJECTLIST)))) (FUNCTION CDDR) (CDR CHANGED.PROPLIST)) (SETF (SYMBOL-PLIST (QUOTE CG*OBJECTS.CHANGED)) CHANGED.PROPLIST) (SMAPC (FUNCTION (LAMBDA (OBJECTLIST) (RPLACA OBJECTLIST (LAST OBJECTLIST)))) (FUNCTION CDDR) (CDR REMOVED.PROPLIST)) (SETF (SYMBOL-PLIST (QUOTE CG*OBJECTS.REMOVED)) REMOVED.PROPLIST)))
(PROGN (C "Operation save expression.") (SETQ OP*LINK.COLOURS.LITERAL.INITIAL (QUOTE (R S T RI SI TI RIW SIW TIW))) (SETQ OP*CLAUSECOUNTER (QUOTE 5)) (SETQ OP*COUNTER.RESOLVENTS (QUOTE 0)) (SETQ OP*COUNTER.PARAMODULANTS (QUOTE 0)) (SETQ OP*COUNTER.FACTORS (QUOTE 0)) (SETQ OP*COLOURS.CIRCLE.LINKS (QUOTE (SIW))))
(PROGN (C "Save expression of reduction.") (SETQ RED*RW_RULES (QUOTE NIL) RDS*RW_ASSIGN (QUOTE NIL) RDS*RW_VARIABLES (QUOTE ((ANY (32 33 34) (32 33 34)))) RED*RW_RULES.COMPLETION (QUOTE ((45 . 1) (40 . 1) (36 . 1) (29 . 1))) RED*RW_RULES.UNFAILING (QUOTE ((25 . 1))) RED*GRAPH.ISOLATION (QUOTE T)) (RDS-RULE.PUT (QUOTE RECHECK.INFO) (QUOTE RED*CLAUSE.TAUTOLOGY) (QUOTE NIL)) (RDS-RULE.PUT (QUOTE RECHECK.INFO) (QUOTE RED*CLAUSE.REPL.RESOLUTION.SUBJECT) (QUOTE NIL)) (RDS-RULE.PUT (QUOTE RECHECK.INFO) (QUOTE RED*CLAUSE.SUBSUMPTION.SUBJECT) (QUOTE NIL)) (RDS-RULE.PUT (QUOTE RECHECK.INFO) (QUOTE RED*LINK.SUBSUMPTION.SUBJECT) (QUOTE NIL)) (RDS-RULE.PUT (QUOTE RECHECK.INFO) (QUOTE RED*LINK.TAUTOLOGY) (QUOTE NIL)))))