;;; -*- Package: MKRP; Base: 10; Mode: LISP; Syntax: Common-lisp -*-

(CONSTRUCTION  "Genera 8.0.1 Logical Pathnames Translation Files NEWEST IP-TCP 422.2 RPC 415.0 Embedding Support 407.0 UX Support 416.0 Experimental Network RPC 415.0 Experimental NFS Client 415.0 CLX 419.0 C Runtime 416.0 Compiler Tools Package 411.0 Compiler Tools Runtime 411.0 C Packages 413.0 Minimal Lexer Runtime 416.0 Lexer Package 415.0 Syntax Editor Runtime 411.0 Experimental X Server 409.0 X Remote Screen 418.1 KKL 20.1 HADES 16.0 Waltz 7.0 COLUMN 7.0 MKRP 49.6 GENTRAFO 1.0" "19-NOV,1991 12:07" 
   ("                                                                                                                     "
   "*********************************************************************************************************************"
   "                                                                                                                     "
   " FORMULA:  Date: 19-NOV,1991 11:44"
   "           Axioms und Theorems for this proof have been read from"
   "              Axiom-File: NIL"
   "            Theorem-File: NIL"
   "                                                                                                                     "
   "*********************************************************************************************************************"
   ))

(AXIOMS.INFIX    ((* AXIOMS *)
   (ALL |X,Y,Z| + (+ (X Y) Z) = + (X + (Y Z)))
   (ALL X + (0 X) = X)
   (ALL X + (- (X) X) = 0)))

(THEOREMS.INFIX ((* THEOREM *)
   ((ALL |X,Y,Z| X = Y OR Z = Y OR X = Z) IMPL (ALL U - (U) = U))))

(AXIOMS.PREFIX   (COMMENT
   (ALL 5 (ALL 4 (ALL 3 (+ 2 ((6 (6 3 4) 5) (6 3 (6 4 5))) NIL))))
   (ALL 7 (+ 2 ((6 8 7) 7) NIL))
   (ALL 9 (+ 2 ((6 (10 9) 9) 8) NIL))))

(THEOREMS.PREFIX (COMMENT
   (IMPL (ALL 13 (ALL 12 (ALL 11 (OR (+ 2 (11 12) NIL) (OR (+ 2 (13 12) NIL) (+ 2 (11 13) NIL)))))) (ALL 14 (+ 2 ((10 14) 14) NIL)))))

(OPTIONS (TWO_RULES)
    (TWO_RULES.MAXLEVEL . 1)
    (TWO_SUPPRESS.NORULES)
    (RED.I_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.I_CLAUSE.PURITY . T)
    (RED.I_CLAUSE.TAUTOLOGY . T)
    (RED.I_CLAUSE.TAUTOLOGY.RECHECK . PARTIAL)
    (RED.I_CLAUSE.SUBSUMPTION . T)
    (RED.I_CLAUSE.SUBSUMPTION.RECHECK . PARTIAL)
    (RED.I_CLAUSE.REPL.FACTORING . T)
    (RED.I_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.I_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.I_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.I_CLAUSE.REWRITING . T)
    (RED.I_LINK.INCOMPATIBILITY . T)
    (RED.I_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.I_LINK.TAUTOLOGY.RECHECK)
    (RED.I_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.I_LINK.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.D_CLAUSE.PURITY . T)
    (RED.D_CLAUSE.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_CLAUSE.TAUTOLOGY.RECHECK)
    (RED.D_CLAUSE.SUBSUMPTION.FORWARD . REMOVE-INHIBIT)
    (RED.D_CLAUSE.SUBSUMPTION.BACKWARD . REMOVE)
    (RED.D_CLAUSE.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.REPL.FACTORING . T)
    (RED.D_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.D_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.D_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.D_CLAUSE.REWRITING . DEM)
    (RED.D_LINK.INCOMPATIBILITY . T)
    (RED.D_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_LINK.TAUTOLOGY.RECHECK)
    (RED.D_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.D_LINK.SUBSUMPTION.RECHECK)
    (FAC_INITIAL)
    (FAC_EACH.STEP)
    (STR_RESOLUTION . SET-OF-SUPPORT)
    (STR_R.SELECTION * 10 (+ 2 VARIABLES (* 2 DEPTH) (* 3 NOLIT)))
    (STR_LINK.DEPTH)
    (STR_TERM.DEPTH)
    (STR_FINITE.DOMAIN . T)
    (TERM_UNITS . T)
    (TERM_ITERATIONS . 0)
    (TERM_SET.OF.SUPPORT)
    (TERM_BREADTH.FIRST)
    (SORT_LITERALS)
    (ER_PARAMODULATION . HEURISTIC-COMPLETION)
    (ER_P.SELECTION * WEIGHT (IF SUPPORT 1 1.5) (IF EQUATIONAL 1 2))
    (ER_COMPLETION . UNFAILING)
    (ER_CP.REDUCTION . T)
    (ER_ORDERING . LEXICOGRAPHIC-RECURSIVE-PATH)
    (ER_OPERATOR.ORDERING MINUS MULT PLUS 0 1)
    (ER_KNUTH.BENDIX.WEIGHT (PLUS 1) (MULT 1) (MINUS 0) (0 1) (1 1))
    (ER_POLYNOMIAL.WEIGHT (PLUS (+ 5 (* 2 X) Y)) (MULT (+ X (* X Y))) (MINUS (* 2 X)) (0 2) (1 2))
    (ER_NARROW.DEPTH . 0)
    (ER_NARROW.NEXT . DEPTH)
    (ER_NARROW.TEST NORM C DELTA SL N)
    (ER_COMPILE)
    (GEN_SPLITTING . 0)
    (GEN_PRESIMPLIFICATION . T)
    (GEN_MIN.EXPRESSION.LENGTH.FOR.FILE)
    (GEN_MIN.EXPRESSION.SIZE.FOR.FILE)
    (GEN_MANUAL.CONTROL)
    (GEN_MAXIMUM.STEPS)
    (GEN_GRAPH.SAVING)
    (GEN_SAVE.FILE . SAVEDEFAULT)
    (GEN_LISP.GARBAGE.COLLECTION)
    (GEN_COMMON.LISP)
    (TR_PREPROCESSING)
    (TR_STEP.MODE . LR)
    (TR_DUMP)
    (TR_CLAUSE.MODE . I)
    (TR_LINK.MODE . I)
    (TR_TRACE.FILE)
    (TR_TERMINAL . T)
    (PR_LATEX)
    (PR_INFIX.FORM . T)
    (PR_PREFIX.FORM)
    (PR_OPTIONS)
    (PR_AXIOM.CLAUSES . T)
    (PR_SYMBOLS)
    (PR_DIRECT.PROOF . T)
    (PR_VARIABLE.PRINT.NAMES X Y Z U V W XX YY ZZ UU VV WW XXX YYY ZZZ UUU VVV WWW)
    (PR_PROTOCOL . T)
    (PR_LEFT.MARGIN . 3)
    (PR_RIGHT.MARGIN . 117)
    (PR_LINELENGTH . 114)
    (PR_LITERALS)
   )

(LINK.COLOURS (R RIW RD S SI SIW SID T TI TIW P PIW PD RIWD))

(AXIOMS (START.TIME 400012037)
   (PARTIAL   (CLAUSE 17 R.= AXIOM ((15 . ANY)) ((+ 2 (15 15)) ))(CLAUSE 21 A1 AXIOM ((5 . ANY)(4 . ANY)(3 . ANY)) ((+ 2 ((6 (6 3 4) 5) (6 3 (6 4 5)))) )))
   (PARTIAL   (CLAUSE 28 A2 AXIOM ((7 . ANY)) ((+ 2 ((6 8 7) 7)) )))
   (PARTIAL   (CLAUSE 32 A3 AXIOM ((9 . ANY)) ((+ 2 ((6 (10 9) 9) 8)) )))
   (END.TIME 400014599)
   (FINAL 17 21 28 32)
   (SYMBOLS 
   (LET (NEW.ADDRESS)
   (LIST (PROG1 (CONS    2 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "=" '(ANY ANY))))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED SYMMETRIC REFLEXIVE)))
   (PROG1 (CONS    1 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "FALSE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (PROG1 (CONS    0 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "TRUE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (CONS    8 (DT-CONSTANT.CREATE "0" 'ANY))
   (CONS   10 (DT-FUNCTION.CREATE "-" 'ANY '(ANY) 'NIL))
   (CONS    6 (DT-FUNCTION.CREATE "+" 'ANY '(ANY ANY) 'NIL)))))
   (RESULT))

(THEOREMS (SPLITPART.IDENTIFIER 1)
   (START.TIME 400014707)
   (PARTIAL   (CLAUSE 14 T4 THEOREM () ((- 2 ((10 35) 35)) )))
   (PARTIAL   (CLAUSE 39 T5 THEOREM ((13 . ANY)(12 . ANY)(11 . ANY))
   ((+ 2 (11 12)) (+ 2 (13 12)) (+ 2 (11 13)) )))
   (OPERATION (CLAUSE 134 T5.F1 (39) ((131 . ANY)) ((+ 2 (131 131)) ))
   (FACTORIZATION 39 SYMMETRIC (13 12 11 12) 134))
   (INITIAL   (CLAUSE 17 R.= AXIOM ((15 . ANY)) ((+ 2 (15 15)) ))
(CLAUSE 21 A1 AXIOM ((5 . ANY)(4 . ANY)(3 . ANY)) ((+ 2 ((6 (6 3 4) 5) (6 3 (6 4 5)))) ))
(CLAUSE 28 A2 AXIOM ((7 . ANY)) ((+ 2 ((6 8 7) 7)) ))
(CLAUSE 32 A3 AXIOM ((9 . ANY)) ((+ 2 ((6 (10 9) 9) 8)) ))
(CLAUSE 14 T4 THEOREM () ((- 2 ((10 35) 35)) ))
(CLAUSE 39 T5 THEOREM ((13 . ANY)(12 . ANY)(11 . ANY))
   ((+ 2 (11 12)) (+ 2 (13 12)) (+ 2 (11 13)) ))   )
   (END.TIME 400038359)
   (FINAL 17 21 28 32 14 39)
   (SYMBOLS 
   (LET (NEW.ADDRESS)
   (LIST (PROG1 (CONS    2 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "=" '(ANY ANY))))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED SYMMETRIC REFLEXIVE)))
   (PROG1 (CONS    1 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "FALSE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (PROG1 (CONS    0 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "TRUE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (CONS   35 (DT-CONSTANT.CREATE "c_1" 'ANY))
   (CONS    8 (DT-CONSTANT.CREATE "0" 'ANY))
   (CONS   10 (DT-FUNCTION.CREATE "-" 'ANY '(ANY) 'NIL))
   (CONS    6 (DT-FUNCTION.CREATE "+" 'ANY '(ANY ANY) 'NIL)))))
   (RESULT))
(indices ((39 4 5 6) (14 7) (32 3) (28 2) (21 1) (17 NIL)))

(SPLITPARTS "Genera 8.0.1 Logical Pathnames Translation Files NEWEST IP-TCP 422.2 RPC 415.0 Embedding Support 407.0 UX Support 416.0 Experimental Network RPC 415.0 Experimental NFS Client 415.0 CLX 419.0 C Runtime 416.0 Compiler Tools Package 411.0 Compiler Tools Runtime 411.0 C Packages 413.0 Minimal Lexer Runtime 416.0 Lexer Package 415.0 Syntax Editor Runtime 411.0 Experimental X Server 409.0 X Remote Screen 418.1 KKL 20.1 HADES 16.0 Waltz 7.0 COLUMN 7.0 MKRP 49.6 GENTRAFO 1.0" "19-NOV,1991 12:08" NIL)

(OPTIONS (TWO_RULES)
    (TWO_RULES.MAXLEVEL . 1)
    (TWO_SUPPRESS.NORULES)
    (RED.I_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.I_CLAUSE.PURITY . T)
    (RED.I_CLAUSE.TAUTOLOGY . T)
    (RED.I_CLAUSE.TAUTOLOGY.RECHECK . PARTIAL)
    (RED.I_CLAUSE.SUBSUMPTION . T)
    (RED.I_CLAUSE.SUBSUMPTION.RECHECK . PARTIAL)
    (RED.I_CLAUSE.REPL.FACTORING . T)
    (RED.I_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.I_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.I_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.I_CLAUSE.REWRITING . T)
    (RED.I_LINK.INCOMPATIBILITY . T)
    (RED.I_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.I_LINK.TAUTOLOGY.RECHECK)
    (RED.I_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.I_LINK.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.D_CLAUSE.PURITY . T)
    (RED.D_CLAUSE.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_CLAUSE.TAUTOLOGY.RECHECK)
    (RED.D_CLAUSE.SUBSUMPTION.FORWARD . REMOVE-INHIBIT)
    (RED.D_CLAUSE.SUBSUMPTION.BACKWARD . REMOVE)
    (RED.D_CLAUSE.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.REPL.FACTORING . T)
    (RED.D_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.D_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.D_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.D_CLAUSE.REWRITING . DEM)
    (RED.D_LINK.INCOMPATIBILITY . T)
    (RED.D_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_LINK.TAUTOLOGY.RECHECK)
    (RED.D_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.D_LINK.SUBSUMPTION.RECHECK)
    (FAC_INITIAL)
    (FAC_EACH.STEP)
    (STR_RESOLUTION . SET-OF-SUPPORT)
    (STR_R.SELECTION * 10 (+ 2 VARIABLES (* 2 DEPTH) (* 3 NOLIT)))
    (STR_LINK.DEPTH)
    (STR_TERM.DEPTH)
    (STR_FINITE.DOMAIN . T)
    (TERM_UNITS . T)
    (TERM_ITERATIONS . 0)
    (TERM_SET.OF.SUPPORT)
    (TERM_BREADTH.FIRST)
    (SORT_LITERALS)
    (ER_PARAMODULATION . HEURISTIC-COMPLETION)
    (ER_P.SELECTION * WEIGHT (IF SUPPORT 1 1.5) (IF EQUATIONAL 1 2))
    (ER_COMPLETION . UNFAILING)
    (ER_CP.REDUCTION . T)
    (ER_ORDERING . LEXICOGRAPHIC-RECURSIVE-PATH)
    (ER_OPERATOR.ORDERING MINUS MULT PLUS 0 1)
    (ER_KNUTH.BENDIX.WEIGHT (PLUS 1) (MULT 1) (MINUS 0) (0 1) (1 1))
    (ER_POLYNOMIAL.WEIGHT (PLUS (+ 5 (* 2 X) Y)) (MULT (+ X (* X Y))) (MINUS (* 2 X)) (0 2) (1 2))
    (ER_NARROW.DEPTH . 0)
    (ER_NARROW.NEXT . DEPTH)
    (ER_NARROW.TEST NORM C DELTA SL N)
    (ER_COMPILE)
    (GEN_SPLITTING . 0)
    (GEN_PRESIMPLIFICATION . T)
    (GEN_MIN.EXPRESSION.LENGTH.FOR.FILE)
    (GEN_MIN.EXPRESSION.SIZE.FOR.FILE)
    (GEN_MANUAL.CONTROL)
    (GEN_MAXIMUM.STEPS)
    (GEN_GRAPH.SAVING)
    (GEN_SAVE.FILE . SAVEDEFAULT)
    (GEN_LISP.GARBAGE.COLLECTION)
    (GEN_COMMON.LISP)
    (TR_PREPROCESSING)
    (TR_STEP.MODE . LR)
    (TR_DUMP)
    (TR_CLAUSE.MODE . I)
    (TR_LINK.MODE . I)
    (TR_TRACE.FILE)
    (TR_TERMINAL . T)
    (PR_LATEX)
    (PR_INFIX.FORM . T)
    (PR_PREFIX.FORM)
    (PR_OPTIONS)
    (PR_AXIOM.CLAUSES . T)
    (PR_SYMBOLS)
    (PR_DIRECT.PROOF . T)
    (PR_VARIABLE.PRINT.NAMES X Y Z U V W XX YY ZZ UU VV WW XXX YYY ZZZ UUU VVV WWW)
    (PR_PROTOCOL . T)
    (PR_LEFT.MARGIN . 3)
    (PR_RIGHT.MARGIN . 117)
    (PR_LINELENGTH . 114)
    (PR_LITERALS)
   )

(REFUTATION (START.TIME 400040492)

(OPTIONS (TWO_RULES)
    (TWO_RULES.MAXLEVEL . 1)
    (TWO_SUPPRESS.NORULES)
    (RED.I_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.I_CLAUSE.PURITY . T)
    (RED.I_CLAUSE.TAUTOLOGY . T)
    (RED.I_CLAUSE.TAUTOLOGY.RECHECK . PARTIAL)
    (RED.I_CLAUSE.SUBSUMPTION . T)
    (RED.I_CLAUSE.SUBSUMPTION.RECHECK . PARTIAL)
    (RED.I_CLAUSE.REPL.FACTORING . T)
    (RED.I_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.I_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.I_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.I_CLAUSE.REWRITING . T)
    (RED.I_LINK.INCOMPATIBILITY . T)
    (RED.I_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.I_LINK.TAUTOLOGY.RECHECK)
    (RED.I_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.I_LINK.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.D_CLAUSE.PURITY . T)
    (RED.D_CLAUSE.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_CLAUSE.TAUTOLOGY.RECHECK)
    (RED.D_CLAUSE.SUBSUMPTION.FORWARD . REMOVE-INHIBIT)
    (RED.D_CLAUSE.SUBSUMPTION.BACKWARD . REMOVE)
    (RED.D_CLAUSE.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.REPL.FACTORING . T)
    (RED.D_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.D_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.D_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.D_CLAUSE.REWRITING . DEM)
    (RED.D_LINK.INCOMPATIBILITY . T)
    (RED.D_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_LINK.TAUTOLOGY.RECHECK)
    (RED.D_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.D_LINK.SUBSUMPTION.RECHECK)
    (FAC_INITIAL)
    (FAC_EACH.STEP)
    (STR_RESOLUTION . SET-OF-SUPPORT)
    (STR_R.SELECTION * 10 (+ 2 VARIABLES (* 2 DEPTH) (* 3 NOLIT)))
    (STR_LINK.DEPTH)
    (STR_TERM.DEPTH)
    (STR_FINITE.DOMAIN . T)
    (TERM_UNITS . T)
    (TERM_ITERATIONS . 0)
    (TERM_SET.OF.SUPPORT)
    (TERM_BREADTH.FIRST)
    (SORT_LITERALS)
    (ER_PARAMODULATION . HEURISTIC-COMPLETION)
    (ER_P.SELECTION * WEIGHT (IF SUPPORT 1 1.5) (IF EQUATIONAL 1 2))
    (ER_COMPLETION . UNFAILING)
    (ER_CP.REDUCTION . T)
    (ER_ORDERING . LEXICOGRAPHIC-RECURSIVE-PATH)
    (ER_OPERATOR.ORDERING MINUS MULT PLUS 0 1)
    (ER_KNUTH.BENDIX.WEIGHT (PLUS 1) (MULT 1) (MINUS 0) (0 1) (1 1))
    (ER_POLYNOMIAL.WEIGHT (PLUS (+ 5 (* 2 X) Y)) (MULT (+ X (* X Y))) (MINUS (* 2 X)) (0 2) (1 2))
    (ER_NARROW.DEPTH . 0)
    (ER_NARROW.NEXT . DEPTH)
    (ER_NARROW.TEST NORM C DELTA SL N)
    (ER_COMPILE)
    (GEN_SPLITTING . 0)
    (GEN_PRESIMPLIFICATION . T)
    (GEN_MIN.EXPRESSION.LENGTH.FOR.FILE)
    (GEN_MIN.EXPRESSION.SIZE.FOR.FILE)
    (GEN_MANUAL.CONTROL)
    (GEN_MAXIMUM.STEPS)
    (GEN_GRAPH.SAVING)
    (GEN_SAVE.FILE . SAVEDEFAULT)
    (GEN_LISP.GARBAGE.COLLECTION)
    (GEN_COMMON.LISP)
    (TR_PREPROCESSING)
    (TR_STEP.MODE . LR)
    (TR_DUMP)
    (TR_CLAUSE.MODE . I)
    (TR_LINK.MODE . I)
    (TR_TRACE.FILE)
    (TR_TERMINAL . T)
    (PR_LATEX)
    (PR_INFIX.FORM . T)
    (PR_PREFIX.FORM)
    (PR_OPTIONS)
    (PR_AXIOM.CLAUSES . T)
    (PR_SYMBOLS)
    (PR_DIRECT.PROOF . T)
    (PR_VARIABLE.PRINT.NAMES X Y Z U V W XX YY ZZ UU VV WW XXX YYY ZZZ UUU VVV WWW)
    (PR_PROTOCOL . T)
    (PR_LEFT.MARGIN . 3)
    (PR_RIGHT.MARGIN . 117)
    (PR_LINELENGTH . 114)
    (PR_LITERALS)
   )
   (INITIAL   (CLAUSE 17 R.= AXIOM ((15 . ANY)) ((+ 2 (15 15)) ))
(CLAUSE 21 A1 AXIOM ((5 . ANY)(4 . ANY)(3 . ANY)) ((+ 2 ((6 (6 3 4) 5) (6 3 (6 4 5)))) ))
(CLAUSE 28 A2 AXIOM ((7 . ANY)) ((+ 2 ((6 8 7) 7)) ))
(CLAUSE 32 A3 AXIOM ((9 . ANY)) ((+ 2 ((6 (10 9) 9) 8)) ))
(CLAUSE 14 T4 THEOREM () ((- 2 ((10 35) 35)) ))
(CLAUSE 39 T5 THEOREM ((13 . ANY)(12 . ANY)(11 . ANY))
   ((+ 2 (11 12)) (+ 2 (13 12)) (+ 2 (11 13)) ))   )
   (OPERATION (CLAUSE 375 P1 (21 32) ((68 . ANY)(29 . ANY)) ((+ 2 ((6 8 29) (6 (10 68) (6 68 29)))) ))
   (PARAMODULATION 32 1 (1) 21 1 (1 1) NIL (3 (10 4) 9 4) 375))
   (OPERATION (CLAUSE 375 P1 (21 32) ((68 . ANY)(29 . ANY)) ((+ 2 (29 (6 (10 68) (6 68 29)))) ))
   (REWRITE 28 1 375))
   (OPERATION (CLAUSE 379 P2 (375 28) ((381 . ANY)) ((+ 2 (381 (6 (10 8) 381))) ))
   (PARAMODULATION 28 1 (1) 375 1 (2 2) NIL (68 8 7 29) 379))
   (OPERATION (CLAUSE 541 P3 (375 32) ((543 . ANY)) ((+ 2 (543 (6 (10 (10 543)) 8))) ))
   (PARAMODULATION 32 1 (1) 375 1 (2 2) NIL (68 (10 29) 9 29) 541))
   (OPERATION (CLAUSE 376 P4 (375 379) ((378 . ANY)) ((+ 2 (378 (6 (10 (10 8)) 378))) ))
   (PARAMODULATION 379 1 (2) 375 1 (2 2) NIL (68 (10 8) 381 29) 376))
   (OPERATION (CLAUSE 836 P5 (32 376) () ((+ 2 ((10 8) 8)) ))
   (PARAMODULATION 376 1 (2) 32 1 (1) NIL (9 (10 8) 378 (10 8)) 836))
   (OPERATION (CLAUSE 379 P2 (375 28) ((381 . ANY)) ((+ 2 (381 (6 8 381))) ))
   (REWRITE 836 1 379))
   (OPERATION (CLAUSE 379 P2 (375 28) ((381 . ANY)) ((+ 2 (381 381)) ))
   (REWRITE 28 1 379))
   (OPERATION (CLAUSE 376 P4 (375 379) ((378 . ANY)) ((+ 2 (378 (6 (10 8) 378))) ))
   (REWRITE 836 1 376))
   (OPERATION (CLAUSE 376 P4 (375 379) ((378 . ANY)) ((+ 2 (378 (6 8 378))) ))
   (REWRITE 836 1 376))
   (OPERATION (CLAUSE 376 P4 (375 379) ((378 . ANY)) ((+ 2 (378 378)) ))
   (REWRITE 28 1 376))
   (OPERATION (CLAUSE 560 P6 (375 541) ((564 . ANY)) ((+ 2 (8 (6 (10 (10 (10 564))) 564))) ))
   (PARAMODULATION 541 1 (2) 375 1 (2 2) NIL (68 (10 (10 543)) 29 8) 560))
   (OPERATION (CLAUSE 859 P7 (375 560) ((538 . ANY)) ((+ 2 (538 (6 (10 (10 (10 (10 538)))) 8))) ))
   (PARAMODULATION 560 1 (2) 375 1 (2 2) NIL (68 (10 (10 (10 29))) 564 29) 859))
   (OPERATION (CLAUSE 859 P7 (375 560) ((538 . ANY)) ((+ 2 (538 (10 (10 538)))) ))
   (REWRITE 541 1 859))
   (OPERATION (CLAUSE 541 P3 (375 32) ((543 . ANY)) ((+ 2 (543 (6 543 8))) ))
   (REWRITE 859 1 541))
   (OPERATION (CLAUSE 560 P6 (375 541) ((564 . ANY)) ((+ 2 (8 (6 (10 564) 564))) ))
   (REWRITE 859 1 560))
   (OPERATION (CLAUSE 560 P6 (375 541) () ((+ 2 (8 8)) ))
   (REWRITE 32 1 560))
   (OPERATION (CLAUSE 848 P8 (32 859) ((845 . ANY)) ((+ 2 ((6 845 (10 845)) 8)) ))
   (PARAMODULATION 859 1 (2) 32 1 (1 1) NIL (9 (10 538)) 848))
   (OPERATION (CLAUSE 558 P9 (375 859) ((860 . ANY)(852 . ANY)) ((+ 2 (852 (6 860 (6 (10 860) 852)))) ))
   (PARAMODULATION 859 1 (2) 375 1 (2 1) NIL (68 (10 538)) 558))
   (OPERATION (CLAUSE 1519 P10 (21 848) ((1529 . ANY)(1528 . ANY)) ((+ 2 (8 (6 1528 (6 1529 (10 (6 1528 1529)))))) ))
   (PARAMODULATION 848 1 (1) 21 1 (1) NIL (845 (6 3 4) 5 (10 (6 3 4))) 1519))
   (OPERATION (CLAUSE 1721 P11 (375 1519) ((1731 . ANY)(849 . ANY)) ((+ 2 ((6 849 (10 (6 1731 849))) (6 (10 1731) 8))) ))
   (PARAMODULATION 1519 1 (2) 375 1 (2 2) NIL (1528 68 29 (6 1529 (10 (6 68 1529)))) 1721))
   (OPERATION (CLAUSE 1721 P11 (375 1519) ((1731 . ANY)(849 . ANY)) ((+ 2 ((6 849 (10 (6 1731 849))) (10 1731))) ))
   (REWRITE 541 1 1721))
   (OPERATION (CLAUSE 1519 P10 (21 848) ((1528 . ANY)) ((+ 2 (8 (6 1528 (10 1528)))) ))
   (REWRITE 1721 1 1519))
   (OPERATION (CLAUSE 1519 P10 (21 848) () ((+ 2 (8 8)) ))
   (REWRITE 848 1 1519))
   (OPERATION (CLAUSE 1737 P12 (1721 1721) ((1741 . ANY)(1740 . ANY)) ((+ 2 ((6 (10 (6 1740 1741)) (10 (10 1740))) (10 1741))) ))
   (PARAMODULATION 1721 1 (1) 1721 1 (1 2 1) NIL (1722 1731 849 (10 (6 1723 1731))) 1737))
   (OPERATION (CLAUSE 1737 P12 (1721 1721) ((1741 . ANY)(1740 . ANY)) ((+ 2 ((6 (10 (6 1740 1741)) 1740) (10 1741))) ))
   (REWRITE 859 1 1737))
   (OPERATION (CLAUSE 1726 P13 (375 1721) ((1710 . ANY)(1980 . ANY)) ((+ 2 ((10 (6 1980 1710)) (6 (10 1710) (10 1980)))) ))
   (PARAMODULATION 1721 1 (1) 375 1 (2 2) NIL (849 68 29 (10 (6 1731 68))) 1726))
   (OPERATION (CLAUSE 2357 P14 (558 1721) ((2375 . ANY)(1703 . ANY)) ((+ 2 ((10 (6 1703 (10 2375))) (6 2375 (10 1703)))) ))
   (PARAMODULATION 1721 1 (1) 558 1 (2 2) NIL (849 (10 860) 852 (10 (6 1731 (10 860)))) 2357))
   (OPERATION (CLAUSE 2723 P15 (1737 558) ((2735 . ANY)(2366 . ANY)) ((+ 2 ((6 (10 2366) 2735) (10 (6 (10 2735) 2366)))) ))
   (PARAMODULATION 558 1 (2) 1737 1 (1 1 1) NIL (860 1740 1741 (6 (10 1740) 852)) 2723))
   (OPERATION (CLAUSE 3142 P16 (2357 859) ((2374 . ANY)(1712 . ANY)) ((+ 2 ((10 (6 (10 1712) (10 2374))) (6 2374 1712))) ))
   (PARAMODULATION 859 1 (2) 2357 1 (2 2) NIL (1703 (10 538)) 3142))
   (OPERATION (CLAUSE 1737 P12 (1721 1721) ((1741 . ANY)(1740 . ANY)) ((+ 2 ((10 (6 (10 1740) (10 (10 (6 1740 1741))))) (10 1741))) ))
   (REWRITE 3142 1 1737))
   (OPERATION (CLAUSE 1737 P12 (1721 1721) ((1741 . ANY)(1740 . ANY)) ((+ 2 ((10 (6 (10 1740) (6 1740 1741))) (10 1741))) ))
   (REWRITE 859 1 1737))
   (OPERATION (CLAUSE 1737 P12 (1721 1721) ((1741 . ANY)) ((+ 2 ((10 1741) (10 1741))) ))
   (REWRITE 375 1 1737))
   (OPERATION (CLAUSE 3561 P17 (375 21) ((701 . ANY)(1514 . ANY)(864 . ANY)) ((+ 2 (864 (6 (10 (6 1514 701)) (6 1514 (6 701 864))))) ))
   (PARAMODULATION 21 1 (1) 375 1 (2 2) NIL (68 (6 3 4) 5 29) 3561))
   (OPERATION (CLAUSE 1984 P18 (21 558) ((3131 . ANY)(3130 . ANY)(4063 . ANY)) ((+ 2 (4063 (6 3130 (6 3131 (6 (10 (6 3130 3131)) 4063))))) ))
   (PARAMODULATION 558 1 (2) 21 1 (1) NIL (860 (6 3 4) 5 (6 (10 (6 3 4)) 852)) 1984))
   (OPERATION (CLAUSE 4541 P19 (1726 39) ((696 . ANY)(4547 . ANY)(4548 . ANY)(4556 . ANY))
   ((+ 2 (4556 (6 (10 4548) (10 4547)))) (+ 2 (696 4556)) (+ 2 ((10 (6 4547 4548)) 696)) ))
   (PARAMODULATION 39 1 (1) 1726 1 (1) NIL (11 (10 (6 1980 1710))) 4541))
   (OPERATION (CLAUSE 5436 P19.F2 (4541) ((5432 . ANY)(5431 . ANY)) ((+ 2 ((10 (6 5431 5432)) (6 (10 5432) (10 5431)))) ))
   (FACTORIZATION 4541 SYMMETRIC (696 (6 (10 4548) (10 4547)) 4556 (10 (6 4547 4548))) 5436))
   (OPERATION (CLAUSE 2339 P20 (4541 836) ((5425 . ANY)(5424 . ANY)(2335 . ANY))
   ((+ 2 (2335 (6 8 (10 5424)))) (+ 2 (5425 2335)) (+ 2 ((10 (6 5424 8)) 5425)) ))
   (PARAMODULATION 836 1 (1) 4541 1 (2 1) NIL (4548 8) 2339))
   (OPERATION (CLAUSE 2339 P20 (4541 836) ((5425 . ANY)(5424 . ANY)(2335 . ANY))
   ((+ 2 (2335 (6 8 (10 5424)))) (+ 2 (5425 2335)) (+ 2 ((10 5424) 5425)) ))
   (REWRITE 541 3 2339))
   (OPERATION (CLAUSE 2339 P20 (4541 836) ((5425 . ANY)(5424 . ANY)(2335 . ANY))
   ((+ 2 (2335 (10 5424))) (+ 2 (5425 2335)) (+ 2 ((10 5424) 5425)) ))
   (REWRITE 28 1 2339))
   (OPERATION (CLAUSE 7912 P21 (4541 836) ((7921 . ANY)(7919 . ANY)(7917 . ANY))
   ((+ 2 (7917 (6 (10 7919) 8))) (+ 2 (7921 7917)) (+ 2 ((10 (6 8 7919)) 7921)) ))
   (PARAMODULATION 836 1 (1) 4541 1 (2 2) NIL (4547 8) 7912))
   (OPERATION (CLAUSE 7912 P21 (4541 836) ((7921 . ANY)(7919 . ANY)(7917 . ANY))
   ((+ 2 (7917 (6 (10 7919) 8))) (+ 2 (7921 7917)) (+ 2 ((10 7919) 7921)) ))
   (REWRITE 28 3 7912))
   (OPERATION (CLAUSE 7912 P21 (4541 836) ((7921 . ANY)(7919 . ANY)(7917 . ANY))
   ((+ 2 (7917 (10 7919))) (+ 2 (7921 7917)) (+ 2 ((10 7919) 7921)) ))
   (REWRITE 541 1 7912))
   (OPERATION (CLAUSE 7732 P22 (4541 848) ((7956 . ANY)(7952 . ANY)(7957 . ANY))
   ((+ 2 ((10 8) 7957)) (+ 2 (7952 (6 (10 (10 7956)) (10 7956)))) (+ 2 (7957 7952)) ))
   (PARAMODULATION 848 1 (1) 4541 3 (1 1) NIL (845 4547 4548 (10 4547)) 7732))
   (OPERATION (CLAUSE 7732 P22 (4541 848) ((7952 . ANY)(7956 . ANY)(7957 . ANY))
   ((+ 2 ((10 8) 7957)) (+ 2 (7952 (6 7956 (10 7956)))) (+ 2 (7957 7952)) ))
   (REWRITE 859 2 7732))
   (OPERATION (CLAUSE 7732 P22 (4541 848) ((7952 . ANY)(7957 . ANY))
   ((+ 2 ((10 8) 7957)) (+ 2 (7952 8)) (+ 2 (7957 7952)) ))
   (REWRITE 848 2 7732))
   (OPERATION (CLAUSE 7732 P22 (4541 848) ((7952 . ANY)(7957 . ANY))
   ((+ 2 (8 7957)) (+ 2 (7952 8)) (+ 2 (7957 7952)) ))
   (REWRITE 836 1 7732))
   (OPERATION (CLAUSE 5067 P23 (4541 32) ((1718 . ANY)(3570 . ANY)(1517 . ANY))
   ((+ 2 ((10 8) 1517)) (+ 2 (3570 (6 (10 1718) (10 (10 1718))))) (+ 2 (1517 3570)) ))
   (PARAMODULATION 32 1 (1) 4541 3 (1 1) NIL (4547 (10 4548) 9 4548) 5067))
   (OPERATION (CLAUSE 5067 P23 (4541 32) ((3570 . ANY)(1517 . ANY))
   ((+ 2 ((10 8) 1517)) (+ 2 (3570 8)) (+ 2 (1517 3570)) ))
   (REWRITE 848 2 5067))
   (OPERATION (CLAUSE 5067 P23 (4541 32) ((3570 . ANY)(1517 . ANY))
   ((+ 2 (8 1517)) (+ 2 (3570 8)) (+ 2 (1517 3570)) ))
   (REWRITE 836 1 5067))
   (OPERATION (CLAUSE 7766 P24 (1726 4541) ((7985 . ANY)(7790 . ANY)(7786 . ANY)(7497 . ANY))
   ((+ 2 ((10 7497) (6 (10 (10 7786)) (10 (10 7790))))) (+ 2 (7985 7497)) (+ 2 ((10 (6 7786 7790)) 7985)) ))
   (PARAMODULATION 4541 1 (2) 1726 1 (1 1) NIL (1980 (10 4548) 1710 (10 4547)) 7766))
   (OPERATION (CLAUSE 7766 P24 (1726 4541) ((7985 . ANY)(7790 . ANY)(7786 . ANY)(7497 . ANY))
   ((+ 2 ((10 7497) (6 7786 (10 (10 7790))))) (+ 2 (7985 7497)) (+ 2 ((10 (6 7786 7790)) 7985)) ))
   (REWRITE 859 1 7766))
   (OPERATION (CLAUSE 7766 P24 (1726 4541) ((7985 . ANY)(7790 . ANY)(7786 . ANY)(7497 . ANY))
   ((+ 2 ((10 7497) (6 7786 7790))) (+ 2 (7985 7497)) (+ 2 ((10 (6 7786 7790)) 7985)) ))
   (REWRITE 859 1 7766))
   (OPERATION (CLAUSE 7762 P25 (32 7766) ((5153 . ANY)(7994 . ANY)(5128 . ANY))
   ((+ 2 ((10 5128) 8)) (+ 2 (7994 5128)) (+ 2 ((10 (6 (10 5153) 5153)) 7994)) ))
   (PARAMODULATION 7766 1 (2) 32 1 (1) NIL (7786 (10 9) 7790 9) 7762))
   (OPERATION (CLAUSE 7762 P25 (32 7766) ((7994 . ANY)(5128 . ANY))
   ((+ 2 ((10 5128) 8)) (+ 2 (7994 5128)) (+ 2 ((10 8) 7994)) ))
   (REWRITE 32 3 7762))
   (OPERATION (CLAUSE 7762 P25 (32 7766) ((7994 . ANY)(5128 . ANY))
   ((+ 2 ((10 5128) 8)) (+ 2 (7994 5128)) (+ 2 (8 7994)) ))
   (REWRITE 836 3 7762))
   (OPERATION (CLAUSE 10416 P25.F3 (7762) () ((+ 2 ((10 8) 8)) ))
   (FACTORIZATION 7762 SYMMETRIC (7994 (10 8) 5128 8) 10416))
   (OPERATION (CLAUSE 10467 R1 (14 7762) ()
   ((+ 2 ((10 35) 8)) (+ 2 (8 (10 35))) ))
   (RESOLUTION 7762 2 14 1 SYMMETRIC (7994 (10 35) 5128 35) 10467))
   (OPERATION (CLAUSE 10467 R1 (14 7762) () ((+ 2 ((10 35) 8)) ))
   (DOUBLE.LITERAL 1 2 SYMMETRIC 10467))
   (OPERATION (CLAUSE 14 T4 THEOREM () ((- 2 (8 35)) ))
   (REWRITE 10467 1 14))
   (OPERATION (CLAUSE 12128 P26 (32 10467) () ((+ 2 ((6 8 35) 8)) ))
   (PARAMODULATION 10467 1 (1) 32 1 (1 1) NIL (9 35) 12128))
   (OPERATION (CLAUSE 12128 P26 (32 10467) () ((+ 2 (35 8)) ))
   (REWRITE 28 1 12128))
   (OPERATION (CLAUSE 12128 P26 (32 10467) () ((+ 2 (35 8)) ))
   (REPLACEMENT.OPERATION NIL (12128 14)
  (((12128 . 1) (14 . 1) SYMMETRIC))
  (NIL)
  NIL))
   (END.TIME 404710004)
   (SYMBOLS 
   (LET (NEW.ADDRESS)
   (LIST (PROG1 (CONS    2 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "=" '(ANY ANY))))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED SYMMETRIC REFLEXIVE)))
   (PROG1 (CONS    1 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "FALSE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (PROG1 (CONS    0 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "TRUE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (CONS   35 (DT-CONSTANT.CREATE "c_1" 'ANY))
   (CONS    8 (DT-CONSTANT.CREATE "0" 'ANY))
   (CONS   10 (DT-FUNCTION.CREATE "-" 'ANY '(ANY) 'NIL))
   (CONS    6 (DT-FUNCTION.CREATE "+" 'ANY '(ANY ANY) 'NIL)))))
   (SPLITPART.IDENTIFIER 1)
   (RESULT SUCCESS 12128)
)