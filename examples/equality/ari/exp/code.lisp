;;; -*- Package: MKRP; Base: 10; Mode: LISP; Syntax: Common-lisp -*-

(CONSTRUCTION  "Genera 8.0.1 Logical Pathnames Translation Files NEWEST IP-TCP 422.2 PS 415.1 RPC 415.0 Embedding Support 407.0 UX Support 416.0 CLX 419.0 C Runtime 416.0 Compiler Tools Package 411.0 Compiler Tools Runtime 411.0 C Packages 413.0 Minimal Lexer Runtime 416.0 Lexer Package 415.0 Syntax Editor Runtime 411.0 Experimental X Server 409.0 X Documentation 403.0 KKL 19.2 HADES 14.21 Waltz 6.0 COLUMN 6.0 Experimental MKRP 48.4" "12-JUL,1991 20:05" 
   ("Edit:     Axioms and Theorems edited: 12-JUL,1991 19:24 "
   ))

(AXIOMS.INFIX    ((* AXIOMS *)
   (ALL X + (0 X) = X)
   (ALL |X,Y| + (S (X) Y) = S (+ (X Y)))
   (ALL X * (0 X) = 0)
   (ALL |X,Y| * (S (X) Y) = + (Y * (X Y)))
   (ALL |X,Y| + (X Y) = + (Y X))
   (ALL |X,Y,Z| + (+ (X Y) Z) = + (X + (Y Z)))
   (ALL |X,Y| * (X Y) = * (Y X))
   (ALL |X,Y,Z| * (* (X Y) Z) = * (X * (Y Z)))
   (ALL |X,Y,Z| * (X + (Y Z)) = + (* (X Y) * (X Z)))
   (ALL X EXP (X 0) = S (0))
   (ALL |X,Y| EXP (X S (Y)) = * (X EXP (X Y)))
   (ALL |X,Y,Z| EXP (X + (Y Z)) = * (EXP (X Y) EXP (X Z)))))

(THEOREMS.INFIX ((* THEOREM *)
   (ALL |X,Y| EXP (X * (Y 0)) = EXP (EXP (X Y) 0))
   (ALL |X,Y,Z| EXP (X * (Y Z)) = EXP (EXP (X Y) Z) IMPL EXP (X * (Y S (Z))) = EXP (EXP (X Y) S (Z)))))

(AXIOMS.PREFIX   (COMMENT
   (ALL 3 (+ 2 ((5 4 3) 3) NIL))
   (ALL 7 (ALL 6 (+ 2 ((5 (8 6) 7) (8 (5 6 7))) NIL)))
   (ALL 9 (+ 2 ((10 4 9) 4) NIL))
   (ALL 12 (ALL 11 (+ 2 ((10 (8 11) 12) (5 12 (10 11 12))) NIL)))
   (ALL 14 (ALL 13 (+ 2 ((5 13 14) (5 14 13)) NIL)))
   (ALL 17 (ALL 16 (ALL 15 (+ 2 ((5 (5 15 16) 17) (5 15 (5 16 17))) NIL))))
   (ALL 19 (ALL 18 (+ 2 ((10 18 19) (10 19 18)) NIL)))
   (ALL 22 (ALL 21 (ALL 20 (+ 2 ((10 (10 20 21) 22) (10 20 (10 21 22))) NIL))))
   (ALL 25 (ALL 24 (ALL 23 (+ 2 ((10 23 (5 24 25)) (5 (10 23 24) (10 23 25))) NIL))))
   (ALL 26 (+ 2 ((27 26 4) (8 4)) NIL))
   (ALL 29 (ALL 28 (+ 2 ((27 28 (8 29)) (10 28 (27 28 29))) NIL)))
   (ALL 32 (ALL 31 (ALL 30 (+ 2 ((27 30 (5 31 32)) (10 (27 30 31) (27 30 32))) NIL))))))

(THEOREMS.PREFIX (COMMENT
   (ALL 34 (ALL 33 (+ 2 ((27 33 (10 34 4)) (27 (27 33 34) 4)) NIL)))
   (ALL 37 (ALL 36 (ALL 35 (IMPL (+ 2 ((27 35 (10 36 37)) (27 (27 35 36) 37)) NIL) (+ 2 ((27 35 (10 36 (8 37))) (27 (27 35 36) (8 37))) NIL)))))))

(OPTIONS (TWO_RULES)
    (TWO_RULES.MAXLEVEL . 1)
    (TWO_SUPPRESS.NORULES)
    (RED.I_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.I_CLAUSE.PURITY . P)
    (RED.I_CLAUSE.TAUTOLOGY . T)
    (RED.I_CLAUSE.TAUTOLOGY.RECHECK . PARTIAL)
    (RED.I_CLAUSE.SUBSUMPTION . T)
    (RED.I_CLAUSE.SUBSUMPTION.RECHECK . PARTIAL)
    (RED.I_CLAUSE.REPL.FACTORING . T)
    (RED.I_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.I_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.I_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.I_CLAUSE.REWRITING . DEM)
    (RED.I_LINK.INCOMPATIBILITY . T)
    (RED.I_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.I_LINK.TAUTOLOGY.RECHECK)
    (RED.I_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.I_LINK.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.D_CLAUSE.PURITY . P)
    (RED.D_CLAUSE.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_CLAUSE.TAUTOLOGY.RECHECK)
    (RED.D_CLAUSE.SUBSUMPTION.FORWARD . REMOVE-INHIBIT)
    (RED.D_CLAUSE.SUBSUMPTION.BACKWARD . REMOVE)
    (RED.D_CLAUSE.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.REPL.FACTORING . T)
    (RED.D_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.D_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.D_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.D_CLAUSE.REWRITING . DEM)
    (RED.D_LINK.INCOMPATIBILITY . T)
    (RED.D_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_LINK.TAUTOLOGY.RECHECK)
    (RED.D_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.D_LINK.SUBSUMPTION.RECHECK)
    (FAC_INITIAL)
    (FAC_EACH.STEP)
    (STR_RESOLUTION . SET-OF-SUPPORT)
    (STR_PAR-RES . 10)
    (STR_E-RESOLUTION)
    (STR_LINK.DEPTH)
    (STR_TERM.DEPTH)
    (STR_R.DEMODULATION . T)
    (STR_P.DEMODULATION . T)
    (STR_INDUCTION)
    (STR_FINITE.DOMAIN . T)
    (STR_SORT.LITERALS)
    (TERM_UNITS . T)
    (TERM_ITERATIONS . 0)
    (TERM_SET.OF.SUPPORT)
    (TERM_BREADTH.FIRST)
    (ER_PARAMODULATION . KAPUR-ZHANG)
    (ER_COMPLETION . CONSTANT-CONGRUENCE)
    (ER_CP.REDUCTION . T)
    (ER_ORDERING . LEXICOGRAPHIC-RECURSIVE-PATH)
    (ER_OPERATOR.ORDERING EXP * - + 0 1)
    (ER_KNUTH.BENDIX.WEIGHT (+ 1) (* 1) (- 0) (0 1) (1 1))
    (ER_POLYNOMIAL.VARIABLES X Y Z U V W)
    (ER_POLYNOMIAL.WEIGHT (+ (+ X (* 2 Y))) (* (+ X (* X Y))) (- (+ (* 2 X) -1)) (0 2) (1 2))
    (ER_LINK.DEPTH.WEIGHT . 0)
    (ER_UNIT.FOCUS . 0)
    (ER_UNIT.FOCUS.WEIGHT . 1)
    (ER_EQUATION.FOCUS . 2)
    (ER_NARROW.DEPTH . 0)
    (ER_NARROW.NEXT . DEPTH)
    (ER_NARROW.TEST NORM C DELTA SL N)
    (ER_NARROW.LIMIT.FACTOR . 0)
    (ER_COMPILE)
    (GEN_SPLITTING . 0)
    (GEN_PRESIMPLIFICATION . T)
    (GEN_MIN.EXPRESSION.LENGTH.FOR.FILE)
    (GEN_MIN.EXPRESSION.SIZE.FOR.FILE)
    (GEN_MANUAL.CONTROL . T)
    (GEN_MAXIMUM.STEPS)
    (GEN_GRAPH.SAVING)
    (GEN_SAVE.FILE . SAVEDEFAULT)
    (GEN_LISP.GARBAGE.COLLECTION)
    (GEN_COMMON.LISP)
    (TR_PREPROCESSING)
    (TR_STEP.MODE . LR)
    (TR_DUMP)
    (TR_CLAUSE.MODE . I)
    (TR_LINK.MODE . I)
    (TR_TRACE.FILE)
    (TR_TERMINAL . T)
    (PR_LATEX)
    (PR_INFIX.FORM . T)
    (PR_PREFIX.FORM)
    (PR_OPTIONS)
    (PR_AXIOM.CLAUSES . T)
    (PR_SYMBOLS)
    (PR_DIRECT.PROOF . T)
    (PR_VARIABLE.PRINT.NAMES X Y Z U V W XX YY ZZ UU VV WW XXX YYY ZZZ UUU VVV WWW)
    (PR_STATISTICS)
    (PR_PROTOCOL . T)
    (PR_LEFT.MARGIN . 3)
    (PR_RIGHT.MARGIN . 117)
    (PR_LINELENGTH . 114)
    (PR_LITERALS)
   )

(LINK.COLOURS (R RIW RD S SI SIW SID T TI TIW P PIW PD RIWD))

(AXIOMS (START.TIME 77694315)
   (PARTIAL   (CLAUSE 40 R.= AXIOM ((38 . ANY)) ((+ 2 (38 38)) ))(CLAUSE 42 A1 AXIOM ((3 . ANY)) ((+ 2 ((5 4 3) 3)) )))
   (PARTIAL   (CLAUSE 47 A2 AXIOM ((7 . ANY)(6 . ANY)) ((+ 2 ((5 (8 6) 7) (8 (5 6 7)))) )))
   (PARTIAL   (CLAUSE 51 A3 AXIOM ((9 . ANY)) ((+ 2 ((10 4 9) 4)) )))
   (PARTIAL   (CLAUSE 55 A4 AXIOM ((12 . ANY)(11 . ANY)) ((+ 2 ((10 (8 11) 12) (5 12 (10 11 12)))) )))
   (PARTIAL   (CLAUSE 59 A5 AXIOM ((14 . ANY)(13 . ANY)) ((+ 2 ((5 13 14) (5 14 13))) )))
   (PARTIAL   (CLAUSE 76 A6 AXIOM ((17 . ANY)(16 . ANY)(15 . ANY)) ((+ 2 ((5 (5 15 16) 17) (5 15 (5 16 17)))) )))
   (PARTIAL   (CLAUSE 92 A7 AXIOM ((19 . ANY)(18 . ANY)) ((+ 2 ((10 18 19) (10 19 18))) )))
   (PARTIAL   (CLAUSE 109 A8 AXIOM ((22 . ANY)(21 . ANY)(20 . ANY)) ((+ 2 ((10 (10 20 21) 22) (10 20 (10 21 22)))) )))
   (PARTIAL   (CLAUSE 125 A9 AXIOM ((25 . ANY)(24 . ANY)(23 . ANY)) ((+ 2 ((10 23 (5 24 25)) (5 (10 23 24) (10 23 25)))) )))
   (PARTIAL   (CLAUSE 144 A10 AXIOM ((26 . ANY)) ((+ 2 ((27 26 4) (8 4))) )))
   (PARTIAL   (CLAUSE 148 A11 AXIOM ((29 . ANY)(28 . ANY)) ((+ 2 ((27 28 (8 29)) (10 28 (27 28 29)))) )))
   (PARTIAL   (CLAUSE 153 A12 AXIOM ((32 . ANY)(31 . ANY)(30 . ANY)) ((+ 2 ((27 30 (5 31 32)) (10 (27 30 31) (27 30 32)))) )))
   (END.TIME 77708065)
   (FINAL 40 42 47 51 55 59 76 92 109 125 144 148 153)
   (SYMBOLS 
   (LET (NEW.ADDRESS)
   (LIST (PROG1 (CONS    2 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "=" '(ANY ANY))))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED SYMMETRIC REFLEXIVE)))
   (PROG1 (CONS    1 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "FALSE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (PROG1 (CONS    0 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "TRUE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (CONS    4 (DT-CONSTANT.CREATE "0" 'ANY))
   (CONS   27 (DT-FUNCTION.CREATE "exp" 'ANY '(ANY ANY) 'NIL))
   (CONS   10 (DT-FUNCTION.CREATE "*" 'ANY '(ANY ANY) 'NIL))
   (CONS    8 (DT-FUNCTION.CREATE "s" 'ANY '(ANY) 'NIL))
   (CONS    5 (DT-FUNCTION.CREATE "+" 'ANY '(ANY ANY) 'NIL)))))
   (RESULT))

(THEOREMS (SPLITPART.IDENTIFIER 1)
   (START.TIME 77719702)
   (PARTIAL   (CLAUSE 35 T13 THEOREM () ((- 2 ((27 161 (10 160 4)) (27 (27 161 160) 4))) )))
   (OPERATION (CLAUSE 35 T13 THEOREM () ((- 2 ((27 161 (10 160 4)) (8 4))) ))
   (REWRITE 144 1 35))
   (OPERATION (CLAUSE 35 T13 THEOREM () ((- 2 ((27 161 (10 4 160)) (8 4))) ))
   (REWRITE 92 1 35))
   (OPERATION (CLAUSE 35 T13 THEOREM () ((- 2 ((27 161 4) (8 4))) ))
   (REWRITE 51 1 35))
   (OPERATION (CLAUSE 35 T13 THEOREM () ((- 2 ((8 4) (8 4))) ))
   (REWRITE 144 1 35))
   (OPERATION (CLAUSE 35 T13 THEOREM () ())
   (REPLACEMENT.OPERATION NIL (35 40)
  (((35 . 1) (40 . 1) NIL))
  (NIL)
  NIL))
   (END.TIME 77721395)
   (FINAL 40 42 47 51 55 59 76 92 109 125 144 148 153 35)
   (SYMBOLS 
   (LET (NEW.ADDRESS)
   (LIST (PROG1 (CONS    2 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "=" '(ANY ANY))))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED SYMMETRIC REFLEXIVE)))
   (PROG1 (CONS    1 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "FALSE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (PROG1 (CONS    0 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "TRUE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (CONS  162 (DT-CONSTANT.CREATE "c_5" 'ANY))
   (CONS   34 (DT-CONSTANT.CREATE "c_4" 'ANY))
   (CONS   33 (DT-CONSTANT.CREATE "c_3" 'ANY))
   (CONS  161 (DT-CONSTANT.CREATE "c_2" 'ANY))
   (CONS  160 (DT-CONSTANT.CREATE "c_1" 'ANY))
   (CONS    4 (DT-CONSTANT.CREATE "0" 'ANY))
   (CONS   27 (DT-FUNCTION.CREATE "exp" 'ANY '(ANY ANY) 'NIL))
   (CONS   10 (DT-FUNCTION.CREATE "*" 'ANY '(ANY ANY) 'NIL))
   (CONS    8 (DT-FUNCTION.CREATE "s" 'ANY '(ANY) 'NIL))
   (CONS    5 (DT-FUNCTION.CREATE "+" 'ANY '(ANY ANY) 'NIL)))))
   (RESULT SUCCESS 35))

(THEOREMS (SPLITPART.IDENTIFIER 2)
   (START.TIME 77721900)
   (PARTIAL   (CLAUSE 35 T13 THEOREM () ((+ 2 ((27 162 (10 34 33)) (27 (27 162 34) 33))) )))
   (PARTIAL   (CLAUSE 37 T14 THEOREM () ((- 2 ((27 162 (10 34 (8 33))) (27 (27 162 34) (8 33)))) )))
   (OPERATION (CLAUSE 37 T14 THEOREM () ((- 2 ((27 162 (10 34 (8 33))) (10 (27 162 34) (27 (27 162 34) 33)))) ))
   (REWRITE 148 1 37))
   (OPERATION (CLAUSE 37 T14 THEOREM () ((- 2 ((27 162 (10 34 (8 33))) (10 (27 162 34) (27 162 (10 34 33))))) ))
   (REWRITE 35 1 37))
   (INITIAL   (CLAUSE 40 R.= AXIOM ((38 . ANY)) ((+ 2 (38 38)) ))
(CLAUSE 42 A1 AXIOM ((3 . ANY)) ((+ 2 ((5 4 3) 3)) ))
(CLAUSE 47 A2 AXIOM ((7 . ANY)(6 . ANY)) ((+ 2 ((5 (8 6) 7) (8 (5 6 7)))) ))
(CLAUSE 51 A3 AXIOM ((9 . ANY)) ((+ 2 ((10 4 9) 4)) ))
(CLAUSE 55 A4 AXIOM ((12 . ANY)(11 . ANY)) ((+ 2 ((10 (8 11) 12) (5 12 (10 11 12)))) ))
(CLAUSE 59 A5 AXIOM ((14 . ANY)(13 . ANY)) ((+ 2 ((5 13 14) (5 14 13))) ))
(CLAUSE 76 A6 AXIOM ((17 . ANY)(16 . ANY)(15 . ANY)) ((+ 2 ((5 (5 15 16) 17) (5 15 (5 16 17)))) ))
(CLAUSE 92 A7 AXIOM ((19 . ANY)(18 . ANY)) ((+ 2 ((10 18 19) (10 19 18))) ))
(CLAUSE 109 A8 AXIOM ((22 . ANY)(21 . ANY)(20 . ANY)) ((+ 2 ((10 (10 20 21) 22) (10 20 (10 21 22)))) ))
(CLAUSE 125 A9 AXIOM ((25 . ANY)(24 . ANY)(23 . ANY)) ((+ 2 ((10 23 (5 24 25)) (5 (10 23 24) (10 23 25)))) ))
(CLAUSE 144 A10 AXIOM ((26 . ANY)) ((+ 2 ((27 26 4) (8 4))) ))
(CLAUSE 148 A11 AXIOM ((29 . ANY)(28 . ANY)) ((+ 2 ((27 28 (8 29)) (10 28 (27 28 29)))) ))
(CLAUSE 153 A12 AXIOM ((32 . ANY)(31 . ANY)(30 . ANY)) ((+ 2 ((27 30 (5 31 32)) (10 (27 30 31) (27 30 32)))) ))
(CLAUSE 35 T13 THEOREM () ((+ 2 ((27 162 (10 34 33)) (27 (27 162 34) 33))) ))
(CLAUSE 37 T14 THEOREM () ((- 2 ((27 162 (10 34 (8 33))) (10 (27 162 34) (27 162 (10 34 33))))) ))   )
   (END.TIME 77804775)
   (FINAL 40 42 47 51 55 59 76 92 109 125 144 148 153 35 37)
   (SYMBOLS 
   (LET (NEW.ADDRESS)
   (LIST (PROG1 (CONS    2 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "=" '(ANY ANY))))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED SYMMETRIC REFLEXIVE)))
   (PROG1 (CONS    1 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "FALSE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (PROG1 (CONS    0 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "TRUE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (CONS  162 (DT-CONSTANT.CREATE "c_5" 'ANY))
   (CONS   34 (DT-CONSTANT.CREATE "c_4" 'ANY))
   (CONS   33 (DT-CONSTANT.CREATE "c_3" 'ANY))
   (CONS  161 (DT-CONSTANT.CREATE "c_2" 'ANY))
   (CONS  160 (DT-CONSTANT.CREATE "c_1" 'ANY))
   (CONS    4 (DT-CONSTANT.CREATE "0" 'ANY))
   (CONS   27 (DT-FUNCTION.CREATE "exp" 'ANY '(ANY ANY) 'NIL))
   (CONS   10 (DT-FUNCTION.CREATE "*" 'ANY '(ANY ANY) 'NIL))
   (CONS    8 (DT-FUNCTION.CREATE "s" 'ANY '(ANY) 'NIL))
   (CONS    5 (DT-FUNCTION.CREATE "+" 'ANY '(ANY ANY) 'NIL)))))
   (RESULT))
(indices ((37 15) (35 14) (35 13) (153 12) (148 11) (144 10) (125 9) (109 8) (92 7) (76 6) (59 5) (55 4) (51 3) (47 2) (42 1) (40 NIL)))

(SPLITPARTS "Genera 8.0.1 Logical Pathnames Translation Files NEWEST IP-TCP 422.2 PS 415.1 RPC 415.0 Embedding Support 407.0 UX Support 416.0 CLX 419.0 C Runtime 416.0 Compiler Tools Package 411.0 Compiler Tools Runtime 411.0 C Packages 413.0 Minimal Lexer Runtime 416.0 Lexer Package 415.0 Syntax Editor Runtime 411.0 Experimental X Server 409.0 X Documentation 403.0 KKL 19.2 HADES 14.21 Waltz 6.0 COLUMN 6.0 Experimental MKRP 48.4" "12-JUL,1991 20:07" NIL)

(OPTIONS (TWO_RULES)
    (TWO_RULES.MAXLEVEL . 1)
    (TWO_SUPPRESS.NORULES)
    (RED.I_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.I_CLAUSE.PURITY . P)
    (RED.I_CLAUSE.TAUTOLOGY . T)
    (RED.I_CLAUSE.TAUTOLOGY.RECHECK . PARTIAL)
    (RED.I_CLAUSE.SUBSUMPTION . T)
    (RED.I_CLAUSE.SUBSUMPTION.RECHECK . PARTIAL)
    (RED.I_CLAUSE.REPL.FACTORING . T)
    (RED.I_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.I_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.I_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.I_CLAUSE.REWRITING . DEM)
    (RED.I_LINK.INCOMPATIBILITY . T)
    (RED.I_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.I_LINK.TAUTOLOGY.RECHECK)
    (RED.I_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.I_LINK.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.D_CLAUSE.PURITY . P)
    (RED.D_CLAUSE.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_CLAUSE.TAUTOLOGY.RECHECK)
    (RED.D_CLAUSE.SUBSUMPTION.FORWARD . REMOVE-INHIBIT)
    (RED.D_CLAUSE.SUBSUMPTION.BACKWARD . REMOVE)
    (RED.D_CLAUSE.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.REPL.FACTORING . T)
    (RED.D_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.D_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.D_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.D_CLAUSE.REWRITING . DEM)
    (RED.D_LINK.INCOMPATIBILITY . T)
    (RED.D_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_LINK.TAUTOLOGY.RECHECK)
    (RED.D_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.D_LINK.SUBSUMPTION.RECHECK)
    (FAC_INITIAL)
    (FAC_EACH.STEP)
    (STR_RESOLUTION . SET-OF-SUPPORT)
    (STR_PAR-RES . 10)
    (STR_E-RESOLUTION)
    (STR_LINK.DEPTH)
    (STR_TERM.DEPTH)
    (STR_R.DEMODULATION . T)
    (STR_P.DEMODULATION . T)
    (STR_INDUCTION)
    (STR_FINITE.DOMAIN . T)
    (STR_SORT.LITERALS)
    (TERM_UNITS . T)
    (TERM_ITERATIONS . 0)
    (TERM_SET.OF.SUPPORT)
    (TERM_BREADTH.FIRST)
    (ER_PARAMODULATION . KAPUR-ZHANG)
    (ER_COMPLETION . CONSTANT-CONGRUENCE)
    (ER_CP.REDUCTION . T)
    (ER_ORDERING . LEXICOGRAPHIC-RECURSIVE-PATH)
    (ER_OPERATOR.ORDERING EXP * - + 0 1)
    (ER_KNUTH.BENDIX.WEIGHT (+ 1) (* 1) (- 0) (0 1) (1 1))
    (ER_POLYNOMIAL.VARIABLES X Y Z U V W)
    (ER_POLYNOMIAL.WEIGHT (+ (+ X (* 2 Y))) (* (+ X (* X Y))) (- (+ (* 2 X) -1)) (0 2) (1 2))
    (ER_LINK.DEPTH.WEIGHT . 0)
    (ER_UNIT.FOCUS . 0)
    (ER_UNIT.FOCUS.WEIGHT . 1)
    (ER_EQUATION.FOCUS . 2)
    (ER_NARROW.DEPTH . 0)
    (ER_NARROW.NEXT . DEPTH)
    (ER_NARROW.TEST NORM C DELTA SL N)
    (ER_NARROW.LIMIT.FACTOR . 0)
    (ER_COMPILE)
    (GEN_SPLITTING . 0)
    (GEN_PRESIMPLIFICATION . T)
    (GEN_MIN.EXPRESSION.LENGTH.FOR.FILE)
    (GEN_MIN.EXPRESSION.SIZE.FOR.FILE)
    (GEN_MANUAL.CONTROL . T)
    (GEN_MAXIMUM.STEPS)
    (GEN_GRAPH.SAVING)
    (GEN_SAVE.FILE . SAVEDEFAULT)
    (GEN_LISP.GARBAGE.COLLECTION)
    (GEN_COMMON.LISP)
    (TR_PREPROCESSING)
    (TR_STEP.MODE . LR)
    (TR_DUMP)
    (TR_CLAUSE.MODE . I)
    (TR_LINK.MODE . I)
    (TR_TRACE.FILE)
    (TR_TERMINAL . T)
    (PR_LATEX)
    (PR_INFIX.FORM . T)
    (PR_PREFIX.FORM)
    (PR_OPTIONS)
    (PR_AXIOM.CLAUSES . T)
    (PR_SYMBOLS)
    (PR_DIRECT.PROOF . T)
    (PR_VARIABLE.PRINT.NAMES X Y Z U V W XX YY ZZ UU VV WW XXX YYY ZZZ UUU VVV WWW)
    (PR_STATISTICS)
    (PR_PROTOCOL . T)
    (PR_LEFT.MARGIN . 3)
    (PR_RIGHT.MARGIN . 117)
    (PR_LINELENGTH . 114)
    (PR_LITERALS)
   )

(REFUTATION (START.TIME 77808619)

(OPTIONS (TWO_RULES)
    (TWO_RULES.MAXLEVEL . 1)
    (TWO_SUPPRESS.NORULES)
    (RED.I_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.I_CLAUSE.PURITY . P)
    (RED.I_CLAUSE.TAUTOLOGY . T)
    (RED.I_CLAUSE.TAUTOLOGY.RECHECK . PARTIAL)
    (RED.I_CLAUSE.SUBSUMPTION . T)
    (RED.I_CLAUSE.SUBSUMPTION.RECHECK . PARTIAL)
    (RED.I_CLAUSE.REPL.FACTORING . T)
    (RED.I_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.I_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.I_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.I_CLAUSE.REWRITING . DEM)
    (RED.I_LINK.INCOMPATIBILITY . T)
    (RED.I_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.I_LINK.TAUTOLOGY.RECHECK)
    (RED.I_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.I_LINK.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.D_CLAUSE.PURITY . P)
    (RED.D_CLAUSE.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_CLAUSE.TAUTOLOGY.RECHECK)
    (RED.D_CLAUSE.SUBSUMPTION.FORWARD . REMOVE-INHIBIT)
    (RED.D_CLAUSE.SUBSUMPTION.BACKWARD . REMOVE)
    (RED.D_CLAUSE.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.REPL.FACTORING . T)
    (RED.D_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.D_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.D_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.D_CLAUSE.REWRITING . DEM)
    (RED.D_LINK.INCOMPATIBILITY . T)
    (RED.D_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_LINK.TAUTOLOGY.RECHECK)
    (RED.D_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.D_LINK.SUBSUMPTION.RECHECK)
    (FAC_INITIAL)
    (FAC_EACH.STEP)
    (STR_RESOLUTION . SET-OF-SUPPORT)
    (STR_PAR-RES . 10)
    (STR_E-RESOLUTION)
    (STR_LINK.DEPTH)
    (STR_TERM.DEPTH)
    (STR_R.DEMODULATION . T)
    (STR_P.DEMODULATION . T)
    (STR_INDUCTION)
    (STR_FINITE.DOMAIN . T)
    (STR_SORT.LITERALS)
    (TERM_UNITS . T)
    (TERM_ITERATIONS . 0)
    (TERM_SET.OF.SUPPORT)
    (TERM_BREADTH.FIRST)
    (ER_PARAMODULATION . KAPUR-ZHANG)
    (ER_COMPLETION . CONSTANT-CONGRUENCE)
    (ER_CP.REDUCTION . T)
    (ER_ORDERING . LEXICOGRAPHIC-RECURSIVE-PATH)
    (ER_OPERATOR.ORDERING EXP * - + 0 1)
    (ER_KNUTH.BENDIX.WEIGHT (+ 1) (* 1) (- 0) (0 1) (1 1))
    (ER_POLYNOMIAL.VARIABLES X Y Z U V W)
    (ER_POLYNOMIAL.WEIGHT (+ (+ X (* 2 Y))) (* (+ X (* X Y))) (- (+ (* 2 X) -1)) (0 2) (1 2))
    (ER_LINK.DEPTH.WEIGHT . 0)
    (ER_UNIT.FOCUS . 0)
    (ER_UNIT.FOCUS.WEIGHT . 1)
    (ER_EQUATION.FOCUS . 2)
    (ER_NARROW.DEPTH . 0)
    (ER_NARROW.NEXT . DEPTH)
    (ER_NARROW.TEST NORM C DELTA SL N)
    (ER_NARROW.LIMIT.FACTOR . 0)
    (ER_COMPILE)
    (GEN_SPLITTING . 0)
    (GEN_PRESIMPLIFICATION . T)
    (GEN_MIN.EXPRESSION.LENGTH.FOR.FILE)
    (GEN_MIN.EXPRESSION.SIZE.FOR.FILE)
    (GEN_MANUAL.CONTROL . T)
    (GEN_MAXIMUM.STEPS)
    (GEN_GRAPH.SAVING)
    (GEN_SAVE.FILE . SAVEDEFAULT)
    (GEN_LISP.GARBAGE.COLLECTION)
    (GEN_COMMON.LISP)
    (TR_PREPROCESSING)
    (TR_STEP.MODE . LR)
    (TR_DUMP)
    (TR_CLAUSE.MODE . I)
    (TR_LINK.MODE . I)
    (TR_TRACE.FILE)
    (TR_TERMINAL . T)
    (PR_LATEX)
    (PR_INFIX.FORM . T)
    (PR_PREFIX.FORM)
    (PR_OPTIONS)
    (PR_AXIOM.CLAUSES . T)
    (PR_SYMBOLS)
    (PR_DIRECT.PROOF . T)
    (PR_VARIABLE.PRINT.NAMES X Y Z U V W XX YY ZZ UU VV WW XXX YYY ZZZ UUU VVV WWW)
    (PR_STATISTICS)
    (PR_PROTOCOL . T)
    (PR_LEFT.MARGIN . 3)
    (PR_RIGHT.MARGIN . 117)
    (PR_LINELENGTH . 114)
    (PR_LITERALS)
   )
   (END.TIME 77809804)
   (SYMBOLS 
   (LET (NEW.ADDRESS)
   (LIST )))
   (SPLITPART.IDENTIFIER 1)
   (RESULT SUCCESS 35)
)

(REFUTATION (START.TIME 77826191)

(OPTIONS (TWO_RULES)
    (TWO_RULES.MAXLEVEL . 1)
    (TWO_SUPPRESS.NORULES)
    (RED.I_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.I_CLAUSE.PURITY . P)
    (RED.I_CLAUSE.TAUTOLOGY . T)
    (RED.I_CLAUSE.TAUTOLOGY.RECHECK . PARTIAL)
    (RED.I_CLAUSE.SUBSUMPTION . T)
    (RED.I_CLAUSE.SUBSUMPTION.RECHECK . PARTIAL)
    (RED.I_CLAUSE.REPL.FACTORING . T)
    (RED.I_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.I_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.I_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.I_CLAUSE.REWRITING . DEM)
    (RED.I_LINK.INCOMPATIBILITY . T)
    (RED.I_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.I_LINK.TAUTOLOGY.RECHECK)
    (RED.I_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.I_LINK.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.D_CLAUSE.PURITY . P)
    (RED.D_CLAUSE.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_CLAUSE.TAUTOLOGY.RECHECK)
    (RED.D_CLAUSE.SUBSUMPTION.FORWARD . REMOVE-INHIBIT)
    (RED.D_CLAUSE.SUBSUMPTION.BACKWARD . REMOVE)
    (RED.D_CLAUSE.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.REPL.FACTORING . T)
    (RED.D_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.D_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.D_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.D_CLAUSE.REWRITING . DEM)
    (RED.D_LINK.INCOMPATIBILITY . T)
    (RED.D_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_LINK.TAUTOLOGY.RECHECK)
    (RED.D_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.D_LINK.SUBSUMPTION.RECHECK)
    (FAC_INITIAL)
    (FAC_EACH.STEP)
    (STR_RESOLUTION . SET-OF-SUPPORT)
    (STR_PAR-RES . 10)
    (STR_E-RESOLUTION)
    (STR_LINK.DEPTH)
    (STR_TERM.DEPTH)
    (STR_R.DEMODULATION . T)
    (STR_P.DEMODULATION . T)
    (STR_INDUCTION)
    (STR_FINITE.DOMAIN . T)
    (STR_SORT.LITERALS)
    (TERM_UNITS . T)
    (TERM_ITERATIONS . 0)
    (TERM_SET.OF.SUPPORT)
    (TERM_BREADTH.FIRST)
    (ER_PARAMODULATION . KAPUR-ZHANG)
    (ER_COMPLETION . CONSTANT-CONGRUENCE)
    (ER_CP.REDUCTION . T)
    (ER_ORDERING . LEXICOGRAPHIC-RECURSIVE-PATH)
    (ER_OPERATOR.ORDERING EXP * - + 0 1)
    (ER_KNUTH.BENDIX.WEIGHT (+ 1) (* 1) (- 0) (0 1) (1 1))
    (ER_POLYNOMIAL.VARIABLES X Y Z U V W)
    (ER_POLYNOMIAL.WEIGHT (+ (+ X (* 2 Y))) (* (+ X (* X Y))) (- (+ (* 2 X) -1)) (0 2) (1 2))
    (ER_LINK.DEPTH.WEIGHT . 0)
    (ER_UNIT.FOCUS . 0)
    (ER_UNIT.FOCUS.WEIGHT . 1)
    (ER_EQUATION.FOCUS . 2)
    (ER_NARROW.DEPTH . 0)
    (ER_NARROW.NEXT . DEPTH)
    (ER_NARROW.TEST NORM C DELTA SL N)
    (ER_NARROW.LIMIT.FACTOR . 0)
    (ER_COMPILE)
    (GEN_SPLITTING . 0)
    (GEN_PRESIMPLIFICATION . T)
    (GEN_MIN.EXPRESSION.LENGTH.FOR.FILE)
    (GEN_MIN.EXPRESSION.SIZE.FOR.FILE)
    (GEN_MANUAL.CONTROL . T)
    (GEN_MAXIMUM.STEPS)
    (GEN_GRAPH.SAVING)
    (GEN_SAVE.FILE . SAVEDEFAULT)
    (GEN_LISP.GARBAGE.COLLECTION)
    (GEN_COMMON.LISP)
    (TR_PREPROCESSING)
    (TR_STEP.MODE . LR)
    (TR_DUMP)
    (TR_CLAUSE.MODE . I)
    (TR_LINK.MODE . I)
    (TR_TRACE.FILE)
    (TR_TERMINAL . T)
    (PR_LATEX)
    (PR_INFIX.FORM . T)
    (PR_PREFIX.FORM)
    (PR_OPTIONS)
    (PR_AXIOM.CLAUSES . T)
    (PR_SYMBOLS)
    (PR_DIRECT.PROOF . T)
    (PR_VARIABLE.PRINT.NAMES X Y Z U V W XX YY ZZ UU VV WW XXX YYY ZZZ UUU VVV WWW)
    (PR_STATISTICS)
    (PR_PROTOCOL . T)
    (PR_LEFT.MARGIN . 3)
    (PR_RIGHT.MARGIN . 117)
    (PR_LINELENGTH . 114)
    (PR_LITERALS)
   )
   (INITIAL   (CLAUSE 40 R.= AXIOM ((38 . ANY)) ((+ 2 (38 38)) ))
(CLAUSE 42 A1 AXIOM ((3 . ANY)) ((+ 2 ((5 4 3) 3)) ))
(CLAUSE 47 A2 AXIOM ((7 . ANY)(6 . ANY)) ((+ 2 ((5 (8 6) 7) (8 (5 6 7)))) ))
(CLAUSE 51 A3 AXIOM ((9 . ANY)) ((+ 2 ((10 4 9) 4)) ))
(CLAUSE 55 A4 AXIOM ((12 . ANY)(11 . ANY)) ((+ 2 ((10 (8 11) 12) (5 12 (10 11 12)))) ))
(CLAUSE 59 A5 AXIOM ((14 . ANY)(13 . ANY)) ((+ 2 ((5 13 14) (5 14 13))) ))
(CLAUSE 76 A6 AXIOM ((17 . ANY)(16 . ANY)(15 . ANY)) ((+ 2 ((5 (5 15 16) 17) (5 15 (5 16 17)))) ))
(CLAUSE 92 A7 AXIOM ((19 . ANY)(18 . ANY)) ((+ 2 ((10 18 19) (10 19 18))) ))
(CLAUSE 109 A8 AXIOM ((22 . ANY)(21 . ANY)(20 . ANY)) ((+ 2 ((10 (10 20 21) 22) (10 20 (10 21 22)))) ))
(CLAUSE 125 A9 AXIOM ((25 . ANY)(24 . ANY)(23 . ANY)) ((+ 2 ((10 23 (5 24 25)) (5 (10 23 24) (10 23 25)))) ))
(CLAUSE 144 A10 AXIOM ((26 . ANY)) ((+ 2 ((27 26 4) (8 4))) ))
(CLAUSE 148 A11 AXIOM ((29 . ANY)(28 . ANY)) ((+ 2 ((27 28 (8 29)) (10 28 (27 28 29)))) ))
(CLAUSE 153 A12 AXIOM ((32 . ANY)(31 . ANY)(30 . ANY)) ((+ 2 ((27 30 (5 31 32)) (10 (27 30 31) (27 30 32)))) ))
(CLAUSE 35 T13 THEOREM () ((+ 2 ((27 162 (10 34 33)) (27 (27 162 34) 33))) ))
(CLAUSE 37 T14 THEOREM () ((- 2 ((27 162 (10 34 (8 33))) (10 (27 162 34) (27 162 (10 34 33))))) ))   )
   (OPERATION (CLAUSE 56 P1 (42 59) ((48 . ANY)) ((+ 2 ((5 48 4) 48)) ))
   (PARAMODULATION 59 1 (1) 42 1 (1) NIL (13 4 14 3) 56))
   (OPERATION (CLAUSE 104 P2 (51 92) ((119 . ANY)) ((+ 2 ((10 119 4) 4)) ))
   (PARAMODULATION 92 1 (1) 51 1 (1) NIL (18 4 19 9) 104))
   (OPERATION (CLAUSE 71 P3 (47 59) ((66 . ANY)(62 . ANY)) ((+ 2 ((5 62 (8 66)) (8 (5 66 62)))) ))
   (PARAMODULATION 59 1 (1) 47 1 (1) NIL (13 (8 6) 14 7) 71))
   (OPERATION (CLAUSE 520 P4 (71 42) ((523 . ANY)) ((+ 2 ((5 523 (8 4)) (8 523))) ))
   (PARAMODULATION 42 1 (1) 71 1 (2 1) NIL (66 4 3 62) 520))
   (OPERATION (CLAUSE 634 P5 (47 59) ((638 . ANY)(639 . ANY)) ((+ 2 ((5 639 (8 638)) (8 (5 638 639)))) ))
   (PARAMODULATION 59 1 (2) 47 1 (1) NIL (14 (8 6) 13 7) 634))
   (OPERATION (CLAUSE 718 P6 (71 59) ((722 . ANY)(721 . ANY)) ((+ 2 ((5 721 (8 722)) (8 (5 721 722)))) ))
   (PARAMODULATION 59 1 (1) 71 1 (2 1) NIL (13 66 14 62) 718))
   (OPERATION (CLAUSE 71 P3 (47 59) ((66 . ANY)(62 . ANY)) ((+ 2 ((8 (5 62 66)) (8 (5 66 62)))) ))
   (REWRITE 718 1 71))
   (OPERATION (CLAUSE 520 P4 (71 42) ((523 . ANY)) ((+ 2 ((8 (5 523 4)) (8 523))) ))
   (REWRITE 718 1 520))
   (OPERATION (CLAUSE 520 P4 (71 42) ((523 . ANY)) ((+ 2 ((8 523) (8 523))) ))
   (REWRITE 56 1 520))
   (OPERATION (CLAUSE 813 P7 (55 92) ((796 . ANY)(803 . ANY)) ((+ 2 ((10 803 (8 796)) (5 803 (10 796 803)))) ))
   (PARAMODULATION 92 1 (1) 55 1 (1) NIL (18 (8 11) 19 12) 813))
   (OPERATION (CLAUSE 704 P8 (813 51) ((528 . ANY)) ((+ 2 ((10 528 (8 4)) (5 528 4))) ))
   (PARAMODULATION 51 1 (1) 813 1 (2 2) NIL (796 4 9 803) 704))
   (OPERATION (CLAUSE 704 P8 (813 51) ((528 . ANY)) ((+ 2 ((10 528 (8 4)) 528)) ))
   (REWRITE 56 1 704))
   (OPERATION (CLAUSE 794 P9 (55 92) ((797 . ANY)(799 . ANY)) ((+ 2 ((10 799 (8 797)) (5 799 (10 797 799)))) ))
   (PARAMODULATION 92 1 (2) 55 1 (1) NIL (19 (8 11) 18 12) 794))
   (OPERATION (CLAUSE 1218 P10 (813 92) ((1222 . ANY)(1221 . ANY)) ((+ 2 ((10 1221 (8 1222)) (5 1221 (10 1221 1222)))) ))
   (PARAMODULATION 92 1 (1) 813 1 (2 2) NIL (18 796 19 803) 1218))
   (OPERATION (CLAUSE 37 T14 THEOREM () ((- 2 ((27 162 (5 34 (10 34 33))) (10 (27 162 34) (27 162 (10 34 33))))) ))
   (REWRITE 1218 1 37))
   (OPERATION (CLAUSE 37 T14 THEOREM () ((- 2 ((10 (27 162 34) (27 162 (10 34 33))) (10 (27 162 34) (27 162 (10 34 33))))) ))
   (REWRITE 153 1 37))
   (OPERATION (CLAUSE 813 P7 (55 92) ((796 . ANY)(803 . ANY)) ((+ 2 ((5 803 (10 803 796)) (5 803 (10 796 803)))) ))
   (REWRITE 1218 1 813))
   (OPERATION (CLAUSE 704 P8 (813 51) ((528 . ANY)) ((+ 2 ((5 528 (10 528 4)) 528)) ))
   (REWRITE 1218 1 704))
   (OPERATION (CLAUSE 704 P8 (813 51) ((528 . ANY)) ((+ 2 ((5 528 4) 528)) ))
   (REWRITE 104 1 704))
   (OPERATION (CLAUSE 704 P8 (813 51) ((528 . ANY)) ((+ 2 (528 528)) ))
   (REWRITE 56 1 704))
   (OPERATION (CLAUSE 37 T14 THEOREM () ())
   (REPLACEMENT.OPERATION NIL (37 40)
  (((37 . 1) (40 . 1) NIL))
  (NIL)
  NIL))
   (END.TIME 78125330)
   (SYMBOLS 
   (LET (NEW.ADDRESS)
   (LIST (PROG1 (CONS    2 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "=" '(ANY ANY))))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED SYMMETRIC REFLEXIVE)))
   (PROG1 (CONS    1 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "FALSE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (PROG1 (CONS    0 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "TRUE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (CONS  162 (DT-CONSTANT.CREATE "c_5" 'ANY))
   (CONS   34 (DT-CONSTANT.CREATE "c_4" 'ANY))
   (CONS   33 (DT-CONSTANT.CREATE "c_3" 'ANY))
   (CONS  161 (DT-CONSTANT.CREATE "c_2" 'ANY))
   (CONS  160 (DT-CONSTANT.CREATE "c_1" 'ANY))
   (CONS    4 (DT-CONSTANT.CREATE "0" 'ANY))
   (CONS   27 (DT-FUNCTION.CREATE "exp" 'ANY '(ANY ANY) 'NIL))
   (CONS   10 (DT-FUNCTION.CREATE "*" 'ANY '(ANY ANY) 'NIL))
   (CONS    8 (DT-FUNCTION.CREATE "s" 'ANY '(ANY) 'NIL))
   (CONS    5 (DT-FUNCTION.CREATE "+" 'ANY '(ANY ANY) 'NIL)))))
   (SPLITPART.IDENTIFIER 2)
   (RESULT SUCCESS 37)
)