;;; -*- Package: MKRP; Base: 10; Mode: LISP; Syntax: Common-lisp -*-

(CONSTRUCTION  "Genera 8.0.1 Logical Pathnames Translation Files NEWEST IP-TCP 422.2 PS 415.1 RPC 415.0 Embedding Support 407.0 UX Support 416.0 CLX 419.0 C Runtime 416.0 Compiler Tools Package 411.0 Compiler Tools Runtime 411.0 C Packages 413.0 Minimal Lexer Runtime 416.0 Lexer Package 415.0 Syntax Editor Runtime 411.0 Experimental X Server 409.0 X Documentation 403.0 KKL 19.2 HADES 14.21 Waltz 6.0 COLUMN 6.0 Experimental MKRP 48.5" "15-JUL,1991 17:26" 
   ("Edit:     Axioms and Theorems edited: 16-MAY,1990 20:18 "
   ))

(AXIOMS.INFIX    ((* AXIOMS *)
   (* CONSTRUCTORS PRED AND SUCC *)
   (ALL X S (P (X)) = X)
   (ALL X P (S (X)) = X)
   (* DEF + *)
   (ALL X + (0 X) = X)
   (ALL |X,Y| + (S (X) Y) = S (+ (X Y)))
   (ALL |X,Y| + (P (X) Y) = P (+ (X Y)))
   (* PROPS + *)
   (ALL X + (X 0) = X)
   (ALL |X,Y| + (Y S (X)) = S (+ (Y X)))
   (ALL |X,Y| + (Y P (X)) = P (+ (Y X)))
   (ALL |X,Y,Z| + (+ (X Y) Z) = + (X + (Y Z)))
   (* DEF - *)
   (- (0) = 0)
   (ALL X - (S (X)) = P (- (X)))
   (ALL X - (P (X)) = S (- (X)))
   (* PROPS - *)
   (ALL X - (- (X)) = X)
   (ALL X + (- (X) X) = 0)
   (ALL X + (X - (X)) = 0)
   (ALL |X,Y| + (X + (- (X) Y)) = Y)
   (ALL |X,Y| + (- (X) + (X Y)) = Y)
   (ALL |X,Y| - (+ (X Y)) = + (- (Y) - (X)))
   (* DEF * *)
   (ALL X * (0 X) = 0)
   (ALL |X,Y| * (S (X) Y) = + (Y * (X Y)))
   (ALL |X,Y| * (P (X) Y) = + (- (Y) * (X Y)))
   (* PROPS * *)
   (ALL X * (X 0) = 0)
   (ALL |X,Y| * (Y S (X)) = + (* (Y X) Y))
   (ALL |X,Y| * (Y P (X)) = + (* (Y X) - (Y)))))

(THEOREMS.INFIX ((* THEOREM *)
   (EX X + (X + (X P (0))) = S (0))))

(AXIOMS.PREFIX   (COMMENT
   COMMENT
   (ALL 3 (+ 2 ((5 (4 3)) 3) NIL))
   (ALL 6 (+ 2 ((4 (5 6)) 6) NIL))
   COMMENT
   (ALL 7 (+ 2 ((9 8 7) 7) NIL))
   (ALL 11 (ALL 10 (+ 2 ((9 (5 10) 11) (5 (9 10 11))) NIL)))
   (ALL 13 (ALL 12 (+ 2 ((9 (4 12) 13) (4 (9 12 13))) NIL)))
   COMMENT
   (ALL 14 (+ 2 ((9 14 8) 14) NIL))
   (ALL 16 (ALL 15 (+ 2 ((9 16 (5 15)) (5 (9 16 15))) NIL)))
   (ALL 18 (ALL 17 (+ 2 ((9 18 (4 17)) (4 (9 18 17))) NIL)))
   (ALL 21 (ALL 20 (ALL 19 (+ 2 ((9 (9 19 20) 21) (9 19 (9 20 21))) NIL))))
   COMMENT
   (+ 2 ((22 8) 8) NIL)
   (ALL 23 (+ 2 ((22 (5 23)) (4 (22 23))) NIL))
   (ALL 24 (+ 2 ((22 (4 24)) (5 (22 24))) NIL))
   COMMENT
   (ALL 25 (+ 2 ((22 (22 25)) 25) NIL))
   (ALL 26 (+ 2 ((9 (22 26) 26) 8) NIL))
   (ALL 27 (+ 2 ((9 27 (22 27)) 8) NIL))
   (ALL 29 (ALL 28 (+ 2 ((9 28 (9 (22 28) 29)) 29) NIL)))
   (ALL 31 (ALL 30 (+ 2 ((9 (22 30) (9 30 31)) 31) NIL)))
   (ALL 33 (ALL 32 (+ 2 ((22 (9 32 33)) (9 (22 33) (22 32))) NIL)))
   COMMENT
   (ALL 34 (+ 2 ((35 8 34) 8) NIL))
   (ALL 37 (ALL 36 (+ 2 ((35 (5 36) 37) (9 37 (35 36 37))) NIL)))
   (ALL 39 (ALL 38 (+ 2 ((35 (4 38) 39) (9 (22 39) (35 38 39))) NIL)))
   COMMENT
   (ALL 40 (+ 2 ((35 40 8) 8) NIL))
   (ALL 42 (ALL 41 (+ 2 ((35 42 (5 41)) (9 (35 42 41) 42)) NIL)))
   (ALL 44 (ALL 43 (+ 2 ((35 44 (4 43)) (9 (35 44 43) (22 44))) NIL)))))

(THEOREMS.PREFIX (COMMENT
   (EX 45 (+ 2 ((9 45 (9 45 (4 8))) (5 8)) NIL))))

(OPTIONS (TWO_RULES)
    (TWO_RULES.MAXLEVEL . 1)
    (TWO_SUPPRESS.NORULES)
    (RED.I_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.I_CLAUSE.PURITY . P)
    (RED.I_CLAUSE.TAUTOLOGY . T)
    (RED.I_CLAUSE.TAUTOLOGY.RECHECK . PARTIAL)
    (RED.I_CLAUSE.SUBSUMPTION . T)
    (RED.I_CLAUSE.SUBSUMPTION.RECHECK . PARTIAL)
    (RED.I_CLAUSE.REPL.FACTORING . T)
    (RED.I_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.I_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.I_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.I_CLAUSE.REWRITING . DEM)
    (RED.I_LINK.INCOMPATIBILITY . T)
    (RED.I_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.I_LINK.TAUTOLOGY.RECHECK)
    (RED.I_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.I_LINK.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.D_CLAUSE.PURITY . P)
    (RED.D_CLAUSE.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_CLAUSE.TAUTOLOGY.RECHECK)
    (RED.D_CLAUSE.SUBSUMPTION.FORWARD . REMOVE-INHIBIT)
    (RED.D_CLAUSE.SUBSUMPTION.BACKWARD . REMOVE)
    (RED.D_CLAUSE.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.REPL.FACTORING . T)
    (RED.D_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.D_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.D_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.D_CLAUSE.REWRITING . DEM)
    (RED.D_LINK.INCOMPATIBILITY . T)
    (RED.D_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_LINK.TAUTOLOGY.RECHECK)
    (RED.D_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.D_LINK.SUBSUMPTION.RECHECK)
    (FAC_INITIAL)
    (FAC_EACH.STEP)
    (STR_RESOLUTION . SET-OF-SUPPORT)
    (STR_PAR-RES . 10)
    (STR_E-RESOLUTION)
    (STR_LINK.DEPTH)
    (STR_TERM.DEPTH)
    (STR_R.DEMODULATION . T)
    (STR_P.DEMODULATION . T)
    (STR_INDUCTION)
    (STR_FINITE.DOMAIN . T)
    (STR_SORT.LITERALS)
    (TERM_UNITS . T)
    (TERM_ITERATIONS . 0)
    (TERM_SET.OF.SUPPORT)
    (TERM_BREADTH.FIRST)
    (ER_PARAMODULATION . KAPUR-ZHANG)
    (ER_COMPLETION . FAILING)
    (ER_CP.REDUCTION . T)
    (ER_ORDERING . LEXICOGRAPHIC-RECURSIVE-PATH)
    (ER_OPERATOR.ORDERING EXP * - + 0 1)
    (ER_KNUTH.BENDIX.WEIGHT (+ 1) (* 1) (- 0) (0 1) (1 1))
    (ER_POLYNOMIAL.VARIABLES X Y Z U V W)
    (ER_POLYNOMIAL.WEIGHT (+ (+ X (* 2 Y))) (* (+ X (* X Y))) (- (+ (* 2 X) -1)) (0 2) (1 2))
    (ER_LINK.DEPTH.WEIGHT . 0)
    (ER_UNIT.FOCUS . 0)
    (ER_UNIT.FOCUS.WEIGHT . 1)
    (ER_EQUATION.FOCUS . 2)
    (ER_NARROW.DEPTH . 4)
    (ER_NARROW.NEXT . DEPTH)
    (ER_NARROW.TEST NORM C DELTA SL N)
    (ER_NARROW.LIMIT.FACTOR . 0)
    (ER_COMPILE)
    (GEN_SPLITTING . 0)
    (GEN_PRESIMPLIFICATION . T)
    (GEN_MIN.EXPRESSION.LENGTH.FOR.FILE)
    (GEN_MIN.EXPRESSION.SIZE.FOR.FILE)
    (GEN_MANUAL.CONTROL)
    (GEN_MAXIMUM.STEPS)
    (GEN_GRAPH.SAVING)
    (GEN_SAVE.FILE . SAVEDEFAULT)
    (GEN_LISP.GARBAGE.COLLECTION)
    (GEN_COMMON.LISP)
    (TR_PREPROCESSING)
    (TR_STEP.MODE . LR)
    (TR_DUMP)
    (TR_CLAUSE.MODE . I)
    (TR_LINK.MODE . I)
    (TR_TRACE.FILE)
    (TR_TERMINAL . T)
    (PR_LATEX)
    (PR_INFIX.FORM . T)
    (PR_PREFIX.FORM)
    (PR_OPTIONS)
    (PR_AXIOM.CLAUSES . T)
    (PR_SYMBOLS)
    (PR_DIRECT.PROOF . T)
    (PR_VARIABLE.PRINT.NAMES X Y Z U V W XX YY ZZ UU VV WW XXX YYY ZZZ UUU VVV WWW)
    (PR_STATISTICS)
    (PR_PROTOCOL . T)
    (PR_LEFT.MARGIN . 3)
    (PR_RIGHT.MARGIN . 117)
    (PR_LINELENGTH . 114)
    (PR_LITERALS)
   )

(LINK.COLOURS (R RIW RD S SI SIW SID T TI TIW P PIW PD RIWD))

(AXIOMS (START.TIME 314961792)
   (PARTIAL   (CLAUSE 48 R.= AXIOM ((46 . ANY)) ((+ 2 (46 46)) ))(CLAUSE 50 A1 AXIOM ((3 . ANY)) ((+ 2 ((5 (4 3)) 3)) )))
   (PARTIAL   (CLAUSE 54 A2 AXIOM ((6 . ANY)) ((+ 2 ((4 (5 6)) 6)) )))
   (PARTIAL   (CLAUSE 59 A3 AXIOM ((7 . ANY)) ((+ 2 ((9 8 7) 7)) )))
   (PARTIAL   (CLAUSE 63 A4 AXIOM ((11 . ANY)(10 . ANY)) ((+ 2 ((9 (5 10) 11) (5 (9 10 11)))) )))
   (PARTIAL   (CLAUSE 69 A5 AXIOM ((13 . ANY)(12 . ANY)) ((+ 2 ((9 (4 12) 13) (4 (9 12 13)))) )))
   (PARTIAL   (CLAUSE 73 A6 AXIOM ((14 . ANY)) ((+ 2 ((9 14 8) 14)) )))
   (PARTIAL   (CLAUSE 84 A7 AXIOM ((15 . ANY)(16 . ANY)) ((+ 2 ((9 16 (5 15)) (5 (9 16 15)))) )))
   (PARTIAL   (CLAUSE 95 A8 AXIOM ((17 . ANY)(18 . ANY)) ((+ 2 ((9 18 (4 17)) (4 (9 18 17)))) )))
   (PARTIAL   (CLAUSE 107 A9 AXIOM ((21 . ANY)(20 . ANY)(19 . ANY)) ((+ 2 ((9 (9 19 20) 21) (9 19 (9 20 21)))) )))
   (PARTIAL   (CLAUSE 123 A10 AXIOM () ((+ 2 ((22 8) 8)) )))
   (PARTIAL   (CLAUSE 126 A11 AXIOM ((23 . ANY)) ((+ 2 ((22 (5 23)) (4 (22 23)))) )))
   (PARTIAL   (CLAUSE 130 A12 AXIOM ((24 . ANY)) ((+ 2 ((22 (4 24)) (5 (22 24)))) )))
   (PARTIAL   (CLAUSE 134 A13 AXIOM ((25 . ANY)) ((+ 2 ((22 (22 25)) 25)) )))
   (PARTIAL   (CLAUSE 141 A14 AXIOM ((26 . ANY)) ((+ 2 ((9 (22 26) 26) 8)) )))
   (PARTIAL   (CLAUSE 155 A15 AXIOM ((27 . ANY)) ((+ 2 ((9 27 (22 27)) 8)) )))
   (PARTIAL   (CLAUSE 172 A16 AXIOM ((29 . ANY)(28 . ANY)) ((+ 2 ((9 28 (9 (22 28) 29)) 29)) )))
   (PARTIAL   (CLAUSE 195 A17 AXIOM ((31 . ANY)(30 . ANY)) ((+ 2 ((9 (22 30) (9 30 31)) 31)) )))
   (PARTIAL   (CLAUSE 216 A18 AXIOM ((33 . ANY)(32 . ANY)) ((+ 2 ((22 (9 32 33)) (9 (22 33) (22 32)))) )))
   (PARTIAL   (CLAUSE 235 A19 AXIOM ((34 . ANY)) ((+ 2 ((35 8 34) 8)) )))
   (PARTIAL   (CLAUSE 239 A20 AXIOM ((37 . ANY)(36 . ANY)) ((+ 2 ((35 (5 36) 37) (9 37 (35 36 37)))) )))
   (PARTIAL   (CLAUSE 244 A21 AXIOM ((39 . ANY)(38 . ANY)) ((+ 2 ((35 (4 38) 39) (9 (22 39) (35 38 39)))) )))
   (PARTIAL   (CLAUSE 248 A22 AXIOM ((40 . ANY)) ((+ 2 ((35 40 8) 8)) )))
   (PARTIAL   (CLAUSE 259 A23 AXIOM ((41 . ANY)(42 . ANY)) ((+ 2 ((35 42 (5 41)) (9 (35 42 41) 42))) )))
   (PARTIAL   (CLAUSE 270 A24 AXIOM ((43 . ANY)(44 . ANY)) ((+ 2 ((35 44 (4 43)) (9 (35 44 43) (22 44)))) )))
   (END.TIME 315080444)
   (FINAL 48 50 54 59 63 69 73 84 95 107 123 126 130 134 141 155 172 195 216 235 239 244 248 259 270)
   (SYMBOLS 
   (LET (NEW.ADDRESS)
   (LIST (PROG1 (CONS    2 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "=" '(ANY ANY))))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED SYMMETRIC REFLEXIVE)))
   (PROG1 (CONS    1 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "FALSE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (PROG1 (CONS    0 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "TRUE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (CONS    8 (DT-CONSTANT.CREATE "0" 'ANY))
   (CONS   35 (DT-FUNCTION.CREATE "*" 'ANY '(ANY ANY) 'NIL))
   (CONS   22 (DT-FUNCTION.CREATE "-" 'ANY '(ANY) 'NIL))
   (CONS    9 (DT-FUNCTION.CREATE "+" 'ANY '(ANY ANY) 'NIL))
   (CONS    5 (DT-FUNCTION.CREATE "s" 'ANY '(ANY) 'NIL))
   (CONS    4 (DT-FUNCTION.CREATE "p" 'ANY '(ANY) 'NIL)))))
   (RESULT))

(THEOREMS (SPLITPART.IDENTIFIER 1)
   (START.TIME 315080609)
   (PARTIAL   (CLAUSE 280 T25 THEOREM ((45 . ANY)) ((- 2 ((9 45 (9 45 (4 8))) (5 8))) )))
   (OPERATION (CLAUSE 280 T25 THEOREM ((45 . ANY)) ((- 2 ((9 45 (4 (9 45 8))) (5 8))) ))
   (REWRITE 95 1 280))
   (OPERATION (CLAUSE 280 T25 THEOREM ((45 . ANY)) ((- 2 ((4 (9 45 (9 45 8))) (5 8))) ))
   (REWRITE 95 1 280))
   (OPERATION (CLAUSE 280 T25 THEOREM ((45 . ANY)) ((- 2 ((4 (9 45 45)) (5 8))) ))
   (REWRITE 73 1 280))
   (INITIAL   (CLAUSE 48 R.= AXIOM ((46 . ANY)) ((+ 2 (46 46)) ))
(CLAUSE 50 A1 AXIOM ((3 . ANY)) ((+ 2 ((5 (4 3)) 3)) ))
(CLAUSE 54 A2 AXIOM ((6 . ANY)) ((+ 2 ((4 (5 6)) 6)) ))
(CLAUSE 59 A3 AXIOM ((7 . ANY)) ((+ 2 ((9 8 7) 7)) ))
(CLAUSE 63 A4 AXIOM ((11 . ANY)(10 . ANY)) ((+ 2 ((9 (5 10) 11) (5 (9 10 11)))) ))
(CLAUSE 69 A5 AXIOM ((13 . ANY)(12 . ANY)) ((+ 2 ((9 (4 12) 13) (4 (9 12 13)))) ))
(CLAUSE 73 A6 AXIOM ((14 . ANY)) ((+ 2 ((9 14 8) 14)) ))
(CLAUSE 84 A7 AXIOM ((15 . ANY)(16 . ANY)) ((+ 2 ((9 16 (5 15)) (5 (9 16 15)))) ))
(CLAUSE 95 A8 AXIOM ((17 . ANY)(18 . ANY)) ((+ 2 ((9 18 (4 17)) (4 (9 18 17)))) ))
(CLAUSE 107 A9 AXIOM ((21 . ANY)(20 . ANY)(19 . ANY)) ((+ 2 ((9 (9 19 20) 21) (9 19 (9 20 21)))) ))
(CLAUSE 123 A10 AXIOM () ((+ 2 ((22 8) 8)) ))
(CLAUSE 126 A11 AXIOM ((23 . ANY)) ((+ 2 ((22 (5 23)) (4 (22 23)))) ))
(CLAUSE 130 A12 AXIOM ((24 . ANY)) ((+ 2 ((22 (4 24)) (5 (22 24)))) ))
(CLAUSE 134 A13 AXIOM ((25 . ANY)) ((+ 2 ((22 (22 25)) 25)) ))
(CLAUSE 141 A14 AXIOM ((26 . ANY)) ((+ 2 ((9 (22 26) 26) 8)) ))
(CLAUSE 155 A15 AXIOM ((27 . ANY)) ((+ 2 ((9 27 (22 27)) 8)) ))
(CLAUSE 172 A16 AXIOM ((29 . ANY)(28 . ANY)) ((+ 2 ((9 28 (9 (22 28) 29)) 29)) ))
(CLAUSE 195 A17 AXIOM ((31 . ANY)(30 . ANY)) ((+ 2 ((9 (22 30) (9 30 31)) 31)) ))
(CLAUSE 216 A18 AXIOM ((33 . ANY)(32 . ANY)) ((+ 2 ((22 (9 32 33)) (9 (22 33) (22 32)))) ))
(CLAUSE 235 A19 AXIOM ((34 . ANY)) ((+ 2 ((35 8 34) 8)) ))
(CLAUSE 239 A20 AXIOM ((37 . ANY)(36 . ANY)) ((+ 2 ((35 (5 36) 37) (9 37 (35 36 37)))) ))
(CLAUSE 244 A21 AXIOM ((39 . ANY)(38 . ANY)) ((+ 2 ((35 (4 38) 39) (9 (22 39) (35 38 39)))) ))
(CLAUSE 248 A22 AXIOM ((40 . ANY)) ((+ 2 ((35 40 8) 8)) ))
(CLAUSE 259 A23 AXIOM ((41 . ANY)(42 . ANY)) ((+ 2 ((35 42 (5 41)) (9 (35 42 41) 42))) ))
(CLAUSE 270 A24 AXIOM ((43 . ANY)(44 . ANY)) ((+ 2 ((35 44 (4 43)) (9 (35 44 43) (22 44)))) ))
(CLAUSE 280 T25 THEOREM ((45 . ANY)) ((- 2 ((4 (9 45 45)) (5 8))) ))   )
   (END.TIME 315224272)
   (FINAL 48 50 54 59 63 69 73 84 95 107 123 126 130 134 141 155 172 195 216 235 239 244 248 259 270 280)
   (SYMBOLS 
   (LET (NEW.ADDRESS)
   (LIST (PROG1 (CONS    2 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "=" '(ANY ANY))))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED SYMMETRIC REFLEXIVE)))
   (PROG1 (CONS    1 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "FALSE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (PROG1 (CONS    0 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "TRUE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (CONS    8 (DT-CONSTANT.CREATE "0" 'ANY))
   (CONS   35 (DT-FUNCTION.CREATE "*" 'ANY '(ANY ANY) 'NIL))
   (CONS   22 (DT-FUNCTION.CREATE "-" 'ANY '(ANY) 'NIL))
   (CONS    9 (DT-FUNCTION.CREATE "+" 'ANY '(ANY ANY) 'NIL))
   (CONS    5 (DT-FUNCTION.CREATE "s" 'ANY '(ANY) 'NIL))
   (CONS    4 (DT-FUNCTION.CREATE "p" 'ANY '(ANY) 'NIL)))))
   (RESULT))
(indices ((280 25) (270 24) (259 23) (248 22) (244 21) (239 20) (235 19) (216 18) (195 17) (172 16) (155 15) (141 14) (134 13) (130 12) (126 11) (123 10) (107 9) (95 8) (84 7) (73 6) (69 5) (63 4) (59 3) (54 2) (50 1) (48 NIL)))

(SPLITPARTS "Genera 8.0.1 Logical Pathnames Translation Files NEWEST IP-TCP 422.2 PS 415.1 RPC 415.0 Embedding Support 407.0 UX Support 416.0 CLX 419.0 C Runtime 416.0 Compiler Tools Package 411.0 Compiler Tools Runtime 411.0 C Packages 413.0 Minimal Lexer Runtime 416.0 Lexer Package 415.0 Syntax Editor Runtime 411.0 Experimental X Server 409.0 X Documentation 403.0 KKL 19.2 HADES 14.21 Waltz 6.0 COLUMN 6.0 Experimental MKRP 48.5" "15-JUL,1991 17:32" NIL)

(OPTIONS (TWO_RULES)
    (TWO_RULES.MAXLEVEL . 1)
    (TWO_SUPPRESS.NORULES)
    (RED.I_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.I_CLAUSE.PURITY . P)
    (RED.I_CLAUSE.TAUTOLOGY . T)
    (RED.I_CLAUSE.TAUTOLOGY.RECHECK . PARTIAL)
    (RED.I_CLAUSE.SUBSUMPTION . T)
    (RED.I_CLAUSE.SUBSUMPTION.RECHECK . PARTIAL)
    (RED.I_CLAUSE.REPL.FACTORING . T)
    (RED.I_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.I_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.I_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.I_CLAUSE.REWRITING . DEM)
    (RED.I_LINK.INCOMPATIBILITY . T)
    (RED.I_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.I_LINK.TAUTOLOGY.RECHECK)
    (RED.I_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.I_LINK.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.D_CLAUSE.PURITY . P)
    (RED.D_CLAUSE.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_CLAUSE.TAUTOLOGY.RECHECK)
    (RED.D_CLAUSE.SUBSUMPTION.FORWARD . REMOVE-INHIBIT)
    (RED.D_CLAUSE.SUBSUMPTION.BACKWARD . REMOVE)
    (RED.D_CLAUSE.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.REPL.FACTORING . T)
    (RED.D_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.D_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.D_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.D_CLAUSE.REWRITING . DEM)
    (RED.D_LINK.INCOMPATIBILITY . T)
    (RED.D_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_LINK.TAUTOLOGY.RECHECK)
    (RED.D_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.D_LINK.SUBSUMPTION.RECHECK)
    (FAC_INITIAL)
    (FAC_EACH.STEP)
    (STR_RESOLUTION . SET-OF-SUPPORT)
    (STR_PAR-RES . 10)
    (STR_E-RESOLUTION)
    (STR_LINK.DEPTH)
    (STR_TERM.DEPTH)
    (STR_R.DEMODULATION . T)
    (STR_P.DEMODULATION . T)
    (STR_INDUCTION)
    (STR_FINITE.DOMAIN . T)
    (STR_SORT.LITERALS)
    (TERM_UNITS . T)
    (TERM_ITERATIONS . 0)
    (TERM_SET.OF.SUPPORT)
    (TERM_BREADTH.FIRST)
    (ER_PARAMODULATION . KAPUR-ZHANG)
    (ER_COMPLETION . FAILING)
    (ER_CP.REDUCTION . T)
    (ER_ORDERING . LEXICOGRAPHIC-RECURSIVE-PATH)
    (ER_OPERATOR.ORDERING EXP * - + 0 1)
    (ER_KNUTH.BENDIX.WEIGHT (+ 1) (* 1) (- 0) (0 1) (1 1))
    (ER_POLYNOMIAL.VARIABLES X Y Z U V W)
    (ER_POLYNOMIAL.WEIGHT (+ (+ X (* 2 Y))) (* (+ X (* X Y))) (- (+ (* 2 X) -1)) (0 2) (1 2))
    (ER_LINK.DEPTH.WEIGHT . 0)
    (ER_UNIT.FOCUS . 0)
    (ER_UNIT.FOCUS.WEIGHT . 1)
    (ER_EQUATION.FOCUS . 2)
    (ER_NARROW.DEPTH . 4)
    (ER_NARROW.NEXT . DEPTH)
    (ER_NARROW.TEST NORM C DELTA SL N)
    (ER_NARROW.LIMIT.FACTOR . 0)
    (ER_COMPILE)
    (GEN_SPLITTING . 0)
    (GEN_PRESIMPLIFICATION . T)
    (GEN_MIN.EXPRESSION.LENGTH.FOR.FILE)
    (GEN_MIN.EXPRESSION.SIZE.FOR.FILE)
    (GEN_MANUAL.CONTROL)
    (GEN_MAXIMUM.STEPS)
    (GEN_GRAPH.SAVING)
    (GEN_SAVE.FILE . SAVEDEFAULT)
    (GEN_LISP.GARBAGE.COLLECTION)
    (GEN_COMMON.LISP)
    (TR_PREPROCESSING)
    (TR_STEP.MODE . LR)
    (TR_DUMP)
    (TR_CLAUSE.MODE . I)
    (TR_LINK.MODE . I)
    (TR_TRACE.FILE)
    (TR_TERMINAL . T)
    (PR_LATEX)
    (PR_INFIX.FORM . T)
    (PR_PREFIX.FORM)
    (PR_OPTIONS)
    (PR_AXIOM.CLAUSES . T)
    (PR_SYMBOLS)
    (PR_DIRECT.PROOF . T)
    (PR_VARIABLE.PRINT.NAMES X Y Z U V W XX YY ZZ UU VV WW XXX YYY ZZZ UUU VVV WWW)
    (PR_STATISTICS)
    (PR_PROTOCOL . T)
    (PR_LEFT.MARGIN . 3)
    (PR_RIGHT.MARGIN . 117)
    (PR_LINELENGTH . 114)
    (PR_LITERALS)
   )

(REFUTATION (START.TIME 315227236)

(OPTIONS (TWO_RULES)
    (TWO_RULES.MAXLEVEL . 1)
    (TWO_SUPPRESS.NORULES)
    (RED.I_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.I_CLAUSE.PURITY . P)
    (RED.I_CLAUSE.TAUTOLOGY . T)
    (RED.I_CLAUSE.TAUTOLOGY.RECHECK . PARTIAL)
    (RED.I_CLAUSE.SUBSUMPTION . T)
    (RED.I_CLAUSE.SUBSUMPTION.RECHECK . PARTIAL)
    (RED.I_CLAUSE.REPL.FACTORING . T)
    (RED.I_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.I_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.I_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.I_CLAUSE.REWRITING . DEM)
    (RED.I_LINK.INCOMPATIBILITY . T)
    (RED.I_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.I_LINK.TAUTOLOGY.RECHECK)
    (RED.I_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.I_LINK.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.D_CLAUSE.PURITY . P)
    (RED.D_CLAUSE.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_CLAUSE.TAUTOLOGY.RECHECK)
    (RED.D_CLAUSE.SUBSUMPTION.FORWARD . REMOVE-INHIBIT)
    (RED.D_CLAUSE.SUBSUMPTION.BACKWARD . REMOVE)
    (RED.D_CLAUSE.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.REPL.FACTORING . T)
    (RED.D_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.D_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.D_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.D_CLAUSE.REWRITING . DEM)
    (RED.D_LINK.INCOMPATIBILITY . T)
    (RED.D_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_LINK.TAUTOLOGY.RECHECK)
    (RED.D_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.D_LINK.SUBSUMPTION.RECHECK)
    (FAC_INITIAL)
    (FAC_EACH.STEP)
    (STR_RESOLUTION . SET-OF-SUPPORT)
    (STR_PAR-RES . 10)
    (STR_E-RESOLUTION)
    (STR_LINK.DEPTH)
    (STR_TERM.DEPTH)
    (STR_R.DEMODULATION . T)
    (STR_P.DEMODULATION . T)
    (STR_INDUCTION)
    (STR_FINITE.DOMAIN . T)
    (STR_SORT.LITERALS)
    (TERM_UNITS . T)
    (TERM_ITERATIONS . 0)
    (TERM_SET.OF.SUPPORT)
    (TERM_BREADTH.FIRST)
    (ER_PARAMODULATION . KAPUR-ZHANG)
    (ER_COMPLETION . FAILING)
    (ER_CP.REDUCTION . T)
    (ER_ORDERING . LEXICOGRAPHIC-RECURSIVE-PATH)
    (ER_OPERATOR.ORDERING EXP * - + 0 1)
    (ER_KNUTH.BENDIX.WEIGHT (+ 1) (* 1) (- 0) (0 1) (1 1))
    (ER_POLYNOMIAL.VARIABLES X Y Z U V W)
    (ER_POLYNOMIAL.WEIGHT (+ (+ X (* 2 Y))) (* (+ X (* X Y))) (- (+ (* 2 X) -1)) (0 2) (1 2))
    (ER_LINK.DEPTH.WEIGHT . 0)
    (ER_UNIT.FOCUS . 0)
    (ER_UNIT.FOCUS.WEIGHT . 1)
    (ER_EQUATION.FOCUS . 2)
    (ER_NARROW.DEPTH . 4)
    (ER_NARROW.NEXT . DEPTH)
    (ER_NARROW.TEST NORM C DELTA SL N)
    (ER_NARROW.LIMIT.FACTOR . 0)
    (ER_COMPILE)
    (GEN_SPLITTING . 0)
    (GEN_PRESIMPLIFICATION . T)
    (GEN_MIN.EXPRESSION.LENGTH.FOR.FILE)
    (GEN_MIN.EXPRESSION.SIZE.FOR.FILE)
    (GEN_MANUAL.CONTROL)
    (GEN_MAXIMUM.STEPS)
    (GEN_GRAPH.SAVING)
    (GEN_SAVE.FILE . SAVEDEFAULT)
    (GEN_LISP.GARBAGE.COLLECTION)
    (GEN_COMMON.LISP)
    (TR_PREPROCESSING)
    (TR_STEP.MODE . LR)
    (TR_DUMP)
    (TR_CLAUSE.MODE . I)
    (TR_LINK.MODE . I)
    (TR_TRACE.FILE)
    (TR_TERMINAL . T)
    (PR_LATEX)
    (PR_INFIX.FORM . T)
    (PR_PREFIX.FORM)
    (PR_OPTIONS)
    (PR_AXIOM.CLAUSES . T)
    (PR_SYMBOLS)
    (PR_DIRECT.PROOF . T)
    (PR_VARIABLE.PRINT.NAMES X Y Z U V W XX YY ZZ UU VV WW XXX YYY ZZZ UUU VVV WWW)
    (PR_STATISTICS)
    (PR_PROTOCOL . T)
    (PR_LEFT.MARGIN . 3)
    (PR_RIGHT.MARGIN . 117)
    (PR_LINELENGTH . 114)
    (PR_LITERALS)
   )
   (INITIAL   (CLAUSE 48 R.= AXIOM ((46 . ANY)) ((+ 2 (46 46)) ))
(CLAUSE 50 A1 AXIOM ((3 . ANY)) ((+ 2 ((5 (4 3)) 3)) ))
(CLAUSE 54 A2 AXIOM ((6 . ANY)) ((+ 2 ((4 (5 6)) 6)) ))
(CLAUSE 59 A3 AXIOM ((7 . ANY)) ((+ 2 ((9 8 7) 7)) ))
(CLAUSE 63 A4 AXIOM ((11 . ANY)(10 . ANY)) ((+ 2 ((9 (5 10) 11) (5 (9 10 11)))) ))
(CLAUSE 69 A5 AXIOM ((13 . ANY)(12 . ANY)) ((+ 2 ((9 (4 12) 13) (4 (9 12 13)))) ))
(CLAUSE 73 A6 AXIOM ((14 . ANY)) ((+ 2 ((9 14 8) 14)) ))
(CLAUSE 84 A7 AXIOM ((15 . ANY)(16 . ANY)) ((+ 2 ((9 16 (5 15)) (5 (9 16 15)))) ))
(CLAUSE 95 A8 AXIOM ((17 . ANY)(18 . ANY)) ((+ 2 ((9 18 (4 17)) (4 (9 18 17)))) ))
(CLAUSE 107 A9 AXIOM ((21 . ANY)(20 . ANY)(19 . ANY)) ((+ 2 ((9 (9 19 20) 21) (9 19 (9 20 21)))) ))
(CLAUSE 123 A10 AXIOM () ((+ 2 ((22 8) 8)) ))
(CLAUSE 126 A11 AXIOM ((23 . ANY)) ((+ 2 ((22 (5 23)) (4 (22 23)))) ))
(CLAUSE 130 A12 AXIOM ((24 . ANY)) ((+ 2 ((22 (4 24)) (5 (22 24)))) ))
(CLAUSE 134 A13 AXIOM ((25 . ANY)) ((+ 2 ((22 (22 25)) 25)) ))
(CLAUSE 141 A14 AXIOM ((26 . ANY)) ((+ 2 ((9 (22 26) 26) 8)) ))
(CLAUSE 155 A15 AXIOM ((27 . ANY)) ((+ 2 ((9 27 (22 27)) 8)) ))
(CLAUSE 172 A16 AXIOM ((29 . ANY)(28 . ANY)) ((+ 2 ((9 28 (9 (22 28) 29)) 29)) ))
(CLAUSE 195 A17 AXIOM ((31 . ANY)(30 . ANY)) ((+ 2 ((9 (22 30) (9 30 31)) 31)) ))
(CLAUSE 216 A18 AXIOM ((33 . ANY)(32 . ANY)) ((+ 2 ((22 (9 32 33)) (9 (22 33) (22 32)))) ))
(CLAUSE 235 A19 AXIOM ((34 . ANY)) ((+ 2 ((35 8 34) 8)) ))
(CLAUSE 239 A20 AXIOM ((37 . ANY)(36 . ANY)) ((+ 2 ((35 (5 36) 37) (9 37 (35 36 37)))) ))
(CLAUSE 244 A21 AXIOM ((39 . ANY)(38 . ANY)) ((+ 2 ((35 (4 38) 39) (9 (22 39) (35 38 39)))) ))
(CLAUSE 248 A22 AXIOM ((40 . ANY)) ((+ 2 ((35 40 8) 8)) ))
(CLAUSE 259 A23 AXIOM ((41 . ANY)(42 . ANY)) ((+ 2 ((35 42 (5 41)) (9 (35 42 41) 42))) ))
(CLAUSE 270 A24 AXIOM ((43 . ANY)(44 . ANY)) ((+ 2 ((35 44 (4 43)) (9 (35 44 43) (22 44)))) ))
(CLAUSE 280 T25 THEOREM ((45 . ANY)) ((- 2 ((4 (9 45 45)) (5 8))) ))   )
   (OPERATION (CLAUSE 78 N29 (280 63) ((70 . ANY)) ((- 2 ((4 (5 (9 70 (5 70)))) (5 8))) ))
   (PARAMODULATION 280 1 NIL 63 1 NIL NIL (52 70 45 (5 70) 66 (5 70)) 78))
   (OPERATION (CLAUSE 78 N29 (280 63) ((70 . ANY)) ((- 2 ((5 (9 70 70)) (5 8))) ))
   (REWRITE (54 84) 1 78))
   (OPERATION (CLAUSE 85 N30 (78 59) () ((- 2 ((5 8) (5 8))) ))
   (PARAMODULATION 78 1 NIL 59 1 NIL NIL (70 8 52 8) 85))
   (OPERATION (CLAUSE 64 R1 (85 48) () ())
   (RESOLUTION 85 1 48 1 NIL (45 (5 8)) 64))
   (END.TIME 315238134)
   (SYMBOLS 
   (LET (NEW.ADDRESS)
   (LIST (PROG1 (CONS    2 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "=" '(ANY ANY))))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED SYMMETRIC REFLEXIVE)))
   (PROG1 (CONS    1 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "FALSE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (PROG1 (CONS    0 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "TRUE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (CONS    8 (DT-CONSTANT.CREATE "0" 'ANY))
   (CONS   35 (DT-FUNCTION.CREATE "*" 'ANY '(ANY ANY) 'NIL))
   (CONS   22 (DT-FUNCTION.CREATE "-" 'ANY '(ANY) 'NIL))
   (CONS    9 (DT-FUNCTION.CREATE "+" 'ANY '(ANY ANY) 'NIL))
   (CONS    5 (DT-FUNCTION.CREATE "s" 'ANY '(ANY) 'NIL))
   (CONS    4 (DT-FUNCTION.CREATE "p" 'ANY '(ANY) 'NIL)))))
   (SPLITPART.IDENTIFIER 1)
   (RESULT SUCCESS 64)
)