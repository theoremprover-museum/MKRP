;;; -*- Package: MKRP; Base: 10.; Mode: LISP; Syntax: Common-lisp -*- 
(SORT MENGE,VERKN,ELEMENT,INDEX,INDEXMENGE:ANY)
(TYPE LIDEAL(MENGE MENGE VERKN))
(TYPE RIDEAL(MENGE MENGE VERKN))
(TYPE UHG(MENGE MENGE VERKN))
(TYPE ME(MENGE MENGE))
(TYPE NICHTLEER(MENGE))
(TYPE HG(MENGE VERKN))
(TYPE NICHTLEER-IND(INDEXMENGE))
(TYPE GLEICH(MENGE MENGE))
(TYPE EL-IND(INDEX INDEXMENGE))
(TYPE EL(ELEMENT MENGE))
(TYPE MINIMAL(MENGE MENGE VERKN))
(TYPE MINIMAL-BED-L(MENGE VERKN))
(TYPE MINIMAL-BED-R(MENGE VERKN))
(TYPE MPROD(MENGE MENGE VERKN) :MENGE)
(TYPE U(INDEX) :MENGE)
(TYPE VER-IND(INDEXMENGE) :MENGE)
(TYPE SM-IND(INDEXMENGE) :MENGE)
(TYPE APPLYV(VERKN ELEMENT ELEMENT) :ELEMENT)
(TYPE F*X(MENGE ELEMENT VERKN) :MENGE)
(TYPE SM(MENGE MENGE) :MENGE)
(TYPE T*(MENGE VERKN MENGE ELEMENT) :MENGE)
(* DEF. RIDEAL *)
(ALL R,F:MENGE  ALL MAL:VERKN  
     RIDEAL(R F MAL) IMPL HG(F MAL) AND ME(R F) AND NICHTLEER(R) AND ME(MPROD(R F MAL) R))
(* L#R ENTHALTEN IN F *)
(ALL R,L,F:MENGE ALL MAL:VERKN HG(F MAL) AND ME(R F) AND ME(L F) IMPL ME(MPROD(L R MAL) F))
(* FOLGERUNG AUS DER TRANSITIVITAET VON TEILMENGEN *)
(ALL A,B,C,D,F:MENGE ALL MAL:VERKN ME(A B) AND ME(MPROD(C B MAL) D) AND HG(F MAL) IMPL ME(MPROD(C A MAL) D))
(* FOLGERUNG AUS DER DEF. LIDEAL *)
(ALL L,F:MENGE ALL MAL:VERKN LIDEAL(L F MAL) IMPL ME(L F))

(ALL F,R,L:MENGE  ALL MAL:VERKN  
     HG(F MAL) AND RIDEAL(R F MAL) AND MINIMAL(R F MAL) AND LIDEAL(L F MAL)
     IMPL ME(MPROD(R MPROD(L R MAL) MAL) R))