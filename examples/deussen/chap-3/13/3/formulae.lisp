;;; -*- Package: MKRP; Base: 10.; Mode: LISP; Syntax: Common-lisp -*-
(SORT MENGE,VERKN,ELEMENT,INDEX,INDEXMENGE,ABB:ANY)
(TYPE LIDEAL(MENGE MENGE VERKN))
(TYPE RIDEAL(MENGE MENGE VERKN))
(TYPE UHG(MENGE MENGE VERKN))
(TYPE ME(MENGE MENGE))
(TYPE NICHTLEER(MENGE))
(TYPE HG(MENGE VERKN))
(TYPE NICHTLEER-IND(INDEXMENGE))
(TYPE GLEICH(MENGE MENGE))
(TYPE EL-IND(INDEX INDEXMENGE))
(TYPE EL(ELEMENT MENGE))
(TYPE MINIMAL(MENGE MENGE VERKN))
(TYPE MINIMAL-BED-L(MENGE VERKN))
(TYPE MINIMAL-BED-R(MENGE VERKN))
(TYPE MPROD(MENGE MENGE VERKN) :MENGE)
(TYPE U(INDEX) :MENGE)
(TYPE VER-IND(INDEXMENGE) :MENGE)
(TYPE SM-IND(INDEXMENGE) :MENGE)
(TYPE APPLYV(VERKN ELEMENT ELEMENT) :ELEMENT)
(TYPE F*X(MENGE ELEMENT VERKN) :MENGE)
(TYPE SM(MENGE MENGE) :MENGE)
(TYPE T*(MENGE VERKN MENGE ELEMENT) :MENGE)
(TYPE G(INDEX INDEX) :MENGE)
(TYPE BIJEKTIV(ABB MENGE MENGE))
(TYPE HOMOMORPH(ABB MENGE MENGE))
(TYPE ISOMORPH(ABB MENGE MENGE))
(TYPE ABBVOR(ABB ELEMENT ELEMENT))
(ASSOCIATIVE(SM))
(* KOMMUTATIVITAET VON SM *)
(ALL A,B:MENGE SM(A B) = SM(B A))
(* LEER + SCHNITTMENGE *)
(ALL M1,M2:MENGE LEER(M1) IMPL LEER(SM(M1 M2)) AND LEER(SM(M2 M1)))
(* EIGENSCHAFT VON SCHNITTMENGEN *)
(ALL M1,M2:MENGE ME(SM(M1 M2) M1) AND ME(SM(M1 M2) M2))
(* DEF. MINIMAL *)
(ALL L,L1,F:MENGE  ALL MAL:VERKN  
     LIDEAL(L F MAL) AND MINIMAL(L F MAL) AND ME(L1 L) AND LIDEAL(L1 F MAL) IMPL GLEICH(L1 L))
(* SATZ 3.3.2 *)
(ALL L1,L2,F:MENGE  ALL MAL:VERKN  
     LIDEAL(L1 F MAL) AND LIDEAL(L2 F MAL) IMPL(LIDEAL(SM(L1 L2) F MAL) OR LEER(SM(L1 L2))))

(ALL L1,L2,R1,R2,F:MENGE  ALL MAL:VERKN  
     NOT(GLEICH(L1 L2))
     AND HG(F MAL)
     AND LIDEAL(L1 F MAL)
     AND MINIMAL(L1 F MAL)
     AND LIDEAL(L2 F MAL)
     AND MINIMAL(L2 F MAL)
     AND RIDEAL(R1 F MAL)
     AND MINIMAL(R1 F MAL)
     AND RIDEAL(R2 F MAL)
     AND MINIMAL(R2 F MAL)
     IMPL LEER(SM(SM(R1 L1) SM(R2 L2))))