;;; -*- Package: MKRP; Base: 10; Mode: LISP; Syntax: Common-lisp -*-

(CONSTRUCTION  "Genera 8.0.1 Logical Pathnames Translation Files NEWEST IP-TCP 422.2 RPC 415.0 Embedding Support 407.0 UX Support 416.0 Experimental Network RPC 415.0 Experimental NFS Client 415.0 CLX 419.0 C Runtime 416.0 Compiler Tools Package 411.0 Compiler Tools Runtime 411.0 C Packages 413.0 Minimal Lexer Runtime 416.0 Lexer Package 415.0 Syntax Editor Runtime 411.0 Experimental X Server 409.0 X Remote Screen 418.1 KKL 20.1 HADES 16.0 Waltz 7.0 COLUMN 7.0 MKRP 49.2 GENTRAFO 1.0" "24-OCT,1991 19:04" 
   ("Edit:     Axioms and Theorems edited: 24-OCT,1991 19:03 "
   ))

(AXIOMS.INFIX    ((SORT |ELEM,VERKN,MENGE,ABB| |:| ANY)
   (TYPE APPLYA (ABB ELEM) |:| ELEM)
   (TYPE APPLYV (VERKN ELEM ELEM) |:| ELEM)
   (ALL |U,F| |:| MENGE ALL PHI |:| VERKN ALL E |:| ELEM G (F PHI E) AND ME (U F) AND EL (E U) AND UHG (U F PHI) IMPL EINS (E PHI U))
   (ALL |U,F| |:| MENGE ALL PHI |:| VERKN ALL CHI |:| ABB ALL |C,Z,E| |:| ELEM G (F PHI E) AND ME (U F) AND BIJEKTIV (CHI U U) AND EL (Z U) AND EL (C U) AND APPLYA (CHI Z) = APPLYV (PHI Z C) IMPL (EX X |:| ELEM APPLYV (PHI X C) = Z AND EL (X U)))
   (ALL |U,V| |:| MENGE ALL X |:| ELEM ME (U V) AND EL (X U) IMPL EL (X V))
   (ALL F |:| MENGE ALL PHI |:| VERKN ALL |X,Y,E| |:| ELEM G (F PHI E) AND EL (X F) AND APPLYV (PHI Y X) = X IMPL Y = E)))

(THEOREMS.INFIX ((ALL |U,F| |:| MENGE ALL PHI |:| VERKN ALL |Z,E| |:| ELEM G (F PHI E) AND ME (U F) AND ENDLICH (U) IMPL UHG (U F PHI) AND EL (Z U) AND ALL C |:| ELEM EL (C U) IMPL EX CHI |:| ABB BIJEKTIV (CHI U U) AND ALL X |:| ELEM EL (X U) IMPL APPLYA (CHI X) = APPLYV (PHI X C) IMPL EINS (E PHI U))))

(AXIOMS.PREFIX   ((+ 0 NIL NIL)
   (+ 0 NIL NIL)
   (+ 0 NIL NIL)
   (ALL 6 (ALL 5 (ALL 7 (ALL 8 (IMPL (AND (+ 9 (6 7 8) NIL) (AND (+ 10 (5 6) NIL) (AND (+ 11 (8 5) NIL) (+ 12 (5 6 7) NIL)))) (+ 13 (8 7 5) NIL))))))
   (ALL 15 (ALL 14 (ALL 16 (ALL 17 (ALL 20 (ALL 19 (ALL 18 (IMPL (AND (+ 9 (15 16 20) NIL) (AND (+ 10 (14 15) NIL) (AND (+ 21 (17 14 14) NIL) (AND (+ 11 (19 14) NIL) (AND (+ 11 (18 14) NIL) (+ 2 ((3 17 19) (4 16 19 18)) NIL)))))) (EX 22 (AND (+ 2 ((4 16 22 18) 19) NIL) (+ 11 (22 14) NIL)))))))))))
   (ALL 24 (ALL 23 (ALL 25 (IMPL (AND (+ 10 (23 24) NIL) (+ 11 (25 23) NIL)) (+ 11 (25 24) NIL)))))
   (ALL 26 (ALL 27 (ALL 30 (ALL 29 (ALL 28 (IMPL (AND (+ 9 (26 27 30) NIL) (AND (+ 11 (28 26) NIL) (+ 2 ((4 27 29 28) 28) NIL))) (+ 2 (29 30) NIL)))))))))

(THEOREMS.PREFIX ((ALL 32 (ALL 31 (ALL 33 (ALL 35 (ALL 34 (IMPL (AND (+ 9 (32 33 35) NIL) (AND (+ 10 (31 32) NIL) (+ 36 (31) NIL))) (AND (+ 12 (31 32 33) NIL) (AND (+ 11 (34 31) NIL) (ALL 37 (IMPL (+ 11 (37 31) NIL) (EX 38 (AND (+ 21 (38 31 31) NIL) (ALL 39 (IMPL (+ 11 (39 31) NIL) (IMPL (+ 2 ((3 38 39) (4 33 39 37)) NIL) (+ 13 (35 33 31) NIL))))))))))))))))))

(OPTIONS (TWO_RULES)
    (TWO_RULES.MAXLEVEL . 1)
    (TWO_SUPPRESS.NORULES)
    (RED.I_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.I_CLAUSE.PURITY . P)
    (RED.I_CLAUSE.TAUTOLOGY . T)
    (RED.I_CLAUSE.TAUTOLOGY.RECHECK . PARTIAL)
    (RED.I_CLAUSE.SUBSUMPTION . T)
    (RED.I_CLAUSE.SUBSUMPTION.RECHECK . PARTIAL)
    (RED.I_CLAUSE.REPL.FACTORING . T)
    (RED.I_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.I_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.I_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.I_CLAUSE.REWRITING . DEM)
    (RED.I_LINK.INCOMPATIBILITY . T)
    (RED.I_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.I_LINK.TAUTOLOGY.RECHECK)
    (RED.I_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.I_LINK.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.D_CLAUSE.PURITY . P)
    (RED.D_CLAUSE.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_CLAUSE.TAUTOLOGY.RECHECK)
    (RED.D_CLAUSE.SUBSUMPTION.FORWARD . REMOVE-INHIBIT)
    (RED.D_CLAUSE.SUBSUMPTION.BACKWARD . REMOVE)
    (RED.D_CLAUSE.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.REPL.FACTORING . T)
    (RED.D_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.D_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.D_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.D_CLAUSE.REWRITING . DEM)
    (RED.D_LINK.INCOMPATIBILITY . T)
    (RED.D_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_LINK.TAUTOLOGY.RECHECK)
    (RED.D_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.D_LINK.SUBSUMPTION.RECHECK)
    (FAC_INITIAL)
    (FAC_EACH.STEP)
    (STR_RESOLUTION . SET-OF-SUPPORT)
    (STR_PAR-RES . 10)
    (STR_LINK.DEPTH)
    (STR_TERM.DEPTH)
    (STR_FINITE.DOMAIN . T)
    (STR_SORT.LITERALS)
    (TERM_UNITS . T)
    (TERM_ITERATIONS . 0)
    (TERM_SET.OF.SUPPORT)
    (TERM_BREADTH.FIRST)
    (ER_PARAMODULATION . HEURISTIC-COMPLETION)
    (ER_COMPLETION . UNFAILING)
    (ER_CP.REDUCTION . T)
    (ER_ORDERING . LEXICOGRAPHIC-RECURSIVE-PATH)
    (ER_OPERATOR.ORDERING * - + 0 1)
    (ER_KNUTH.BENDIX.WEIGHT (+ 1) (* 1) (- 0) (0 1) (1 1))
    (ER_POLYNOMIAL.VARIABLES X Y Z U V W)
    (ER_POLYNOMIAL.WEIGHT (+ (+ X (* 2 Y))) (* (+ X (* X Y))) (- (+ (* 2 X) -1)) (0 2) (1 2))
    (ER_LINK.DEPTH.WEIGHT . 0)
    (ER_UNIT.FOCUS . 0)
    (ER_UNIT.FOCUS.WEIGHT . 1)
    (ER_EQUATION.FOCUS . 2)
    (ER_NARROW.DEPTH . 0)
    (ER_NARROW.NEXT . DEPTH)
    (ER_NARROW.TEST NORM C DELTA SL N)
    (ER_COMPILE)
    (GEN_SPLITTING . 0)
    (GEN_PRESIMPLIFICATION . T)
    (GEN_MIN.EXPRESSION.LENGTH.FOR.FILE)
    (GEN_MIN.EXPRESSION.SIZE.FOR.FILE)
    (GEN_MANUAL.CONTROL)
    (GEN_MAXIMUM.STEPS)
    (GEN_GRAPH.SAVING)
    (GEN_SAVE.FILE . SAVEDEFAULT)
    (GEN_LISP.GARBAGE.COLLECTION)
    (GEN_COMMON.LISP)
    (TR_PREPROCESSING)
    (TR_STEP.MODE . LR)
    (TR_DUMP)
    (TR_CLAUSE.MODE . I)
    (TR_LINK.MODE . I)
    (TR_TRACE.FILE)
    (TR_TERMINAL . T)
    (PR_LATEX)
    (PR_INFIX.FORM . T)
    (PR_PREFIX.FORM)
    (PR_OPTIONS)
    (PR_AXIOM.CLAUSES . T)
    (PR_SYMBOLS)
    (PR_DIRECT.PROOF . T)
    (PR_VARIABLE.PRINT.NAMES X Y Z U V W XX YY ZZ UU VV WW XXX YYY ZZZ UUU VVV WWW)
    (PR_STATISTICS)
    (PR_PROTOCOL . T)
    (PR_LEFT.MARGIN . 3)
    (PR_RIGHT.MARGIN . 117)
    (PR_LINELENGTH . 114)
    (PR_LITERALS)
   )

(LINK.COLOURS (R RIW RD S SI SIW SID T TI TIW P PIW PD RIWD))

(AXIOMS (START.TIME 255286913)
   (PARTIAL   (CLAUSE 49 R.= AXIOM ((47 . ANY)) ((+ 2 (47 47)) ))(CLAUSE 53 A1 AXIOM ((25 . ELEM)(24 . MENGE)(23 . MENGE))
   ((- 10 (23 24)) (- 11 (25 23)) (+ 11 (25 24)) )))
   (PARTIAL   (CLAUSE 61 A2 AXIOM ((29 . ELEM)(28 . ELEM)(30 . ELEM)(27 . VERKN)(26 . MENGE))
   ((- 9 (26 27 30)) (- 11 (28 26)) (- 2 ((4 27 29 28) 28)) (+ 2 (29 30)) )))
   (PARTIAL   (CLAUSE 72 A3 AXIOM ((5 . MENGE)(8 . ELEM)(7 . VERKN)(6 . MENGE))
   ((- 9 (6 7 8)) (- 10 (5 6)) (- 11 (8 5)) (- 12 (5 6 7)) (+ 13 (8 7 5)) )))
   (PARTIAL   (CLAUSE 85 A4 AXIOM ((18 . ELEM)(19 . ELEM)(17 . ABB)(14 . MENGE)(20 . ELEM)(16 . VERKN)(15 . MENGE))
   ((- 9 (15 16 20)) (- 10 (14 15)) (- 21 (17 14 14)) (- 11 (19 14)) (- 11 (18 14)) (- 2 ((3 17 19) (4 16 19 18))) (+ 2 ((4 16 (40 19 16 14 18) 18) 19)) )))
   (PARTIAL   (CLAUSE 123 A5 AXIOM ((46 . ELEM)(43 . ELEM)(22 . ABB)(45 . MENGE)(41 . ELEM)(44 . VERKN)(42 . MENGE))
   ((- 9 (42 44 41)) (- 10 (45 42)) (- 21 (22 45 45)) (- 11 (43 45)) (- 11 (46 45)) (- 2 ((3 22 43) (4 44 43 46))) (+ 11 ((40 43 44 45 46) 45)) )))
   (END.TIME 255300722)
   (FINAL 49 53 61 72 85 123)
   (SYMBOLS 
   (LET (NEW.ADDRESS)
   (LIST (CONS   36 (DT-PREDICATE.CREATE "ENDLICH" '(ANY)))
   (CONS   21 (DT-PREDICATE.CREATE "BIJEKTIV" '(ANY ANY ANY)))
   (CONS   13 (DT-PREDICATE.CREATE "EINS" '(ANY ANY ANY)))
   (CONS   12 (DT-PREDICATE.CREATE "UHG" '(ANY ANY ANY)))
   (CONS   11 (DT-PREDICATE.CREATE "EL" '(ANY ANY)))
   (CONS   10 (DT-PREDICATE.CREATE "ME" '(ANY ANY)))
   (CONS    9 (DT-PREDICATE.CREATE "G" '(ANY ANY ANY)))
   (PROG1 (CONS    2 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "=" '(ANY ANY))))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED SYMMETRIC REFLEXIVE)))
   (PROG1 (CONS    1 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "FALSE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (PROG1 (CONS    0 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "TRUE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (CONS   40 (DT-FUNCTION.CREATE "f_1" 'ELEM '(ELEM VERKN MENGE ELEM) 'NIL))
   (CONS    4 (DT-FUNCTION.CREATE "applyv" 'ELEM '(VERKN ELEM ELEM) 'NIL))
   (CONS    3 (DT-FUNCTION.CREATE "applya" 'ELEM '(ABB ELEM) 'NIL)))))
   (RESULT))

(THEOREMS (SPLITPART.IDENTIFIER 1)
   (START.TIME 255301238)
   (PARTIAL   (CLAUSE 38 T6 THEOREM () ((+ 9 (34 166 167)) )))
   (PARTIAL   (CLAUSE 173 T7 THEOREM () ((+ 10 (165 34)) )))
   (PARTIAL   (CLAUSE 178 T8 THEOREM () ((+ 36 (165)) )))
   (PARTIAL   (CLAUSE 179 T9 THEOREM ()
   ((- 12 (165 34 166)) (- 11 (168 165)) (+ 11 (164 165)) )))
   (PARTIAL   (CLAUSE 202 T10 THEOREM ((33 . ABB))
   ((- 12 (165 34 166)) (- 11 (168 165)) (- 21 (33 165 165)) (+ 11 ((169 33) 165)) )))
   (PARTIAL   (CLAUSE 229 T11 THEOREM ((31 . ABB))
   ((- 12 (165 34 166)) (- 11 (168 165)) (- 21 (31 165 165)) (+ 2 ((3 31 (169 31)) (4 166 (169 31) 164))) )))
   (PARTIAL   (CLAUSE 263 T12 THEOREM ((32 . ABB))
   ((- 12 (165 34 166)) (- 11 (168 165)) (- 21 (32 165 165)) (- 13 (167 166 165)) )))
   (INITIAL   (CLAUSE 49 R.= AXIOM ((47 . ANY)) ((+ 2 (47 47)) ))
(CLAUSE 53 A1 AXIOM ((25 . ELEM)(24 . MENGE)(23 . MENGE))
   ((- 10 (23 24)) (- 11 (25 23)) (+ 11 (25 24)) ))
(CLAUSE 61 A2 AXIOM ((29 . ELEM)(28 . ELEM)(30 . ELEM)(27 . VERKN)(26 . MENGE))
   ((- 9 (26 27 30)) (- 11 (28 26)) (- 2 ((4 27 29 28) 28)) (+ 2 (29 30)) ))
(CLAUSE 38 T6 THEOREM () ((+ 9 (34 166 167)) ))
(CLAUSE 173 T7 THEOREM () ((+ 10 (165 34)) ))   )
   (END.TIME 255318753)
   (FINAL 49 53 61 38 173)
   (SYMBOLS 
   (LET (NEW.ADDRESS)
   (LIST (CONS   36 (DT-PREDICATE.CREATE "ENDLICH" '(ANY)))
   (CONS   21 (DT-PREDICATE.CREATE "BIJEKTIV" '(ANY ANY ANY)))
   (CONS   13 (DT-PREDICATE.CREATE "EINS" '(ANY ANY ANY)))
   (CONS   12 (DT-PREDICATE.CREATE "UHG" '(ANY ANY ANY)))
   (CONS   11 (DT-PREDICATE.CREATE "EL" '(ANY ANY)))
   (CONS   10 (DT-PREDICATE.CREATE "ME" '(ANY ANY)))
   (CONS    9 (DT-PREDICATE.CREATE "G" '(ANY ANY ANY)))
   (PROG1 (CONS    2 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "=" '(ANY ANY))))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED SYMMETRIC REFLEXIVE)))
   (PROG1 (CONS    1 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "FALSE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (PROG1 (CONS    0 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "TRUE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (CONS  164 (DT-CONSTANT.CREATE "c_6" 'ELEM))
   (CONS  168 (DT-CONSTANT.CREATE "c_5" 'ELEM))
   (CONS  167 (DT-CONSTANT.CREATE "c_4" 'ELEM))
   (CONS  166 (DT-CONSTANT.CREATE "c_3" 'VERKN))
   (CONS  165 (DT-CONSTANT.CREATE "c_2" 'MENGE))
   (CONS   34 (DT-CONSTANT.CREATE "c_1" 'MENGE))
   (CONS  169 (DT-FUNCTION.CREATE "f_2" 'ELEM '(ABB) 'NIL))
   (CONS   40 (DT-FUNCTION.CREATE "f_1" 'ELEM '(ELEM VERKN MENGE ELEM) 'NIL))
   (CONS    4 (DT-FUNCTION.CREATE "applyv" 'ELEM '(VERKN ELEM ELEM) 'NIL))
   (CONS    3 (DT-FUNCTION.CREATE "applya" 'ELEM '(ABB ELEM) 'NIL)))))
   (RESULT))
(indices ((263 24 25 27 30) (229 24 25 27 29) (202 24 25 27 28) (179 24 25 26) (178 23) (173 22) (38 21) (123 6 7 8 9 10 11 13) (85 6 7 8 9 10 11 12) (72 1 2 3 4 5) (61 17 18 19 20) (53 14 15 16) (49 NIL)))

(SPLITPARTS "Genera 8.0.1 Logical Pathnames Translation Files NEWEST IP-TCP 422.2 RPC 415.0 Embedding Support 407.0 UX Support 416.0 Experimental Network RPC 415.0 Experimental NFS Client 415.0 CLX 419.0 C Runtime 416.0 Compiler Tools Package 411.0 Compiler Tools Runtime 411.0 C Packages 413.0 Minimal Lexer Runtime 416.0 Lexer Package 415.0 Syntax Editor Runtime 411.0 Experimental X Server 409.0 X Remote Screen 418.1 KKL 20.1 HADES 16.0 Waltz 7.0 COLUMN 7.0 MKRP 49.2 GENTRAFO 1.0" "24-OCT,1991 19:04" NIL)

(OPTIONS (TWO_RULES)
    (TWO_RULES.MAXLEVEL . 1)
    (TWO_SUPPRESS.NORULES)
    (RED.I_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.I_CLAUSE.PURITY . P)
    (RED.I_CLAUSE.TAUTOLOGY . T)
    (RED.I_CLAUSE.TAUTOLOGY.RECHECK . PARTIAL)
    (RED.I_CLAUSE.SUBSUMPTION . T)
    (RED.I_CLAUSE.SUBSUMPTION.RECHECK . PARTIAL)
    (RED.I_CLAUSE.REPL.FACTORING . T)
    (RED.I_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.I_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.I_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.I_CLAUSE.REWRITING . DEM)
    (RED.I_LINK.INCOMPATIBILITY . T)
    (RED.I_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.I_LINK.TAUTOLOGY.RECHECK)
    (RED.I_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.I_LINK.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.D_CLAUSE.PURITY . P)
    (RED.D_CLAUSE.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_CLAUSE.TAUTOLOGY.RECHECK)
    (RED.D_CLAUSE.SUBSUMPTION.FORWARD . REMOVE-INHIBIT)
    (RED.D_CLAUSE.SUBSUMPTION.BACKWARD . REMOVE)
    (RED.D_CLAUSE.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.REPL.FACTORING . T)
    (RED.D_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.D_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.D_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.D_CLAUSE.REWRITING . DEM)
    (RED.D_LINK.INCOMPATIBILITY . T)
    (RED.D_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_LINK.TAUTOLOGY.RECHECK)
    (RED.D_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.D_LINK.SUBSUMPTION.RECHECK)
    (FAC_INITIAL)
    (FAC_EACH.STEP)
    (STR_RESOLUTION . SET-OF-SUPPORT)
    (STR_PAR-RES . 10)
    (STR_LINK.DEPTH)
    (STR_TERM.DEPTH)
    (STR_FINITE.DOMAIN . T)
    (STR_SORT.LITERALS)
    (TERM_UNITS . T)
    (TERM_ITERATIONS . 0)
    (TERM_SET.OF.SUPPORT)
    (TERM_BREADTH.FIRST)
    (ER_PARAMODULATION . HEURISTIC-COMPLETION)
    (ER_COMPLETION . UNFAILING)
    (ER_CP.REDUCTION . T)
    (ER_ORDERING . LEXICOGRAPHIC-RECURSIVE-PATH)
    (ER_OPERATOR.ORDERING * - + 0 1)
    (ER_KNUTH.BENDIX.WEIGHT (+ 1) (* 1) (- 0) (0 1) (1 1))
    (ER_POLYNOMIAL.VARIABLES X Y Z U V W)
    (ER_POLYNOMIAL.WEIGHT (+ (+ X (* 2 Y))) (* (+ X (* X Y))) (- (+ (* 2 X) -1)) (0 2) (1 2))
    (ER_LINK.DEPTH.WEIGHT . 0)
    (ER_UNIT.FOCUS . 0)
    (ER_UNIT.FOCUS.WEIGHT . 1)
    (ER_EQUATION.FOCUS . 2)
    (ER_NARROW.DEPTH . 0)
    (ER_NARROW.NEXT . DEPTH)
    (ER_NARROW.TEST NORM C DELTA SL N)
    (ER_COMPILE)
    (GEN_SPLITTING . 0)
    (GEN_PRESIMPLIFICATION . T)
    (GEN_MIN.EXPRESSION.LENGTH.FOR.FILE)
    (GEN_MIN.EXPRESSION.SIZE.FOR.FILE)
    (GEN_MANUAL.CONTROL)
    (GEN_MAXIMUM.STEPS)
    (GEN_GRAPH.SAVING)
    (GEN_SAVE.FILE . SAVEDEFAULT)
    (GEN_LISP.GARBAGE.COLLECTION)
    (GEN_COMMON.LISP)
    (TR_PREPROCESSING)
    (TR_STEP.MODE . LR)
    (TR_DUMP)
    (TR_CLAUSE.MODE . I)
    (TR_LINK.MODE . I)
    (TR_TRACE.FILE)
    (TR_TERMINAL . T)
    (PR_LATEX)
    (PR_INFIX.FORM . T)
    (PR_PREFIX.FORM)
    (PR_OPTIONS)
    (PR_AXIOM.CLAUSES . T)
    (PR_SYMBOLS)
    (PR_DIRECT.PROOF . T)
    (PR_VARIABLE.PRINT.NAMES X Y Z U V W XX YY ZZ UU VV WW XXX YYY ZZZ UUU VVV WWW)
    (PR_STATISTICS)
    (PR_PROTOCOL . T)
    (PR_LEFT.MARGIN . 3)
    (PR_RIGHT.MARGIN . 117)
    (PR_LINELENGTH . 114)
    (PR_LITERALS)
   )

(REFUTATION (START.TIME 255321176)

(OPTIONS (TWO_RULES)
    (TWO_RULES.MAXLEVEL . 1)
    (TWO_SUPPRESS.NORULES)
    (RED.I_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.I_CLAUSE.PURITY . P)
    (RED.I_CLAUSE.TAUTOLOGY . T)
    (RED.I_CLAUSE.TAUTOLOGY.RECHECK . PARTIAL)
    (RED.I_CLAUSE.SUBSUMPTION . T)
    (RED.I_CLAUSE.SUBSUMPTION.RECHECK . PARTIAL)
    (RED.I_CLAUSE.REPL.FACTORING . T)
    (RED.I_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.I_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.I_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.I_CLAUSE.REWRITING . DEM)
    (RED.I_LINK.INCOMPATIBILITY . T)
    (RED.I_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.I_LINK.TAUTOLOGY.RECHECK)
    (RED.I_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.I_LINK.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.D_CLAUSE.PURITY . P)
    (RED.D_CLAUSE.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_CLAUSE.TAUTOLOGY.RECHECK)
    (RED.D_CLAUSE.SUBSUMPTION.FORWARD . REMOVE-INHIBIT)
    (RED.D_CLAUSE.SUBSUMPTION.BACKWARD . REMOVE)
    (RED.D_CLAUSE.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.REPL.FACTORING . T)
    (RED.D_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.D_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.D_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.D_CLAUSE.REWRITING . DEM)
    (RED.D_LINK.INCOMPATIBILITY . T)
    (RED.D_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_LINK.TAUTOLOGY.RECHECK)
    (RED.D_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.D_LINK.SUBSUMPTION.RECHECK)
    (FAC_INITIAL)
    (FAC_EACH.STEP)
    (STR_RESOLUTION . SET-OF-SUPPORT)
    (STR_PAR-RES . 10)
    (STR_LINK.DEPTH)
    (STR_TERM.DEPTH)
    (STR_FINITE.DOMAIN . T)
    (STR_SORT.LITERALS)
    (TERM_UNITS . T)
    (TERM_ITERATIONS . 0)
    (TERM_SET.OF.SUPPORT)
    (TERM_BREADTH.FIRST)
    (ER_PARAMODULATION . HEURISTIC-COMPLETION)
    (ER_COMPLETION . UNFAILING)
    (ER_CP.REDUCTION . T)
    (ER_ORDERING . LEXICOGRAPHIC-RECURSIVE-PATH)
    (ER_OPERATOR.ORDERING * - + 0 1)
    (ER_KNUTH.BENDIX.WEIGHT (+ 1) (* 1) (- 0) (0 1) (1 1))
    (ER_POLYNOMIAL.VARIABLES X Y Z U V W)
    (ER_POLYNOMIAL.WEIGHT (+ (+ X (* 2 Y))) (* (+ X (* X Y))) (- (+ (* 2 X) -1)) (0 2) (1 2))
    (ER_LINK.DEPTH.WEIGHT . 0)
    (ER_UNIT.FOCUS . 0)
    (ER_UNIT.FOCUS.WEIGHT . 1)
    (ER_EQUATION.FOCUS . 2)
    (ER_NARROW.DEPTH . 0)
    (ER_NARROW.NEXT . DEPTH)
    (ER_NARROW.TEST NORM C DELTA SL N)
    (ER_COMPILE)
    (GEN_SPLITTING . 0)
    (GEN_PRESIMPLIFICATION . T)
    (GEN_MIN.EXPRESSION.LENGTH.FOR.FILE)
    (GEN_MIN.EXPRESSION.SIZE.FOR.FILE)
    (GEN_MANUAL.CONTROL)
    (GEN_MAXIMUM.STEPS)
    (GEN_GRAPH.SAVING)
    (GEN_SAVE.FILE . SAVEDEFAULT)
    (GEN_LISP.GARBAGE.COLLECTION)
    (GEN_COMMON.LISP)
    (TR_PREPROCESSING)
    (TR_STEP.MODE . LR)
    (TR_DUMP)
    (TR_CLAUSE.MODE . I)
    (TR_LINK.MODE . I)
    (TR_TRACE.FILE)
    (TR_TERMINAL . T)
    (PR_LATEX)
    (PR_INFIX.FORM . T)
    (PR_PREFIX.FORM)
    (PR_OPTIONS)
    (PR_AXIOM.CLAUSES . T)
    (PR_SYMBOLS)
    (PR_DIRECT.PROOF . T)
    (PR_VARIABLE.PRINT.NAMES X Y Z U V W XX YY ZZ UU VV WW XXX YYY ZZZ UUU VVV WWW)
    (PR_STATISTICS)
    (PR_PROTOCOL . T)
    (PR_LEFT.MARGIN . 3)
    (PR_RIGHT.MARGIN . 117)
    (PR_LINELENGTH . 114)
    (PR_LITERALS)
   )
   (INITIAL   (CLAUSE 49 R.= AXIOM ((47 . ANY)) ((+ 2 (47 47)) ))
(CLAUSE 53 A1 AXIOM ((25 . ELEM)(24 . MENGE)(23 . MENGE))
   ((- 10 (23 24)) (- 11 (25 23)) (+ 11 (25 24)) ))
(CLAUSE 61 A2 AXIOM ((29 . ELEM)(28 . ELEM)(30 . ELEM)(27 . VERKN)(26 . MENGE))
   ((- 9 (26 27 30)) (- 11 (28 26)) (- 2 ((4 27 29 28) 28)) (+ 2 (29 30)) ))
(CLAUSE 38 T6 THEOREM () ((+ 9 (34 166 167)) ))
(CLAUSE 173 T7 THEOREM () ((+ 10 (165 34)) ))   )
   (END.TIME 255324107)
   (SYMBOLS 
   (LET (NEW.ADDRESS)
   (LIST (CONS   36 (DT-PREDICATE.CREATE "ENDLICH" '(ANY)))
   (CONS   21 (DT-PREDICATE.CREATE "BIJEKTIV" '(ANY ANY ANY)))
   (CONS   13 (DT-PREDICATE.CREATE "EINS" '(ANY ANY ANY)))
   (CONS   12 (DT-PREDICATE.CREATE "UHG" '(ANY ANY ANY)))
   (CONS   11 (DT-PREDICATE.CREATE "EL" '(ANY ANY)))
   (CONS   10 (DT-PREDICATE.CREATE "ME" '(ANY ANY)))
   (CONS    9 (DT-PREDICATE.CREATE "G" '(ANY ANY ANY)))
   (PROG1 (CONS    2 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "=" '(ANY ANY))))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED SYMMETRIC REFLEXIVE)))
   (PROG1 (CONS    1 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "FALSE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (PROG1 (CONS    0 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "TRUE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (CONS  164 (DT-CONSTANT.CREATE "c_6" 'ELEM))
   (CONS  168 (DT-CONSTANT.CREATE "c_5" 'ELEM))
   (CONS  167 (DT-CONSTANT.CREATE "c_4" 'ELEM))
   (CONS  166 (DT-CONSTANT.CREATE "c_3" 'VERKN))
   (CONS  165 (DT-CONSTANT.CREATE "c_2" 'MENGE))
   (CONS   34 (DT-CONSTANT.CREATE "c_1" 'MENGE))
   (CONS  169 (DT-FUNCTION.CREATE "f_2" 'ELEM '(ABB) 'NIL))
   (CONS   40 (DT-FUNCTION.CREATE "f_1" 'ELEM '(ELEM VERKN MENGE ELEM) 'NIL))
   (CONS    4 (DT-FUNCTION.CREATE "applyv" 'ELEM '(VERKN ELEM ELEM) 'NIL))
   (CONS    3 (DT-FUNCTION.CREATE "applya" 'ELEM '(ABB ELEM) 'NIL)))))
   (SPLITPART.IDENTIFIER 1)
   (RESULT FAILURE GRAPH.COLLAPSED)
)