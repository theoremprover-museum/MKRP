;;; -*- Package: MKRP; Base: 10; Mode: LISP; Syntax: Common-lisp -*-
(PROGN (PREP=CREATE.EMPTY.PARTIAL.GRAPH) (PROGN (SETQ TWO*RULES.MAXLEVEL (QUOTE 1)) (SETQ TWO*CONTROL (QUOTE NIL)) (SETQ TWO*SUPPRESS.NORULES (QUOTE NIL)) (SETQ TWO*DIALOG (QUOTE NIL)) (SETQ TWO*EXTERNAL.RULE.COLOURS (QUOTE (R S T))) (SETQ TWO*INTERNAL.RULE.COLOURS (QUOTE (RIW SI SIW TI TIW))) (SETQ TWO*RULES (QUOTE NIL)) (SETQ TWO*ADDED.RULES (QUOTE NIL)) (SETQ TWO*EMPTY.CLAUSE.FOUND (QUOTE NIL)) (SETQ TWO*NEW.RULES (QUOTE NIL)) (SETQ TWO*NORULE.CLAUSES (QUOTE NIL)) (SETQ TWO*TR.RULES (QUOTE NIL)) (SETQ TWO*TR.NORULES (QUOTE NIL))) (PROGN (C "Save expression of reduction.") (SETQ RED*RW_RULES (QUOTE NIL) RDS*RW_ASSIGN (QUOTE NIL) RDS*RW_VARIABLES (QUOTE NIL) RED*RW_RULES.COMPLETION (QUOTE NIL) RED*RW_RULES.UNFAILING (QUOTE ((48 . 1))) RED*GRAPH.ISOLATION (QUOTE NIL)) (RDS-RULE.PUT (QUOTE RECHECK.INFO) (QUOTE RED*CLAUSE.TAUTOLOGY) (QUOTE NIL)) (RDS-RULE.PUT (QUOTE RECHECK.INFO) (QUOTE RED*CLAUSE.REPL.RESOLUTION.SUBJECT) (QUOTE NIL)) (RDS-RULE.PUT (QUOTE RECHECK.INFO) (QUOTE RED*CLAUSE.SUBSUMPTION.SUBJECT) (QUOTE NIL)) (RDS-RULE.PUT (QUOTE RECHECK.INFO) (QUOTE RED*LINK.SUBSUMPTION.SUBJECT) (QUOTE NIL)) (RDS-RULE.PUT (QUOTE RECHECK.INFO) (QUOTE RED*LINK.TAUTOLOGY) (QUOTE NIL))) (PROGN (PROGN (PROGN (PROGN (DS-RESET) (PROGN (DT-RESET) (PROG ((ADDRLIST (QUOTE (8334 8329 8324 8319 8352 8370 8388 8406 8424 8442 8460 8478 8496 8514 8532 8550 8770 8765 8760 8676 8658 8640 8622 8604 8586 8568 8788 8806 8824 8842 8860 8878 8896 8914 8932 8950 8968 8986 9004 9022 9040 9124 9129 9139 9134 9157 9175 9193 9211 9229 9247 9265 9283 9343 9348 9353 9371 9389 9407 9425 9485 9490 9495 9513 9531 9591 9596 9601 9637 9642 9678 9683 9719 9724 9734 9739 9749 9744 9729 END -41 -40 -39 8289 8299 8294 8309 8314 8304 9754 9759 9764 9769 9784 9789 9794 9799 9804 9809 9814 9829 9844 9849 9854 9869 9874 9879 9884 9889 9894 9909 9914 9919 9924 9939 9944 9949 9954 9969 9984 9999))) (DATALIST (QUOTE (15 "TRUE" NIL NIL NIL (DEFINED) NIL ((- 0 (POSITIVE))) ((+ 0 (NEGATIVE))) ((+ 0 (NIL))) ((- 0 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "FALSE" NIL NIL NIL (DEFINED) NIL ((- 1 (POSITIVE))) ((+ 1 (NEGATIVE))) ((+ 1 (NIL))) ((- 1 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "=" ((48 1)) NIL (ANY ANY) (DEFINED SYMMETRIC REFLEXIVE SYMMETRIC REFLEXIVE) 48 ((- 2 (POSITIVE . SYMMETRIC))) ((+ 2 (NEGATIVE . SYMMETRIC))) ((+ 2 (NIL . SYMMETRIC))) ((- 2 (NIL . SYMMETRIC))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 15 "LEQ" ((79 3) (60 1) (55 1) (50 1)) ((102 1 2) (79 1 2)) (ANY ANY) NIL NIL ((- 6 (POSITIVE))) ((+ 6 (NEGATIVE))) ((+ 6 (NIL))) ((- 6 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 15 "NEQ" ((67 2) (60 2) (55 2)) ((102 3) (67 1) (52 1)) (ANY ANY) NIL NIL ((- 10 (POSITIVE))) ((+ 10 (NEGATIVE))) ((+ 10 (NIL))) ((- 10 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 15 "EQ" NIL NIL (ANY ANY) NIL NIL ((- 16 (POSITIVE))) ((+ 16 (NEGATIVE))) ((+ 16 (NIL))) ((- 16 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 15 "LESS" NIL NIL (ANY ANY) NIL NIL ((- 19 (POSITIVE))) ((+ 19 (NEGATIVE))) ((+ 19 (NIL))) ((- 19 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "EQV-EQ" NIL NIL NIL NIL NIL ((- 20 (POSITIVE))) ((+ 20 (NEGATIVE))) ((+ 20 (NIL))) ((- 20 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 15 "PROP-LESS" NIL NIL NIL NIL NIL ((- 27 (POSITIVE))) ((+ 27 (NEGATIVE))) ((+ 27 (NIL))) ((- 27 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 36 "R.=" AXIOM 0 (42) (42 47) 1 (REFLEXIVITY) NIL NIL ((1) (2)) NIL T + 2 (42 42) (RED*UNFAIL NIL) (42) NIL ATP.MEMORY.NOBIND NIL ATP.MEMORY.NOBIND NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL CLAUSE 5 ANY NIL NIL VARIABLE 36 "A1" AXIOM 0 (7) (7 49) 1 NIL NIL NIL NIL NIL T + 6 (7 7) (INDEX 4) (7) (108 95 85 82) ATP.MEMORY.NOBIND NIL ATP.MEMORY.NOBIND NIL NIL (90 64 57) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL CLAUSE 5 ANY NIL NIL VARIABLE 36 "A2" AXIOM 0 (13) (13 51) 1 NIL NIL NIL NIL NIL T - 10 (13 13) (INDEX 10) (13) (68 61 56) ATP.MEMORY.NOBIND NIL ATP.MEMORY.NOBIND NIL NIL (110 74) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL CLAUSE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 60 "A3" AXIOM 0 (9 8) (9 53 8 54) 2 NIL NIL NIL NIL NIL NIL + 6 (8 9) (INDEX 5 KIND (EQV T 30)) (9 8) (107 96 84 81) ATP.MEMORY.NOBIND NIL ATP.MEMORY.NOBIND NIL NIL (89 63 57) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL T + 10 (8 9) (INDEX 7 KIND (EQV NIL 30)) (9 8) (99 70 56) ATP.MEMORY.NOBIND NIL ATP.MEMORY.NOBIND NIL NIL (73 62) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL CLAUSE 18 55 2 1 ((8 13 9 13)) NIL 52 NIL NIL NIL NIL NIL NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL R 18 55 1 1 ((8 7 9 7)) NIL 50 NIL NIL NIL NIL NIL NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL S 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 60 "A4" AXIOM 0 (46 45) (46 58 45 59) 2 NIL NIL NIL NIL NIL NIL + 6 (45 46) (INDEX 6 KIND (EQV T 30)) (46 45) (106 97 83 80) ATP.MEMORY.NOBIND NIL ATP.MEMORY.NOBIND NIL NIL (88 64 63) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL T + 10 (46 45) (INDEX 7 KIND (EQV NIL 30)) (45 46) (100 69 61) ATP.MEMORY.NOBIND NIL ATP.MEMORY.NOBIND NIL NIL (72 62) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL CLAUSE 18 60 2 1 ((46 13 45 13)) NIL 52 NIL NIL NIL NIL NIL NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL R 18 60 2 2 ((46 8 45 9)) NIL 55 NIL NIL NIL NIL NIL NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL S 18 60 1 1 ((45 8 46 9)) NIL 55 NIL NIL NIL NIL NIL NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL S 18 60 1 1 ((45 7 46 7)) NIL 50 NIL NIL NIL NIL NIL NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL S 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 60 "A5" AXIOM 0 (12 11) (12 65 11 66) 2 NIL NIL NIL NIL NIL T - 10 (11 12) (INDEX 8) (12 11) (70 69) ATP.MEMORY.NOBIND (71) ATP.MEMORY.NOBIND NIL NIL (109 74) NIL NIL NIL NIL (75) NIL NIL NIL NIL NIL NIL T + 10 (12 11) (INDEX 9) (11 12) (101 68) ATP.MEMORY.NOBIND (71) ATP.MEMORY.NOBIND NIL NIL (73 72) NIL NIL NIL NIL (75) NIL NIL NIL NIL NIL CLAUSE 18 67 2 1 ((12 13 11 13)) NIL 52 NIL NIL NIL NIL NIL NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL R 18 60 2 1 ((11 46 12 45)) NIL 67 NIL NIL NIL NIL NIL NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL R 18 55 2 1 ((11 8 12 9)) NIL 67 NIL NIL NIL NIL NIL NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL R 18 67 2 1 ((65 11 66 12)) NIL 67 NIL NIL NIL NIL NIL NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL RIW 18 67 2 2 ((12 46 11 45)) NIL 60 NIL NIL NIL NIL NIL NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL S 18 67 2 2 ((12 8 11 9)) NIL 55 NIL NIL NIL NIL NIL NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL S 18 67 1 1 ((11 13 12 13)) NIL 52 NIL NIL NIL NIL NIL NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL S 18 67 2 1 ((12 11)) NIL 67 NIL NIL NIL NIL NIL NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL TI 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 84 "A6" AXIOM 0 (5 4 3) (5 77 4 76 3 78) 3 NIL NIL NIL NIL NIL T - 6 (3 4) (INDEX 1) (4 3) (85 84 83) ATP.MEMORY.NOBIND (86) ATP.MEMORY.NOBIND NIL NIL (113 111) (91) (92) NIL NIL (93) NIL NIL NIL NIL NIL NIL T - 6 (4 5) (INDEX 2) (5 4) (82 81 80) ATP.MEMORY.NOBIND (87) ATP.MEMORY.NOBIND NIL NIL (114 112) (91) (92) NIL NIL (94) NIL NIL NIL NIL NIL NIL T + 6 (3 5) (INDEX 3) (5 3) (105 98) ATP.MEMORY.NOBIND (87 86) ATP.MEMORY.NOBIND NIL NIL (90 89 88) NIL NIL NIL NIL (94 93) NIL NIL NIL NIL NIL CLAUSE 18 60 1 2 ((4 45 5 46)) NIL 79 NIL NIL NIL NIL NIL NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL R 18 55 1 2 ((4 8 5 9)) NIL 79 NIL NIL NIL NIL NIL NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL R 18 50 1 2 ((4 7 5 7)) NIL 79 NIL NIL NIL NIL NIL NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL R 18 60 1 1 ((3 45 4 46)) NIL 79 NIL NIL NIL NIL NIL NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL R 18 55 1 1 ((3 8 4 9)) NIL 79 NIL NIL NIL NIL NIL NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL R 18 50 1 1 ((3 7 4 7)) NIL 79 NIL NIL NIL NIL NIL NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL R 18 79 3 1 ((78 3 77 4)) NIL 79 NIL NIL NIL NIL NIL NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL RIW 18 79 3 2 ((78 4 77 5)) NIL 79 NIL NIL NIL NIL NIL NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL RIW 18 79 3 1 ((3 45 5 46)) NIL 60 NIL NIL NIL NIL NIL NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL S 18 79 3 1 ((3 8 5 9)) NIL 55 NIL NIL NIL NIL NIL NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL S 18 79 3 1 ((3 7 5 7)) NIL 50 NIL NIL NIL NIL NIL NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL S 18 79 2 1 ((4 3 5 3)) NIL 79 NIL NIL NIL NIL NIL NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL SI 18 79 2 1 ((76 3 77 4)) NIL 79 NIL NIL NIL NIL NIL NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL SIW 18 79 3 1 ((5 4)) NIL 79 NIL NIL NIL NIL NIL NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL TI 18 79 3 2 ((3 4)) NIL 79 NIL NIL NIL NIL NIL NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL TI 5 ANY NIL NIL VARIABLE 5 ANY NIL NIL VARIABLE 84 "A7" AXIOM 0 (44 43) (44 104 43 103) 3 NIL NIL NIL NIL NIL NIL - 6 (43 44) (INDEX 5 KIND (EQV T 30)) (44 43) (108 107 106 105) ATP.MEMORY.NOBIND NIL ATP.MEMORY.NOBIND NIL NIL (114 113) (115) (116) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL - 6 (44 43) (INDEX 6 KIND (EQV T 30)) (43 44) (95 96 97 98) ATP.MEMORY.NOBIND NIL ATP.MEMORY.NOBIND NIL NIL (112 111) (115) (116) NIL NIL NIL NIL NIL NIL NIL NIL NIL T - 10 (43 44) (INDEX 7 KIND (EQV NIL 30)) (44 43) (99 100 101) ATP.MEMORY.NOBIND NIL ATP.MEMORY.NOBIND NIL NIL (110 109) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL CLAUSE 18 67 2 3 ((43 12 44 11)) NIL 102 NIL NIL NIL NIL NIL NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL R 18 60 2 3 ((43 46 44 45)) NIL 102 NIL NIL NIL NIL NIL NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL R 18 55 2 3 ((43 8 44 9)) NIL 102 NIL NIL NIL NIL NIL NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL R 18 79 3 2 ((44 3 43 5)) NIL 102 NIL NIL NIL NIL NIL NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL R 18 60 1 2 ((44 45 43 46)) NIL 102 NIL NIL NIL NIL NIL NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL R 18 55 1 2 ((44 8 43 9)) NIL 102 NIL NIL NIL NIL NIL NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL R 18 50 1 2 ((44 7 43 7)) NIL 102 NIL NIL NIL NIL NIL NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL R 18 79 3 1 ((43 3 44 5)) NIL 102 NIL NIL NIL NIL NIL NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL R 18 60 1 1 ((43 45 44 46)) NIL 102 NIL NIL NIL NIL NIL NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL R 18 55 1 1 ((43 8 44 9)) NIL 102 NIL NIL NIL NIL NIL NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL R 18 50 1 1 ((43 7 44 7)) NIL 102 NIL NIL NIL NIL NIL NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL R 18 102 3 1 ((43 11 44 12)) NIL 67 NIL NIL NIL NIL NIL NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL S 18 102 3 1 ((43 13 44 13)) NIL 52 NIL NIL NIL NIL NIL NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL S 18 102 2 1 ((44 3 43 4)) NIL 79 NIL NIL NIL NIL NIL NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL S 18 102 2 2 ((44 4 43 5)) NIL 79 NIL NIL NIL NIL NIL NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL S 18 102 1 1 ((43 3 44 4)) NIL 79 NIL NIL NIL NIL NIL NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL S 18 102 1 2 ((43 4 44 5)) NIL 79 NIL NIL NIL NIL NIL NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL S 18 102 2 1 ((44 43)) NIL 102 NIL NIL NIL NIL NIL NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL SI 18 102 2 1 ((104 43 103 44)) NIL 102 NIL NIL NIL NIL NIL NIL NIL ATP.MEMORY.NOBIND ATP.MEMORY.NOBIND NIL SIW 5 ANY "C_1" (DT*ST-KIND SYS-CONST) CONSTANT 5 ANY "C_2" (DT*ST-KIND SYS-CONST) CONSTANT 5 ANY "C_3" (DT*ST-KIND SYS-CONST) CONSTANT 5 ANY "C_4" (DT*ST-KIND SYS-CONST) CONSTANT 5 ANY "C_5" (DT*ST-KIND SYS-CONST) CONSTANT 5 ANY "C_6" (DT*ST-KIND SYS-CONST) CONSTANT 5 ANY "C_7" (DT*ST-KIND SYS-CONST) CONSTANT 5 ANY "C_8" (DT*ST-KIND SYS-CONST) CONSTANT 5 ANY "C_9" (DT*ST-KIND SYS-CONST) CONSTANT 5 ANY "C_10" (DT*ST-KIND SYS-CONST) CONSTANT))) (INCREMENT (- MEM*SIZE 10000)) COUNTER1) (MEM-RESET) (COND ((> MEM*SIZE 10000) (SETQ COUNTER1 121) (MAPC (FUNCTION (LAMBDA (RADDR) (SETF (AREF MEM*MEMORY (DECF COUNTER1)) (COND ((EQL RADDR (QUOTE ATP.MEMORY.NIL)) RADDR) ((EQL (QUOTE END) RADDR) RADDR) ((OR (EQL RADDR 0) (MINUSP RADDR)) RADDR) (T (+ RADDR INCREMENT)))))) ADDRLIST) (SETQ COUNTER1 MEM*SIZE) (MAPC (FUNCTION (LAMBDA (DATA) (SETF (AREF MEM*MEMORY (DECF COUNTER1)) DATA))) DATALIST)) (T (UNLESS (= MEM*SIZE 10000) (MEM-INITIALIZE 10000)) (SETQ COUNTER1 121) (MAPC (FUNCTION (LAMBDA (RADDR) (SETF (AREF MEM*MEMORY (DECF COUNTER1)) RADDR))) ADDRLIST) (SETQ COUNTER1 MEM*SIZE) (MAPC (FUNCTION (LAMBDA (DATA) (SETF (AREF MEM*MEMORY (DECF COUNTER1)) DATA))) DATALIST))) (SETQ MEM*NEXT.RADR (IF (> MEM*SIZE 10000) (+ 8284 INCREMENT) 8284)) (SETQ MEM*NEXT.VADR 121 MEM*REST (- MEM*NEXT.RADR MEM*NEXT.VADR -1) MEM*FIRST.REUSABLE.VADR 38 MEM*LAST.REUSABLE.VADR 41)) (PROGN (SETQ DT*SORT.ALL (QUOTE (ANY))) (SETQ DT*SORT.NR (QUOTE 2)) (SETQ DT*SORT.PROPERTIES (QUOTE (DT*MAX.SUBSORTS DT*LEAST.SUPERSORTS DT*TRANSITIVE.CLOSURE DT*INVERSE.TRANSITIVE.CLOSURE DT*MINIMAL.SUBSORTS DT*DIRECT.SUBSORTS DT*DIRECT.SUPERSORTS DT*DISJOINT.SORTS DT*COMPLETION.SORT))) (SETQ DT*SORT.COMMON.COMPUTE.FLAG (QUOTE NIL)) (SETQ DT*ELEMENT.PREDICATE (QUOTE NIL)) (SETQ DT*OMEGA.CONSTANT (QUOTE NIL)) (SETQ DT*VARIABLE.COUNTER (QUOTE 0)) (SETQ DT*CONSTANT.COUNTER (QUOTE 0)) (SETQ DT*CONSTANT.ALL (QUOTE (37 35 36 32 34 33 117 118 119 120))) (SETQ DT*ABBREVIATIONS (QUOTE NIL)) (SETQ DT*FUNCTION.COUNTER (QUOTE 0)) (SETQ DT*FUNCTION.ALL (QUOTE NIL)) (SETQ DT*FUNCTION.ADMISSIBLE.THEORIES (QUOTE (ASSOCIATIVE))) (SETQ DT*FUNCTION.ACTUAL.THEORIES (QUOTE NIL)) (SETQ DT*FUNCTION.WITH.ARGUMENT.SYMMETRIES (QUOTE NIL)) (SETQ DT*FUNCTION.COMPONENTS (QUOTE (PNAME ATTRIBUTES MAX.RANGE.SORT MAX.DOMAIN.SORTS MIN.RANGE.SORTS SORT.LIST SORT.LIST.INVERSE SORT.TREE.CALC ARGUMENT.SYMMETRIES ARITY G.L.B.OF.RANGES))) (SETQ DT*PREDICATE.ADMISSABLE.ATTRIBUTES (QUOTE (SYMMETRIC DEFINED REFLEXIVE))) (SETQ DT*PREDICATE.COUNTER (QUOTE 0)) (SETQ DT*EQUALITY.SYMBOLS (QUOTE ("=" ":=" "=:" ":=:"))) (SETQ DT*EQUALITY.PREDICATES (QUOTE (2))) (SETQ DT*NONEQUALITY.PREDICATES (QUOTE (27 20 19 16 10 6 1 0))) (SETQ DT*PREDICATE.ALL (QUOTE (27 20 19 16 10 6 2 1 0))) (SETQ DT*PREDICATE.WITH.ATTRIBUTES (QUOTE NIL)) (SETQ DT*PREDICATE.COMPONENTS (QUOTE (PNAME POSITIVE.OCCURRENCES NEGATIVE.OCCURRENCES DOMAINSORTS ATTRIBUTES REFL.CLAUSE +ROTHERSIDES -ROTHERSIDES +SOTHERSIDES -SOTHERSIDES +TOTHERSIDES -TOTHERSIDES))) (SETQ DT*TRUE.PREDICATE (QUOTE 0)) (SETQ DT*FALSE.PREDICATE (QUOTE 1)) (SETQ DT*UNI.CREATES.VARIABLES (QUOTE NIL)) (SETQ DT*SIGN.MINUS.SYMBOLS (QUOTE (- --))) (SETQ DT*SIGN.PLUS.SYMBOLS (QUOTE (+ ++))) (SETQ DT*SYMBOL.KINDS (QUOTE (CONSTANT.ALL FUNCTION.ALL PREDICATE.ALL)))) (PROGN) (PROGN (PROGN)) (PROGN (PROGN (SETF (GET (QUOTE ANY) (QUOTE DT*SORT.NUMBER)) (QUOTE 1)) (SETF (GET (QUOTE ANY) (QUOTE DT*DIRECT.SUBSORTS)) (QUOTE NIL)) (SETF (GET (QUOTE ANY) (QUOTE DT*TRANSITIVE.CLOSURE)) (QUOTE (ANY))) (SETF (GET (QUOTE ANY) (QUOTE DT*MAX.SUBSORTS)) (QUOTE ((ANY ANY)))) (SETF (GET (QUOTE ANY) (QUOTE DT*MINIMAL.SUBSORTS)) (QUOTE (ANY))) (SETF (GET (QUOTE ANY) (QUOTE DT*DIRECT.SUPERSORTS)) (QUOTE NIL)) (SETF (GET (QUOTE ANY) (QUOTE DT*INVERSE.TRANSITIVE.CLOSURE)) (QUOTE (ANY)))))) (PROGN (SETQ DS*RULES (QUOTE NIL)) (SETQ DS*FINITE.DOMAIN (QUOTE NIL))) (PROGN) (PROGN) (PROGN)) (PROGN (SETQ CG*RECOLOUR (QUOTE ((R . RD) (P . PD) (SI . SID) (RIW . RIWD)))) (SETQ CG*OBJECTCLASSES (QUOTE (CLAUSES R RIW RD S SI SIW SID T TI TIW P PIW PD RIWD))) (SETQ CG*SAVESTACK (QUOTE NIL)) (SETQ CG*GRAPH.REGISTER (QUOTE (PROGN (PROG ((ALL.PROPLIST (QUOTE (CLAUSES ((0) 0) R ((0) 0) RIW ((0) 0) RD ((0) 0) S ((0) 0) SI ((0) 0) SIW ((0) 0) SID ((0) 0) T ((0) 0) TI ((0) 0) TIW ((0) 0) P ((0) 0) PIW ((0) 0) PD ((0) 0) RIWD ((0) 0)))) (INSERTED.PROPLIST (QUOTE (CLAUSES ((0) 0) R ((0) 0) RIW ((0) 0) RD ((0) 0) S ((0) 0) SI ((0) 0) SIW ((0) 0) SID ((0) 0) T ((0) 0) TI ((0) 0) TIW ((0) 0) P ((0) 0) PIW ((0) 0) PD ((0) 0) RIWD ((0) 0)))) (CHANGED.PROPLIST (QUOTE (CLAUSES ((0) 0) R ((0) 0) RIW ((0) 0) RD ((0) 0) S ((0) 0) SI ((0) 0) SIW ((0) 0) SID ((0) 0) T ((0) 0) TI ((0) 0) TIW ((0) 0) P ((0) 0) PIW ((0) 0) PD ((0) 0) RIWD ((0) 0)))) (REMOVED.PROPLIST (QUOTE (CLAUSES ((0) 0) R ((0) 0) RIW ((0) 0) RD ((0) 0) S ((0) 0) SI ((0) 0) SIW ((0) 0) SID ((0) 0) T ((0) 0) TI ((0) 0) TIW ((0) 0) P ((0) 0) PIW ((0) 0) PD ((0) 0) RIWD ((0) 0))))) (SMAPC (FUNCTION (LAMBDA (OBJECTLIST) (RPLACA OBJECTLIST (LAST OBJECTLIST)))) (FUNCTION CDDR) (CDR ALL.PROPLIST)) (SETF (SYMBOL-PLIST (QUOTE CG*OBJECTS.ALL)) ALL.PROPLIST) (SMAPC (FUNCTION (LAMBDA (OBJECTLIST) (RPLACA OBJECTLIST (LAST OBJECTLIST)))) (FUNCTION CDDR) (CDR INSERTED.PROPLIST)) (SETF (SYMBOL-PLIST (QUOTE CG*OBJECTS.INSERTED)) INSERTED.PROPLIST) (SMAPC (FUNCTION (LAMBDA (OBJECTLIST) (RPLACA OBJECTLIST (LAST OBJECTLIST)))) (FUNCTION CDDR) (CDR CHANGED.PROPLIST)) (SETF (SYMBOL-PLIST (QUOTE CG*OBJECTS.CHANGED)) CHANGED.PROPLIST) (SMAPC (FUNCTION (LAMBDA (OBJECTLIST) (RPLACA OBJECTLIST (LAST OBJECTLIST)))) (FUNCTION CDDR) (CDR REMOVED.PROPLIST)) (SETF (SYMBOL-PLIST (QUOTE CG*OBJECTS.REMOVED)) REMOVED.PROPLIST))))) (SETQ CG*CHANGE.QUEUE.LITERALS (QUOTE (NIL))) (PROG ((ALL.PROPLIST (QUOTE (CLAUSES ((102) 8 48 50 52 55 60 67 79 102) R ((108) 22 56 61 68 69 70 80 81 82 83 84 85 101 100 99 98 97 96 95 105 106 107 108) RIW ((87) 3 71 86 87) RD ((0) 0) S ((114) 16 57 62 63 64 72 73 74 88 89 90 109 110 111 112 113 114) SI ((115) 2 91 115) SIW ((116) 2 92 116) SID ((0) 0) T ((0) 0) TI ((94) 3 75 93 94) TIW ((0) 0) P ((0) 0) PIW ((0) 0) PD ((0) 0) RIWD ((0) 0)))) (INSERTED.PROPLIST (QUOTE (CLAUSES ((0) 0) R ((0) 0) RIW ((0) 0) RD ((0) 0) S ((0) 0) SI ((0) 0) SIW ((0) 0) SID ((0) 0) T ((0) 0) TI ((0) 0) TIW ((0) 0) P ((0) 0) PIW ((0) 0) PD ((0) 0) RIWD ((0) 0)))) (CHANGED.PROPLIST (QUOTE (CLAUSES ((0) 0) R ((0) 0) RIW ((0) 0) RD ((0) 0) S ((0) 0) SI ((0) 0) SIW ((0) 0) SID ((0) 0) T ((0) 0) TI ((0) 0) TIW ((0) 0) P ((0) 0) PIW ((0) 0) PD ((0) 0) RIWD ((0) 0)))) (REMOVED.PROPLIST (QUOTE (CLAUSES ((0) 0) R ((0) 0) RIW ((0) 0) RD ((0) 0) S ((0) 0) SI ((0) 0) SIW ((0) 0) SID ((0) 0) T ((0) 0) TI ((0) 0) TIW ((0) 0) P ((0) 0) PIW ((0) 0) PD ((0) 0) RIWD ((0) 0))))) (SMAPC (FUNCTION (LAMBDA (OBJECTLIST) (RPLACA OBJECTLIST (LAST OBJECTLIST)))) (FUNCTION CDDR) (CDR ALL.PROPLIST)) (SETF (SYMBOL-PLIST (QUOTE CG*OBJECTS.ALL)) ALL.PROPLIST) (SMAPC (FUNCTION (LAMBDA (OBJECTLIST) (RPLACA OBJECTLIST (LAST OBJECTLIST)))) (FUNCTION CDDR) (CDR INSERTED.PROPLIST)) (SETF (SYMBOL-PLIST (QUOTE CG*OBJECTS.INSERTED)) INSERTED.PROPLIST) (SMAPC (FUNCTION (LAMBDA (OBJECTLIST) (RPLACA OBJECTLIST (LAST OBJECTLIST)))) (FUNCTION CDDR) (CDR CHANGED.PROPLIST)) (SETF (SYMBOL-PLIST (QUOTE CG*OBJECTS.CHANGED)) CHANGED.PROPLIST) (SMAPC (FUNCTION (LAMBDA (OBJECTLIST) (RPLACA OBJECTLIST (LAST OBJECTLIST)))) (FUNCTION CDDR) (CDR REMOVED.PROPLIST)) (SETF (SYMBOL-PLIST (QUOTE CG*OBJECTS.REMOVED)) REMOVED.PROPLIST)))) (PROGN (C "Operation save expression.") (SETQ OP*LINK.COLOURS.LITERAL.INITIAL (QUOTE (R S T RI SI TI RIW SIW TIW))) (SETQ OP*CLAUSECOUNTER (QUOTE 7)) (SETQ OP*COUNTER.RESOLVENTS (QUOTE 0)) (SETQ OP*COUNTER.PARAMODULANTS (QUOTE 0)) (SETQ OP*COUNTER.FACTORS (QUOTE 0)) (SETQ OP*COLOURS.CIRCLE.LINKS (QUOTE (SIW))))) (PROGN (SETQ CONS*CLAUSES (QUOTE (102))) (SETQ CONS*CLAUSECOUNTER (QUOTE NIL)) (SETQ CONS*LINK.COLOURS (QUOTE (R RIW S SI SIW T TI TIW P PIW))) (SETQ CONS*EQ.OCCURRENCES.NEG (QUOTE NIL)) (SETQ CONS*EQ.OCCURRENCES.POS (QUOTE NIL)) (SETQ CONS*RW.CLAUSES (QUOTE NIL)) (SETQ CONS*RW_EQ.OCCURRENCES.NEG (QUOTE NIL)) (SETQ CONS*RW_EQ.OCCURRENCES.POS (QUOTE NIL)) (SETQ CONS*NO.LINK.CLAUSES (QUOTE NIL)))))