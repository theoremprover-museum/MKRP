;;; -*- Package: MKRP; Base: 10; Mode: LISP; Syntax: Common-lisp -*-

(CONSTRUCTION  "Unix" "09-AUG,1991 01:02" 
              ("Edit:     Axioms and Theorems edited: 12-JUL,1990 22:30 "
               ))

(AXIOMS.INFIX    ((EX |X1,X2,X3,X4,X5,X6| WOLF (X1) AND FOX (X2) AND BIRD (X3) AND CATERPILLAR (X4) AND SNAIL (X5) AND GRAIN (X6))
                  (ALL X (WOLF (X) OR FOX (X) OR BIRD (X) OR CATERPILLAR (X) OR SNAIL (X)) IMPL ANIMAL (X))
                  (ALL X GRAIN (X) IMPL PLANT (X))
                  (ALL X ANIMAL (X) IMPL (ALL Y PLANT (Y) IMPL EATS (X Y)) OR (ALL Y ANIMAL (Y) AND SMALLER (Y X) AND (EX Z PLANT (Z) AND EATS (Y Z)) IMPL EATS (X Y)))
                  (ALL |X,Y| (CATERPILLAR (X) OR SNAIL (X)) AND BIRD (Y) IMPL SMALLER (X Y))
                  (ALL |X,Y| BIRD (X) AND FOX (Y) IMPL SMALLER (X Y))
                  (ALL |X,Y| FOX (X) AND WOLF (Y) IMPL SMALLER (X Y))
                  (ALL |X,Y| (FOX (X) OR GRAIN (X)) AND WOLF (Y) IMPL NOT EATS (Y X))
                  (ALL |X,Y| BIRD (X) AND CATERPILLAR (Y) IMPL EATS (X Y))
                  (ALL |X,Y| BIRD (X) AND SNAIL (Y) IMPL NOT EATS (X Y))
                  (ALL X (CATERPILLAR (X) OR SNAIL (X)) IMPL (EX Y PLANT (Y) AND EATS (X Y)))))

(THEOREMS.INFIX ((EX |X,Y| (ANIMAL (X) AND ANIMAL (Y) AND (EATS (X Y) AND (EX Z (GRAIN (Z) AND EATS (Y Z))))))))

(AXIOMS.PREFIX   ((EX 8 (EX 7 (EX 6 (EX 5 (EX 4 (EX 3 (AND (+ 9 (3) NIL) (AND (+ 10 (4) NIL) (AND (+ 11 (5) NIL) (AND (+ 12 (6) NIL) (AND (+ 13 (7) NIL) (+ 14 (8) NIL))))))))))))
                  (ALL 15 (IMPL (OR (+ 9 (15) NIL) (OR (+ 10 (15) NIL) (OR (+ 11 (15) NIL) (OR (+ 12 (15) NIL) (+ 13 (15) NIL))))) (+ 16 (15) NIL)))
                  (ALL 17 (IMPL (+ 14 (17) NIL) (+ 18 (17) NIL)))
                  (ALL 19 (IMPL (+ 16 (19) NIL) (OR (ALL 20 (IMPL (+ 18 (20) NIL) (+ 21 (19 20) NIL))) (ALL 22 (IMPL (AND (+ 16 (22) NIL) (AND (+ 23 (22 19) NIL) (EX 24 (AND (+ 18 (24) NIL) (+ 21 (22 24) NIL))))) (+ 21 (19 22) NIL))))))
                  (ALL 26 (ALL 25 (IMPL (AND (OR (+ 12 (25) NIL) (+ 13 (25) NIL)) (+ 11 (26) NIL)) (+ 23 (25 26) NIL))))
                  (ALL 28 (ALL 27 (IMPL (AND (+ 11 (27) NIL) (+ 10 (28) NIL)) (+ 23 (27 28) NIL))))
                  (ALL 30 (ALL 29 (IMPL (AND (+ 10 (29) NIL) (+ 9 (30) NIL)) (+ 23 (29 30) NIL))))
                  (ALL 32 (ALL 31 (IMPL (AND (OR (+ 10 (31) NIL) (+ 14 (31) NIL)) (+ 9 (32) NIL)) (NOT (+ 21 (32 31) NIL)))))
                  (ALL 34 (ALL 33 (IMPL (AND (+ 11 (33) NIL) (+ 12 (34) NIL)) (+ 21 (33 34) NIL))))
                  (ALL 36 (ALL 35 (IMPL (AND (+ 11 (35) NIL) (+ 13 (36) NIL)) (NOT (+ 21 (35 36) NIL)))))
                  (ALL 37 (IMPL (OR (+ 12 (37) NIL) (+ 13 (37) NIL)) (EX 38 (AND (+ 18 (38) NIL) (+ 21 (37 38) NIL)))))))

(THEOREMS.PREFIX ((EX 40 (EX 39 (AND (+ 16 (39) NIL) (AND (+ 16 (40) NIL) (AND (+ 21 (39 40) NIL) (EX 41 (AND (+ 14 (41) NIL) (+ 21 (40 41) NIL))))))))))

(OPTIONS (TWO_RULES)
          (TWO_RULES.MAXLEVEL . 1)
          (TWO_SUPPRESS.NORULES)
          (RED.I_CLAUSE.MULTIPLE.LITERALS . T)
          (RED.I_CLAUSE.PURITY . P)
          (RED.I_CLAUSE.TAUTOLOGY . T)
          (RED.I_CLAUSE.TAUTOLOGY.RECHECK . PARTIAL)
          (RED.I_CLAUSE.SUBSUMPTION . T)
          (RED.I_CLAUSE.SUBSUMPTION.RECHECK . PARTIAL)
          (RED.I_CLAUSE.REPL.FACTORING . T)
          (RED.I_CLAUSE.REPL.FACTORING.RECHECK . T)
          (RED.I_CLAUSE.REPL.RESOLUTION . SIMPLE)
          (RED.I_CLAUSE.REPL.RESOLUTION.RECHECK . T)
          (RED.I_CLAUSE.REWRITING . DEM)
          (RED.I_LINK.INCOMPATIBILITY . T)
          (RED.I_LINK.TAUTOLOGY . REMOVE-INHIBIT)
          (RED.I_LINK.TAUTOLOGY.RECHECK)
          (RED.I_LINK.SUBSUMPTION . REMOVE-INHIBIT)
          (RED.I_LINK.SUBSUMPTION.RECHECK)
          (RED.D_CLAUSE.MULTIPLE.LITERALS . T)
          (RED.D_CLAUSE.PURITY . P)
          (RED.D_CLAUSE.TAUTOLOGY . REMOVE-INHIBIT)
          (RED.D_CLAUSE.TAUTOLOGY.RECHECK)
          (RED.D_CLAUSE.SUBSUMPTION.FORWARD . REMOVE-INHIBIT)
          (RED.D_CLAUSE.SUBSUMPTION.BACKWARD . REMOVE)
          (RED.D_CLAUSE.SUBSUMPTION.RECHECK)
          (RED.D_CLAUSE.REPL.FACTORING . T)
          (RED.D_CLAUSE.REPL.FACTORING.RECHECK . T)
          (RED.D_CLAUSE.REPL.RESOLUTION . SIMPLE)
          (RED.D_CLAUSE.REPL.RESOLUTION.RECHECK . T)
          (RED.D_CLAUSE.REWRITING . DEM)
          (RED.D_LINK.INCOMPATIBILITY . T)
          (RED.D_LINK.TAUTOLOGY . REMOVE-INHIBIT)
          (RED.D_LINK.TAUTOLOGY.RECHECK)
          (RED.D_LINK.SUBSUMPTION . REMOVE-INHIBIT)
          (RED.D_LINK.SUBSUMPTION.RECHECK)
          (FAC_INITIAL)
          (FAC_EACH.STEP)
          (STR_RESOLUTION . SET-OF-SUPPORT)
          (STR_PAR-RES . 10)
          (STR_LINK.DEPTH)
          (STR_TERM.DEPTH)
          (STR_FINITE.DOMAIN . T)
          (STR_SORT.LITERALS)
          (TERM_UNITS . T)
          (TERM_ITERATIONS . 0)
          (TERM_SET.OF.SUPPORT)
          (TERM_BREADTH.FIRST)
          (ER_PARAMODULATION . HEURISTIC-COMPLETION)
          (ER_COMPLETION . UNFAILING)
          (ER_CP.REDUCTION . T)
          (ER_ORDERING . LEXICOGRAPHIC-RECURSIVE-PATH)
          (ER_OPERATOR.ORDERING * - + 0 1)
          (ER_KNUTH.BENDIX.WEIGHT (+ 1) (* 1) (- 0) (0 1) (1 1))
          (ER_POLYNOMIAL.VARIABLES X Y Z U V W)
          (ER_POLYNOMIAL.WEIGHT (+ (+ X (* 2 Y))) (* (+ X (* X Y))) (- (+ (* 2 X) -1)) (0 2) (1 2))
          (ER_LINK.DEPTH.WEIGHT . 0)
          (ER_UNIT.FOCUS . 0)
          (ER_UNIT.FOCUS.WEIGHT . 1)
          (ER_EQUATION.FOCUS . 2)
          (ER_NARROW.DEPTH . 0)
          (ER_NARROW.NEXT . DEPTH)
          (ER_NARROW.TEST NORM C DELTA SL N)
          (ER_NARROW.LIMIT.FACTOR . 0)
          (ER_COMPILE)
          (GEN_SPLITTING . 0)
          (GEN_PRESIMPLIFICATION . T)
          (GEN_MIN.EXPRESSION.LENGTH.FOR.FILE)
          (GEN_MIN.EXPRESSION.SIZE.FOR.FILE)
          (GEN_MANUAL.CONTROL . T)
          (GEN_MAXIMUM.STEPS)
          (GEN_GRAPH.SAVING)
          (GEN_SAVE.FILE . SAVEDEFAULT)
          (GEN_LISP.GARBAGE.COLLECTION)
          (GEN_COMMON.LISP . T)
          (TR_PREPROCESSING)
          (TR_STEP.MODE . LR)
          (TR_DUMP)
          (TR_CLAUSE.MODE . I)
          (TR_LINK.MODE . I)
          (TR_TRACE.FILE)
          (TR_TERMINAL . T)
          (PR_LATEX)
          (PR_INFIX.FORM . T)
          (PR_PREFIX.FORM)
          (PR_OPTIONS)
          (PR_AXIOM.CLAUSES . T)
          (PR_SYMBOLS)
          (PR_DIRECT.PROOF . T)
          (PR_VARIABLE.PRINT.NAMES X Y Z U V W XX YY ZZ UU VV WW XXX YYY ZZZ UUU VVV WWW)
          (PR_STATISTICS)
          (PR_PROTOCOL . T)
          (PR_LEFT.MARGIN . 3)
          (PR_RIGHT.MARGIN . 117)
          (PR_LINELENGTH . 114)
          (PR_LITERALS)
         )

(LINK.COLOURS (R RIW RD S SI SIW SID T TI TIW P PIW PD RIWD))

(AXIOMS (START.TIME 51140000)
        (PARTIAL   (CLAUSE 55 R.= AXIOM ((53 . ANY)) ((+ 2 (53 53)) ))(CLAUSE 56 A1 AXIOM () ((+ 9 (42)) )))
        (PARTIAL   (CLAUSE 57 A2 AXIOM () ((+ 10 (3)) )))
        (PARTIAL   (CLAUSE 58 A3 AXIOM () ((+ 11 (4)) )))
        (PARTIAL   (CLAUSE 59 A4 AXIOM () ((+ 12 (5)) )))
        (PARTIAL   (CLAUSE 60 A5 AXIOM () ((+ 13 (6)) )))
        (PARTIAL   (CLAUSE 61 A6 AXIOM () ((+ 14 (7)) )))
        (PARTIAL   (CLAUSE 63 A7 AXIOM ((15 . ANY))
                         ((- 9 (15)) (+ 16 (15)) )))
        (PARTIAL   (CLAUSE 66 A8 AXIOM ((8 . ANY))
                         ((- 10 (8)) (+ 16 (8)) )))
        (PARTIAL   (CLAUSE 70 A9 AXIOM ((43 . ANY))
                         ((- 11 (43)) (+ 16 (43)) )))
        (PARTIAL   (CLAUSE 75 A10 AXIOM ((44 . ANY))
                         ((- 12 (44)) (+ 16 (44)) )))
        (PARTIAL   (CLAUSE 81 A11 AXIOM ((45 . ANY))
                         ((- 13 (45)) (+ 16 (45)) )))
        (PARTIAL   (CLAUSE 88 A12 AXIOM ((17 . ANY))
                         ((- 14 (17)) (+ 18 (17)) )))
        (PARTIAL   (CLAUSE 91 A13 AXIOM ((37 . ANY))
                         ((- 12 (37)) (+ 18 ((50 37))) )))
        (PARTIAL   (CLAUSE 96 A14 AXIOM ((51 . ANY))
                         ((- 12 (51)) (+ 21 (51 (50 51))) )))
        (PARTIAL   (CLAUSE 101 A15 AXIOM ((38 . ANY))
                         ((- 13 (38)) (+ 18 ((50 38))) )))
        (PARTIAL   (CLAUSE 107 A16 AXIOM ((52 . ANY))
                         ((- 13 (52)) (+ 21 (52 (50 52))) )))
        (PARTIAL   (CLAUSE 114 A17 AXIOM ((26 . ANY)(25 . ANY))
                         ((- 12 (25)) (- 11 (26)) (+ 23 (25 26)) )))
        (PARTIAL   (CLAUSE 123 A18 AXIOM ((46 . ANY)(47 . ANY))
                         ((- 13 (47)) (- 11 (46)) (+ 23 (47 46)) )))
        (PARTIAL   (CLAUSE 134 A19 AXIOM ((28 . ANY)(27 . ANY))
                         ((- 11 (27)) (- 10 (28)) (+ 23 (27 28)) )))
        (PARTIAL   (CLAUSE 145 A20 AXIOM ((30 . ANY)(29 . ANY))
                         ((- 10 (29)) (- 9 (30)) (+ 23 (29 30)) )))
        (PARTIAL   (CLAUSE 156 A21 AXIOM ((32 . ANY)(31 . ANY))
                         ((- 10 (31)) (- 9 (32)) (- 21 (32 31)) )))
        (PARTIAL   (CLAUSE 168 A22 AXIOM ((48 . ANY)(49 . ANY))
                         ((- 14 (49)) (- 9 (48)) (- 21 (48 49)) )))
        (PARTIAL   (CLAUSE 180 A23 AXIOM ((34 . ANY)(33 . ANY))
                         ((- 11 (33)) (- 12 (34)) (+ 21 (33 34)) )))
        (PARTIAL   (CLAUSE 197 A24 AXIOM ((36 . ANY)(35 . ANY))
                         ((- 11 (35)) (- 13 (36)) (- 21 (35 36)) )))
        (PARTIAL   (CLAUSE 218 A25 AXIOM ((24 . ANY)(22 . ANY)(20 . ANY)(19 . ANY))
                         ((- 16 (19)) (- 18 (20)) (+ 21 (19 20)) (- 16 (22)) (- 23 (22 19)) (- 18 (24)) (- 21 (22 24)) (+ 21 (19 22)) )))
        (END.TIME 59550000)
        (FINAL 55 56 57 58 59 60 61 63 66 70 75 81 88 91 96 101 107 114 123 134 145 156 168 180 197 218)
        (SYMBOLS 
                 (LET (NEW.ADDRESS)
          (LIST (CONS   23 (DT-PREDICATE.CREATE "SMALLER" '(ANY ANY)))
                         (CONS   21 (DT-PREDICATE.CREATE "EATS" '(ANY ANY)))
                         (CONS   18 (DT-PREDICATE.CREATE "PLANT" '(ANY)))
                         (CONS   16 (DT-PREDICATE.CREATE "ANIMAL" '(ANY)))
                         (CONS   14 (DT-PREDICATE.CREATE "GRAIN" '(ANY)))
                         (CONS   13 (DT-PREDICATE.CREATE "SNAIL" '(ANY)))
                         (CONS   12 (DT-PREDICATE.CREATE "CATERPILLAR" '(ANY)))
                         (CONS   11 (DT-PREDICATE.CREATE "BIRD" '(ANY)))
                         (CONS   10 (DT-PREDICATE.CREATE "FOX" '(ANY)))
                         (CONS    9 (DT-PREDICATE.CREATE "WOLF" '(ANY)))
                         (PROG1 (CONS    2 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "=" '(ANY ANY))))
                                (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED SYMMETRIC REFLEXIVE SYMMETRIC REFLEXIVE)))
                         (PROG1 (CONS    1 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "FALSE" 'NIL)))
                                (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
                         (PROG1 (CONS    0 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "TRUE" 'NIL)))
                                (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
                         (CONS    7 (DT-CONSTANT.CREATE "c_6" 'ANY))
                         (CONS    6 (DT-CONSTANT.CREATE "c_5" 'ANY))
                         (CONS    5 (DT-CONSTANT.CREATE "c_4" 'ANY))
                         (CONS    4 (DT-CONSTANT.CREATE "c_3" 'ANY))
                         (CONS    3 (DT-CONSTANT.CREATE "c_2" 'ANY))
                         (CONS   42 (DT-CONSTANT.CREATE "c_1" 'ANY))
                         (CONS   50 (DT-FUNCTION.CREATE "f_1" 'ANY '(ANY) 'NIL)))))
        (RESULT))

(THEOREMS (SPLITPART.IDENTIFIER 1)
          (START.TIME 59650000)
          (PARTIAL   (CLAUSE 270 T26 THEOREM ((41 . ANY)(40 . ANY)(39 . ANY))
                           ((- 16 (39)) (- 16 (40)) (- 21 (39 40)) (- 14 (41)) (- 21 (40 41)) )))
          (INITIAL   (CLAUSE 55 R.= AXIOM ((53 . ANY)) ((+ 2 (53 53)) ))
(CLAUSE 56 A1 AXIOM () ((+ 9 (42)) ))
(CLAUSE 57 A2 AXIOM () ((+ 10 (3)) ))
(CLAUSE 58 A3 AXIOM () ((+ 11 (4)) ))
(CLAUSE 59 A4 AXIOM () ((+ 12 (5)) ))
(CLAUSE 60 A5 AXIOM () ((+ 13 (6)) ))
(CLAUSE 61 A6 AXIOM () ((+ 14 (7)) ))
(CLAUSE 63 A7 AXIOM ((15 . ANY))
                           ((- 9 (15)) (+ 16 (15)) ))
(CLAUSE 66 A8 AXIOM ((8 . ANY))
                           ((- 10 (8)) (+ 16 (8)) ))
(CLAUSE 70 A9 AXIOM ((43 . ANY))
                           ((- 11 (43)) (+ 16 (43)) ))
(CLAUSE 75 A10 AXIOM ((44 . ANY))
                           ((- 12 (44)) (+ 16 (44)) ))
(CLAUSE 81 A11 AXIOM ((45 . ANY))
                           ((- 13 (45)) (+ 16 (45)) ))
(CLAUSE 88 A12 AXIOM ((17 . ANY))
                           ((- 14 (17)) (+ 18 (17)) ))
(CLAUSE 91 A13 AXIOM ((37 . ANY))
                           ((- 12 (37)) (+ 18 ((50 37))) ))
(CLAUSE 96 A14 AXIOM ((51 . ANY))
                           ((- 12 (51)) (+ 21 (51 (50 51))) ))
(CLAUSE 101 A15 AXIOM ((38 . ANY))
                           ((- 13 (38)) (+ 18 ((50 38))) ))
(CLAUSE 107 A16 AXIOM ((52 . ANY))
                           ((- 13 (52)) (+ 21 (52 (50 52))) ))
(CLAUSE 123 A18 AXIOM ((46 . ANY)(47 . ANY))
                           ((- 13 (47)) (- 11 (46)) (+ 23 (47 46)) ))
(CLAUSE 134 A19 AXIOM ((28 . ANY)(27 . ANY))
                           ((- 11 (27)) (- 10 (28)) (+ 23 (27 28)) ))
(CLAUSE 145 A20 AXIOM ((30 . ANY)(29 . ANY))
                           ((- 10 (29)) (- 9 (30)) (+ 23 (29 30)) ))
(CLAUSE 156 A21 AXIOM ((32 . ANY)(31 . ANY))
                           ((- 10 (31)) (- 9 (32)) (- 21 (32 31)) ))
(CLAUSE 168 A22 AXIOM ((48 . ANY)(49 . ANY))
                           ((- 14 (49)) (- 9 (48)) (- 21 (48 49)) ))
(CLAUSE 180 A23 AXIOM ((34 . ANY)(33 . ANY))
                           ((- 11 (33)) (- 12 (34)) (+ 21 (33 34)) ))
(CLAUSE 197 A24 AXIOM ((36 . ANY)(35 . ANY))
                           ((- 11 (35)) (- 13 (36)) (- 21 (35 36)) ))
(CLAUSE 218 A25 AXIOM ((24 . ANY)(22 . ANY)(20 . ANY)(19 . ANY))
                           ((- 16 (19)) (- 18 (20)) (+ 21 (19 20)) (- 16 (22)) (- 23 (22 19)) (- 18 (24)) (- 21 (22 24)) (+ 21 (19 22)) ))
(CLAUSE 270 T26 THEOREM ((41 . ANY)(40 . ANY)(39 . ANY))
                           ((- 16 (39)) (- 16 (40)) (- 21 (39 40)) (- 14 (41)) (- 21 (40 41)) )) )
          (END.TIME 63930000)
          (FINAL 55 56 57 58 59 60 61 63 66 70 75 81 88 91 96 101 107 123 134 145 156 168 180 197 218 270)
          (SYMBOLS 
                   (LET (NEW.ADDRESS)
          (LIST (CONS   23 (DT-PREDICATE.CREATE "SMALLER" '(ANY ANY)))
                           (CONS   21 (DT-PREDICATE.CREATE "EATS" '(ANY ANY)))
                           (CONS   18 (DT-PREDICATE.CREATE "PLANT" '(ANY)))
                           (CONS   16 (DT-PREDICATE.CREATE "ANIMAL" '(ANY)))
                           (CONS   14 (DT-PREDICATE.CREATE "GRAIN" '(ANY)))
                           (CONS   13 (DT-PREDICATE.CREATE "SNAIL" '(ANY)))
                           (CONS   12 (DT-PREDICATE.CREATE "CATERPILLAR" '(ANY)))
                           (CONS   11 (DT-PREDICATE.CREATE "BIRD" '(ANY)))
                           (CONS   10 (DT-PREDICATE.CREATE "FOX" '(ANY)))
                           (CONS    9 (DT-PREDICATE.CREATE "WOLF" '(ANY)))
                           (PROG1 (CONS    2 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "=" '(ANY ANY))))
                                  (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED SYMMETRIC REFLEXIVE SYMMETRIC REFLEXIVE)))
                           (PROG1 (CONS    1 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "FALSE" 'NIL)))
                                  (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
                           (PROG1 (CONS    0 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "TRUE" 'NIL)))
                                  (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
                           (CONS    7 (DT-CONSTANT.CREATE "c_6" 'ANY))
                           (CONS    6 (DT-CONSTANT.CREATE "c_5" 'ANY))
                           (CONS    5 (DT-CONSTANT.CREATE "c_4" 'ANY))
                           (CONS    4 (DT-CONSTANT.CREATE "c_3" 'ANY))
                           (CONS    3 (DT-CONSTANT.CREATE "c_2" 'ANY))
                           (CONS   42 (DT-CONSTANT.CREATE "c_1" 'ANY))
                           (CONS   50 (DT-FUNCTION.CREATE "f_1" 'ANY '(ANY) 'NIL)))))
          (RESULT))
(indices ((270 47 48 49 50 51) (218 15 16 17 18 19 20 21 22) (197 40 41 42) (180 37 38 39) (168 34 35 36) (156 33 35 36) (145 30 31 32) (134 27 28 29) (123 24 25 26) (114 23 25 26) (107 44 46) (101 44 45) (96 43 46) (91 43 45) (88 13 14) (81 11 12) (75 10 12) (70 9 12) (66 8 12) (63 7 12) (61 6) (60 5) (59 4) (58 3) (57 2) (56 1) (55 NIL)))

(SPLITPARTS "Unix" "09-AUG,1991 01:02" NIL)

(OPTIONS (TWO_RULES)
          (TWO_RULES.MAXLEVEL . 1)
          (TWO_SUPPRESS.NORULES)
          (RED.I_CLAUSE.MULTIPLE.LITERALS . T)
          (RED.I_CLAUSE.PURITY . P)
          (RED.I_CLAUSE.TAUTOLOGY . T)
          (RED.I_CLAUSE.TAUTOLOGY.RECHECK . PARTIAL)
          (RED.I_CLAUSE.SUBSUMPTION . T)
          (RED.I_CLAUSE.SUBSUMPTION.RECHECK . PARTIAL)
          (RED.I_CLAUSE.REPL.FACTORING . T)
          (RED.I_CLAUSE.REPL.FACTORING.RECHECK . T)
          (RED.I_CLAUSE.REPL.RESOLUTION . SIMPLE)
          (RED.I_CLAUSE.REPL.RESOLUTION.RECHECK . T)
          (RED.I_CLAUSE.REWRITING . DEM)
          (RED.I_LINK.INCOMPATIBILITY . T)
          (RED.I_LINK.TAUTOLOGY . REMOVE-INHIBIT)
          (RED.I_LINK.TAUTOLOGY.RECHECK)
          (RED.I_LINK.SUBSUMPTION . REMOVE-INHIBIT)
          (RED.I_LINK.SUBSUMPTION.RECHECK)
          (RED.D_CLAUSE.MULTIPLE.LITERALS . T)
          (RED.D_CLAUSE.PURITY . P)
          (RED.D_CLAUSE.TAUTOLOGY . REMOVE-INHIBIT)
          (RED.D_CLAUSE.TAUTOLOGY.RECHECK)
          (RED.D_CLAUSE.SUBSUMPTION.FORWARD . REMOVE-INHIBIT)
          (RED.D_CLAUSE.SUBSUMPTION.BACKWARD . REMOVE)
          (RED.D_CLAUSE.SUBSUMPTION.RECHECK)
          (RED.D_CLAUSE.REPL.FACTORING . T)
          (RED.D_CLAUSE.REPL.FACTORING.RECHECK . T)
          (RED.D_CLAUSE.REPL.RESOLUTION . SIMPLE)
          (RED.D_CLAUSE.REPL.RESOLUTION.RECHECK . T)
          (RED.D_CLAUSE.REWRITING . DEM)
          (RED.D_LINK.INCOMPATIBILITY . T)
          (RED.D_LINK.TAUTOLOGY . REMOVE-INHIBIT)
          (RED.D_LINK.TAUTOLOGY.RECHECK)
          (RED.D_LINK.SUBSUMPTION . REMOVE-INHIBIT)
          (RED.D_LINK.SUBSUMPTION.RECHECK)
          (FAC_INITIAL)
          (FAC_EACH.STEP)
          (STR_RESOLUTION . SET-OF-SUPPORT)
          (STR_PAR-RES . 10)
          (STR_LINK.DEPTH)
          (STR_TERM.DEPTH)
          (STR_FINITE.DOMAIN . T)
          (STR_SORT.LITERALS)
          (TERM_UNITS . T)
          (TERM_ITERATIONS . 0)
          (TERM_SET.OF.SUPPORT)
          (TERM_BREADTH.FIRST)
          (ER_PARAMODULATION . HEURISTIC-COMPLETION)
          (ER_COMPLETION . UNFAILING)
          (ER_CP.REDUCTION . T)
          (ER_ORDERING . LEXICOGRAPHIC-RECURSIVE-PATH)
          (ER_OPERATOR.ORDERING * - + 0 1)
          (ER_KNUTH.BENDIX.WEIGHT (+ 1) (* 1) (- 0) (0 1) (1 1))
          (ER_POLYNOMIAL.VARIABLES X Y Z U V W)
          (ER_POLYNOMIAL.WEIGHT (+ (+ X (* 2 Y))) (* (+ X (* X Y))) (- (+ (* 2 X) -1)) (0 2) (1 2))
          (ER_LINK.DEPTH.WEIGHT . 0)
          (ER_UNIT.FOCUS . 0)
          (ER_UNIT.FOCUS.WEIGHT . 1)
          (ER_EQUATION.FOCUS . 2)
          (ER_NARROW.DEPTH . 0)
          (ER_NARROW.NEXT . DEPTH)
          (ER_NARROW.TEST NORM C DELTA SL N)
          (ER_NARROW.LIMIT.FACTOR . 0)
          (ER_COMPILE)
          (GEN_SPLITTING . 0)
          (GEN_PRESIMPLIFICATION . T)
          (GEN_MIN.EXPRESSION.LENGTH.FOR.FILE)
          (GEN_MIN.EXPRESSION.SIZE.FOR.FILE)
          (GEN_MANUAL.CONTROL . T)
          (GEN_MAXIMUM.STEPS)
          (GEN_GRAPH.SAVING)
          (GEN_SAVE.FILE . SAVEDEFAULT)
          (GEN_LISP.GARBAGE.COLLECTION)
          (GEN_COMMON.LISP . T)
          (TR_PREPROCESSING)
          (TR_STEP.MODE . LR)
          (TR_DUMP)
          (TR_CLAUSE.MODE . I)
          (TR_LINK.MODE . I)
          (TR_TRACE.FILE)
          (TR_TERMINAL . T)
          (PR_LATEX)
          (PR_INFIX.FORM . T)
          (PR_PREFIX.FORM)
          (PR_OPTIONS)
          (PR_AXIOM.CLAUSES . T)
          (PR_SYMBOLS)
          (PR_DIRECT.PROOF . T)
          (PR_VARIABLE.PRINT.NAMES X Y Z U V W XX YY ZZ UU VV WW XXX YYY ZZZ UUU VVV WWW)
          (PR_STATISTICS)
          (PR_PROTOCOL . T)
          (PR_LEFT.MARGIN . 3)
          (PR_RIGHT.MARGIN . 117)
          (PR_LINELENGTH . 114)
          (PR_LITERALS)
         )

(REFUTATION (START.TIME 64350000)

(OPTIONS (TWO_RULES)
          (TWO_RULES.MAXLEVEL . 1)
          (TWO_SUPPRESS.NORULES)
          (RED.I_CLAUSE.MULTIPLE.LITERALS . T)
          (RED.I_CLAUSE.PURITY . P)
          (RED.I_CLAUSE.TAUTOLOGY . T)
          (RED.I_CLAUSE.TAUTOLOGY.RECHECK . PARTIAL)
          (RED.I_CLAUSE.SUBSUMPTION . T)
          (RED.I_CLAUSE.SUBSUMPTION.RECHECK . PARTIAL)
          (RED.I_CLAUSE.REPL.FACTORING . T)
          (RED.I_CLAUSE.REPL.FACTORING.RECHECK . T)
          (RED.I_CLAUSE.REPL.RESOLUTION . SIMPLE)
          (RED.I_CLAUSE.REPL.RESOLUTION.RECHECK . T)
          (RED.I_CLAUSE.REWRITING . DEM)
          (RED.I_LINK.INCOMPATIBILITY . T)
          (RED.I_LINK.TAUTOLOGY . REMOVE-INHIBIT)
          (RED.I_LINK.TAUTOLOGY.RECHECK)
          (RED.I_LINK.SUBSUMPTION . REMOVE-INHIBIT)
          (RED.I_LINK.SUBSUMPTION.RECHECK)
          (RED.D_CLAUSE.MULTIPLE.LITERALS . T)
          (RED.D_CLAUSE.PURITY . P)
          (RED.D_CLAUSE.TAUTOLOGY . REMOVE-INHIBIT)
          (RED.D_CLAUSE.TAUTOLOGY.RECHECK)
          (RED.D_CLAUSE.SUBSUMPTION.FORWARD . REMOVE-INHIBIT)
          (RED.D_CLAUSE.SUBSUMPTION.BACKWARD . REMOVE)
          (RED.D_CLAUSE.SUBSUMPTION.RECHECK)
          (RED.D_CLAUSE.REPL.FACTORING . T)
          (RED.D_CLAUSE.REPL.FACTORING.RECHECK . T)
          (RED.D_CLAUSE.REPL.RESOLUTION . SIMPLE)
          (RED.D_CLAUSE.REPL.RESOLUTION.RECHECK . T)
          (RED.D_CLAUSE.REWRITING . DEM)
          (RED.D_LINK.INCOMPATIBILITY . T)
          (RED.D_LINK.TAUTOLOGY . REMOVE-INHIBIT)
          (RED.D_LINK.TAUTOLOGY.RECHECK)
          (RED.D_LINK.SUBSUMPTION . REMOVE-INHIBIT)
          (RED.D_LINK.SUBSUMPTION.RECHECK)
          (FAC_INITIAL)
          (FAC_EACH.STEP)
          (STR_RESOLUTION . SET-OF-SUPPORT)
          (STR_PAR-RES . 10)
          (STR_LINK.DEPTH)
          (STR_TERM.DEPTH)
          (STR_FINITE.DOMAIN . T)
          (STR_SORT.LITERALS)
          (TERM_UNITS . T)
          (TERM_ITERATIONS . 0)
          (TERM_SET.OF.SUPPORT)
          (TERM_BREADTH.FIRST)
          (ER_PARAMODULATION . HEURISTIC-COMPLETION)
          (ER_COMPLETION . UNFAILING)
          (ER_CP.REDUCTION . T)
          (ER_ORDERING . LEXICOGRAPHIC-RECURSIVE-PATH)
          (ER_OPERATOR.ORDERING * - + 0 1)
          (ER_KNUTH.BENDIX.WEIGHT (+ 1) (* 1) (- 0) (0 1) (1 1))
          (ER_POLYNOMIAL.VARIABLES X Y Z U V W)
          (ER_POLYNOMIAL.WEIGHT (+ (+ X (* 2 Y))) (* (+ X (* X Y))) (- (+ (* 2 X) -1)) (0 2) (1 2))
          (ER_LINK.DEPTH.WEIGHT . 0)
          (ER_UNIT.FOCUS . 0)
          (ER_UNIT.FOCUS.WEIGHT . 1)
          (ER_EQUATION.FOCUS . 2)
          (ER_NARROW.DEPTH . 0)
          (ER_NARROW.NEXT . DEPTH)
          (ER_NARROW.TEST NORM C DELTA SL N)
          (ER_NARROW.LIMIT.FACTOR . 0)
          (ER_COMPILE)
          (GEN_SPLITTING . 0)
          (GEN_PRESIMPLIFICATION . T)
          (GEN_MIN.EXPRESSION.LENGTH.FOR.FILE)
          (GEN_MIN.EXPRESSION.SIZE.FOR.FILE)
          (GEN_MANUAL.CONTROL . T)
          (GEN_MAXIMUM.STEPS)
          (GEN_GRAPH.SAVING)
          (GEN_SAVE.FILE . SAVEDEFAULT)
          (GEN_LISP.GARBAGE.COLLECTION)
          (GEN_COMMON.LISP . T)
          (TR_PREPROCESSING)
          (TR_STEP.MODE . LR)
          (TR_DUMP)
          (TR_CLAUSE.MODE . I)
          (TR_LINK.MODE . I)
          (TR_TRACE.FILE)
          (TR_TERMINAL . T)
          (PR_LATEX)
          (PR_INFIX.FORM . T)
          (PR_PREFIX.FORM)
          (PR_OPTIONS)
          (PR_AXIOM.CLAUSES . T)
          (PR_SYMBOLS)
          (PR_DIRECT.PROOF . T)
          (PR_VARIABLE.PRINT.NAMES X Y Z U V W XX YY ZZ UU VV WW XXX YYY ZZZ UUU VVV WWW)
          (PR_STATISTICS)
          (PR_PROTOCOL . T)
          (PR_LEFT.MARGIN . 3)
          (PR_RIGHT.MARGIN . 117)
          (PR_LINELENGTH . 114)
          (PR_LITERALS)
         )
            (INITIAL   (CLAUSE 55 R.= AXIOM ((53 . ANY)) ((+ 2 (53 53)) ))
(CLAUSE 56 A1 AXIOM () ((+ 9 (42)) ))
(CLAUSE 57 A2 AXIOM () ((+ 10 (3)) ))
(CLAUSE 58 A3 AXIOM () ((+ 11 (4)) ))
(CLAUSE 59 A4 AXIOM () ((+ 12 (5)) ))
(CLAUSE 60 A5 AXIOM () ((+ 13 (6)) ))
(CLAUSE 61 A6 AXIOM () ((+ 14 (7)) ))
(CLAUSE 63 A7 AXIOM ((15 . ANY))
                             ((- 9 (15)) (+ 16 (15)) ))
(CLAUSE 66 A8 AXIOM ((8 . ANY))
                             ((- 10 (8)) (+ 16 (8)) ))
(CLAUSE 70 A9 AXIOM ((43 . ANY))
                             ((- 11 (43)) (+ 16 (43)) ))
(CLAUSE 75 A10 AXIOM ((44 . ANY))
                             ((- 12 (44)) (+ 16 (44)) ))
(CLAUSE 81 A11 AXIOM ((45 . ANY))
                             ((- 13 (45)) (+ 16 (45)) ))
(CLAUSE 88 A12 AXIOM ((17 . ANY))
                             ((- 14 (17)) (+ 18 (17)) ))
(CLAUSE 91 A13 AXIOM ((37 . ANY))
                             ((- 12 (37)) (+ 18 ((50 37))) ))
(CLAUSE 96 A14 AXIOM ((51 . ANY))
                             ((- 12 (51)) (+ 21 (51 (50 51))) ))
(CLAUSE 101 A15 AXIOM ((38 . ANY))
                             ((- 13 (38)) (+ 18 ((50 38))) ))
(CLAUSE 107 A16 AXIOM ((52 . ANY))
                             ((- 13 (52)) (+ 21 (52 (50 52))) ))
(CLAUSE 123 A18 AXIOM ((46 . ANY)(47 . ANY))
                             ((- 13 (47)) (- 11 (46)) (+ 23 (47 46)) ))
(CLAUSE 134 A19 AXIOM ((28 . ANY)(27 . ANY))
                             ((- 11 (27)) (- 10 (28)) (+ 23 (27 28)) ))
(CLAUSE 145 A20 AXIOM ((30 . ANY)(29 . ANY))
                             ((- 10 (29)) (- 9 (30)) (+ 23 (29 30)) ))
(CLAUSE 156 A21 AXIOM ((32 . ANY)(31 . ANY))
                             ((- 10 (31)) (- 9 (32)) (- 21 (32 31)) ))
(CLAUSE 168 A22 AXIOM ((48 . ANY)(49 . ANY))
                             ((- 14 (49)) (- 9 (48)) (- 21 (48 49)) ))
(CLAUSE 180 A23 AXIOM ((34 . ANY)(33 . ANY))
                             ((- 11 (33)) (- 12 (34)) (+ 21 (33 34)) ))
(CLAUSE 197 A24 AXIOM ((36 . ANY)(35 . ANY))
                             ((- 11 (35)) (- 13 (36)) (- 21 (35 36)) ))
(CLAUSE 218 A25 AXIOM ((24 . ANY)(22 . ANY)(20 . ANY)(19 . ANY))
                             ((- 16 (19)) (- 18 (20)) (+ 21 (19 20)) (- 16 (22)) (- 23 (22 19)) (- 18 (24)) (- 21 (22 24)) (+ 21 (19 22)) ))
(CLAUSE 270 T26 THEOREM ((41 . ANY)(40 . ANY)(39 . ANY))
                             ((- 16 (39)) (- 16 (40)) (- 21 (39 40)) (- 14 (41)) (- 21 (40 41)) )) )
            (OPERATION (CLAUSE 317 R1 (270 61) ((321 . ANY)(320 . ANY))
                               ((- 16 (320)) (- 16 (321)) (- 21 (320 321)) (- 21 (321 7)) ))
                       (RESOLUTION 61 1 270 4 NIL (41 7) 317))
            (OPERATION (CLAUSE 344 R1.F1 (317) ()
                               ((- 21 (7 7)) (- 16 (7)) ))
                       (FACTORIZATION 317 NIL (321 7 320 7) 344))
            (OPERATION (CLAUSE 370 R2 (197 58) ((373 . ANY))
                               ((- 13 (373)) (- 21 (4 373)) ))
                       (RESOLUTION 58 1 197 1 NIL (35 4) 370))
            (OPERATION (CLAUSE 328 R3 (370 60) () ((- 21 (4 6)) ))
                       (RESOLUTION 60 1 370 1 NIL (373 6) 328))
            (OPERATION (CLAUSE 374 R4 (180 58) ((212 . ANY))
                               ((- 12 (212)) (+ 21 (4 212)) ))
                       (RESOLUTION 58 1 180 1 NIL (33 4) 374))
            (OPERATION (CLAUSE 360 R5 (374 59) () ((+ 21 (4 5)) ))
                       (RESOLUTION 59 1 374 1 NIL (212 5) 360))
            (OPERATION (CLAUSE 285 R6 (168 61) ((371 . ANY))
                               ((- 9 (371)) (- 21 (371 7)) ))
                       (RESOLUTION 61 1 168 1 NIL (49 7) 285))
            (OPERATION (CLAUSE 182 R7 (285 56) () ((- 21 (42 7)) ))
                       (RESOLUTION 56 1 285 1 NIL (371 42) 182))
            (OPERATION (CLAUSE 293 R8 (156 57) ((295 . ANY))
                               ((- 9 (295)) (- 21 (295 3)) ))
                       (RESOLUTION 57 1 156 1 NIL (31 3) 293))
            (OPERATION (CLAUSE 120 R9 (293 56) () ((- 21 (42 3)) ))
                       (RESOLUTION 56 1 293 1 NIL (295 42) 120))
            (OPERATION (CLAUSE 127 R10 (145 57) ((298 . ANY))
                               ((- 9 (298)) (+ 23 (3 298)) ))
                       (RESOLUTION 57 1 145 1 NIL (29 3) 127))
            (OPERATION (CLAUSE 206 R11 (127 56) () ((+ 23 (3 42)) ))
                       (RESOLUTION 56 1 127 1 NIL (298 42) 206))
            (OPERATION (CLAUSE 192 R12 (134 58) ((162 . ANY))
                               ((- 10 (162)) (+ 23 (4 162)) ))
                       (RESOLUTION 58 1 134 1 NIL (27 4) 192))
            (OPERATION (CLAUSE 175 R13 (192 57) () ((+ 23 (4 3)) ))
                       (RESOLUTION 57 1 192 1 NIL (162 3) 175))
            (OPERATION (CLAUSE 153 R14 (123 60) ((147 . ANY))
                               ((- 11 (147)) (+ 23 (6 147)) ))
                       (RESOLUTION 60 1 123 1 NIL (47 6) 153))
            (OPERATION (CLAUSE 126 R15 (153 58) () ((+ 23 (6 4)) ))
                       (RESOLUTION 58 1 153 1 NIL (147 4) 126))
            (OPERATION (CLAUSE 136 R16 (107 60) () ((+ 21 (6 (50 6))) ))
                       (RESOLUTION 60 1 107 1 NIL (52 6) 136))
            (OPERATION (CLAUSE 313 R17 (101 60) () ((+ 18 ((50 6))) ))
                       (RESOLUTION 60 1 101 1 NIL (38 6) 313))
            (OPERATION (CLAUSE 363 R18 (96 59) () ((+ 21 (5 (50 5))) ))
                       (RESOLUTION 59 1 96 1 NIL (51 5) 363))
            (OPERATION (CLAUSE 108 R19 (91 59) () ((+ 18 ((50 5))) ))
                       (RESOLUTION 59 1 91 1 NIL (37 5) 108))
            (OPERATION (CLAUSE 104 R20 (88 61) () ((+ 18 (7)) ))
                       (RESOLUTION 61 1 88 1 NIL (17 7) 104))
            (OPERATION (CLAUSE 221 R21 (81 60) () ((+ 16 (6)) ))
                       (RESOLUTION 60 1 81 1 NIL (45 6) 221))
            (OPERATION (CLAUSE 151 R22 (75 59) () ((+ 16 (5)) ))
                       (RESOLUTION 59 1 75 1 NIL (44 5) 151))
            (OPERATION (CLAUSE 288 R23 (70 58) () ((+ 16 (4)) ))
                       (RESOLUTION 58 1 70 1 NIL (43 4) 288))
            (OPERATION (CLAUSE 369 R24 (66 57) () ((+ 16 (3)) ))
                       (RESOLUTION 57 1 66 1 NIL (8 3) 369))
            (OPERATION (CLAUSE 341 R25 (63 56) () ((+ 16 (42)) ))
                       (RESOLUTION 56 1 63 1 NIL (15 42) 341))