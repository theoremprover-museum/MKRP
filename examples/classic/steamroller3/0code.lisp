;;; -*- Package: MKRP; Base: 10; Mode: LISP; Syntax: Common-lisp -*-

(CONSTRUCTION  "Unix" "09-OCT,1991 03:18" 
              ("Edit:     Axioms and Theorems edited: 12-OCT,1989 18:05 "
               ))

(AXIOMS.INFIX    ((WOLF (LUPO))
                  (FOX (FOXI))
                  (BIRD (TWEETY))
                  (CATERPILLAR (RAUPI))
                  (SNAIL (SCHNECKI))
                  (GRAIN (MUESLI))
                  (* (EX |X1,X2,X3,X4,X5,X6| WOLF (X1) AND FOX (X2) AND BIRD (X3) AND CATERPILLAR (X4) AND SNAIL (X5) AND GRAIN (X6)))
                  (ALL X (WOLF (X) OR FOX (X) OR BIRD (X) OR CATERPILLAR (X) OR SNAIL (X)) IMPL ANIMAL (X))
                  (ALL X GRAIN (X) IMPL PLANT (X))
                  (ALL X ANIMAL (X) IMPL (ALL Y PLANT (Y) IMPL EATS (X Y)) OR (ALL Y ANIMAL (Y) AND SMALLER (Y X) AND (EX Z PLANT (Z) AND EATS (Y Z)) IMPL EATS (X Y)))
                  (ALL |X,Y| (CATERPILLAR (X) OR SNAIL (X)) AND BIRD (Y) IMPL SMALLER (X Y))
                  (ALL |X,Y| BIRD (X) AND FOX (Y) IMPL SMALLER (X Y))
                  (ALL |X,Y| FOX (X) AND WOLF (Y) IMPL SMALLER (X Y))
                  (ALL |X,Y| (FOX (X) OR GRAIN (X)) AND WOLF (Y) IMPL NOT EATS (Y X))
                  (ALL |X,Y| BIRD (X) AND CATERPILLAR (Y) IMPL EATS (X Y))
                  (ALL |X,Y| BIRD (X) AND SNAIL (Y) IMPL NOT EATS (X Y))
                  (ALL X (CATERPILLAR (X) OR SNAIL (X)) IMPL (EX Y PLANT (Y) AND EATS (X Y)))))

(THEOREMS.INFIX ((EX |X,Y| (ANIMAL (X) AND ANIMAL (Y) AND (EATS (X Y) AND (EX Z (GRAIN (Z) AND EATS (Y Z))))))))

(AXIOMS.PREFIX   ((+ 3 (2) NIL)
                  (+ 5 (4) NIL)
                  (+ 7 (6) NIL)
                  (+ 9 (8) NIL)
                  (+ 11 (10) NIL)
                  (+ 13 (12) NIL)
                  COMMENT
                  (ALL 14 (IMPL (OR (+ 3 (14) NIL) (OR (+ 5 (14) NIL) (OR (+ 7 (14) NIL) (OR (+ 9 (14) NIL) (+ 11 (14) NIL))))) (+ 15 (14) NIL)))
                  (ALL 16 (IMPL (+ 13 (16) NIL) (+ 17 (16) NIL)))
                  (ALL 18 (IMPL (+ 15 (18) NIL) (OR (ALL 19 (IMPL (+ 17 (19) NIL) (+ 20 (18 19) NIL))) (ALL 21 (IMPL (AND (+ 15 (21) NIL) (AND (+ 22 (21 18) NIL) (EX 23 (AND (+ 17 (23) NIL) (+ 20 (21 23) NIL))))) (+ 20 (18 21) NIL))))))
                  (ALL 25 (ALL 24 (IMPL (AND (OR (+ 9 (24) NIL) (+ 11 (24) NIL)) (+ 7 (25) NIL)) (+ 22 (24 25) NIL))))
                  (ALL 27 (ALL 26 (IMPL (AND (+ 7 (26) NIL) (+ 5 (27) NIL)) (+ 22 (26 27) NIL))))
                  (ALL 29 (ALL 28 (IMPL (AND (+ 5 (28) NIL) (+ 3 (29) NIL)) (+ 22 (28 29) NIL))))
                  (ALL 31 (ALL 30 (IMPL (AND (OR (+ 5 (30) NIL) (+ 13 (30) NIL)) (+ 3 (31) NIL)) (NOT (+ 20 (31 30) NIL)))))
                  (ALL 33 (ALL 32 (IMPL (AND (+ 7 (32) NIL) (+ 9 (33) NIL)) (+ 20 (32 33) NIL))))
                  (ALL 35 (ALL 34 (IMPL (AND (+ 7 (34) NIL) (+ 11 (35) NIL)) (NOT (+ 20 (34 35) NIL)))))
                  (ALL 36 (IMPL (OR (+ 9 (36) NIL) (+ 11 (36) NIL)) (EX 37 (AND (+ 17 (37) NIL) (+ 20 (36 37) NIL)))))))

(THEOREMS.PREFIX ((EX 39 (EX 38 (AND (+ 15 (38) NIL) (AND (+ 15 (39) NIL) (AND (+ 20 (38 39) NIL) (EX 40 (AND (+ 13 (40) NIL) (+ 20 (39 40) NIL))))))))))

(OPTIONS (TWO_RULES)
          (TWO_RULES.MAXLEVEL . 1)
          (TWO_SUPPRESS.NORULES)
          (RED.I_CLAUSE.MULTIPLE.LITERALS . T)
          (RED.I_CLAUSE.PURITY . P)
          (RED.I_CLAUSE.TAUTOLOGY . T)
          (RED.I_CLAUSE.TAUTOLOGY.RECHECK . PARTIAL)
          (RED.I_CLAUSE.SUBSUMPTION . T)
          (RED.I_CLAUSE.SUBSUMPTION.RECHECK . PARTIAL)
          (RED.I_CLAUSE.REPL.FACTORING . T)
          (RED.I_CLAUSE.REPL.FACTORING.RECHECK . T)
          (RED.I_CLAUSE.REPL.RESOLUTION . SIMPLE)
          (RED.I_CLAUSE.REPL.RESOLUTION.RECHECK . T)
          (RED.I_CLAUSE.REWRITING . DEM)
          (RED.I_LINK.INCOMPATIBILITY . T)
          (RED.I_LINK.TAUTOLOGY . REMOVE-INHIBIT)
          (RED.I_LINK.TAUTOLOGY.RECHECK)
          (RED.I_LINK.SUBSUMPTION . REMOVE-INHIBIT)
          (RED.I_LINK.SUBSUMPTION.RECHECK)
          (RED.D_CLAUSE.MULTIPLE.LITERALS . T)
          (RED.D_CLAUSE.PURITY . P)
          (RED.D_CLAUSE.TAUTOLOGY . REMOVE-INHIBIT)
          (RED.D_CLAUSE.TAUTOLOGY.RECHECK)
          (RED.D_CLAUSE.SUBSUMPTION.FORWARD . REMOVE-INHIBIT)
          (RED.D_CLAUSE.SUBSUMPTION.BACKWARD . REMOVE)
          (RED.D_CLAUSE.SUBSUMPTION.RECHECK)
          (RED.D_CLAUSE.REPL.FACTORING . T)
          (RED.D_CLAUSE.REPL.FACTORING.RECHECK . T)
          (RED.D_CLAUSE.REPL.RESOLUTION . SIMPLE)
          (RED.D_CLAUSE.REPL.RESOLUTION.RECHECK . T)
          (RED.D_CLAUSE.REWRITING . DEM)
          (RED.D_LINK.INCOMPATIBILITY . T)
          (RED.D_LINK.TAUTOLOGY . REMOVE-INHIBIT)
          (RED.D_LINK.TAUTOLOGY.RECHECK)
          (RED.D_LINK.SUBSUMPTION . REMOVE-INHIBIT)
          (RED.D_LINK.SUBSUMPTION.RECHECK)
          (FAC_INITIAL)
          (FAC_EACH.STEP)
          (STR_RESOLUTION . SET-OF-SUPPORT)
          (STR_PAR-RES . 10)
          (STR_LINK.DEPTH)
          (STR_TERM.DEPTH)
          (STR_FINITE.DOMAIN . T)
          (STR_SORT.LITERALS)
          (TERM_UNITS . T)
          (TERM_ITERATIONS . 0)
          (TERM_SET.OF.SUPPORT)
          (TERM_BREADTH.FIRST)
          (ER_PARAMODULATION . HEURISTIC-COMPLETION)
          (ER_COMPLETION . UNFAILING)
          (ER_CP.REDUCTION . T)
          (ER_ORDERING . LEXICOGRAPHIC-RECURSIVE-PATH)
          (ER_OPERATOR.ORDERING * - + 0 1)
          (ER_KNUTH.BENDIX.WEIGHT (+ 1) (* 1) (- 0) (0 1) (1 1))
          (ER_POLYNOMIAL.VARIABLES X Y Z U V W)
          (ER_POLYNOMIAL.WEIGHT (+ (+ X (* 2 Y))) (* (+ X (* X Y))) (- (+ (* 2 X) -1)) (0 2) (1 2))
          (ER_LINK.DEPTH.WEIGHT . 0)
          (ER_UNIT.FOCUS . 0)
          (ER_UNIT.FOCUS.WEIGHT . 1)
          (ER_EQUATION.FOCUS . 2)
          (ER_NARROW.DEPTH . 0)
          (ER_NARROW.NEXT . DEPTH)
          (ER_NARROW.TEST NORM C DELTA SL N)
          (ER_COMPILE)
          (GEN_SPLITTING . 0)
          (GEN_PRESIMPLIFICATION . T)
          (GEN_MIN.EXPRESSION.LENGTH.FOR.FILE)
          (GEN_MIN.EXPRESSION.SIZE.FOR.FILE)
          (GEN_MANUAL.CONTROL)
          (GEN_MAXIMUM.STEPS)
          (GEN_GRAPH.SAVING)
          (GEN_SAVE.FILE . SAVEDEFAULT)
          (GEN_LISP.GARBAGE.COLLECTION)
          (GEN_COMMON.LISP . T)
          (TR_PREPROCESSING)
          (TR_STEP.MODE . LR)
          (TR_DUMP)
          (TR_CLAUSE.MODE . I)
          (TR_LINK.MODE . I)
          (TR_TRACE.FILE)
          (TR_TERMINAL . T)
          (PR_LATEX)
          (PR_INFIX.FORM . T)
          (PR_PREFIX.FORM)
          (PR_OPTIONS)
          (PR_AXIOM.CLAUSES . T)
          (PR_SYMBOLS)
          (PR_DIRECT.PROOF . T)
          (PR_VARIABLE.PRINT.NAMES X Y Z U V W XX YY ZZ UU VV WW XXX YYY ZZZ UUU VVV WWW)
          (PR_STATISTICS)
          (PR_PROTOCOL . T)
          (PR_LEFT.MARGIN . 3)
          (PR_RIGHT.MARGIN . 117)
          (PR_LINELENGTH . 114)
          (PR_LITERALS)
         )

(LINK.COLOURS (R RIW RD S SI SIW SID T TI TIW P PIW PD RIWD))

(AXIOMS (START.TIME 72100000)
        (PARTIAL   (CLAUSE 52 A1 AXIOM () ((+ 3 (2)) )))
        (PARTIAL   (CLAUSE 53 A2 AXIOM () ((+ 5 (4)) )))
        (PARTIAL   (CLAUSE 54 A3 AXIOM () ((+ 7 (6)) )))
        (PARTIAL   (CLAUSE 55 A4 AXIOM () ((+ 9 (8)) )))
        (PARTIAL   (CLAUSE 56 A5 AXIOM () ((+ 11 (10)) )))
        (PARTIAL   (CLAUSE 57 A6 AXIOM () ((+ 13 (12)) )))
        (PARTIAL   (CLAUSE 59 A7 AXIOM ((14 . ANY))
                         ((- 3 (14)) (+ 15 (14)) )))
        (PARTIAL   (CLAUSE 62 A8 AXIOM ((41 . ANY))
                         ((- 5 (41)) (+ 15 (41)) )))
        (PARTIAL   (CLAUSE 66 A9 AXIOM ((42 . ANY))
                         ((- 7 (42)) (+ 15 (42)) )))
        (PARTIAL   (CLAUSE 71 A10 AXIOM ((43 . ANY))
                         ((- 9 (43)) (+ 15 (43)) )))
        (PARTIAL   (CLAUSE 77 A11 AXIOM ((44 . ANY))
                         ((- 11 (44)) (+ 15 (44)) )))
        (PARTIAL   (CLAUSE 84 A12 AXIOM ((16 . ANY))
                         ((- 13 (16)) (+ 17 (16)) )))
        (PARTIAL   (CLAUSE 87 A13 AXIOM ((36 . ANY))
                         ((- 9 (36)) (+ 17 ((49 36))) )))
        (PARTIAL   (CLAUSE 92 A14 AXIOM ((50 . ANY))
                         ((- 9 (50)) (+ 20 (50 (49 50))) )))
        (PARTIAL  