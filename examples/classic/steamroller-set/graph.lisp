;;; -*- Package: MKRP; Base: 10; Mode: LISP; Syntax: Common-lisp -*-
(CTL-INITIAL.GRAPH '(1) NIL 'NIL T NIL (PROGN (PROGN (DS-RESET))
(PROGN (DT-RESET))

(PROG ((ADDRLIST
        '(9152 ATP.MEMORY.NIL 9157 ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 9162
          ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
          ATP.MEMORY.NIL 9212 9217 ATP.MEMORY.NIL ATP.MEMORY.NIL 9253 9258 ATP.MEMORY.NIL
          ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
          ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
          ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
          ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
          ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 9294 9299
          9335 9340 9376 9381 9417 9422 9458 9463 9499 9504 9540 9576 9612 9648 9684 9720 9756
          9761 9766 9785 9804 9176 ATP.MEMORY.NIL ATP.MEMORY.NIL 9771 ATP.MEMORY.NIL 9790
          ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
          ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
          ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
          ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 9819 ATP.MEMORY.NIL 9834 ATP.MEMORY.NIL
          ATP.MEMORY.NIL 9839 9844 9849 9854 9859 9864 9869 9874 9879 9884 9889 9894 9899 9904
          9909 9914 9919 9924 9929 9934 9949 9954 9969 9984 9999))
       (DATALIST
        '(15 "TRUE" NIL NIL NIL (DEFINED) NIL ((- 0 (POSITIVE))) ((+ 0 (NEGATIVE)))
          ((+ 0 (NIL))) ((- 0 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "FALSE" NIL NIL
          NIL (DEFINED) NIL ((- 1 (POSITIVE))) ((+ 1 (NEGATIVE))) ((+ 1 (NIL))) ((- 1 (NIL)))
          NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "=" ((58 1)) NIL (ANY ANY)
          (DEFINED SYMMETRIC REFLEXIVE SYMMETRIC REFLEXIVE) 58 ((- 2 (POSITIVE . SYMMETRIC)))
          ((+ 2 (NEGATIVE . SYMMETRIC))) ((+ 2 (NIL . SYMMETRIC))) ((- 2 (NIL . SYMMETRIC)))
          NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY "OMEGA" (DT*ST-KIND NIL) CONSTANT 15 "E"
          ((121 1) (108 1) (104 1) (76 1) (74 1) (72 1) (70 1) (68 1) (66 1) (64 1) (63 1)
           (62 1) (61 1) (60 1) (59 1))
          NIL (ANY ANY) (DEFINED) NIL ((- 4 (POSITIVE))) ((+ 4 (NEGATIVE))) ((+ 4 (NIL)))
          ((- 4 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY "LUPO" (DT*ST-KIND NIL)
          CONSTANT 5 ANY "WOLF" (DT*ST-KIND NIL) CONSTANT 5 ANY "FOXY" (DT*ST-KIND NIL)
          CONSTANT 5 ANY "FOX" (DT*ST-KIND NIL) CONSTANT 5 ANY "TWEETY" (DT*ST-KIND NIL)
          CONSTANT 5 ANY "BIRD" (DT*ST-KIND NIL) CONSTANT 5 ANY "SCHNECKI" (DT*ST-KIND NIL)
          CONSTANT 5 ANY "SNAIL" (DT*ST-KIND NIL) CONSTANT 5 ANY "MEGGY" (DT*ST-KIND NIL)
          CONSTANT 5 ANY "CATERPILLAR" (DT*ST-KIND NIL) CONSTANT 5 ANY "STALKY"
          (DT*ST-KIND NIL) CONSTANT 5 ANY "GRAIN" (DT*ST-KIND NIL) CONSTANT 5 6 NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY "ANIMAL" (DT*ST-KIND NIL) CONSTANT 5
          8 NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 10 NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 14 NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
          VARIABLE 5 12 NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 16 NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY "PLANT" (DT*ST-KIND NIL) CONSTANT 15
          "EATS" NIL NIL (ANY ANY) NIL NIL ((- 27 (POSITIVE))) ((+ 27 (NEGATIVE)))
          ((+ 27 (NIL))) ((- 27 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "SMALLER" NIL
          NIL (ANY ANY) NIL NIL ((- 29 (POSITIVE))) ((+ 29 (NEGATIVE))) ((+ 29 (NIL)))
          ((- 29 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 14 "F_1" NIL ANY (ANY) NIL NIL NIL
          NIL NIL 1 ANY (DT-ST*KIND SYS-FUNCT) FUNCTION 5 14 NIL NIL VARIABLE 14 "F_2" NIL ANY
          (ANY) NIL NIL NIL NIL NIL 1 ANY (DT-ST*KIND SYS-FUNCT) FUNCTION 5 12 NIL NIL
          VARIABLE 5 3 NIL NIL VARIABLE 5 3 NIL NIL VARIABLE 36 "R.=" AXIOM 0 (56) (56 57) 1
          (REFLEXIVITY) NIL NIL ((1) (2)) NIL T + 2 (56 56) (RED*UNFAIL NIL) (56) NIL
          ATP.MEMORY.NOBIND NIL ATP.MEMORY.NOBIND NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
          NIL NIL CLAUSE 36 "A1" AXIOM 0 NIL NIL 1 NIL NIL NIL NIL NIL T + 4 (5 6) (INDEX 1)
          NIL NIL ATP.MEMORY.NOBIND NIL ATP.MEMORY.NOBIND NIL NIL NIL NIL NIL NIL NIL NIL NIL
          NIL NIL NIL NIL CLAUSE 36 "A2" AXIOM 0 NIL NIL 1 NIL NIL NIL NIL NIL T + 4 (7 8)
          (INDEX 2) NIL NIL ATP.MEMORY.NOBIND NIL ATP.MEMORY.NOBIND NIL NIL NIL NIL NIL NIL
          NIL NIL NIL NIL NIL NIL NIL CLAUSE 36 "A3" AXIOM 0 NIL NIL 1 NIL NIL NIL NIL NIL T +
          4 (9 10) (INDEX 3) NIL NIL ATP.MEMORY.NOBIND NIL ATP.MEMORY.NOBIND NIL NIL NIL NIL
          NIL NIL NIL NIL NIL NIL NIL NIL NIL CLAUSE 36 "A4" AXIOM 0 NIL NIL 1 NIL NIL NIL NIL
          NIL T + 4 (11 12) (INDEX 4) NIL NIL ATP.MEMORY.NOBIND NIL ATP.MEMORY.NOBIND NIL NIL
          NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL CLAUSE 36 "A5" AXIOM 0 NIL NIL 1 NIL NIL
          NIL NIL NIL T + 4 (13 14) (INDEX 5) NIL NIL ATP.MEMORY.NOBIND NIL ATP.MEMORY.NOBIND
          NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL CLAUSE 36 "A6" AXIOM 0 NIL NIL 1
          NIL NIL NIL NIL NIL T + 4 (15 16) (INDEX 6) NIL NIL ATP.MEMORY.NOBIND NIL
          ATP.MEMORY.NOBIND NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL CLAUSE 5 6 NIL
          NIL VARIABLE 36 "A7" AXIOM 0 (17) (17 65) 1 NIL NIL NIL NIL NIL T + 4 (17 18)
          (INDEX 7) (17) NIL ATP.MEMORY.NOBIND NIL ATP.MEMORY.NOBIND NIL NIL NIL NIL NIL NIL
          NIL NIL NIL NIL NIL NIL NIL CLAUSE 5 8 NIL NIL VARIABLE 36 "A8" AXIOM 0 (19) (19 67)
          1 NIL NIL NIL NIL NIL T + 4 (19 18) (INDEX 8) (19) NIL ATP.MEMORY.NOBIND NIL
          ATP.MEMORY.NOBIND NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL CLAUSE 5 10
          NIL NIL VARIABLE 36 "A9" AXIOM 0 (20) (20 69) 1 NIL NIL NIL NIL NIL T + 4 (20 18)
          (INDEX 9) (20) NIL ATP.MEMORY.NOBIND NIL ATP.MEMORY.NOBIND NIL NIL NIL NIL NIL NIL
          NIL NIL NIL NIL NIL NIL NIL CLAUSE 5 14 NIL NIL VARIABLE 36 "A10" AXIOM 0 (21)
          (21 71) 1 NIL NIL NIL NIL NIL T + 4 (21 18) (INDEX 10) (21) NIL ATP.MEMORY.NOBIND
          NIL ATP.MEMORY.NOBIND NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL CLAUSE 5
          12 NIL NIL VARIABLE 36 "A11" AXIOM 0 (22) (22 73) 1 NIL NIL NIL NIL NIL T + 4 (22 18)
          (INDEX 11) (22) NIL ATP.MEMORY.NOBIND NIL ATP.MEMORY.NOBIND NIL NIL NIL NIL NIL NIL
          NIL NIL NIL NIL NIL NIL NIL CLAUSE 5 16 NIL NIL VARIABLE 36 "A12" AXIOM 0 (23)
          (23 75) 1 NIL NIL NIL NIL NIL T + 4 (23 24) (INDEX 12) (23) NIL ATP.MEMORY.NOBIND
          NIL ATP.MEMORY.NOBIND NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL CLAUSE 5
          14 NIL NIL VARIABLE 36 "A22" AXIOM 0 (48) (48 103) 1 NIL NIL NIL NIL NIL T + 4
          ((54 48) 24) NIL (48) NIL ATP.MEMORY.NOBIND NIL ATP.MEMORY.NOBIND NIL NIL NIL NIL
          NIL NIL NIL NIL NIL NIL NIL NIL NIL CLAUSE 5 12 NIL NIL VARIABLE 36 "A24" AXIOM 0
          (50) (50 107) 1 NIL NIL NIL NIL NIL T + 4 ((55 50) 24) NIL (50) NIL
          ATP.MEMORY.NOBIND NIL ATP.MEMORY.NOBIND NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
          NIL NIL CLAUSE 14 "F_3" NIL ANY (ANY) NIL NIL NIL NIL NIL 1 ANY
          (DT-ST*KIND SYS-FUNCT) FUNCTION 5 18 NIL NIL VARIABLE 5 18 NIL NIL VARIABLE 36 "T27"
          THEOREM 0 (115) (115 119) 1 NIL NIL NIL NIL NIL T + 4 ((53 115) 16) NIL (115) NIL
          ATP.MEMORY.NOBIND NIL ATP.MEMORY.NOBIND NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
          NIL NIL CLAUSE))
       (INCREMENT (- MEM*SIZE 10000))
       COUNTER1)
      (MEM-RESET)
      (COND ((> MEM*SIZE 10000)
             (SETQ COUNTER1 122)
             (MAPC #'(LAMBDA (RADDR)
                       (SETF (AREF MEM*MEMORY (DECF COUNTER1))
                              (COND ((EQL RADDR 'ATP.MEMORY.NIL) RADDR)
                                    ((EQL 'END RADDR) RADDR)
                                    ((OR (EQL RADDR 0)
                                         (MINUSP RADDR))
                                     RADDR)
                                    (T (+ RADDR INCREMENT)))))
                   ADDRLIST)
             (SETQ COUNTER1 MEM*SIZE)
             (MAPC #'(LAMBDA (DATA) (SETF (AREF MEM*MEMORY (DECF COUNTER1)) DATA)) DATALIST))
            (T (UNLESS (= MEM*SIZE 10000)
                 (MEM-INITIALIZE 10000))
               (SETQ COUNTER1 122)
               (MAPC #'(LAMBDA (RADDR) (SETF (AREF MEM*MEMORY (DECF COUNTER1)) RADDR))
                     ADDRLIST)
               (SETQ COUNTER1 MEM*SIZE)
               (MAPC #'(LAMBDA (DATA) (SETF (AREF MEM*MEMORY (DECF COUNTER1)) DATA)) DATALIST))
            )
      (SETQ MEM*NEXT.RADR (IF (> MEM*SIZE 10000) (+ 9116 INCREMENT) 9116))
      (SETQ MEM*NEXT.VADR 122
            MEM*REST (- MEM*NEXT.RADR MEM*NEXT.VADR -1)
            MEM*FIRST.REUSABLE.VADR NIL
            MEM*LAST.REUSABLE.VADR NIL))

(PROGN (SETQ DT*SORT.ALL (QUOTE (ANY))) (SETQ DT*SORT.NR (QUOTE 2)) (SETQ DT*SORT.PROPERTIES (QUOTE (DT*MAX.SUBSORTS DT*LEAST.SUPERSORTS DT*TRANSITIVE.CLOSURE DT*INVERSE.TRANSITIVE.CLOSURE DT*MINIMAL.SUBSORTS DT*DIRECT.SUBSORTS DT*DIRECT.SUPERSORTS DT*DISJOINT.SORTS DT*COMPLETION.SORT))) (SETQ DT*SORT.COMMON.COMPUTE.FLAG (QUOTE NIL)) (SETQ DT*ELEMENT.PREDICATE (QUOTE 4)) (SETQ DT*OMEGA.CONSTANT (QUOTE 3)) (SETQ DT*VARIABLE.COUNTER (QUOTE 0)) (SETQ DT*CONSTANT.COUNTER (QUOTE 0)) (SETQ DT*CONSTANT.ALL (QUOTE (24 18 16 15 14 13 12 11 10 9 8 7 6 5 3))) (SETQ DT*ABBREVIATIONS (QUOTE NIL)) (SETQ DT*FUNCTION.COUNTER (QUOTE 0)) (SETQ DT*FUNCTION.ALL (QUOTE (53 55 54))) (SETQ DT*FUNCTION.ADMISSIBLE.THEORIES (QUOTE (ASSOCIATIVE))) (SETQ DT*FUNCTION.ACTUAL.THEORIES (QUOTE NIL)) (SETQ DT*FUNCTION.WITH.ARGUMENT.SYMMETRIES (QUOTE NIL)) (SETQ DT*FUNCTION.COMPONENTS (QUOTE (PNAME ATTRIBUTES MAX.RANGE.SORT MAX.DOMAIN.SORTS MIN.RANGE.SORTS SORT.LIST SORT.LIST.INVERSE SORT.TREE.CALC ARGUMENT.SYMMETRIES ARITY G.L.B.OF.RANGES))) (SETQ DT*PREDICATE.ADMISSABLE.ATTRIBUTES (QUOTE (SYMMETRIC DEFINED REFLEXIVE))) (SETQ DT*PREDICATE.COUNTER (QUOTE 0)) (SETQ DT*EQUALITY.SYMBOLS (QUOTE ("=" ":=" "=:" ":=:"))) (SETQ DT*EQUALITY.PREDICATES (QUOTE (2))) (SETQ DT*NONEQUALITY.PREDICATES (QUOTE (29 27 4 1 0))) (SETQ DT*PREDICATE.ALL (QUOTE (29 27 4 2 1 0))) (SETQ DT*PREDICATE.WITH.ATTRIBUTES (QUOTE NIL)) (SETQ DT*PREDICATE.COMPONENTS (QUOTE (PNAME POSITIVE.OCCURRENCES NEGATIVE.OCCURRENCES DOMAINSORTS ATTRIBUTES REFL.CLAUSE +ROTHERSIDES -ROTHERSIDES +SOTHERSIDES -SOTHERSIDES +TOTHERSIDES -TOTHERSIDES))) (SETQ DT*TRUE.PREDICATE (QUOTE 0)) (SETQ DT*FALSE.PREDICATE (QUOTE 1)) (SETQ DT*UNI.CREATES.VARIABLES (QUOTE NIL)) (SETQ DT*SIGN.MINUS.SYMBOLS (QUOTE (- --))) (SETQ DT*SIGN.PLUS.SYMBOLS (QUOTE (+ ++))) (SETQ DT*SYMBOL.KINDS (QUOTE (CONSTANT.ALL FUNCTION.ALL PREDICATE.ALL)))) 
(PROGN) 
(PROGN (PROGN)) 
(PROGN (PROGN (SETF (GET (QUOTE ANY) (QUOTE DT*SORT.NUMBER)) (QUOTE 1)) (SETF (GET (QUOTE ANY) (QUOTE DT*DIRECT.SUBSORTS)) (QUOTE NIL)) (SETF (GET (QUOTE ANY) (QUOTE DT*TRANSITIVE.CLOSURE)) (QUOTE (ANY))) (SETF (GET (QUOTE ANY) (QUOTE DT*MAX.SUBSORTS)) (QUOTE ((ANY ANY)))) (SETF (GET (QUOTE ANY) (QUOTE DT*MINIMAL.SUBSORTS)) (QUOTE (ANY))) (SETF (GET (QUOTE ANY) (QUOTE DT*DIRECT.SUPERSORTS)) (QUOTE NIL)) (SETF (GET (QUOTE ANY) (QUOTE DT*INVERSE.TRANSITIVE.CLOSURE)) (QUOTE (ANY))))) (PROGN (SETQ DS*RULES (QUOTE NIL)) (SETQ DS*FINITE.DOMAIN (QUOTE NIL)))
(PROGN)
(PROGN)
(PROGN)
(PROGN (SETQ CG*RECOLOUR (QUOTE ((R . RD) (P . PD) (SI . SID) (RIW . RIWD)))) (SETQ CG*OBJECTCLASSES (QUOTE (CLAUSES R RIW RD S SI SIW SID T TI TIW P PIW PD RIWD))) (SETQ CG*SAVESTACK (QUOTE NIL)) (SETQ CG*GRAPH.REGISTER (QUOTE (PROGN (PROG ((ALL.PROPLIST (QUOTE (CLAUSES ((0) 0) R ((0) 0) RIW ((0) 0) RD ((0) 0) S ((0) 0) SI ((0) 0) SIW ((0) 0) SID ((0) 0) T ((0) 0) TI ((0) 0) TIW ((0) 0) P ((0) 0) PIW ((0) 0) PD ((0) 0) RIWD ((0) 0)))) (INSERTED.PROPLIST (QUOTE (CLAUSES ((0) 0) R ((0) 0) RIW ((0) 0) RD ((0) 0) S ((0) 0) SI ((0) 0) SIW ((0) 0) SID ((0) 0) T ((0) 0) TI ((0) 0) TIW ((0) 0) P ((0) 0) PIW ((0) 0) PD ((0) 0) RIWD ((0) 0)))) (CHANGED.PROPLIST (QUOTE (CLAUSES ((0) 0) R ((0) 0) RIW ((0) 0) RD ((0) 0) S ((0) 0) SI ((0) 0) SIW ((0) 0) SID ((0) 0) T ((0) 0) TI ((0) 0) TIW ((0) 0) P ((0) 0) PIW ((0) 0) PD ((0) 0) RIWD ((0) 0)))) (REMOVED.PROPLIST (QUOTE (CLAUSES ((0) 0) R ((0) 0) RIW ((0) 0) RD ((0) 0) S ((0) 0) SI ((0) 0) SIW ((0) 0) SID ((0) 0) T ((0) 0) TI ((0) 0) TIW ((0) 0) P ((0) 0) PIW ((0) 0) PD ((0) 0) RIWD ((0) 0))))) (SMAPC (FUNCTION (LAMBDA (OBJECTLIST) (RPLACA OBJECTLIST (LAST OBJECTLIST)))) (FUNCTION CDDR) (CDR ALL.PROPLIST)) (SETF (SYMBOL-PLIST (QUOTE CG*OBJECTS.ALL)) ALL.PROPLIST) (SMAPC (FUNCTION (LAMBDA (OBJECTLIST) (RPLACA OBJECTLIST (LAST OBJECTLIST)))) (FUNCTION CDDR) (CDR INSERTED.PROPLIST)) (SETF (SYMBOL-PLIST (QUOTE CG*OBJECTS.INSERTED)) INSERTED.PROPLIST) (SMAPC (FUNCTION (LAMBDA (OBJECTLIST) (RPLACA OBJECTLIST (LAST OBJECTLIST)))) (FUNCTION CDDR) (CDR CHANGED.PROPLIST)) (SETF (SYMBOL-PLIST (QUOTE CG*OBJECTS.CHANGED)) CHANGED.PROPLIST) (SMAPC (FUNCTION (LAMBDA (OBJECTLIST) (RPLACA OBJECTLIST (LAST OBJECTLIST)))) (FUNCTION CDDR) (CDR REMOVED.PROPLIST)) (SETF (SYMBOL-PLIST (QUOTE CG*OBJECTS.REMOVED)) REMOVED.PROPLIST))))) (SETQ CG*CHANGE.QUEUE.LITERALS (QUOTE (NIL))) (PROG ((ALL.PROPLIST (QUOTE (CLAUSES ((121) 16 58 59 60 61 62 63 64 66 68 70 72 74 76 104 108 121) R ((0) 0) RIW ((0) 0) RD ((0) 0) S ((0) 0) SI ((0) 0) SIW ((0) 0) SID ((0) 0) T ((0) 0) TI ((0) 0) TIW ((0) 0) P ((0) 0) PIW ((0) 0) PD ((0) 0) RIWD ((0) 0)))) (INSERTED.PROPLIST (QUOTE (CLAUSES ((0) 0) R ((0) 0) RIW ((0) 0) RD ((0) 0) S ((0) 0) SI ((0) 0) SIW ((0) 0) SID ((0) 0) T ((0) 0) TI ((0) 0) TIW ((0) 0) P ((0) 0) PIW ((0) 0) PD ((0) 0) RIWD ((0) 0)))) (CHANGED.PROPLIST (QUOTE (CLAUSES ((0) 0) R ((0) 0) RIW ((0) 0) RD ((0) 0) S ((0) 0) SI ((0) 0) SIW ((0) 0) SID ((0) 0) T ((0) 0) TI ((0) 0) TIW ((0) 0) P ((0) 0) PIW ((0) 0) PD ((0) 0) RIWD ((0) 0)))) (REMOVED.PROPLIST (QUOTE (CLAUSES ((0) 0) R ((0) 0) RIW ((0) 0) RD ((0) 0) S ((0) 0) SI ((0) 0) SIW ((0) 0) SID ((0) 0) T ((0) 0) TI ((0) 0) TIW ((0) 0) P ((0) 0) PIW ((0) 0) PD ((0) 0) RIWD ((0) 0))))) (SMAPC (FUNCTION (LAMBDA (OBJECTLIST) (RPLACA OBJECTLIST (LAST OBJECTLIST)))) (FUNCTION CDDR) (CDR ALL.PROPLIST)) (SETF (SYMBOL-PLIST (QUOTE CG*OBJECTS.ALL)) ALL.PROPLIST) (SMAPC (FUNCTION (LAMBDA (OBJECTLIST) (RPLACA OBJECTLIST (LAST OBJECTLIST)))) (FUNCTION CDDR) (CDR INSERTED.PROPLIST)) (SETF (SYMBOL-PLIST (QUOTE CG*OBJECTS.INSERTED)) INSERTED.PROPLIST) (SMAPC (FUNCTION (LAMBDA (OBJECTLIST) (RPLACA OBJECTLIST (LAST OBJECTLIST)))) (FUNCTION CDDR) (CDR CHANGED.PROPLIST)) (SETF (SYMBOL-PLIST (QUOTE CG*OBJECTS.CHANGED)) CHANGED.PROPLIST) (SMAPC (FUNCTION (LAMBDA (OBJECTLIST) (RPLACA OBJECTLIST (LAST OBJECTLIST)))) (FUNCTION CDDR) (CDR REMOVED.PROPLIST)) (SETF (SYMBOL-PLIST (QUOTE CG*OBJECTS.REMOVED)) REMOVED.PROPLIST)))
(PROGN (C "Operation save expression.") (SETQ OP*LINK.COLOURS.LITERAL.INITIAL (QUOTE (R S T RI SI TI RIW SIW TIW))) (SETQ OP*CLAUSECOUNTER (QUOTE 27)) (SETQ OP*COUNTER.RESOLVENTS (QUOTE 0)) (SETQ OP*COUNTER.PARAMODULANTS (QUOTE 0)) (SETQ OP*COUNTER.FACTORS (QUOTE 0)) (SETQ OP*COLOURS.CIRCLE.LINKS (QUOTE (SIW))))
(PROGN (C "Save expression of reduction.") (SETQ RED*RW_RULES (QUOTE NIL) RDS*RW_ASSIGN (QUOTE NIL) RDS*RW_VARIABLES (QUOTE NIL) RED*RW_RULES.COMPLETION (QUOTE NIL) RED*RW_RULES.UNFAILING (QUOTE NIL) RED*GRAPH.ISOLATION (QUOTE NIL)) (RDS-RULE.PUT (QUOTE RECHECK.INFO) (QUOTE RED*CLAUSE.TAUTOLOGY) (QUOTE NIL)) (RDS-RULE.PUT (QUOTE RECHECK.INFO) (QUOTE RED*CLAUSE.REPL.RESOLUTION.SUBJECT) (QUOTE NIL)) (RDS-RULE.PUT (QUOTE RECHECK.INFO) (QUOTE RED*CLAUSE.SUBSUMPTION.SUBJECT) (QUOTE NIL)) (RDS-RULE.PUT (QUOTE RECHECK.INFO) (QUOTE RED*LINK.SUBSUMPTION.SUBJECT) (QUOTE NIL)) (RDS-RULE.PUT (QUOTE RECHECK.INFO) (QUOTE RED*LINK.TAUTOLOGY) (QUOTE NIL)))))