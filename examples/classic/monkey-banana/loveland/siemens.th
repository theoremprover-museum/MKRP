(COND ((FMT-LOAD " 6-SEP-84 23:10:12" NIL (((* ----- THE MONKEY-BANANA PROBLEM ----) COMMENT COMMENT) ((* (PROBLEM
AS STATED IN LOVELANDS BOOK)) COMMENT COMMENT) ((*) COMMENT COMMENT) ((*) COMMENT COMMENT) ((* THIS IS ONE OF THE
CLSSSICAL AI-PROBLEMS. THE SITUATION IS THE) COMMENT COMMENT) ((* FOLLOWING:) COMMENT COMMENT) ((* THERE ARE A
MONKEY, A CHAIR AND A BANANA IN AN ARBITRARY ROOM. THE) COMMENT COMMENT) ((* BANANA IS HANGING DOWN (EG. FROM THE
CEILING) SUCH THAT THE MON-) COMMENT COMMENT) ((* KEY CANNOT REACH IT. BY THIS THE MONKEY MUST USE ITS BRAIN TO)
COMMENT COMMENT) ((* REACH AND EAT THE BANANA SOMEHOW.) COMMENT COMMENT) ((*) COMMENT COMMENT) ((* THE THEOREM
SIMPLY SAYS THAT THE MONKEY WILL GET THE BANANA!) COMMENT COMMENT) ((CAN.REACH (MONKEY BANANA)) (+ 7 (23 11) NIL)
QUANTIFICATION))) (COND (ST*LOAD.FLAG (PROGN (PROGN (DT-RESET) (PROG ((ADDRLIST (QUOTE (10015 10020 10035 10040
10045 10050 10065 10080 10085 10090 10095 10110 10125 10130 10145 10150 10155 10170 10185 10200 10205 10210 10225
10240))) (DATALIST (QUOTE (15 TRUE NIL NIL NIL (DEFINED) NIL ((- 1 (POSITIVE))) ((+ 1 (NEGATIVE))) ((+ 1 (NIL)))
((- 1 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 FALSE NIL NIL NIL (DEFINED) NIL ((- 2 (POSITIVE))) ((+ 2 (NEGATIVE)))
((+ 2 (NIL))) ((- 2 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE
5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 15 ANIMAL NIL NIL (ANY) NIL NIL ((- 5 (POSITIVE))) ((+ 5 (NEGATIVE)))
((+ 5 (NIL))) ((- 5 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 CLOSE.TO NIL NIL (ANY ANY) NIL NIL ((- 6 (POSITIVE)))
((+ 6 (NEGATIVE))) ((+ 6 (NIL))) ((- 6 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 CAN.REACH NIL NIL (ANY ANY)
NIL NIL ((- 7 (POSITIVE))) ((+ 7 (NEGATIVE))) ((+ 7 (NIL))) ((- 7 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5
ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 15 ON NIL
NIL (ANY ANY) NIL NIL ((- 10 (POSITIVE))) ((+ 10 (NEGATIVE))) ((+ 10 (NIL))) ((- 10 (NIL))) NIL NIL (DT*ST-KIND
NIL) PREDICATE 5 BANANA ANY (DT*ST-KIND NIL) CONSTANT 15 UNDER NIL NIL (ANY ANY) NIL NIL ((- 12 (POSITIVE))) ((+
12 (NEGATIVE))) ((+ 12 (NIL))) ((- 12 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 TALL NIL NIL (ANY) NIL NIL
((- 13 (POSITIVE))) ((+ 13 (NEGATIVE))) ((+ 13 (NIL))) ((- 13 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY
NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA
NIL DT*ST-KIND SYS-VAR) VARIABLE 15 IN.ROOM NIL NIL (ANY) NIL NIL ((- 17 (POSITIVE))) ((+ 17 (NEGATIVE))) ((+ 17
(NIL))) ((- 17 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 CAN.MOVE.NEAR NIL NIL (ANY ANY ANY) NIL NIL ((- 18
(POSITIVE))) ((+ 18 (NEGATIVE))) ((+ 18 (NIL))) ((- 18 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 FLOOR ANY (
DT*ST-KIND NIL) CONSTANT 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 15 CAN.CLIMB NIL NIL (ANY ANY) NIL NIL ((- 22 (POSITIVE))) ((+ 22 (NEGATIVE))) ((+ 22 (NIL)))
((- 22 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 MONKEY ANY (DT*ST-KIND NIL) CONSTANT 5 CHAIR ANY (DT*ST-KIND
NIL) CONSTANT))) (INCREMENT (IDIFFERENCE MEM*SIZE 10240)) COUNTER1) (MEM-RESET) (COND ((IGREATERP (IPLUS (IDIFFERENCE
25 1) (IDIFFERENCE 10240 10010)) MEM*SIZE) (MEM=SATURATION.ENTERED)) ((EQ MEM*SIZE 10240) (SETQ COUNTER1 25) (MAPC
ADDRLIST (FUNCTION (LAMBDA (RADDR) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1)) RADDR)))) (SETQ COUNTER1 (ADD1
MEM*SIZE)) (MAPC DATALIST (FUNCTION (LAMBDA (DATA) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1)) DATA))))) (T
(SETQ COUNTER1 25) (MAPC ADDRLIST (FUNCTION (LAMBDA (RADDR) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1)) (COND
((EQ RADDR (QUOTE ATP.MEMORY.NIL)) RADDR) ((OR (EQ RADDR 0) (MINUSP RADDR)) RADDR) (T (IPLUS RADDR INCREMENT)))))))
(SETQ COUNTER1 (ADD1 MEM*SIZE)) (MAPC DATALIST (FUNCTION (LAMBDA (DATA) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1))
DATA)))))) (RPAQ MEM*NEXT.RADR (IPLUS 10010 INCREMENT)) (RPAQ MEM*NEXT.VADR 25) (RPAQ MEM*REST (ADD1 (IDIFFERENCE
MEM*NEXT.RADR MEM*NEXT.VADR))) (RPAQ MEM*FIRST.REUSABLE.VADR NIL) (RPAQ MEM*LAST.REUSABLE.VADR NIL)) (PROGN (RPAQQ
DT*SORT.ALL (ANY)) (RPAQQ DT*SORT.NR 1) (RPAQQ DT*SORT.PROPERTIES (DT*MAX.SUBSORTS DT*LEAST.SUPERSORTS 
DT*TRANSITIVE.CLOSURE DT*INVERSE.TRANSITIVE.CLOSURE DT*MINIMAL.SUBSORTS DT*DIRECT.SUBSORTS DT*DIRECT.SUPERSORTS
DT*DISJOINT.SORTS DT*COMPLETION.SORT)) (RPAQQ DT*VARIABLE.COUNTER 0) (RPAQQ DT*CONSTANT.COUNTER 0) (RPAQQ 
DT*CONSTANT.ALL (24 23 19 11)) (RPAQQ DT*ABBREVIATIONS NIL) (RPAQQ DT*FUNCTION.COUNTER 0) (RPAQQ DT*FUNCTION.ALL
NIL) (RPAQQ DT*FUNCTION.ADMISSIBLE.THEORIES (ASSOCIATIVE)) (RPAQQ DT*FUNCTION.ACTUAL.THEORIES NIL) (RPAQQ 
DT*FUNCTION.WITH.ARGUMENT.SYMMETRIES NIL) (RPAQQ DT*FUNCTION.COMPONENTS (PNAME ATTRIBUTES MAX.RANGE.SORT 
MAX.DOMAIN.SORTS MIN.RANGE.SORTS SORT.LIST SORT.LIST.INVERSE SORT.TREE.CALC ARGUMENT.SYMMETRIES ARITY G.L.B.OF.RANGES))
(RPAQQ DT*PREDICATE.ADMISSABLE.ATTRIBUTES (SYMMETRIC DEFINED REFLEXIVE)) (RPAQQ DT*PREDICATE.COUNTER 0) (RPAQQ
DT*EQUALITY.SYMBOLS (= := =: :=:)) (RPAQQ DT*EQUALITY.PREDICATES NIL) (RPAQQ DT*NONEQUALITY.PREDICATES (22 18 17
13 12 10 7 6 5 2 1)) (RPAQQ DT*PREDICATE.ALL (22 18 17 13 12 10 7 6 5 2 1)) (RPAQQ DT*PREDICATE.WITH.ATTRIBUTES
NIL) (RPAQQ DT*PREDICATE.COMPONENTS (PNAME POSITIVE.OCCURRENCES NEGATIVE.OCCURRENCES DOMAINSORTS ATTRIBUTES REFL.CLAUSE
+ROTHERSIDES -ROTHERSIDES +SOTHERSIDES -SOTHERSIDES +TOTHERSIDES -TOTHERSIDES)) (RPAQQ DT*TRUE.PREDICATE 1) (RPAQQ
DT*FALSE.PREDICATE 2) (RPAQQ DT*UNI.CREATES.VARIABLES NIL) (RPAQQ DT*SIGN.MINUS.SYMBOLS (- --)) (RPAQQ 
DT*SIGN.PLUS.SYMBOLS (+ ++))) (PROGN) (PROGN (SETPROPLIST (QUOTE DT*PREDICATE.WITH.ATTRIBUTES) (QUOTE (DEFINED
(2 1))))) (PROGN (SETPROPLIST (QUOTE ANY) (QUOTE (DT*INVERSE.TRANSITIVE.CLOSURE (ANY) DT*DIRECT.SUPERSORTS NIL
DT*MINIMAL.SUBSORTS (ANY) DT*MAX.SUBSORTS ((ANY ANY)) DT*TRANSITIVE.CLOSURE (ANY) DT*DIRECT.SUBSORTS NIL))))) (RPAQQ
ST*STACK1 (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL)) (RPAQQ ST*SYMBOL.ADDRESSES (NIL (ANY .
T) (TRUE . 1) (FALSE . 2) (X_3 . 3) (X_4 . 4) (ANIMAL . 5) (CLOSE.TO . 6) (CAN.REACH . 7) (X_8 . 8) (X_9 . 9) (ON
. 10) (BANANA . 11) (UNDER . 12) (TALL . 13) (X_14 . 14) (X_15 . 15) (X_16 . 16) (IN.ROOM . 17) (CAN.MOVE.NEAR
. 18) (FLOOR . 19) (X_20 . 20) (X_21 . 21) (CAN.CLIMB . 22) (MONKEY . 23) (CHAIR . 24))))))))STOP
 
