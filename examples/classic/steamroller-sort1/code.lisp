;;; -*- Package: MKRP; Base: 10; Mode: LISP; Syntax: Common-lisp -*-

(CONSTRUCTION  "Genera 8.0.1 Logical Pathnames Translation Files NEWEST IP-TCP 422.2 RPC 415.0 Embedding Support 407.0 UX Support 416.0 KKL 19.2 HADES 14.20 Waltz 6.0 COLUMN 6.0 Experimental MKRP 48.4" "09-JUL,1991 10:44" 
   ("Edit:     Axioms and Theorems edited: 09-JUL,1991 10:42 "
   ))

(AXIOMS.INFIX    ((SORT |WOLF,FOX,BIRD,CATERPILLAR,SNAIL| |:| ANIMAL)
   (SORT GRAIN |:| PLANT)
   (ALL X |:| ANIMAL (ALL Y |:| PLANT EATS (X Y)) OR (ALL Y |:| ANIMAL SMALLER (Y X) AND (EX Z |:| PLANT EATS (Y Z)) IMPL EATS (X Y)))
   (ALL X |:| CATERPILLAR ALL Y |:| BIRD SMALLER (X Y))
   (ALL X |:| SNAIL ALL Y |:| BIRD SMALLER (X Y))
   (ALL X |:| BIRD ALL Y |:| FOX SMALLER (X Y))
   (ALL X |:| FOX ALL Y |:| WOLF SMALLER (X Y))
   (ALL X |:| FOX ALL Y |:| WOLF NOT EATS (Y X))
   (ALL X |:| GRAIN ALL Y |:| WOLF NOT EATS (Y X))
   (ALL X |:| BIRD ALL Y |:| CATERPILLAR EATS (X Y))
   (ALL X |:| BIRD ALL Y |:| SNAIL NOT EATS (X Y))
   (ALL X |:| CATERPILLAR EX Y |:| PLANT EATS (X Y))
   (ALL X |:| SNAIL EX Y |:| PLANT EATS (X Y))))

(THEOREMS.INFIX ((ALL |X,Y| |:| ANIMAL ALL Z |:| GRAIN EATS (X Y) AND EATS (Y Z))))

(AXIOMS.PREFIX   ((+ 0 NIL NIL)
   (+ 0 NIL NIL)
   (ALL 3 (OR (ALL 4 (+ 5 (3 4) NIL)) (ALL 6 (IMPL (AND (+ 7 (6 3) NIL) (EX 8 (+ 5 (6 8) NIL))) (+ 5 (3 6) NIL)))))
   (ALL 9 (ALL 10 (+ 7 (9 10) NIL)))
   (ALL 11 (ALL 12 (+ 7 (11 12) NIL)))
   (ALL 13 (ALL 14 (+ 7 (13 14) NIL)))
   (ALL 15 (ALL 16 (+ 7 (15 16) NIL)))
   (ALL 17 (ALL 18 (NOT (+ 5 (18 17) NIL))))
   (ALL 19 (ALL 20 (NOT (+ 5 (20 19) NIL))))
   (ALL 21 (ALL 22 (+ 5 (21 22) NIL)))
   (ALL 23 (ALL 24 (NOT (+ 5 (23 24) NIL))))
   (ALL 25 (EX 26 (+ 5 (25 26) NIL)))
   (ALL 27 (EX 28 (+ 5 (27 28) NIL)))))

(THEOREMS.PREFIX ((ALL 30 (ALL 29 (ALL 31 (AND (+ 5 (29 30) NIL) (+ 5 (30 31) NIL)))))))

(OPTIONS (TWO_RULES)
    (TWO_RULES.MAXLEVEL . 1)
    (TWO_SUPPRESS.NORULES)
    (RED.I_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.I_CLAUSE.PURITY . P)
    (RED.I_CLAUSE.TAUTOLOGY . T)
    (RED.I_CLAUSE.TAUTOLOGY.RECHECK . PARTIAL)
    (RED.I_CLAUSE.SUBSUMPTION . T)
    (RED.I_CLAUSE.SUBSUMPTION.RECHECK . PARTIAL)
    (RED.I_CLAUSE.REPL.FACTORING . T)
    (RED.I_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.I_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.I_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.I_CLAUSE.REWRITING . DEM)
    (RED.I_LINK.INCOMPATIBILITY . T)
    (RED.I_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.I_LINK.TAUTOLOGY.RECHECK)
    (RED.I_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.I_LINK.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.D_CLAUSE.PURITY . P)
    (RED.D_CLAUSE.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_CLAUSE.TAUTOLOGY.RECHECK)
    (RED.D_CLAUSE.SUBSUMPTION.FORWARD . REMOVE-INHIBIT)
    (RED.D_CLAUSE.SUBSUMPTION.BACKWARD . REMOVE)
    (RED.D_CLAUSE.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.REPL.FACTORING . T)
    (RED.D_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.D_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.D_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.D_CLAUSE.REWRITING . DEM)
    (RED.D_LINK.INCOMPATIBILITY . T)
    (RED.D_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_LINK.TAUTOLOGY.RECHECK)
    (RED.D_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.D_LINK.SUBSUMPTION.RECHECK)
    (FAC_INITIAL)
    (FAC_EACH.STEP)
    (STR_RESOLUTION . SET-OF-SUPPORT)
    (STR_PAR-RES . 10)
    (STR_E-RESOLUTION)
    (STR_LINK.DEPTH)
    (STR_TERM.DEPTH)
    (STR_R.DEMODULATION . T)
    (STR_P.DEMODULATION . T)
    (STR_INDUCTION)
    (STR_FINITE.DOMAIN . T)
    (STR_SORT.LITERALS)
    (TERM_UNITS . T)
    (TERM_ITERATIONS . 0)
    (TERM_SET.OF.SUPPORT)
    (TERM_BREADTH.FIRST)
    (ER_PARAMODULATION . HEURISTIC-COMPLETION)
    (ER_COMPLETION . UNFAILING)
    (ER_CP.REDUCTION . T)
    (ER_ORDERING . LEXICOGRAPHIC-RECURSIVE-PATH)
    (ER_OPERATOR.ORDERING * - + 0 1)
    (ER_KNUTH.BENDIX.WEIGHT (+ 1) (* 1) (- 0) (0 1) (1 1))
    (ER_POLYNOMIAL.VARIABLES X Y Z U V W)
    (ER_POLYNOMIAL.WEIGHT (+ (+ X (* 2 Y))) (* (+ X (* X Y))) (- (+ (* 2 X) -1)) (0 2) (1 2))
    (ER_LINK.DEPTH.WEIGHT . 0)
    (ER_UNIT.FOCUS . 0)
    (ER_UNIT.FOCUS.WEIGHT . 1)
    (ER_EQUATION.FOCUS . 2)
    (ER_NARROW.DEPTH . 0)
    (ER_NARROW.NEXT . DEPTH)
    (ER_NARROW.TEST NORM C DELTA SL N)
    (ER_NARROW.LIMIT.FACTOR . 0)
    (ER_COMPILE)
    (GEN_SPLITTING)
    (GEN_PRESIMPLIFICATION . T)
    (GEN_MIN.EXPRESSION.LENGTH.FOR.FILE)
    (GEN_MIN.EXPRESSION.SIZE.FOR.FILE)
    (GEN_MANUAL.CONTROL)
    (GEN_MAXIMUM.STEPS)
    (GEN_GRAPH.SAVING)
    (GEN_SAVE.FILE . SAVEDEFAULT)
    (GEN_LISP.GARBAGE.COLLECTION)
    (GEN_COMMON.LISP)
    (TR_PREPROCESSING)
    (TR_STEP.MODE . LR)
    (TR_DUMP)
    (TR_CLAUSE.MODE . I)
    (TR_LINK.MODE . I)
    (TR_TRACE.FILE)
    (TR_TERMINAL . T)
    (PR_LATEX)
    (PR_INFIX.FORM . T)
    (PR_PREFIX.FORM)
    (PR_OPTIONS)
    (PR_AXIOM.CLAUSES . T)
    (PR_SYMBOLS)
    (PR_DIRECT.PROOF . T)
    (PR_VARIABLE.PRINT.NAMES X Y Z U V W XX YY ZZ UU VV WW XXX YYY ZZZ UUU VVV WWW)
    (PR_STATISTICS)
    (PR_PROTOCOL . T)
    (PR_LEFT.MARGIN . 3)
    (PR_RIGHT.MARGIN . 117)
    (PR_LINELENGTH . 114)
    (PR_LITERALS . T)
   )

(LINK.COLOURS (R RIW RD S SI SIW SID T TI TIW P PIW PD RIWD))

(AXIOMS (START.TIME 139465157)
   (PARTIAL   (CLAUSE 34 R.= AXIOM ((28 . ANY)) ((+ 2 (28 28)) ))(CLAUSE 37 A1 AXIOM ((10 . BIRD)(9 . CATERPILLAR)) ((+ 7 (9 10)) )))
   (PARTIAL   (CLAUSE 40 A2 AXIOM ((12 . BIRD)(11 . SNAIL)) ((+ 7 (11 12)) )))
   (PARTIAL   (CLAUSE 43 A3 AXIOM ((14 . FOX)(13 . BIRD)) ((+ 7 (13 14)) )))
   (PARTIAL   (CLAUSE 46 A4 AXIOM ((16 . WOLF)(15 . FOX)) ((+ 7 (15 16)) )))
   (PARTIAL   (CLAUSE 49 A5 AXIOM ((17 . FOX)(18 . WOLF)) ((- 5 (18 17)) )))
   (PARTIAL   (CLAUSE 52 A6 AXIOM ((19 . GRAIN)(20 . WOLF)) ((- 5 (20 19)) )))
   (PARTIAL   (CLAUSE 55 A7 AXIOM ((22 . CATERPILLAR)(21 . BIRD)) ((+ 5 (21 22)) )))
   (PARTIAL   (CLAUSE 58 A8 AXIOM ((24 . SNAIL)(23 . BIRD)) ((- 5 (23 24)) )))
   (PARTIAL   (CLAUSE 60 A9 AXIOM ((25 . CATERPILLAR)) ((+ 5 (25 (32 25))) )))
   (PARTIAL   (CLAUSE 62 A10 AXIOM ((27 . SNAIL)) ((+ 5 (27 (26 27))) )))
   (PARTIAL   (CLAUSE 67 A11 AXIOM ((8 . PLANT)(6 . ANIMAL)(4 . PLANT)(3 . ANIMAL))
   ((+ 5 (3 4)) (- 7 (6 3)) (- 5 (6 8)) (+ 5 (3 6)) )))
   (END.TIME 139521533)
   (FINAL 34 37 40 43 46 49 52 55 58 60 62 67)
   (SYMBOLS 
   (LET (NEW.ADDRESS)
   (LIST (CONS    7 (DT-PREDICATE.CREATE "SMALLER" '(ANY ANY)))
   (CONS    5 (DT-PREDICATE.CREATE "EATS" '(ANY ANY)))
   (PROG1 (CONS    2 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "=" '(ANY ANY))))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED SYMMETRIC REFLEXIVE SYMMETRIC REFLEXIVE)))
   (PROG1 (CONS    1 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "FALSE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (PROG1 (CONS    0 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "TRUE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (CONS   26 (DT-FUNCTION.CREATE "f_2" 'PLANT '(SNAIL) 'NIL))
   (CONS   32 (DT-FUNCTION.CREATE "f_1" 'PLANT '(CATERPILLAR) 'NIL)))))
   (RESULT))

(THEOREMS (SPLITPART.IDENTIFIER 1)
   (START.TIME 139521654)
   (PARTIAL   (CLAUSE 102 T12 THEOREM ()
   ((- 5 (106 105)) (- 5 (103 104)) )))
   (INITIAL   (CLAUSE 34 R.= AXIOM ((28 . ANY)) ((+ 2 (28 28)) ))
(CLAUSE 37 A1 AXIOM ((10 . BIRD)(9 . CATERPILLAR)) ((+ 7 (9 10)) ))
(CLAUSE 40 A2 AXIOM ((12 . BIRD)(11 . SNAIL)) ((+ 7 (11 12)) ))
(CLAUSE 43 A3 AXIOM ((14 . FOX)(13 . BIRD)) ((+ 7 (13 14)) ))
(CLAUSE 46 A4 AXIOM ((16 . WOLF)(15 . FOX)) ((+ 7 (15 16)) ))
(CLAUSE 49 A5 AXIOM ((17 . FOX)(18 . WOLF)) ((- 5 (18 17)) ))
(CLAUSE 52 A6 AXIOM ((19 . GRAIN)(20 . WOLF)) ((- 5 (20 19)) ))
(CLAUSE 58 A8 AXIOM ((24 . SNAIL)(23 . BIRD)) ((- 5 (23 24)) ))
(CLAUSE 60 A9 AXIOM ((25 . CATERPILLAR)) ((+ 5 (25 (32 25))) ))
(CLAUSE 62 A10 AXIOM ((27 . SNAIL)) ((+ 5 (27 (26 27))) ))
(CLAUSE 67 A11 AXIOM ((8 . PLANT)(6 . ANIMAL)(4 . PLANT)(3 . ANIMAL))
   ((+ 5 (3 4)) (- 7 (6 3)) (- 5 (6 8)) (+ 5 (3 6)) ))
(CLAUSE 102 T12 THEOREM ()
   ((- 5 (106 105)) (- 5 (103 104)) ))   )
   (END.TIME 139525700)
   (FINAL 34 37 40 43 46 49 52 58 60 62 67 102)
   (SYMBOLS 
   (LET (NEW.ADDRESS)
   (LIST (CONS    7 (DT-PREDICATE.CREATE "SMALLER" '(ANY ANY)))
   (CONS    5 (DT-PREDICATE.CREATE "EATS" '(ANY ANY)))
   (PROG1 (CONS    2 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "=" '(ANY ANY))))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED SYMMETRIC REFLEXIVE SYMMETRIC REFLEXIVE)))
   (PROG1 (CONS    1 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "FALSE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (PROG1 (CONS    0 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "TRUE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (CONS  103 (DT-CONSTANT.CREATE "c_4" 'ANIMAL))
   (CONS  104 (DT-CONSTANT.CREATE "c_3" 'GRAIN))
   (CONS  105 (DT-CONSTANT.CREATE "c_2" 'ANIMAL))
   (CONS  106 (DT-CONSTANT.CREATE "c_1" 'ANIMAL))
   (CONS   26 (DT-FUNCTION.CREATE "f_2" 'PLANT '(SNAIL) 'NIL))
   (CONS   32 (DT-FUNCTION.CREATE "f_1" 'PLANT '(CATERPILLAR) 'NIL)))))
   (RESULT))
(indices ((102 15 16) (67 1 2 3 4) (62 14) (60 13) (58 12) (55 11) (52 10) (49 9) (46 8) (43 7) (40 6) (37 5) (34 NIL)))

(SPLITPARTS "Genera 8.0.1 Logical Pathnames Translation Files NEWEST IP-TCP 422.2 RPC 415.0 Embedding Support 407.0 UX Support 416.0 KKL 19.2 HADES 14.20 Waltz 6.0 COLUMN 6.0 Experimental MKRP 48.4" "09-JUL,1991 10:46" NIL)

(OPTIONS (TWO_RULES)
    (TWO_RULES.MAXLEVEL . 1)
    (TWO_SUPPRESS.NORULES)
    (RED.I_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.I_CLAUSE.PURITY . P)
    (RED.I_CLAUSE.TAUTOLOGY . T)
    (RED.I_CLAUSE.TAUTOLOGY.RECHECK . PARTIAL)
    (RED.I_CLAUSE.SUBSUMPTION . T)
    (RED.I_CLAUSE.SUBSUMPTION.RECHECK . PARTIAL)
    (RED.I_CLAUSE.REPL.FACTORING . T)
    (RED.I_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.I_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.I_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.I_CLAUSE.REWRITING . DEM)
    (RED.I_LINK.INCOMPATIBILITY . T)
    (RED.I_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.I_LINK.TAUTOLOGY.RECHECK)
    (RED.I_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.I_LINK.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.D_CLAUSE.PURITY . P)
    (RED.D_CLAUSE.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_CLAUSE.TAUTOLOGY.RECHECK)
    (RED.D_CLAUSE.SUBSUMPTION.FORWARD . REMOVE-INHIBIT)
    (RED.D_CLAUSE.SUBSUMPTION.BACKWARD . REMOVE)
    (RED.D_CLAUSE.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.REPL.FACTORING . T)
    (RED.D_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.D_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.D_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.D_CLAUSE.REWRITING . DEM)
    (RED.D_LINK.INCOMPATIBILITY . T)
    (RED.D_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_LINK.TAUTOLOGY.RECHECK)
    (RED.D_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.D_LINK.SUBSUMPTION.RECHECK)
    (FAC_INITIAL)
    (FAC_EACH.STEP)
    (STR_RESOLUTION . SET-OF-SUPPORT)
    (STR_PAR-RES . 10)
    (STR_E-RESOLUTION)
    (STR_LINK.DEPTH)
    (STR_TERM.DEPTH)
    (STR_R.DEMODULATION . T)
    (STR_P.DEMODULATION . T)
    (STR_INDUCTION)
    (STR_FINITE.DOMAIN . T)
    (STR_SORT.LITERALS)
    (TERM_UNITS . T)
    (TERM_ITERATIONS . 0)
    (TERM_SET.OF.SUPPORT)
    (TERM_BREADTH.FIRST)
    (ER_PARAMODULATION . HEURISTIC-COMPLETION)
    (ER_COMPLETION . UNFAILING)
    (ER_CP.REDUCTION . T)
    (ER_ORDERING . LEXICOGRAPHIC-RECURSIVE-PATH)
    (ER_OPERATOR.ORDERING * - + 0 1)
    (ER_KNUTH.BENDIX.WEIGHT (+ 1) (* 1) (- 0) (0 1) (1 1))
    (ER_POLYNOMIAL.VARIABLES X Y Z U V W)
    (ER_POLYNOMIAL.WEIGHT (+ (+ X (* 2 Y))) (* (+ X (* X Y))) (- (+ (* 2 X) -1)) (0 2) (1 2))
    (ER_LINK.DEPTH.WEIGHT . 0)
    (ER_UNIT.FOCUS . 0)
    (ER_UNIT.FOCUS.WEIGHT . 1)
    (ER_EQUATION.FOCUS . 2)
    (ER_NARROW.DEPTH . 0)
    (ER_NARROW.NEXT . DEPTH)
    (ER_NARROW.TEST NORM C DELTA SL N)
    (ER_NARROW.LIMIT.FACTOR . 0)
    (ER_COMPILE)
    (GEN_SPLITTING)
    (GEN_PRESIMPLIFICATION . T)
    (GEN_MIN.EXPRESSION.LENGTH.FOR.FILE)
    (GEN_MIN.EXPRESSION.SIZE.FOR.FILE)
    (GEN_MANUAL.CONTROL)
    (GEN_MAXIMUM.STEPS)
    (GEN_GRAPH.SAVING)
    (GEN_SAVE.FILE . SAVEDEFAULT)
    (GEN_LISP.GARBAGE.COLLECTION)
    (GEN_COMMON.LISP)
    (TR_PREPROCESSING)
    (TR_STEP.MODE . LR)
    (TR_DUMP)
    (TR_CLAUSE.MODE . I)
    (TR_LINK.MODE . I)
    (TR_TRACE.FILE)
    (TR_TERMINAL . T)
    (PR_LATEX)
    (PR_INFIX.FORM . T)
    (PR_PREFIX.FORM)
    (PR_OPTIONS)
    (PR_AXIOM.CLAUSES . T)
    (PR_SYMBOLS)
    (PR_DIRECT.PROOF . T)
    (PR_VARIABLE.PRINT.NAMES X Y Z U V W XX YY ZZ UU VV WW XXX YYY ZZZ UUU VVV WWW)
    (PR_STATISTICS)
    (PR_PROTOCOL . T)
    (PR_LEFT.MARGIN . 3)
    (PR_RIGHT.MARGIN . 117)
    (PR_LINELENGTH . 114)
    (PR_LITERALS . T)
   )

(REFUTATION (START.TIME 139528069)

(OPTIONS (TWO_RULES)
    (TWO_RULES.MAXLEVEL . 1)
    (TWO_SUPPRESS.NORULES)
    (RED.I_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.I_CLAUSE.PURITY . P)
    (RED.I_CLAUSE.TAUTOLOGY . T)
    (RED.I_CLAUSE.TAUTOLOGY.RECHECK . PARTIAL)
    (RED.I_CLAUSE.SUBSUMPTION . T)
    (RED.I_CLAUSE.SUBSUMPTION.RECHECK . PARTIAL)
    (RED.I_CLAUSE.REPL.FACTORING . T)
    (RED.I_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.I_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.I_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.I_CLAUSE.REWRITING . DEM)
    (RED.I_LINK.INCOMPATIBILITY . T)
    (RED.I_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.I_LINK.TAUTOLOGY.RECHECK)
    (RED.I_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.I_LINK.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.D_CLAUSE.PURITY . P)
    (RED.D_CLAUSE.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_CLAUSE.TAUTOLOGY.RECHECK)
    (RED.D_CLAUSE.SUBSUMPTION.FORWARD . REMOVE-INHIBIT)
    (RED.D_CLAUSE.SUBSUMPTION.BACKWARD . REMOVE)
    (RED.D_CLAUSE.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.REPL.FACTORING . T)
    (RED.D_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.D_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.D_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.D_CLAUSE.REWRITING . DEM)
    (RED.D_LINK.INCOMPATIBILITY . T)
    (RED.D_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_LINK.TAUTOLOGY.RECHECK)
    (RED.D_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.D_LINK.SUBSUMPTION.RECHECK)
    (FAC_INITIAL)
    (FAC_EACH.STEP)
    (STR_RESOLUTION . SET-OF-SUPPORT)
    (STR_PAR-RES . 10)
    (STR_E-RESOLUTION)
    (STR_LINK.DEPTH)
    (STR_TERM.DEPTH)
    (STR_R.DEMODULATION . T)
    (STR_P.DEMODULATION . T)
    (STR_INDUCTION)
    (STR_FINITE.DOMAIN . T)
    (STR_SORT.LITERALS)
    (TERM_UNITS . T)
    (TERM_ITERATIONS . 0)
    (TERM_SET.OF.SUPPORT)
    (TERM_BREADTH.FIRST)
    (ER_PARAMODULATION . HEURISTIC-COMPLETION)
    (ER_COMPLETION . UNFAILING)
    (ER_CP.REDUCTION . T)
    (ER_ORDERING . LEXICOGRAPHIC-RECURSIVE-PATH)
    (ER_OPERATOR.ORDERING * - + 0 1)
    (ER_KNUTH.BENDIX.WEIGHT (+ 1) (* 1) (- 0) (0 1) (1 1))
    (ER_POLYNOMIAL.VARIABLES X Y Z U V W)
    (ER_POLYNOMIAL.WEIGHT (+ (+ X (* 2 Y))) (* (+ X (* X Y))) (- (+ (* 2 X) -1)) (0 2) (1 2))
    (ER_LINK.DEPTH.WEIGHT . 0)
    (ER_UNIT.FOCUS . 0)
    (ER_UNIT.FOCUS.WEIGHT . 1)
    (ER_EQUATION.FOCUS . 2)
    (ER_NARROW.DEPTH . 0)
    (ER_NARROW.NEXT . DEPTH)
    (ER_NARROW.TEST NORM C DELTA SL N)
    (ER_NARROW.LIMIT.FACTOR . 0)
    (ER_COMPILE)
    (GEN_SPLITTING)
    (GEN_PRESIMPLIFICATION . T)
    (GEN_MIN.EXPRESSION.LENGTH.FOR.FILE)
    (GEN_MIN.EXPRESSION.SIZE.FOR.FILE)
    (GEN_MANUAL.CONTROL)
    (GEN_MAXIMUM.STEPS)
    (GEN_GRAPH.SAVING)
    (GEN_SAVE.FILE . SAVEDEFAULT)
    (GEN_LISP.GARBAGE.COLLECTION)
    (GEN_COMMON.LISP)
    (TR_PREPROCESSING)
    (TR_STEP.MODE . LR)
    (TR_DUMP)
    (TR_CLAUSE.MODE . I)
    (TR_LINK.MODE . I)
    (TR_TRACE.FILE)
    (TR_TERMINAL . T)
    (PR_LATEX)
    (PR_INFIX.FORM . T)
    (PR_PREFIX.FORM)
    (PR_OPTIONS)
    (PR_AXIOM.CLAUSES . T)
    (PR_SYMBOLS)
    (PR_DIRECT.PROOF . T)
    (PR_VARIABLE.PRINT.NAMES X Y Z U V W XX YY ZZ UU VV WW XXX YYY ZZZ UUU VVV WWW)
    (PR_STATISTICS)
    (PR_PROTOCOL . T)
    (PR_LEFT.MARGIN . 3)
    (PR_RIGHT.MARGIN . 117)
    (PR_LINELENGTH . 114)
    (PR_LITERALS . T)
   )
   (INITIAL   (CLAUSE 34 R.= AXIOM ((28 . ANY)) ((+ 2 (28 28)) ))
(CLAUSE 37 A1 AXIOM ((10 . BIRD)(9 . CATERPILLAR)) ((+ 7 (9 10)) ))
(CLAUSE 40 A2 AXIOM ((12 . BIRD)(11 . SNAIL)) ((+ 7 (11 12)) ))
(CLAUSE 43 A3 AXIOM ((14 . FOX)(13 . BIRD)) ((+ 7 (13 14)) ))
(CLAUSE 46 A4 AXIOM ((16 . WOLF)(15 . FOX)) ((+ 7 (15 16)) ))
(CLAUSE 49 A5 AXIOM ((17 . FOX)(18 . WOLF)) ((- 5 (18 17)) ))
(CLAUSE 52 A6 AXIOM ((19 . GRAIN)(20 . WOLF)) ((- 5 (20 19)) ))
(CLAUSE 58 A8 AXIOM ((24 . SNAIL)(23 . BIRD)) ((- 5 (23 24)) ))
(CLAUSE 60 A9 AXIOM ((25 . CATERPILLAR)) ((+ 5 (25 (32 25))) ))
(CLAUSE 62 A10 AXIOM ((27 . SNAIL)) ((+ 5 (27 (26 27))) ))
(CLAUSE 67 A11 AXIOM ((8 . PLANT)(6 . ANIMAL)(4 . PLANT)(3 . ANIMAL))
   ((+ 5 (3 4)) (- 7 (6 3)) (- 5 (6 8)) (+ 5 (3 6)) ))
(CLAUSE 102 T12 THEOREM ()
   ((- 5 (106 105)) (- 5 (103 104)) ))   )
   (OPERATION (CLAUSE 115 R1 (102 67) ((117 . PLANT)(118 . ANIMAL))
   ((- 7 (118 103)) (- 5 (118 117)) (+ 5 (103 118)) (- 5 (106 105)) ))
   (RESOLUTION 67 1 102 2 NIL (3 103 4 104) 115))
   (END.TIME 139534813)
   (SYMBOLS 
   (LET (NEW.ADDRESS)
   (LIST (CONS    7 (DT-PREDICATE.CREATE "SMALLER" '(ANY ANY)))
   (CONS    5 (DT-PREDICATE.CREATE "EATS" '(ANY ANY)))
   (PROG1 (CONS    2 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "=" '(ANY ANY))))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED SYMMETRIC REFLEXIVE SYMMETRIC REFLEXIVE)))
   (PROG1 (CONS    1 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "FALSE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (PROG1 (CONS    0 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "TRUE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (CONS  103 (DT-CONSTANT.CREATE "c_4" 'ANIMAL))
   (CONS  104 (DT-CONSTANT.CREATE "c_3" 'GRAIN))
   (CONS  105 (DT-CONSTANT.CREATE "c_2" 'ANIMAL))
   (CONS  106 (DT-CONSTANT.CREATE "c_1" 'ANIMAL))
   (CONS   26 (DT-FUNCTION.CREATE "f_2" 'PLANT '(SNAIL) 'NIL))
   (CONS   32 (DT-FUNCTION.CREATE "f_1" 'PLANT '(CATERPILLAR) 'NIL)))))
   (SPLITPART.IDENTIFIER 1)
   (RESULT FAILURE GRAPH.COLLAPSED)
)