;;; -*- Package: MKRP; Base: 10; Mode: LISP; Syntax: Common-lisp -*-
(PREP-PROBLEM.SPECIFICATION (QUOTE ((ALL X MAX (1 X 1)) (ALL X MAX (X X X)) (ALL X MAX (0 X X)) (ALL X MIN (0 X 0)) (ALL X MIN (X X X)) (ALL X MIN (1 X X)) (ALL X,Y,Z MIN (X Y Z) IMPL MAX (X Z X)) (ALL X,Y,Z MAX (X Y Z) IMPL MIN (X Z X)) (ALL X,Y,Z,XY,YZ,XYZ MIN (X Y XY) AND MIN (Y Z YZ) IMPL (MIN (X YZ XYZ) EQV MIN (XY Z XYZ))) (ALL X,Y,Z,XY,YZ,XYZ MAX (X Y XY) AND MAX (Y Z YZ) IMPL (MAX (X YZ XYZ) EQV MAX (XY Z XYZ))) (ALL X,Y,Z,X1,Y1,Z1 MIN (X Z X) AND MAX (X Y X1) AND MIN (Y Z Y1) AND MIN (Z X1 Z1) IMPL MAX (X Y1 Z1)) (ALL X,Y,Z,X1,Y1,Z1 MIN (X Z X) AND MAX (X Y X1) AND MIN (Y Z Y1) AND MAX (X Y1 Z1) IMPL MIN (Z X1 Z1)) (ALL X,Y,Z,X1,Y1,Z1 MIN (X Z Z) AND MAX (Y Z Y1) AND MIN (X Y X1) AND MIN (X Y1 Z1) IMPL MAX (Z X1 Z1)) (ALL X,Y,Z,X1,Y1,Z1 MIN (X Z Z) AND MAX (Y Z Y1) AND MIN (X Y X1) AND MAX (Z X1 Z1) IMPL MIN (X Y1 Z1)) (SYMMETRIC (MIN)) (SYMMETRIC (MAX)))) (QUOTE ((ALL 3 (+ 5 (4 3 4) NIL)) (ALL 6 (+ 5 (6 6 6) NIL)) (ALL 7 (+ 5 (8 7 7) NIL)) (ALL 9 (+ 10 (8 9 8) NIL)) (ALL 11 (+ 10 (11 11 11) NIL)) (ALL 12 (+ 10 (4 12 12) NIL)) (ALL 15 (ALL 14 (ALL 13 (IMPL (+ 10 (13 14 15) NIL) (+ 5 (13 15 13) NIL))))) (ALL 18 (ALL 17 (ALL 16 (IMPL (+ 5 (16 17 18) NIL) (+ 10 (16 18 16) NIL))))) (ALL 24 (ALL 23 (ALL 22 (ALL 21 (ALL 20 (ALL 19 (IMPL (AND (+ 10 (19 20 22) NIL) (+ 10 (20 21 23) NIL)) (EQV (+ 10 (19 23 24) (KIND (EQV T 100))) (+ 10 (22 21 24) (KIND (EQV NIL 100))))))))))) (ALL 30 (ALL 29 (ALL 28 (ALL 27 (ALL 26 (ALL 25 (IMPL (AND (+ 5 (25 26 28) NIL) (+ 5 (26 27 29) NIL)) (EQV (+ 5 (25 29 30) (KIND (EQV T 110))) (+ 5 (28 27 30) (KIND (EQV NIL 110))))))))))) (ALL 36 (ALL 35 (ALL 34 (ALL 33 (ALL 32 (ALL 31 (IMPL (AND (+ 10 (31 33 31) NIL) (AND (+ 5 (31 32 34) NIL) (AND (+ 10 (32 33 35) NIL) (+ 10 (33 34 36) NIL)))) (+ 5 (31 35 36) NIL)))))))) (ALL 42 (ALL 41 (ALL 40 (ALL 39 (ALL 38 (ALL 37 (IMPL (AND (+ 10 (37 39 37) NIL) (AND (+ 5 (37 38 40) NIL) (AND (+ 10 (38 39 41) NIL) (+ 5 (37 41 42) NIL)))) (+ 10 (39 40 42) NIL)))))))) (ALL 48 (ALL 47 (ALL 46 (ALL 45 (ALL 44 (ALL 43 (IMPL (AND (+ 10 (43 45 45) NIL) (AND (+ 5 (44 45 47) NIL) (AND (+ 10 (43 44 46) NIL) (+ 10 (43 47 48) NIL)))) (+ 5 (45 46 48) NIL)))))))) (ALL 54 (ALL 53 (ALL 52 (ALL 51 (ALL 50 (ALL 49 (IMPL (AND (+ 10 (49 51 51) NIL) (AND (+ 5 (50 51 53) NIL) (AND (+ 10 (49 50 52) NIL) (+ 5 (51 52 54) NIL)))) (+ 10 (49 53 54) NIL)))))))) (+ 0 NIL NIL) (+ 0 NIL NIL))) (QUOTE ((* THEOREM) (MIN (A B C) AND MAX (C D 1) AND MIN (B D E) AND MIN (A E 0) AND MAX (B A2 B2) AND MAX (A B2 1) AND MAX (A B C2) AND MIN (A2 C2 0) AND MIN (D A D2) AND MAX (A2 D2 E2) AND MIN (D B A3) AND MAX (A2 A3 B3) IMPL MIN (B3 E2 A2)))) (QUOTE (COMMENT (IMPL (AND (+ 10 (55 56 57) NIL) (AND (+ 5 (57 58 4) NIL) (AND (+ 10 (56 58 59) NIL) (AND (+ 10 (55 59 8) NIL) (AND (+ 5 (56 60 61) NIL) (AND (+ 5 (55 61 4) NIL) (AND (+ 5 (55 56 62) NIL) (AND (+ 10 (60 62 8) NIL) (AND (+ 10 (58 55 63) NIL) (AND (+ 5 (60 63 64) NIL) (AND (+ 10 (58 56 65) NIL) (+ 5 (60 65 66) NIL)))))))))))) (+ 10 (66 64 60) NIL)))) (QUOTE ("Edit:     Axioms and Theorems edited: 17-APR,1991 16:46 ")) (PROGN(PROGN (DT-RESET))

(PROG ((ADDRLIST
        '(9619 9624 9629 9634 9639 9644 9649 9654 9659 9664 9669 9674 9679 9684 9689 9694 9699
          9704 9709 9714 9719 9724 9729 9734 9739 9744 9749 9754 9759 9764 9769 9774 9779 9784
          9789 9794 9799 9804 9809 9814 9819 9824 9829 9834 9839 9844 9849 9854 9859 9864 9869
          9874 9879 9884 9889 9894 9909 9914 9919 9924 9929 9944 9949 9954 9969 9984 9999))
       (DATALIST
        '(15 "TRUE" NIL NIL NIL (DEFINED) NIL ((- 0 (POSITIVE))) ((+ 0 (NEGATIVE)))
          ((+ 0 (NIL))) ((- 0 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "FALSE" NIL NIL
          NIL (DEFINED) NIL ((- 1 (POSITIVE))) ((+ 1 (NEGATIVE))) ((+ 1 (NIL))) ((- 1 (NIL)))
          NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "=" NIL NIL (ANY ANY)
          (DEFINED SYMMETRIC REFLEXIVE SYMMETRIC REFLEXIVE) NIL ((- 2 (POSITIVE . SYMMETRIC)))
          ((+ 2 (NEGATIVE . SYMMETRIC))) ((+ 2 (NIL . SYMMETRIC))) ((- 2 (NIL . SYMMETRIC)))
          NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
          VARIABLE 5 ANY "1" (DT*ST-KIND NIL) CONSTANT 15 "MAX" NIL NIL (ANY ANY ANY)
          (SYMMETRIC) NIL ((- 5 (POSITIVE . SYMMETRIC))) ((+ 5 (NEGATIVE . SYMMETRIC)))
          ((+ 5 (NIL . SYMMETRIC))) ((- 5 (NIL . SYMMETRIC))) NIL NIL (DT*ST-KIND NIL)
          PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY "0" (DT*ST-KIND NIL) CONSTANT 5 ANY
          NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 15 "MIN" NIL NIL (ANY ANY ANY)
          (SYMMETRIC) NIL ((- 10 (POSITIVE . SYMMETRIC))) ((+ 10 (NEGATIVE . SYMMETRIC)))
          ((+ 10 (NIL . SYMMETRIC))) ((- 10 (NIL . SYMMETRIC))) NIL NIL (DT*ST-KIND NIL)
          PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
          VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
          VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
          VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
          VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
          VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
          VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
          VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
          VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
          VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
          VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
          VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
          VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
          VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
          VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY "A" (DT*ST-KIND NIL) CONSTANT 5 ANY
          "B" (DT*ST-KIND NIL) CONSTANT 5 ANY "C" (DT*ST-KIND NIL) CONSTANT 5 ANY "D"
          (DT*ST-KIND NIL) CONSTANT 5 ANY "E" (DT*ST-KIND NIL) CONSTANT 5 ANY "A2"
          (DT*ST-KIND NIL) CONSTANT 5 ANY "B2" (DT*ST-KIND NIL) CONSTANT 5 ANY "C2"
          (DT*ST-KIND NIL) CONSTANT 5 ANY "D2" (DT*ST-KIND NIL) CONSTANT 5 ANY "E2"
          (DT*ST-KIND NIL) CONSTANT 5 ANY "A3" (DT*ST-KIND NIL) CONSTANT 5 ANY "B3"
          (DT*ST-KIND NIL) CONSTANT))
       (INCREMENT (- MEM*SIZE 10000))
       COUNTER1)
      (MEM-RESET)
      (COND ((> MEM*SIZE 10000)
             (SETQ COUNTER1 67)
             (MAPC #'(LAMBDA (RADDR)
                       (SETF (AREF MEM*MEMORY (DECF COUNTER1))
                              (COND ((EQL RADDR 'ATP.MEMORY.NIL) RADDR)
                                    ((EQL 'END RADDR) RADDR)
                                    ((OR (EQL RADDR 0)
                                         (MINUSP RADDR))
                                     RADDR)
                                    (T (+ RADDR INCREMENT)))))
                   ADDRLIST)
             (SETQ COUNTER1 MEM*SIZE)
             (MAPC #'(LAMBDA (DATA) (SETF (AREF MEM*MEMORY (DECF COUNTER1)) DATA)) DATALIST))
            (T (UNLESS (= MEM*SIZE 10000)
                 (MEM-INITIALIZE 10000))
               (SETQ COUNTER1 67)
               (MAPC #'(LAMBDA (RADDR) (SETF (AREF MEM*MEMORY (DECF COUNTER1)) RADDR))
                     ADDRLIST)
               (SETQ COUNTER1 MEM*SIZE)
               (MAPC #'(LAMBDA (DATA) (SETF (AREF MEM*MEMORY (DECF COUNTER1)) DATA)) DATALIST))
            )
      (SETQ MEM*NEXT.RADR (IF (> MEM*SIZE 10000) (+ 9614 INCREMENT) 9614))
      (SETQ MEM*NEXT.VADR 67
            MEM*REST (- MEM*NEXT.RADR MEM*NEXT.VADR -1)
            MEM*FIRST.REUSABLE.VADR NIL
            MEM*LAST.REUSABLE.VADR NIL))

(PROGN (SETQ DT*SORT.ALL (QUOTE (ANY))) (SETQ DT*SORT.NR (QUOTE 2)) (SETQ DT*SORT.PROPERTIES (QUOTE (DT*MAX.SUBSORTS DT*LEAST.SUPERSORTS DT*TRANSITIVE.CLOSURE DT*INVERSE.TRANSITIVE.CLOSURE DT*MINIMAL.SUBSORTS DT*DIRECT.SUBSORTS DT*DIRECT.SUPERSORTS DT*DISJOINT.SORTS DT*COMPLETION.SORT))) (SETQ DT*SORT.COMMON.COMPUTE.FLAG (QUOTE NIL)) (SETQ DT*ELEMENT.PREDICATE (QUOTE NIL)) (SETQ DT*OMEGA.CONSTANT (QUOTE NIL)) (SETQ DT*VARIABLE.COUNTER (QUOTE 0)) (SETQ DT*CONSTANT.COUNTER (QUOTE 0)) (SETQ DT*CONSTANT.ALL (QUOTE (66 65 64 63 62 61 60 59 58 57 56 55 8 4))) (SETQ DT*ABBREVIATIONS (QUOTE NIL)) (SETQ DT*FUNCTION.COUNTER (QUOTE 0)) (SETQ DT*FUNCTION.ALL (QUOTE NIL)) (SETQ DT*FUNCTION.ADMISSIBLE.THEORIES (QUOTE (ASSOCIATIVE))) (SETQ DT*FUNCTION.ACTUAL.THEORIES (QUOTE NIL)) (SETQ DT*FUNCTION.WITH.ARGUMENT.SYMMETRIES (QUOTE NIL)) (SETQ DT*FUNCTION.COMPONENTS (QUOTE (PNAME ATTRIBUTES MAX.RANGE.SORT MAX.DOMAIN.SORTS MIN.RANGE.SORTS SORT.LIST SORT.LIST.INVERSE SORT.TREE.CALC ARGUMENT.SYMMETRIES ARITY G.L.B.OF.RANGES))) (SETQ DT*PREDICATE.ADMISSABLE.ATTRIBUTES (QUOTE (SYMMETRIC DEFINED REFLEXIVE))) (SETQ DT*PREDICATE.COUNTER (QUOTE 0)) (SETQ DT*EQUALITY.SYMBOLS (QUOTE ("=" ":=" "=:" ":=:"))) (SETQ DT*EQUALITY.PREDICATES (QUOTE (2))) (SETQ DT*NONEQUALITY.PREDICATES (QUOTE (10 5 1 0))) (SETQ DT*PREDICATE.ALL (QUOTE (10 5 2 1 0))) (SETQ DT*PREDICATE.WITH.ATTRIBUTES (QUOTE NIL)) (SETQ DT*PREDICATE.COMPONENTS (QUOTE (PNAME POSITIVE.OCCURRENCES NEGATIVE.OCCURRENCES DOMAINSORTS ATTRIBUTES REFL.CLAUSE +ROTHERSIDES -ROTHERSIDES +SOTHERSIDES -SOTHERSIDES +TOTHERSIDES -TOTHERSIDES))) (SETQ DT*TRUE.PREDICATE (QUOTE 0)) (SETQ DT*FALSE.PREDICATE (QUOTE 1)) (SETQ DT*UNI.CREATES.VARIABLES (QUOTE NIL)) (SETQ DT*SIGN.MINUS.SYMBOLS (QUOTE (- --))) (SETQ DT*SIGN.PLUS.SYMBOLS (QUOTE (+ ++))) (SETQ DT*SYMBOL.KINDS (QUOTE (CONSTANT.ALL FUNCTION.ALL PREDICATE.ALL)))) 
(PROGN) 
(PROGN (PROGN)) 
(PROGN (PROGN (SETF (GET (QUOTE ANY) (QUOTE DT*DIRECT.SUBSORTS)) (QUOTE NIL)) (SETF (GET (QUOTE ANY) (QUOTE DT*SORT.NUMBER)) (QUOTE 1)) (SETF (GET (QUOTE ANY) (QUOTE DT*TRANSITIVE.CLOSURE)) (QUOTE (ANY))) (SETF (GET (QUOTE ANY) (QUOTE DT*MAX.SUBSORTS)) (QUOTE ((ANY ANY)))) (SETF (GET (QUOTE ANY) (QUOTE DT*MINIMAL.SUBSORTS)) (QUOTE (ANY))) (SETF (GET (QUOTE ANY) (QUOTE DT*DIRECT.SUPERSORTS)) (QUOTE NIL)) (SETF (GET (QUOTE ANY) (QUOTE DT*INVERSE.TRANSITIVE.CLOSURE)) (QUOTE (ANY))))) ))