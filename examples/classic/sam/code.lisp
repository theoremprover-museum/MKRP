;;; -*- Package: MKRP; Base: 10; Mode: LISP; Syntax: Common-lisp -*-

(CONSTRUCTION  "Genera 8.0.1 Logical Pathnames Translation Files NEWEST IP-TCP 422.2 RPC 415.0 Embedding Support 407.0 UX Support 416.0 CLX 419.0 C Runtime 416.0 Compiler Tools Package 411.0 Compiler Tools Runtime 411.0 C Packages 413.0 Minimal Lexer Runtime 416.0 Lexer Package 415.0 Syntax Editor Runtime 411.0 Experimental X Server 409.0 X Documentation 403.0 KKL 19.1 HADES 14.14 Waltz 6.0 COLUMN 6.0 Experimental MKRP 48.2" "17-APR,1991 16:48" 
   ("Edit:     Axioms and Theorems edited: 17-APR,1991 16:46 "
   ))

(AXIOMS.INFIX    ((ALL X MAX (1 X 1))
   (ALL X MAX (X X X))
   (ALL X MAX (0 X X))
   (ALL X MIN (0 X 0))
   (ALL X MIN (X X X))
   (ALL X MIN (1 X X))
   (ALL |X,Y,Z| MIN (X Y Z) IMPL MAX (X Z X))
   (ALL |X,Y,Z| MAX (X Y Z) IMPL MIN (X Z X))
   (ALL |X,Y,Z,XY,YZ,XYZ| MIN (X Y XY) AND MIN (Y Z YZ) IMPL (MIN (X YZ XYZ) EQV MIN (XY Z XYZ)))
   (ALL |X,Y,Z,XY,YZ,XYZ| MAX (X Y XY) AND MAX (Y Z YZ) IMPL (MAX (X YZ XYZ) EQV MAX (XY Z XYZ)))
   (ALL |X,Y,Z,X1,Y1,Z1| MIN (X Z X) AND MAX (X Y X1) AND MIN (Y Z Y1) AND MIN (Z X1 Z1) IMPL MAX (X Y1 Z1))
   (ALL |X,Y,Z,X1,Y1,Z1| MIN (X Z X) AND MAX (X Y X1) AND MIN (Y Z Y1) AND MAX (X Y1 Z1) IMPL MIN (Z X1 Z1))
   (ALL |X,Y,Z,X1,Y1,Z1| MIN (X Z Z) AND MAX (Y Z Y1) AND MIN (X Y X1) AND MIN (X Y1 Z1) IMPL MAX (Z X1 Z1))
   (ALL |X,Y,Z,X1,Y1,Z1| MIN (X Z Z) AND MAX (Y Z Y1) AND MIN (X Y X1) AND MAX (Z X1 Z1) IMPL MIN (X Y1 Z1))
   (SYMMETRIC (MIN))
   (SYMMETRIC (MAX))))

(THEOREMS.INFIX ((* THEOREM)
   (MIN (A B C) AND MAX (C D 1) AND MIN (B D E) AND MIN (A E 0) AND MAX (B A2 B2) AND MAX (A B2 1) AND MAX (A B C2) AND MIN (A2 C2 0) AND MIN (D A D2) AND MAX (A2 D2 E2) AND MIN (D B A3) AND MAX (A2 A3 B3) IMPL MIN (B3 E2 A2))))

(AXIOMS.PREFIX   ((ALL 3 (+ 5 (4 3 4) NIL))
   (ALL 6 (+ 5 (6 6 6) NIL))
   (ALL 7 (+ 5 (8 7 7) NIL))
   (ALL 9 (+ 10 (8 9 8) NIL))
   (ALL 11 (+ 10 (11 11 11) NIL))
   (ALL 12 (+ 10 (4 12 12) NIL))
   (ALL 15 (ALL 14 (ALL 13 (IMPL (+ 10 (13 14 15) NIL) (+ 5 (13 15 13) NIL)))))
   (ALL 18 (ALL 17 (ALL 16 (IMPL (+ 5 (16 17 18) NIL) (+ 10 (16 18 16) NIL)))))
   (ALL 24 (ALL 23 (ALL 22 (ALL 21 (ALL 20 (ALL 19 (IMPL (AND (+ 10 (19 20 22) NIL) (+ 10 (20 21 23) NIL)) (EQV (+ 10 (19 23 24) (KIND (EQV T 100))) (+ 10 (22 21 24) (KIND (EQV NIL 100)))))))))))
   (ALL 30 (ALL 29 (ALL 28 (ALL 27 (ALL 26 (ALL 25 (IMPL (AND (+ 5 (25 26 28) NIL) (+ 5 (26 27 29) NIL)) (EQV (+ 5 (25 29 30) (KIND (EQV T 110))) (+ 5 (28 27 30) (KIND (EQV NIL 110)))))))))))
   (ALL 36 (ALL 35 (ALL 34 (ALL 33 (ALL 32 (ALL 31 (IMPL (AND (+ 10 (31 33 31) NIL) (AND (+ 5 (31 32 34) NIL) (AND (+ 10 (32 33 35) NIL) (+ 10 (33 34 36) NIL)))) (+ 5 (31 35 36) NIL))))))))
   (ALL 42 (ALL 41 (ALL 40 (ALL 39 (ALL 38 (ALL 37 (IMPL (AND (+ 10 (37 39 37) NIL) (AND (+ 5 (37 38 40) NIL) (AND (+ 10 (38 39 41) NIL) (+ 5 (37 41 42) NIL)))) (+ 10 (39 40 42) NIL))))))))
   (ALL 48 (ALL 47 (ALL 46 (ALL 45 (ALL 44 (ALL 43 (IMPL (AND (+ 10 (43 45 45) NIL) (AND (+ 5 (44 45 47) NIL) (AND (+ 10 (43 44 46) NIL) (+ 10 (43 47 48) NIL)))) (+ 5 (45 46 48) NIL))))))))
   (ALL 54 (ALL 53 (ALL 52 (ALL 51 (ALL 50 (ALL 49 (IMPL (AND (+ 10 (49 51 51) NIL) (AND (+ 5 (50 51 53) NIL) (AND (+ 10 (49 50 52) NIL) (+ 5 (51 52 54) NIL)))) (+ 10 (49 53 54) NIL))))))))
   (+ 0 NIL NIL)
   (+ 0 NIL NIL)))

(THEOREMS.PREFIX (COMMENT
   (IMPL (AND (+ 10 (55 56 57) NIL) (AND (+ 5 (57 58 4) NIL) (AND (+ 10 (56 58 59) NIL) (AND (+ 10 (55 59 8) NIL) (AND (+ 5 (56 60 61) NIL) (AND (+ 5 (55 61 4) NIL) (AND (+ 5 (55 56 62) NIL) (AND (+ 10 (60 62 8) NIL) (AND (+ 10 (58 55 63) NIL) (AND (+ 5 (60 63 64) NIL) (AND (+ 10 (58 56 65) NIL) (+ 5 (60 65 66) NIL)))))))))))) (+ 10 (66 64 60) NIL))))

(OPTIONS (TWO_RULES)
    (TWO_RULES.MAXLEVEL . 1)
    (TWO_SUPPRESS.NORULES)
    (RED.I_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.I_CLAUSE.PURITY . P)
    (RED.I_CLAUSE.TAUTOLOGY . T)
    (RED.I_CLAUSE.TAUTOLOGY.RECHECK . PARTIAL)
    (RED.I_CLAUSE.SUBSUMPTION . T)
    (RED.I_CLAUSE.SUBSUMPTION.RECHECK . PARTIAL)
    (RED.I_CLAUSE.REPL.FACTORING . T)
    (RED.I_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.I_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.I_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.I_CLAUSE.REWRITING . DEM)
    (RED.I_LINK.INCOMPATIBILITY . T)
    (RED.I_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.I_LINK.TAUTOLOGY.RECHECK)
    (RED.I_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.I_LINK.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.D_CLAUSE.PURITY . P)
    (RED.D_CLAUSE.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_CLAUSE.TAUTOLOGY.RECHECK)
    (RED.D_CLAUSE.SUBSUMPTION.FORWARD . REMOVE-INHIBIT)
    (RED.D_CLAUSE.SUBSUMPTION.BACKWARD . REMOVE)
    (RED.D_CLAUSE.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.REPL.FACTORING . T)
    (RED.D_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.D_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.D_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.D_CLAUSE.REWRITING . DEM)
    (RED.D_LINK.INCOMPATIBILITY . T)
    (RED.D_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_LINK.TAUTOLOGY.RECHECK)
    (RED.D_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.D_LINK.SUBSUMPTION.RECHECK)
    (FAC_INITIAL)
    (FAC_EACH.STEP)
    (STR_RESOLUTION . SET-OF-SUPPORT)
    (STR_PAR-RES . 10)
    (STR_E-RESOLUTION)
    (STR_LINK.DEPTH)
    (STR_TERM.DEPTH)
    (STR_R.DEMODULATION . T)
    (STR_P.DEMODULATION . T)
    (STR_INDUCTION)
    (STR_FINITE.DOMAIN . T)
    (STR_SORT.LITERALS)
    (TERM_UNITS . T)
    (TERM_ITERATIONS . 10)
    (TERM_SET.OF.SUPPORT)
    (TERM_BREADTH.FIRST)
    (ER_PARAMODULATION . HEURISTIC-COMPLETION)
    (ER_COMPLETION . UNFAILING)
    (ER_CP.REDUCTION . T)
    (ER_ORDERING . LEXICOGRAPHIC-RECURSIVE-PATH)
    (ER_OPERATOR.ORDERING * - + 0 1)
    (ER_KNUTH.BENDIX.WEIGHT (+ 1) (* 1) (- 0) (0 1) (1 1))
    (ER_POLYNOMIAL.VARIABLES X Y Z U V W)
    (ER_POLYNOMIAL.WEIGHT (+ (+ X (* 2 Y))) (* (+ X (* X Y))) (- (+ (* 2 X) -1)) (0 2) (1 2))
    (ER_LINK.DEPTH.WEIGHT . 0)
    (ER_UNIT.FOCUS . 0)
    (ER_UNIT.FOCUS.WEIGHT . 1)
    (ER_EQUATION.FOCUS . 2)
    (ER_NARROW.DEPTH . 0)
    (ER_NARROW.NEXT . DEPTH)
    (ER_NARROW.TEST NORM C DELTA SL N)
    (ER_NARROW.LIMIT.FACTOR . 0)
    (ER_COMPILE)
    (GEN_SPLITTING . 0)
    (GEN_PRESIMPLIFICATION . T)
    (GEN_MIN.EXPRESSION.LENGTH.FOR.FILE)
    (GEN_MIN.EXPRESSION.SIZE.FOR.FILE)
    (GEN_MANUAL.CONTROL)
    (GEN_MAXIMUM.STEPS)
    (GEN_GRAPH.SAVING)
    (GEN_SAVE.FILE . SAVEDEFAULT)
    (GEN_LISP.GARBAGE.COLLECTION)
    (GEN_COMMON.LISP)
    (TR_PREPROCESSING)
    (TR_STEP.MODE . LR)
    (TR_DUMP)
    (TR_CLAUSE.MODE . I)
    (TR_LINK.MODE . I)
    (TR_TRACE.FILE)
    (TR_TERMINAL . T)
    (PR_LATEX)
    (PR_INFIX.FORM . T)
    (PR_PREFIX.FORM)
    (PR_OPTIONS)
    (PR_AXIOM.CLAUSES . T)
    (PR_SYMBOLS)
    (PR_DIRECT.PROOF . T)
    (PR_VARIABLE.PRINT.NAMES X Y Z U V W XX YY ZZ UU VV WW XXX YYY ZZZ UUU VVV WWW)
    (PR_STATISTICS)
    (PR_PROTOCOL . T)
    (PR_LEFT.MARGIN . 3)
    (PR_RIGHT.MARGIN . 117)
    (PR_LINELENGTH . 114)
    (PR_LITERALS)
   )

(LINK.COLOURS (R RIW RD S SI SIW SID T TI TIW P PIW PD RIWD))

(AXIOMS (START.TIME 251384721)
   (PARTIAL   (CLAUSE 81 R.= AXIOM ((79 . ANY)) ((+ 2 (79 79)) ))(CLAUSE 83 A1 AXIOM ((3 . ANY)) ((+ 5 (4 3 4)) )))
   (PARTIAL   (CLAUSE 85 A2 AXIOM ((6 . ANY)) ((+ 5 (6 6 6)) )))
   (PARTIAL   (CLAUSE 88 A3 AXIOM ((7 . ANY)) ((+ 5 (8 7 7)) )))
   (PARTIAL   (CLAUSE 92 A4 AXIOM ((9 . ANY)) ((+ 10 (8 9 8)) )))
   (PARTIAL   (CLAUSE 94 A5 AXIOM ((11 . ANY)) ((+ 10 (11 11 11)) )))
   (PARTIAL   (CLAUSE 97 A6 AXIOM ((12 . ANY)) ((+ 10 (4 12 12)) )))
   (PARTIAL   (CLAUSE 103 A7 AXIOM ((15 . ANY)(14 . ANY)(13 . ANY))
   ((- 10 (13 14 15)) (+ 5 (13 15 13)) )))
   (PARTIAL   (CLAUSE 115 A8 AXIOM ((18 . ANY)(17 . ANY)(16 . ANY))
   ((- 5 (16 17 18)) (+ 10 (16 18 16)) )))
   (PARTIAL   (CLAUSE 134 A9 AXIOM ((24 . ANY)(23 . ANY)(21 . ANY)(22 . ANY)(20 . ANY)(19 . ANY))
   ((- 10 (19 20 22)) (- 10 (20 21 23)) (+ 10 (19 23 24)) (- 10 (22 21 24)) )))
   (PARTIAL   (CLAUSE 269 A10 AXIOM ((68 . ANY)(71 . ANY)(69 . ANY)(70 . ANY)(67 . ANY)(72 . ANY))
   ((- 10 (72 67 70)) (- 10 (67 69 71)) (- 10 (72 71 68)) (+ 10 (70 69 68)) )))
   (PARTIAL   (CLAUSE 240 A11 AXIOM ((30 . ANY)(29 . ANY)(27 . ANY)(28 . ANY)(26 . ANY)(25 . ANY))
   ((- 5 (25 26 28)) (- 5 (26 27 29)) (+ 5 (25 29 30)) (- 5 (28 27 30)) )))
   (PARTIAL   (CLAUSE 340 A12 AXIOM ((74 . ANY)(77 . ANY)(75 . ANY)(76 . ANY)(73 . ANY)(78 . ANY))
   ((- 5 (78 73 76)) (- 5 (73 75 77)) (- 5 (78 77 74)) (+ 5 (76 75 74)) )))
   (PARTIAL   (CLAUSE 311 A13 AXIOM ((36 . ANY)(35 . ANY)(34 . ANY)(32 . ANY)(33 . ANY)(31 . ANY))
   ((- 10 (31 33 31)) (- 5 (31 32 34)) (- 10 (32 33 35)) (- 10 (33 34 36)) (+ 5 (31 35 36)) )))
   (PARTIAL   (CLAUSE 379 A14 AXIOM ((42 . ANY)(41 . ANY)(40 . ANY)(38 . ANY)(39 . ANY)(37 . ANY))
   ((- 10 (37 39 37)) (- 5 (37 38 40)) (- 10 (38 39 41)) (- 5 (37 41 42)) (+ 10 (39 40 42)) )))
   (PARTIAL   (CLAUSE 514 A15 AXIOM ((48 . ANY)(46 . ANY)(47 . ANY)(44 . ANY)(45 . ANY)(43 . ANY))
   ((- 10 (43 45 45)) (- 5 (44 45 47)) (- 10 (43 44 46)) (- 10 (43 47 48)) (+ 5 (45 46 48)) )))
   (PARTIAL   (CLAUSE 552 A16 AXIOM ((54 . ANY)(52 . ANY)(53 . ANY)(50 . ANY)(51 . ANY)(49 . ANY))
   ((- 10 (49 51 51)) (- 5 (50 51 53)) (- 10 (49 50 52)) (- 5 (51 52 54)) (+ 10 (49 53 54)) )))
   (END.TIME 251438899)
   (FINAL 81 83 85 88 92 94 97 103 115 134 240 311 379)
   (SYMBOLS 
   (LET (NEW.ADDRESS)
   (LIST (PROG1 (CONS   10 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "MIN" '(ANY ANY ANY))))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(SYMMETRIC)))
   (PROG1 (CONS    5 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "MAX" '(ANY ANY ANY))))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(SYMMETRIC)))
   (PROG1 (CONS    2 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "=" '(ANY ANY))))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED SYMMETRIC REFLEXIVE SYMMETRIC REFLEXIVE)))
   (PROG1 (CONS    1 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "FALSE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (PROG1 (CONS    0 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "TRUE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (CONS   66 (DT-CONSTANT.CREATE "b3" 'ANY))
   (CONS   65 (DT-CONSTANT.CREATE "a3" 'ANY))
   (CONS   64 (DT-CONSTANT.CREATE "e2" 'ANY))
   (CONS   63 (DT-CONSTANT.CREATE "d2" 'ANY))
   (CONS   62 (DT-CONSTANT.CREATE "c2" 'ANY))
   (CONS   61 (DT-CONSTANT.CREATE "b2" 'ANY))
   (CONS   60 (DT-CONSTANT.CREATE "a2" 'ANY))
   (CONS   59 (DT-CONSTANT.CREATE "e" 'ANY))
   (CONS   58 (DT-CONSTANT.CREATE "d" 'ANY))
   (CONS   57 (DT-CONSTANT.CREATE "c" 'ANY))
   (CONS   56 (DT-CONSTANT.CREATE "b" 'ANY))
   (CONS   55 (DT-CONSTANT.CREATE "a" 'ANY))
   (CONS    8 (DT-CONSTANT.CREATE "0" 'ANY))
   (CONS    4 (DT-CONSTANT.CREATE "1" 'ANY)))))
   (RESULT))

(THEOREMS (SPLITPART.IDENTIFIER 1)
   (START.TIME 251439136)
   (PARTIAL   (CLAUSE 629 T17 THEOREM () ((+ 10 (55 56 57)) )))
   (PARTIAL   (CLAUSE 534 T18 THEOREM () ((+ 5 (57 58 4)) )))
   (PARTIAL   (CLAUSE 571 T19 THEOREM () ((+ 10 (56 58 59)) )))
   (PARTIAL   (CLAUSE 612 T20 THEOREM () ((+ 10 (55 59 8)) )))
   (PARTIAL   (CLAUSE 504 T21 THEOREM () ((+ 5 (56 60 61)) )))
   (PARTIAL   (CLAUSE 594 T22 THEOREM () ((+ 5 (55 61 4)) )))
   (PARTIAL   (CLAUSE 609 T23 THEOREM () ((+ 5 (55 56 62)) )))
   (PARTIAL   (CLAUSE 665 T24 THEOREM () ((+ 10 (60 62 8)) )))
   (PARTIAL   (CLAUSE 684 T25 THEOREM () ((+ 10 (58 55 63)) )))
   (PARTIAL   (CLAUSE 703 T26 THEOREM () ((+ 5 (60 63 64)) )))
   (PARTIAL   (CLAUSE 722 T27 THEOREM () ((+ 10 (58 56 65)) )))
   (PARTIAL   (CLAUSE 741 T28 THEOREM () ((+ 5 (60 65 66)) )))
   (PARTIAL   (CLAUSE 760 T29 THEOREM () ((- 10 (66 64 60)) )))
   (INITIAL   (CLAUSE 81 R.= AXIOM ((79 . ANY)) ((+ 2 (79 79)) ))
(CLAUSE 83 A1 AXIOM ((3 . ANY)) ((+ 5 (4 3 4)) ))
(CLAUSE 85 A2 AXIOM ((6 . ANY)) ((+ 5 (6 6 6)) ))
(CLAUSE 88 A3 AXIOM ((7 . ANY)) ((+ 5 (8 7 7)) ))
(CLAUSE 92 A4 AXIOM ((9 . ANY)) ((+ 10 (8 9 8)) ))
(CLAUSE 94 A5 AXIOM ((11 . ANY)) ((+ 10 (11 11 11)) ))
(CLAUSE 97 A6 AXIOM ((12 . ANY)) ((+ 10 (4 12 12)) ))
(CLAUSE 103 A7 AXIOM ((15 . ANY)(14 . ANY)(13 . ANY))
   ((- 10 (13 14 15)) (+ 5 (13 15 13)) ))
(CLAUSE 115 A8 AXIOM ((18 . ANY)(17 . ANY)(16 . ANY))
   ((- 5 (16 17 18)) (+ 10 (16 18 16)) ))
(CLAUSE 134 A9 AXIOM ((24 . ANY)(23 . ANY)(21 . ANY)(22 . ANY)(20 . ANY)(19 . ANY))
   ((- 10 (19 20 22)) (- 10 (20 21 23)) (+ 10 (19 23 24)) (- 10 (22 21 24)) ))
(CLAUSE 240 A11 AXIOM ((30 . ANY)(29 . ANY)(27 . ANY)(28 . ANY)(26 . ANY)(25 . ANY))
   ((- 5 (25 26 28)) (- 5 (26 27 29)) (+ 5 (25 29 30)) (- 5 (28 27 30)) ))
(CLAUSE 311 A13 AXIOM ((36 . ANY)(35 . ANY)(34 . ANY)(32 . ANY)(33 . ANY)(31 . ANY))
   ((- 10 (31 33 31)) (- 5 (31 32 34)) (- 10 (32 33 35)) (- 10 (33 34 36)) (+ 5 (31 35 36)) ))
(CLAUSE 379 A14 AXIOM ((42 . ANY)(41 . ANY)(40 . ANY)(38 . ANY)(39 . ANY)(37 . ANY))
   ((- 10 (37 39 37)) (- 5 (37 38 40)) (- 10 (38 39 41)) (- 5 (37 41 42)) (+ 10 (39 40 42)) ))
(CLAUSE 629 T17 THEOREM () ((+ 10 (55 56 57)) ))
(CLAUSE 534 T18 THEOREM () ((+ 5 (57 58 4)) ))
(CLAUSE 571 T19 THEOREM () ((+ 10 (56 58 59)) ))
(CLAUSE 612 T20 THEOREM () ((+ 10 (55 59 8)) ))
(CLAUSE 504 T21 THEOREM () ((+ 5 (56 60 61)) ))
(CLAUSE 594 T22 THEOREM () ((+ 5 (55 61 4)) ))
(CLAUSE 609 T23 THEOREM () ((+ 5 (55 56 62)) ))
(CLAUSE 665 T24 THEOREM () ((+ 10 (60 62 8)) ))
(CLAUSE 684 T25 THEOREM () ((+ 10 (58 55 63)) ))
(CLAUSE 703 T26 THEOREM () ((+ 5 (60 63 64)) ))
(CLAUSE 722 T27 THEOREM () ((+ 10 (58 56 65)) ))
(CLAUSE 741 T28 THEOREM () ((+ 5 (60 65 66)) ))
(CLAUSE 760 T29 THEOREM () ((- 10 (66 64 60)) ))   )
   (END.TIME 251628324)
   (FINAL 81 83 85 88 92 94 97 103 115 134 240 311 379 629 534 571 612 504 594 609 665 684 703 722 741 760)
   (SYMBOLS 
   (LET (NEW.ADDRESS)
   (LIST (PROG1 (CONS   10 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "MIN" '(ANY ANY ANY))))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(SYMMETRIC)))
   (PROG1 (CONS    5 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "MAX" '(ANY ANY ANY))))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(SYMMETRIC)))
   (PROG1 (CONS    2 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "=" '(ANY ANY))))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED SYMMETRIC REFLEXIVE SYMMETRIC REFLEXIVE)))
   (PROG1 (CONS    1 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "FALSE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (PROG1 (CONS    0 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "TRUE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (CONS   66 (DT-CONSTANT.CREATE "b3" 'ANY))
   (CONS   65 (DT-CONSTANT.CREATE "a3" 'ANY))
   (CONS   64 (DT-CONSTANT.CREATE "e2" 'ANY))
   (CONS   63 (DT-CONSTANT.CREATE "d2" 'ANY))
   (CONS   62 (DT-CONSTANT.CREATE "c2" 'ANY))
   (CONS   61 (DT-CONSTANT.CREATE "b2" 'ANY))
   (CONS   60 (DT-CONSTANT.CREATE "a2" 'ANY))
   (CONS   59 (DT-CONSTANT.CREATE "e" 'ANY))
   (CONS   58 (DT-CONSTANT.CREATE "d" 'ANY))
   (CONS   57 (DT-CONSTANT.CREATE "c" 'ANY))
   (CONS   56 (DT-CONSTANT.CREATE "b" 'ANY))
   (CONS   55 (DT-CONSTANT.CREATE "a" 'ANY))
   (CONS    8 (DT-CONSTANT.CREATE "0" 'ANY))
   (CONS    4 (DT-CONSTANT.CREATE "1" 'ANY)))))
   (RESULT))
(indices ((760 51) (741 50) (722 49) (703 48) (684 47) (665 46) (609 45) (594 44) (504 43) (612 42) (571 41) (534 40) (629 39) (552 34 35 36 37 38) (514 29 30 31 32 33) (379 24 25 26 27 28) (311 19 20 21 22 23) (340 15 16 17 18) (240 15 16 17 18) (269 11 12 13 14) (134 11 12 13 14) (115 9 10) (103 7 8) (97 6) (94 5) (92 4) (88 3) (85 2) (83 1) (81 NIL)))

(SPLITPARTS "Genera 8.0.1 Logical Pathnames Translation Files NEWEST IP-TCP 422.2 RPC 415.0 Embedding Support 407.0 UX Support 416.0 CLX 419.0 C Runtime 416.0 Compiler Tools Package 411.0 Compiler Tools Runtime 411.0 C Packages 413.0 Minimal Lexer Runtime 416.0 Lexer Package 415.0 Syntax Editor Runtime 411.0 Experimental X Server 409.0 X Documentation 403.0 KKL 19.1 HADES 14.14 Waltz 6.0 COLUMN 6.0 Experimental MKRP 48.2" "17-APR,1991 16:53" NIL)

(OPTIONS (TWO_RULES)
    (TWO_RULES.MAXLEVEL . 1)
    (TWO_SUPPRESS.NORULES)
    (RED.I_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.I_CLAUSE.PURITY . P)
    (RED.I_CLAUSE.TAUTOLOGY . T)
    (RED.I_CLAUSE.TAUTOLOGY.RECHECK . PARTIAL)
    (RED.I_CLAUSE.SUBSUMPTION . T)
    (RED.I_CLAUSE.SUBSUMPTION.RECHECK . PARTIAL)
    (RED.I_CLAUSE.REPL.FACTORING . T)
    (RED.I_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.I_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.I_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.I_CLAUSE.REWRITING . DEM)
    (RED.I_LINK.INCOMPATIBILITY . T)
    (RED.I_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.I_LINK.TAUTOLOGY.RECHECK)
    (RED.I_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.I_LINK.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.D_CLAUSE.PURITY . P)
    (RED.D_CLAUSE.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_CLAUSE.TAUTOLOGY.RECHECK)
    (RED.D_CLAUSE.SUBSUMPTION.FORWARD . REMOVE-INHIBIT)
    (RED.D_CLAUSE.SUBSUMPTION.BACKWARD . REMOVE)
    (RED.D_CLAUSE.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.REPL.FACTORING . T)
    (RED.D_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.D_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.D_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.D_CLAUSE.REWRITING . DEM)
    (RED.D_LINK.INCOMPATIBILITY . T)
    (RED.D_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_LINK.TAUTOLOGY.RECHECK)
    (RED.D_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.D_LINK.SUBSUMPTION.RECHECK)
    (FAC_INITIAL)
    (FAC_EACH.STEP)
    (STR_RESOLUTION . SET-OF-SUPPORT)
    (STR_PAR-RES . 10)
    (STR_E-RESOLUTION)
    (STR_LINK.DEPTH)
    (STR_TERM.DEPTH)
    (STR_R.DEMODULATION . T)
    (STR_P.DEMODULATION . T)
    (STR_INDUCTION)
    (STR_FINITE.DOMAIN . T)
    (STR_SORT.LITERALS)
    (TERM_UNITS . T)
    (TERM_ITERATIONS . 10)
    (TERM_SET.OF.SUPPORT)
    (TERM_BREADTH.FIRST)
    (ER_PARAMODULATION . HEURISTIC-COMPLETION)
    (ER_COMPLETION . UNFAILING)
    (ER_CP.REDUCTION . T)
    (ER_ORDERING . LEXICOGRAPHIC-RECURSIVE-PATH)
    (ER_OPERATOR.ORDERING * - + 0 1)
    (ER_KNUTH.BENDIX.WEIGHT (+ 1) (* 1) (- 0) (0 1) (1 1))
    (ER_POLYNOMIAL.VARIABLES X Y Z U V W)
    (ER_POLYNOMIAL.WEIGHT (+ (+ X (* 2 Y))) (* (+ X (* X Y))) (- (+ (* 2 X) -1)) (0 2) (1 2))
    (ER_LINK.DEPTH.WEIGHT . 0)
    (ER_UNIT.FOCUS . 0)
    (ER_UNIT.FOCUS.WEIGHT . 1)
    (ER_EQUATION.FOCUS . 2)
    (ER_NARROW.DEPTH . 0)
    (ER_NARROW.NEXT . DEPTH)
    (ER_NARROW.TEST NORM C DELTA SL N)
    (ER_NARROW.LIMIT.FACTOR . 0)
    (ER_COMPILE)
    (GEN_SPLITTING . 0)
    (GEN_PRESIMPLIFICATION . T)
    (GEN_MIN.EXPRESSION.LENGTH.FOR.FILE)
    (GEN_MIN.EXPRESSION.SIZE.FOR.FILE)
    (GEN_MANUAL.CONTROL)
    (GEN_MAXIMUM.STEPS)
    (GEN_GRAPH.SAVING)
    (GEN_SAVE.FILE . SAVEDEFAULT)
    (GEN_LISP.GARBAGE.COLLECTION)
    (GEN_COMMON.LISP)
    (TR_PREPROCESSING)
    (TR_STEP.MODE . LR)
    (TR_DUMP)
    (TR_CLAUSE.MODE . I)
    (TR_LINK.MODE . I)
    (TR_TRACE.FILE)
    (TR_TERMINAL . T)
    (PR_LATEX)
    (PR_INFIX.FORM . T)
    (PR_PREFIX.FORM)
    (PR_OPTIONS)
    (PR_AXIOM.CLAUSES . T)
    (PR_SYMBOLS)
    (PR_DIRECT.PROOF . T)
    (PR_VARIABLE.PRINT.NAMES X Y Z U V W XX YY ZZ UU VV WW XXX YYY ZZZ UUU VVV WWW)
    (PR_STATISTICS)
    (PR_PROTOCOL . T)
    (PR_LEFT.MARGIN . 3)
    (PR_RIGHT.MARGIN . 117)
    (PR_LINELENGTH . 114)
    (PR_LITERALS)
   )

(REFUTATION (START.TIME 251631417)

(OPTIONS (TWO_RULES)
    (TWO_RULES.MAXLEVEL . 1)
    (TWO_SUPPRESS.NORULES)
    (RED.I_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.I_CLAUSE.PURITY . P)
    (RED.I_CLAUSE.TAUTOLOGY . T)
    (RED.I_CLAUSE.TAUTOLOGY.RECHECK . PARTIAL)
    (RED.I_CLAUSE.SUBSUMPTION . T)
    (RED.I_CLAUSE.SUBSUMPTION.RECHECK . PARTIAL)
    (RED.I_CLAUSE.REPL.FACTORING . T)
    (RED.I_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.I_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.I_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.I_CLAUSE.REWRITING . DEM)
    (RED.I_LINK.INCOMPATIBILITY . T)
    (RED.I_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.I_LINK.TAUTOLOGY.RECHECK)
    (RED.I_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.I_LINK.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.D_CLAUSE.PURITY . P)
    (RED.D_CLAUSE.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_CLAUSE.TAUTOLOGY.RECHECK)
    (RED.D_CLAUSE.SUBSUMPTION.FORWARD . REMOVE-INHIBIT)
    (RED.D_CLAUSE.SUBSUMPTION.BACKWARD . REMOVE)
    (RED.D_CLAUSE.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.REPL.FACTORING . T)
    (RED.D_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.D_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.D_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.D_CLAUSE.REWRITING . DEM)
    (RED.D_LINK.INCOMPATIBILITY . T)
    (RED.D_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_LINK.TAUTOLOGY.RECHECK)
    (RED.D_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.D_LINK.SUBSUMPTION.RECHECK)
    (FAC_INITIAL)
    (FAC_EACH.STEP)
    (STR_RESOLUTION . SET-OF-SUPPORT)
    (STR_PAR-RES . 10)
    (STR_E-RESOLUTION)
    (STR_LINK.DEPTH)
    (STR_TERM.DEPTH)
    (STR_R.DEMODULATION . T)
    (STR_P.DEMODULATION . T)
    (STR_INDUCTION)
    (STR_FINITE.DOMAIN . T)
    (STR_SORT.LITERALS)
    (TERM_UNITS . T)
    (TERM_ITERATIONS . 10)
    (TERM_SET.OF.SUPPORT)
    (TERM_BREADTH.FIRST)
    (ER_PARAMODULATION . HEURISTIC-COMPLETION)
    (ER_COMPLETION . UNFAILING)
    (ER_CP.REDUCTION . T)
    (ER_ORDERING . LEXICOGRAPHIC-RECURSIVE-PATH)
    (ER_OPERATOR.ORDERING * - + 0 1)
    (ER_KNUTH.BENDIX.WEIGHT (+ 1) (* 1) (- 0) (0 1) (1 1))
    (ER_POLYNOMIAL.VARIABLES X Y Z U V W)
    (ER_POLYNOMIAL.WEIGHT (+ (+ X (* 2 Y))) (* (+ X (* X Y))) (- (+ (* 2 X) -1)) (0 2) (1 2))
    (ER_LINK.DEPTH.WEIGHT . 0)
    (ER_UNIT.FOCUS . 0)
    (ER_UNIT.FOCUS.WEIGHT . 1)
    (ER_EQUATION.FOCUS . 2)
    (ER_NARROW.DEPTH . 0)
    (ER_NARROW.NEXT . DEPTH)
    (ER_NARROW.TEST NORM C DELTA SL N)
    (ER_NARROW.LIMIT.FACTOR . 0)
    (ER_COMPILE)
    (GEN_SPLITTING . 0)
    (GEN_PRESIMPLIFICATION . T)
    (GEN_MIN.EXPRESSION.LENGTH.FOR.FILE)
    (GEN_MIN.EXPRESSION.SIZE.FOR.FILE)
    (GEN_MANUAL.CONTROL)
    (GEN_MAXIMUM.STEPS)
    (GEN_GRAPH.SAVING)
    (GEN_SAVE.FILE . SAVEDEFAULT)
    (GEN_LISP.GARBAGE.COLLECTION)
    (GEN_COMMON.LISP)
    (TR_PREPROCESSING)
    (TR_STEP.MODE . LR)
    (TR_DUMP)
    (TR_CLAUSE.MODE . I)
    (TR_LINK.MODE . I)
    (TR_TRACE.FILE)
    (TR_TERMINAL . T)
    (PR_LATEX)
    (PR_INFIX.FORM . T)
    (PR_PREFIX.FORM)
    (PR_OPTIONS)
    (PR_AXIOM.CLAUSES . T)
    (PR_SYMBOLS)
    (PR_DIRECT.PROOF . T)
    (PR_VARIABLE.PRINT.NAMES X Y Z U V W XX YY ZZ UU VV WW XXX YYY ZZZ UUU VVV WWW)
    (PR_STATISTICS)
    (PR_PROTOCOL . T)
    (PR_LEFT.MARGIN . 3)
    (PR_RIGHT.MARGIN . 117)
    (PR_LINELENGTH . 114)
    (PR_LITERALS)
   )
   (INITIAL   (CLAUSE 81 R.= AXIOM ((79 . ANY)) ((+ 2 (79 79)) ))
(CLAUSE 83 A1 AXIOM ((3 . ANY)) ((+ 5 (4 3 4)) ))
(CLAUSE 85 A2 AXIOM ((6 . ANY)) ((+ 5 (6 6 6)) ))
(CLAUSE 88 A3 AXIOM ((7 . ANY)) ((+ 5 (8 7 7)) ))
(CLAUSE 92 A4 AXIOM ((9 . ANY)) ((+ 10 (8 9 8)) ))
(CLAUSE 94 A5 AXIOM ((11 . ANY)) ((+ 10 (11 11 11)) ))
(CLAUSE 97 A6 AXIOM ((12 . ANY)) ((+ 10 (4 12 12)) ))
(CLAUSE 103 A7 AXIOM ((15 . ANY)(14 . ANY)(13 . ANY))
   ((- 10 (13 14 15)) (+ 5 (13 15 13)) ))
(CLAUSE 115 A8 AXIOM ((18 . ANY)(17 . ANY)(16 . ANY))
   ((- 5 (16 17 18)) (+ 10 (16 18 16)) ))
(CLAUSE 134 A9 AXIOM ((24 . ANY)(23 . ANY)(21 . ANY)(22 . ANY)(20 . ANY)(19 . ANY))
   ((- 10 (19 20 22)) (- 10 (20 21 23)) (+ 10 (19 23 24)) (- 10 (22 21 24)) ))
(CLAUSE 240 A11 AXIOM ((30 . ANY)(29 . ANY)(27 . ANY)(28 . ANY)(26 . ANY)(25 . ANY))
   ((- 5 (25 26 28)) (- 5 (26 27 29)) (+ 5 (25 29 30)) (- 5 (28 27 30)) ))
(CLAUSE 311 A13 AXIOM ((36 . ANY)(35 . ANY)(34 . ANY)(32 . ANY)(33 . ANY)(31 . ANY))
   ((- 10 (31 33 31)) (- 5 (31 32 34)) (- 10 (32 33 35)) (- 10 (33 34 36)) (+ 5 (31 35 36)) ))
(CLAUSE 379 A14 AXIOM ((42 . ANY)(41 . ANY)(40 . ANY)(38 . ANY)(39 . ANY)(37 . ANY))
   ((- 10 (37 39 37)) (- 5 (37 38 40)) (- 10 (38 39 41)) (- 5 (37 41 42)) (+ 10 (39 40 42)) ))
(CLAUSE 629 T17 THEOREM () ((+ 10 (55 56 57)) ))
(CLAUSE 534 T18 THEOREM () ((+ 5 (57 58 4)) ))
(CLAUSE 571 T19 THEOREM () ((+ 10 (56 58 59)) ))
(CLAUSE 612 T20 THEOREM () ((+ 10 (55 59 8)) ))
(CLAUSE 504 T21 THEOREM () ((+ 5 (56 60 61)) ))
(CLAUSE 594 T22 THEOREM () ((+ 5 (55 61 4)) ))
(CLAUSE 609 T23 THEOREM () ((+ 5 (55 56 62)) ))
(CLAUSE 665 T24 THEOREM () ((+ 10 (60 62 8)) ))
(CLAUSE 684 T25 THEOREM () ((+ 10 (58 55 63)) ))
(CLAUSE 703 T26 THEOREM () ((+ 5 (60 63 64)) ))
(CLAUSE 722 T27 THEOREM () ((+ 10 (58 56 65)) ))
(CLAUSE 741 T28 THEOREM () ((+ 5 (60 65 66)) ))
(CLAUSE 760 T29 THEOREM () ((- 10 (66 64 60)) ))   )(OPERATION (CLAUSE 4967 R1 (134 684) ()((- 10 (59 55 8))(+ 10 (59 63 8))(- 10 (8 58 8))))(RESOLUTION 684 1 134 2 SYMMETRIC (19 59 20 55 22 8 21 58 23 63 24 8) 4967))(OPERATION (CLAUSE 4967 R1 (134 684 612 92) () ((+ 10 (59 63 8)) ))(REPLACEMENT.OPERATION NIL (4967 612 92 )(((4967 . 1)(612 . 1)SYMMETRIC)((4967 . 3)(92 . 1)SYMMETRIC))( NIL  NIL )NIL))(OPERATION (CLAUSE 4946 R2 (115 609) ()((+ 10 (56 62 56))))(RESOLUTION 609 1 115 1 SYMMETRIC (16 56 17 55 18 62) 4946))(OPERATION (CLAUSE 4920 R3 (134 722) ()((- 10 (62 56 56))(+ 10 (62 65 65))(- 10 (56 58 65))))(RESOLUTION 722 1 134 2 SYMMETRIC (19 62 20 56 22 56 21 58 23 65 24 65) 4920))(OPERATION (CLAUSE 4920 R3 (134 722 4946) () ((+ 10 (62 65 65)) ))(REPLACEMENT.OPERATION NIL (4920 4946 )(((4920 . 1)(4946 . 1)SYMMETRIC))((((4920 . 1) (4920 . 3) SYMMETRIC)))NIL))(OPERATION (CLAUSE 4893 R4 (134 722) ()((- 10 (62 56 56))(+ 10 (62 65 59))(- 10 (56 58 59))))(RESOLUTION 722 1 134 2 SYMMETRIC (19 62 20 56 22 56 21 58 23 65 24 59) 4893))(OPERATION (CLAUSE 4893 R4 (134 722 4946 571) () ((+ 10 (62 65 59)) ))(REPLACEMENT.OPERATION NIL (4893 4946 571 )(((4893 . 1)(4946 . 1)SYMMETRIC)((4893 . 3)(571 . 1)SYMMETRIC))( NIL  NIL )NIL))(OPERATION (CLAUSE 762 R5 (311 88) ()((- 10 (8 62 8))(- 10 (65 62 59))(- 10 (62 65 65))(+ 5 (8 59 65))))(RESOLUTION 88 1 311 2 SYMMETRIC (31 8 33 62 32 65 34 65 35 59 36 65) 762))(OPERATION (CLAUSE 762 R5 (311 88 92 4893 4920) () ((+ 5 (8 59 65)) ))(REPLACEMENT.OPERATION NIL (762 92 4893 4920 )(((762 . 1)(92 . 1)SYMMETRIC)((762 . 2)(4893 . 1)SYMMETRIC)((762 . 3)(4920 . 1)SYMMETRIC))( NIL  NIL  NIL )NIL))(OPERATION (CLAUSE 787 R6 (379 762) ()((- 10 (8 63 8))(- 10 (59 63 8))(- 5 (8 8 8))(+ 10 (63 65 8))))(RESOLUTION 762 1 379 2 SYMMETRIC (37 8 39 63 38 59 40 65 41 8 42 8) 787))(OPERATION (CLAUSE 787 R6 (379 762 92 4967 85) () ((+ 10 (63 65 8)) ))(REPLACEMENT.OPERATION NIL (787 92 4967 85 )(((787 . 1)(92 . 1)SYMMETRIC)((787 . 2)(4967 . 1)SYMMETRIC)((787 . 3)(85 . 1)SYMMETRIC))( NIL  NIL  NIL )NIL))(OPERATION (CLAUSE 812 R7 (115 703) ()((+ 10 (60 64 60))))(RESOLUTION 703 1 115 1 SYMMETRIC (16 60 17 63 18 64) 812))(OPERATION (CLAUSE 840 R8 (379 741) ()((- 10 (60 64 60))(- 10 (65 64 8))(- 5 (60 8 60))(+ 10 (64 66 60))))(RESOLUTION 741 1 379 2 SYMMETRIC (37 60 39 64 38 65 40 66 41 8 42 60) 840))(OPERATION (CLAUSE 840 R8 (379 741 812 88 760) () ((- 10 (65 64 8)) ))(REPLACEMENT.OPERATION NIL (840 812 88 760 )(((840 . 1)(812 . 1)SYMMETRIC)((840 . 3)(88 . 1)SYMMETRIC)((840 . 4)(760 . 1)SYMMETRIC))( NIL  NIL  NIL )NIL))(OPERATION (CLAUSE 861 R9 (115 609) ()((+ 10 (55 62 55))))(RESOLUTION 609 1 115 1 SYMMETRIC (16 55 17 56 18 62) 861))(OPERATION (CLAUSE 889 R10 (134 684) ()((- 10 (62 55 55))(+ 10 (62 63 63))(- 10 (55 58 63))))(RESOLUTION 684 1 134 2 SYMMETRIC (19 62 20 55 22 55 21 58 23 63 24 63) 889))(OPERATION (CLAUSE 889 R10 (134 684 861) () ((+ 10 (62 63 63)) ))(REPLACEMENT.OPERATION NIL (889 861 )(((889 . 1)(861 . 1)SYMMETRIC))((((889 . 1) (889 . 3) SYMMETRIC)))NIL))(OPERATION (CLAUSE 916 R11 (379 703) ()((- 10 (63 62 63))(- 10 (60 62 8))(- 5 (63 8 63))(+ 10 (62 64 63))))(RESOLUTION 703 1 379 2 SYMMETRIC (37 63 39 62 38 60 40 64 41 8 42 63) 916))(OPERATION (CLAUSE 916 R11 (379 703 889 665 88) () ((+ 10 (62 64 63)) ))(REPLACEMENT.OPERATION NIL (916 889 665 88 )(((916 . 1)(889 . 1)SYMMETRIC)((916 . 2)(665 . 1)SYMMETRIC)((916 . 3)(88 . 1)SYMMETRIC))( NIL  NIL  NIL )NIL))(OPERATION (CLAUSE 940 R12 (134 4920) ()((- 10 (64 62 63))(+ 10 (64 65 8))(- 10 (63 65 8))))(RESOLUTION 4920 1 134 2 SYMMETRIC (19 64 20 62 22 63 21 65 23 65 24 8) 940))(OPERATION (CLAUSE 940 R12 (134 4920 916 840 787) () ())(REPLACEMENT.OPERATION NIL (940 916 840 787 )(((940 . 1)(916 . 1)SYMMETRIC)((940 . 2)(840 . 1)SYMMETRIC)((940 . 3)(787 . 1)SYMMETRIC))( NIL  NIL  NIL )NIL))
   (END.TIME 252165175)
   (SYMBOLS 
   (LET (NEW.ADDRESS)
   (LIST (PROG1 (CONS   10 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "MIN" '(ANY ANY ANY))))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(SYMMETRIC)))
   (PROG1 (CONS    5 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "MAX" '(ANY ANY ANY))))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(SYMMETRIC)))
   (PROG1 (CONS    2 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "=" '(ANY ANY))))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED SYMMETRIC REFLEXIVE SYMMETRIC REFLEXIVE)))
   (PROG1 (CONS    1 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "FALSE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (PROG1 (CONS    0 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "TRUE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (CONS   66 (DT-CONSTANT.CREATE "b3" 'ANY))
   (CONS   65 (DT-CONSTANT.CREATE "a3" 'ANY))
   (CONS   64 (DT-CONSTANT.CREATE "e2" 'ANY))
   (CONS   63 (DT-CONSTANT.CREATE "d2" 'ANY))
   (CONS   62 (DT-CONSTANT.CREATE "c2" 'ANY))
   (CONS   61 (DT-CONSTANT.CREATE "b2" 'ANY))
   (CONS   60 (DT-CONSTANT.CREATE "a2" 'ANY))
   (CONS   59 (DT-CONSTANT.CREATE "e" 'ANY))
   (CONS   58 (DT-CONSTANT.CREATE "d" 'ANY))
   (CONS   57 (DT-CONSTANT.CREATE "c" 'ANY))
   (CONS   56 (DT-CONSTANT.CREATE "b" 'ANY))
   (CONS   55 (DT-CONSTANT.CREATE "a" 'ANY))
   (CONS    8 (DT-CONSTANT.CREATE "0" 'ANY))
   (CONS    4 (DT-CONSTANT.CREATE "1" 'ANY)))))
   (SPLITPART.IDENTIFIER 1)
   (RESULT SUCCESS 940)
)