;;; -*- Package: MKRP; Base: 10; Mode: LISP; Syntax: Common-lisp -*-

(CONSTRUCTION  "Unix" "24-JUL,1992 03:19" 
              ("Edit:     Axioms and Theorems edited: 29-JUN,1990 00:27 "
               ))

(AXIOMS.INFIX    ((* AXIOMS *)
                  (ALL |X,Y,Z| F (X F (Y Z)) = F (F (X Y) Z))
                  (ALL X F (A X) = X)
                  (ALL X (EX Y F (Y X) = A))))

(THEOREMS.INFIX ((* THEOREMS *)
                  (ALL |X,Y,Z| F (X Y) = F (Z Y) IMPL X = Z)))

(AXIOMS.PREFIX   (COMMENT
                  (ALL 5 (ALL 4 (ALL 3 (+ 2 ((6 3 (6 4 5)) (6 (6 3 4) 5)) NIL))))
                  (ALL 7 (+ 2 ((6 8 7) 7) NIL))
                  (ALL 9 (EX 10 (+ 2 ((6 10 9) 8) NIL)))))

(THEOREMS.PREFIX (COMMENT
                  (ALL 13 (ALL 12 (ALL 11 (IMPL (+ 2 ((6 11 12) (6 13 12)) NIL) (+ 2 (11 13) NIL)))))))

(OPTIONS (TWO_RULES)
          (TWO_RULES.MAXLEVEL . 1)
          (TWO_SUPPRESS.NORULES)
          (RED.I_CLAUSE.MULTIPLE.LITERALS . T)
          (RED.I_CLAUSE.PURITY . PARTIAL)
          (RED.I_CLAUSE.TAUTOLOGY . T)
          (RED.I_CLAUSE.TAUTOLOGY.RECHECK . PARTIAL)
          (RED.I_CLAUSE.SUBSUMPTION . T)
          (RED.I_CLAUSE.SUBSUMPTION.RECHECK . PARTIAL)
          (RED.I_CLAUSE.REPL.FACTORING . T)
          (RED.I_CLAUSE.REPL.FACTORING.RECHECK . T)
          (RED.I_CLAUSE.REPL.RESOLUTION . SIMPLE)
          (RED.I_CLAUSE.REPL.RESOLUTION.RECHECK . T)
          (RED.I_CLAUSE.REWRITING . DEM)
          (RED.I_LINK.INCOMPATIBILITY . T)
          (RED.I_LINK.TAUTOLOGY . REMOVE-INHIBIT)
          (RED.I_LINK.TAUTOLOGY.RECHECK)
          (RED.I_LINK.SUBSUMPTION . REMOVE-INHIBIT)
          (RED.I_LINK.SUBSUMPTION.RECHECK)
          (RED.D_CLAUSE.MULTIPLE.LITERALS . T)
          (RED.D_CLAUSE.PURITY . PARTIAL)
          (RED.D_CLAUSE.TAUTOLOGY . REMOVE-INHIBIT)
          (RED.D_CLAUSE.TAUTOLOGY.RECHECK)
          (RED.D_CLAUSE.SUBSUMPTION.FORWARD . REMOVE-INHIBIT)
          (RED.D_CLAUSE.SUBSUMPTION.BACKWARD . REMOVE)
          (RED.D_CLAUSE.SUBSUMPTION.RECHECK)
          (RED.D_CLAUSE.REPL.FACTORING . T)
          (RED.D_CLAUSE.REPL.FACTORING.RECHECK . T)
          (RED.D_CLAUSE.REPL.RESOLUTION . SIMPLE)
          (RED.D_CLAUSE.REPL.RESOLUTION.RECHECK . T)
          (RED.D_CLAUSE.REWRITING . DEM)
          (RED.D_LINK.INCOMPATIBILITY . T)
          (RED.D_LINK.TAUTOLOGY . REMOVE-INHIBIT)
          (RED.D_LINK.TAUTOLOGY.RECHECK)
          (RED.D_LINK.SUBSUMPTION . REMOVE-INHIBIT)
          (RED.D_LINK.SUBSUMPTION.RECHECK)
          (FAC_INITIAL)
          (FAC_EACH.STEP)
          (STR_RESOLUTION . SET-OF-SUPPORT)
          (STR_R.SELECTION * 10 (+ 2 VARIABLES (* 2 DEPTH) (* 3 NOLIT)))
          (STR_LINK.DEPTH)
          (STR_TERM.DEPTH)
          (STR_FINITE.DOMAIN . T)
          (TERM_UNITS . T)
          (TERM_ITERATIONS . 0)
          (TERM_SET.OF.SUPPORT)
          (TERM_BREADTH.FIRST)
          (SORT_LITERALS)
          (SORT_MAX.UNIFICATION.RULE.STEPS . 100)
          (SORT_MAX.UNIFICATION.TREE.DEPTH . 100)
          (SORT_MAX.UNIFICATION.TREE.OPEN.NODES . 20)
          (SORT_UNIFIER.STOP.NUMBER . 100)
          (SORT_SHOW.VARIABLE.SORTS . T)
          (ER_PARAMODULATION . HEURISTIC-COMPLETION)
          (ER_WEIGHT.POLYNOMIALS)
          (ER_P.SELECTION * WEIGHT (IF SUPPORT 1 1.5) (IF EQUATIONAL 1 2))
          (ER_COMPLETION . UNFAILING)
          (ER_CP.REDUCTION . T)
          (ER_ORDERING . LEXICOGRAPHIC-RECURSIVE-PATH)
          (ER_OPERATOR.ORDERING * - + 0 1)
          (ER_KNUTH.BENDIX.WEIGHT (+ 1) (* 1) (- 0) (0 1) (1 1))
          (ER_POLYNOMIAL.WEIGHT (+ (X Y) (+ (* 2 Y) X)) (* (X Y) (+ (* X Y) X)) (- (X) (* X X)) (0 NIL 2) (1 NIL 2))
          (ER_NARROW.DEPTH . 0)
          (ER_NARROW.NEXT . DEPTH)
          (ER_NARROW.TEST NORM C DELTA SL N)
          (ER_COMPILE)
          (GEN_SPLITTING . 0)
          (GEN_PRESIMPLIFICATION . T)
          (GEN_MIN.EXPRESSION.LENGTH.FOR.FILE)
          (GEN_MIN.EXPRESSION.SIZE.FOR.FILE)
          (GEN_MANUAL.CONTROL)
          (GEN_MAXIMUM.STEPS)
          (GEN_MAXIMUM.TIME)
          (GEN_GRAPH.SAVING)
          (GEN_SAVE.FILE . SAVEDEFAULT)
          (GEN_LISP.GARBAGE.COLLECTION)
          (GEN_COMMON.LISP . T)
          (GEN_OTHER.PROVER . MKRP)
          (TR_PREPROCESSING)
          (TR_STEP.MODE . LR)
          (TR_DUMP)
          (TR_CLAUSE.MODE . I)
          (TR_LINK.MODE . I)
          (TR_TRACE.FILE)
          (TR_TERMINAL . T)
          (PR_INFIX.FORM . T)
          (PR_PREFIX.FORM)
          (PR_OPTIONS)
          (PR_AXIOM.CLAUSES . T)
          (PR_SYMBOLS)
          (PR_DIRECT.PROOF . T)
          (PR_VARIABLE.PRINT.NAMES X Y Z U V W XX YY ZZ UU VV WW XXX YYY ZZZ UUU VVV WWW)
          (PR_PROTOCOL . STANDARD)
          (PR_LEFT.MARGIN . 0)
          (PR_RIGHT.MARGIN . 117)
          (PR_LATEX)
          (PR_LINELENGTH . 117)
          (PR_LITERALS)
         )

(LINK.COLOURS (R RIW RD S SI SIW SID T TI TIW P PIW PD RIWD))

(AXIOMS (START.TIME 7960000)
        (PARTIAL   (CLAUSE 16 R.= AXIOM ((10 . ANY)) ((+ 2 (10 10)) ))(CLAUSE 20 A1 AXIOM ((5 . ANY)(4 . ANY)(3 . ANY)) ((+ 2 ((6 3 (6 4 5)) (6 (6 3 4) 5))) )))
        (PARTIAL   (CLAUSE 27 A2 AXIOM ((7 . ANY)) ((+ 2 ((6 8 7) 7)) )))
        (PARTIAL   (CLAUSE 31 A3 AXIOM ((9 . ANY)) ((+ 2 ((6 (14 9) 9) 8)) )))
        (END.TIME 9770000)
        (FINAL 16 20 27 31)
        (SYMBOLS 
                 (LET (NEW.ADDRESS)
          (LIST (PROG1 (CONS    2 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "=" '(ANY ANY))))
                                (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED SYMMETRIC REFLEXIVE)))
                         (PROG1 (CONS    1 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "FALSE" 'NIL)))
                                (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
                         (PROG1 (CONS    0 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "TRUE" 'NIL)))
                                (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
                         (CONS    8 (DT-CONSTANT.CREATE "a" 'ANY))
                         (CONS   14 (DT-FUNCTION.CREATE "f_1" 'ANY '(ANY) 'NIL))
                         (CONS    6 (DT-FUNCTION.CREATE "f" 'ANY '(ANY ANY) 'NIL)))))
        (RESULT))

(THEOREMS (SPLITPART.IDENTIFIER 1)
          (START.TIME 9900000)
          (PARTIAL   (CLAUSE 12 T4 THEOREM () ((+ 2 ((6 35 36) (6 34 36))) )))
          (PARTIAL   (CLAUSE 37 T5 THEOREM () ((- 2 (35 34)) )))
          (INITIAL   (CLAUSE 16 R.= AXIOM ((10 . ANY)) ((+ 2 (10 10)) ))
(CLAUSE 20 A1 AXIOM ((5 . ANY)(4 . ANY)(3 . ANY)) ((+ 2 ((6 3 (6 4 5)) (6 (6 3 4) 5))) ))
(CLAUSE 27 A2 AXIOM ((7 . ANY)) ((+ 2 ((6 8 7) 7)) ))
(CLAUSE 31 A3 AXIOM ((9 . ANY)) ((+ 2 ((6 (14 9) 9) 8)) ))
(CLAUSE 12 T4 THEOREM () ((+ 2 ((6 35 36) (6 34 36))) ))
(CLAUSE 37 T5 THEOREM () ((- 2 (35 34)) )) )
          (END.TIME 12090000)
          (FINAL 16 20 27 31 12 37)
          (SYMBOLS 
                   (LET (NEW.ADDRESS)
          (LIST (PROG1 (CONS    2 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "=" '(ANY ANY))))
                                  (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED SYMMETRIC REFLEXIVE)))
                           (PROG1 (CONS    1 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "FALSE" 'NIL)))
                                  (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
                           (PROG1 (CONS    0 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "TRUE" 'NIL)))
                                  (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
                           (CONS   36 (DT-CONSTANT.CREATE "c_3" 'ANY))
                           (CONS   35 (DT-CONSTANT.CREATE "c_2" 'ANY))
                           (CONS   34 (DT-CONSTANT.CREATE "c_1" 'ANY))
                           (CONS    8 (DT-CONSTANT.CREATE "a" 'ANY))
                           (CONS   14 (DT-FUNCTION.CREATE "f_1" 'ANY '(ANY) 'NIL))
                           (CONS    6 (DT-FUNCTION.CREATE "f" 'ANY '(ANY ANY) 'NIL)))))
          (RESULT))
(indices ((37 5) (12 4) (31 3) (27 2) (20 1) (16 NIL)))

(SPLITPARTS "Unix" "24-JUL,1992 03:19" NIL)

(OPTIONS (TWO_RULES)
          (TWO_RULES.MAXLEVEL . 1)
          (TWO_SUPPRESS.NORULES)
          (RED.I_CLAUSE.MULTIPLE.LITERALS . T)
          (RED.I_CLAUSE.PURITY . PARTIAL)
          (RED.I_CLAUSE.TAUTOLOGY . T)
          (RED.I_CLAUSE.TAUTOLOGY.RECHECK . PARTIAL)
          (RED.I_CLAUSE.SUBSUMPTION . T)
          (RED.I_CLAUSE.SUBSUMPTION.RECHECK . PARTIAL)
          (RED.I_CLAUSE.REPL.FACTORING . T)
          (RED.I_CLAUSE.REPL.FACTORING.RECHECK . T)
          (RED.I_CLAUSE.REPL.RESOLUTION . SIMPLE)
          (RED.I_CLAUSE.REPL.RESOLUTION.RECHECK . T)
          (RED.I_CLAUSE.REWRITING . DEM)
          (RED.I_LINK.INCOMPATIBILITY . T)
          (RED.I_LINK.TAUTOLOGY . REMOVE-INHIBIT)
          (RED.I_LINK.TAUTOLOGY.RECHECK)
          (RED.I_LINK.SUBSUMPTION . REMOVE-INHIBIT)
          (RED.I_LINK.SUBSUMPTION.RECHECK)
          (RED.D_CLAUSE.MULTIPLE.LITERALS . T)
          (RED.D_CLAUSE.PURITY . PARTIAL)
          (RED.D_CLAUSE.TAUTOLOGY . REMOVE-INHIBIT)
          (RED.D_CLAUSE.TAUTOLOGY.RECHECK)
          (RED.D_CLAUSE.SUBSUMPTION.FORWARD . REMOVE-INHIBIT)
          (RED.D_CLAUSE.SUBSUMPTION.BACKWARD . REMOVE)
          (RED.D_CLAUSE.SUBSUMPTION.RECHECK)
          (RED.D_CLAUSE.REPL.FACTORING . T)
          (RED.D_CLAUSE.REPL.FACTORING.RECHECK . T)
          (RED.D_CLAUSE.REPL.RESOLUTION . SIMPLE)
          (RED.D_CLAUSE.REPL.RESOLUTION.RECHECK . T)
          (RED.D_CLAUSE.REWRITING . DEM)
          (RED.D_LINK.INCOMPATIBILITY . T)
          (RED.D_LINK.TAUTOLOGY . REMOVE-INHIBIT)
          (RED.D_LINK.TAUTOLOGY.RECHECK)
          (RED.D_LINK.SUBSUMPTION . REMOVE-INHIBIT)
          (RED.D_LINK.SUBSUMPTION.RECHECK)
          (FAC_INITIAL)
          (FAC_EACH.STEP)
          (STR_RESOLUTION . SET-OF-SUPPORT)
          (STR_R.SELECTION * 10 (+ 2 VARIABLES (* 2 DEPTH) (* 3 NOLIT)))
          (STR_LINK.DEPTH)
          (STR_TERM.DEPTH)
          (STR_FINITE.DOMAIN . T)
          (TERM_UNITS . T)
          (TERM_ITERATIONS . 0)
          (TERM_SET.OF.SUPPORT)
          (TERM_BREADTH.FIRST)
          (SORT_LITERALS)
          (SORT_MAX.UNIFICATION.RULE.STEPS . 100)
          (SORT_MAX.UNIFICATION.TREE.DEPTH . 100)
          (SORT_MAX.UNIFICATION.TREE.OPEN.NODES . 20)
          (SORT_UNIFIER.STOP.NUMBER . 100)
          (SORT_SHOW.VARIABLE.SORTS . T)
          (ER_PARAMODULATION . HEURISTIC-COMPLETION)
          (ER_WEIGHT.POLYNOMIALS)
          (ER_P.SELECTION * WEIGHT (IF SUPPORT 1 1.5) (IF EQUATIONAL 1 2))
          (ER_COMPLETION . UNFAILING)
          (ER_CP.REDUCTION . T)
          (ER_ORDERING . LEXICOGRAPHIC-RECURSIVE-PATH)
          (ER_OPERATOR.ORDERING * - + 0 1)
          (ER_KNUTH.BENDIX.WEIGHT (+ 1) (* 1) (- 0) (0 1) (1 1))
          (ER_POLYNOMIAL.WEIGHT (+ (X Y) (+ (* 2 Y) X)) (* (X Y) (+ (* X Y) X)) (- (X) (* X X)) (0 NIL 2) (1 NIL 2))
          (ER_NARROW.DEPTH . 0)
          (ER_NARROW.NEXT . DEPTH)
          (ER_NARROW.TEST NORM C DELTA SL N)
          (ER_COMPILE)
          (GEN_SPLITTING . 0)
          (GEN_PRESIMPLIFICATION . T)
          (GEN_MIN.EXPRESSION.LENGTH.FOR.FILE)
          (GEN_MIN.EXPRESSION.SIZE.FOR.FILE)
          (GEN_MANUAL.CONTROL)
          (GEN_MAXIMUM.STEPS)
          (GEN_MAXIMUM.TIME)
          (GEN_GRAPH.SAVING)
          (GEN_SAVE.FILE . SAVEDEFAULT)
          (GEN_LISP.GARBAGE.COLLECTION)
          (GEN_COMMON.LISP . T)
          (GEN_OTHER.PROVER . MKRP)
          (TR_PREPROCESSING)
          (TR_STEP.MODE . LR)
          (TR_DUMP)
          (TR_CLAUSE.MODE . I)
          (TR_LINK.MODE . I)
          (TR_TRACE.FILE)
          (TR_TERMINAL . T)
          (PR_INFIX.FORM . T)
          (PR_PREFIX.FORM)
          (PR_OPTIONS)
          (PR_AXIOM.CLAUSES . T)
          (PR_SYMBOLS)
          (PR_DIRECT.PROOF . T)
          (PR_VARIABLE.PRINT.NAMES X Y Z U V W XX YY ZZ UU VV WW XXX YYY ZZZ UUU VVV WWW)
          (PR_PROTOCOL . STANDARD)
          (PR_LEFT.MARGIN . 0)
          (PR_RIGHT.MARGIN . 117)
          (PR_LATEX)
          (PR_LINELENGTH . 117)
          (PR_LITERALS)
         )

(REFUTATION (START.TIME 12680000)

(OPTIONS (TWO_RULES)
          (TWO_RULES.MAXLEVEL . 1)
          (TWO_SUPPRESS.NORULES)
          (RED.I_CLAUSE.MULTIPLE.LITERALS . T)
          (RED.I_CLAUSE.PURITY . PARTIAL)
          (RED.I_CLAUSE.TAUTOLOGY . T)
          (RED.I_CLAUSE.TAUTOLOGY.RECHECK . PARTIAL)
          (RED.I_CLAUSE.SUBSUMPTION . T)
          (RED.I_CLAUSE.SUBSUMPTION.RECHECK . PARTIAL)
          (RED.I_CLAUSE.REPL.FACTORING . T)
          (RED.I_CLAUSE.REPL.FACTORING.RECHECK . T)
          (RED.I_CLAUSE.REPL.RESOLUTION . SIMPLE)
          (RED.I_CLAUSE.REPL.RESOLUTION.RECHECK . T)
          (RED.I_CLAUSE.REWRITING . DEM)
          (RED.I_LINK.INCOMPATIBILITY . T)
          (RED.I_LINK.TAUTOLOGY . REMOVE-INHIBIT)
          (RED.I_LINK.TAUTOLOGY.RECHECK)
          (RED.I_LINK.SUBSUMPTION . REMOVE-INHIBIT)
          (RED.I_LINK.SUBSUMPTION.RECHECK)
          (RED.D_CLAUSE.MULTIPLE.LITERALS . T)
          (RED.D_CLAUSE.PURITY . PARTIAL)
          (RED.D_CLAUSE.TAUTOLOGY . REMOVE-INHIBIT)
          (RED.D_CLAUSE.TAUTOLOGY.RECHECK)
          (RED.D_CLAUSE.SUBSUMPTION.FORWARD . REMOVE-INHIBIT)
          (RED.D_CLAUSE.SUBSUMPTION.BACKWARD . REMOVE)
          (RED.D_CLAUSE.SUBSUMPTION.RECHECK)
          (RED.D_CLAUSE.REPL.FACTORING . T)
          (RED.D_CLAUSE.REPL.FACTORING.RECHECK . T)
          (RED.D_CLAUSE.REPL.RESOLUTION . SIMPLE)
          (RED.D_CLAUSE.REPL.RESOLUTION.RECHECK . T)
          (RED.D_CLAUSE.REWRITING . DEM)
          (RED.D_LINK.INCOMPATIBILITY . T)
          (RED.D_LINK.TAUTOLOGY . REMOVE-INHIBIT)
          (RED.D_LINK.TAUTOLOGY.RECHECK)
          (RED.D_LINK.SUBSUMPTION . REMOVE-INHIBIT)
          (RED.D_LINK.SUBSUMPTION.RECHECK)
          (FAC_INITIAL)
          (FAC_EACH.STEP)
          (STR_RESOLUTION . SET-OF-SUPPORT)
          (STR_R.SELECTION * 10 (+ 2 VARIABLES (* 2 DEPTH) (* 3 NOLIT)))
          (STR_LINK.DEPTH)
          (STR_TERM.DEPTH)
          (STR_FINITE.DOMAIN . T)
          (TERM_UNITS . T)
          (TERM_ITERATIONS . 0)
          (TERM_SET.OF.SUPPORT)
          (TERM_BREADTH.FIRST)
          (SORT_LITERALS)
          (SORT_MAX.UNIFICATION.RULE.STEPS . 100)
          (SORT_MAX.UNIFICATION.TREE.DEPTH . 100)
          (SORT_MAX.UNIFICATION.TREE.OPEN.NODES . 20)
          (SORT_UNIFIER.STOP.NUMBER . 100)
          (SORT_SHOW.VARIABLE.SORTS . T)
          (ER_PARAMODULATION . HEURISTIC-COMPLETION)
          (ER_WEIGHT.POLYNOMIALS)
          (ER_P.SELECTION * WEIGHT (IF SUPPORT 1 1.5) (IF EQUATIONAL 1 2))
          (ER_COMPLETION . UNFAILING)
          (ER_CP.REDUCTION . T)
          (ER_ORDERING . LEXICOGRAPHIC-RECURSIVE-PATH)
          (ER_OPERATOR.ORDERING * - + 0 1)
          (ER_KNUTH.BENDIX.WEIGHT (+ 1) (* 1) (- 0) (0 1) (1 1))
          (ER_POLYNOMIAL.WEIGHT (+ (X Y) (+ (* 2 Y) X)) (* (X Y) (+ (* X Y) X)) (- (X) (* X X)) (0 NIL 2) (1 NIL 2))
          (ER_NARROW.DEPTH . 0)
          (ER_NARROW.NEXT . DEPTH)
          (ER_NARROW.TEST NORM C DELTA SL N)
          (ER_COMPILE)
          (GEN_SPLITTING . 0)
          (GEN_PRESIMPLIFICATION . T)
          (GEN_MIN.EXPRESSION.LENGTH.FOR.FILE)
          (GEN_MIN.EXPRESSION.SIZE.FOR.FILE)
          (GEN_MANUAL.CONTROL)
          (GEN_MAXIMUM.STEPS)
          (GEN_MAXIMUM.TIME)
          (GEN_GRAPH.SAVING)
          (GEN_SAVE.FILE . SAVEDEFAULT)
          (GEN_LISP.GARBAGE.COLLECTION)
          (GEN_COMMON.LISP . T)
          (GEN_OTHER.PROVER . MKRP)
          (TR_PREPROCESSING)
          (TR_STEP.MODE . LR)
          (TR_DUMP)
          (TR_CLAUSE.MODE . I)
          (TR_LINK.MODE . I)
          (TR_TRACE.FILE)
          (TR_TERMINAL . T)
          (PR_INFIX.FORM . T)
          (PR_PREFIX.FORM)
          (PR_OPTIONS)
          (PR_AXIOM.CLAUSES . T)
          (PR_SYMBOLS)
          (PR_DIRECT.PROOF . T)
          (PR_VARIABLE.PRINT.NAMES X Y Z U V W XX YY ZZ UU VV WW XXX YYY ZZZ UUU VVV WWW)
          (PR_PROTOCOL . STANDARD)
          (PR_LEFT.MARGIN . 0)
          (PR_RIGHT.MARGIN . 117)
          (PR_LATEX)
          (PR_LINELENGTH . 117)
          (PR_LITERALS)
         )
            (INITIAL   (CLAUSE 16 R.= AXIOM ((10 . ANY)) ((+ 2 (10 10)) ))
(CLAUSE 20 A1 AXIOM ((5 . ANY)(4 . ANY)(3 . ANY)) ((+ 2 ((6 3 (6 4 5)) (6 (6 3 4) 5))) ))
(CLAUSE 27 A2 AXIOM ((7 . ANY)) ((+ 2 ((6 8 7) 7)) ))
(CLAUSE 31 A3 AXIOM ((9 . ANY)) ((+ 2 ((6 (14 9) 9) 8)) ))
(CLAUSE 12 T4 THEOREM () ((+ 2 ((6 35 36) (6 34 36))) ))
(CLAUSE 37 T5 THEOREM () ((- 2 (35 34)) )) )
            (OPERATION (CLAUSE 33 P1 (20 12) ((28 . ANY)) ((+ 2 ((6 34 (6 36 28)) (6 (6 35 36) 28))) ))
                       (PARAMODULATION 12 1 (2) 20 1 (2 1) NIL (3 34 4 36) 33))
            (OPERATION (CLAUSE 33 P1 (20 12) ((28 . ANY)) ((+ 2 ((6 34 (6 36 28)) (6 35 (6 36 28)))) ))
                       (REWRITE 20 1 33))
            (OPERATION (CLAUSE 67 P2 (20 31) ((13 . ANY)(57 . ANY)) ((+ 2 ((6 (14 57) (6 57 13)) (6 8 13))) ))
                       (PARAMODULATION 31 1 (1) 20 1 (2 1) NIL (3 (14 4) 9 4) 67))
            (OPERATION (CLAUSE 67 P2 (20 31) ((13 . ANY)(57 . ANY)) ((+ 2 ((6 (14 57) (6 57 13)) 13)) ))
                       (REWRITE 27 1 67))
            (OPERATION (CLAUSE 74 P3 (67 12) () ((+ 2 ((6 (14 34) (6 35 36)) 36)) ))
                       (PARAMODULATION 12 1 (2) 67 1 (1 2) NIL (57 34 13 36) 74))
            (OPERATION (CLAUSE 110 P4 (67 74) () ((+ 2 ((6 (14 (14 34)) 36) (6 35 36))) ))
                       (PARAMODULATION 74 1 (1) 67 1 (1 2) NIL (57 (14 34) 13 (6 35 36)) 110))
            (OPERATION (CLAUSE 122 P5 (67 27) ((113 . ANY)) ((+ 2 ((6 (14 8) 113) 113)) ))
                       (PARAMODULATION 27 1 (1) 67 1 (1 2) NIL (57 8 7 13) 122))
            (OPERATION (CLAUSE 127 P6 (67 110) () ((+ 2 ((6 (14 (14 (14 34))) (6 35 36)) 36)) ))
                       (PARAMODULATION 110 1 (1) 67 1 (1 2) NIL (57 (14 (14 34)) 13 36) 127))
            (OPERATION (CLAUSE 157 P7 (67 31) ((123 . ANY)) ((+ 2 ((6 (14 (14 123)) 8) 123)) ))
                       (PARAMODULATION 31 1 (1) 67 1 (1 2) NIL (57 (14 13) 9 13) 157))
            (OPERATION (CLAUSE 172 P8 (67 122) ((160 . ANY)) ((+ 2 ((6 (14 (14 8)) 160) 160)) ))
                       (PARAMODULATION 122 1 (1) 67 1 (1 2) NIL (57 (14 8) 113 13) 172))
            (OPERATION (CLAUSE 178 P9 (31 172) () ((+ 2 ((14 8) 8)) ))
                       (PARAMODULATION 172 1 (1) 31 1 (1) NIL (9 (14 8) 160 (14 8)) 178))
            (OPERATION (CLAUSE 122 P5 (67 27) ((113 . ANY)) ((+ 2 ((6 8 113) 113)) ))
                       (REWRITE 178 1 122))
            (OPERATION (CLAUSE 122 P5 (67 27) ((113 . ANY)) ((+ 2 (113 113)) ))
                       (REWRITE 27 1 122))
            (OPERATION (CLAUSE 172 P8 (67 122) ((160 . ANY)) ((+ 2 ((6 (14 8) 160) 160)) ))
                       (REWRITE 178 1 172))
            (OPERATION (CLAUSE 172 P8 (67 122) ((160 . ANY)) ((+ 2 ((6 8 160) 160)) ))
                       (REWRITE 178 1 172))
            (OPERATION (CLAUSE 172 P8 (67 122) ((160 . ANY)) ((+ 2 (160 160)) ))
                       (REWRITE 27 1 172))
            (OPERATION (CLAUSE 173 P10 (67 33) ((214 . ANY)) ((+ 2 ((6 (14 34) (6 35 (6 36 214))) (6 36 214))) ))
                       (PARAMODULATION 33 1 (1) 67 1 (1 2) NIL (57 34 13 (6 36 28)) 173))
            (OPERATION (CLAUSE 101 P11 (67 127) () ((+ 2 ((6 (14 (14 (14 (14 34)))) 36) (6 35 36))) ))
                       (PARAMODULATION 127 1 (1) 67 1 (1 2) NIL (57 (14 (14 (14 34))) 13 (6 35 36)) 101))
            (OPERATION (CLAUSE 229 P12 (20 110) ((124 . ANY)) ((+ 2 ((6 (14 (14 34)) (6 36 124)) (6 (6 35 36) 124))) ))
                       (PARAMODULATION 110 1 (1) 20 1 (2 1) NIL (3 (14 (14 34)) 4 36) 229))
            (OPERATION (CLAUSE 229 P12 (20 110) ((124 . ANY)) ((+ 2 ((6 (14 (14 34)) (6 36 124)) (6 35 (6 36 124)))) ))
                       (REWRITE 20 1 229))
            (OPERATION (CLAUSE 180 P13 (67 101) () ((+ 2 ((6 (14 (14 (14 (14 (14 34))))) (6 35 36)) 36)) ))
                       (PARAMODULATION 101 1 (1) 67 1 (1 2) NIL (57 (14 (14 (14 (14 34)))) 13 36) 180))
            (OPERATION (CLAUSE 252 P14 (67 157) ((219 . ANY)) ((+ 2 ((6 (14 (14 (14 219))) 219) 8)) ))
                       (PARAMODULATION 157 1 (1) 67 1 (1 2) NIL (57 (14 (14 123)) 13 8) 252))
            (OPERATION (CLAUSE 258 P15 (67 252) ((257 . ANY)) ((+ 2 ((6 (14 (14 (14 (14 257)))) 8) 257)) ))
                       (PARAMODULATION 252 1 (1) 67 1 (1 2) NIL (57 (14 (14 (14 13))) 219 13) 258))
            (OPERATION (CLAUSE 258 P15 (67 252) ((257 . ANY)) ((+ 2 ((14 (14 257)) 257)) ))
                       (REWRITE 157 1 258))
            (OPERATION (CLAUSE 110 P4 (67 74) () ((+ 2 ((6 34 36) (6 35 36))) ))
                       (REWRITE 258 1 110))
            (OPERATION (CLAUSE 110 P4 (67 74) () ((+ 2 ((6 35 36) (6 35 36))) ))
                       (REWRITE 12 1 110))
            (OPERATION (CLAUSE 127 P6 (67 110) () ((+ 2 ((6 (14 34) (6 35 36)) 36)) ))
                       (REWRITE 258 1 127))
            (OPERATION (CLAUSE 127 P6 (67 110) () ((+ 2 (36 36)) ))
                       (REWRITE 74 1 127))
            (OPERATION (CLAUSE 157 P7 (67 31) ((123 . ANY)) ((+ 2 ((6 123 8) 123)) ))
                       (REWRITE 258 1 157))
            (OPERATION (CLAUSE 101 P11 (67 127) () ((+ 2 ((6 (14 (14 34)) 36) (6 35 36))) ))
                       (REWRITE 258 1 101))
            (OPERATION (CLAUSE 101 P11 (67 127) () ((+ 2 ((6 34 36) (6 35 36))) ))
                       (REWRITE 258 1 101))
            (OPERATION (CLAUSE 101 P11 (67 127) () ((+ 2 ((6 35 36) (6 35 36))) ))
                       (REWRITE 12 1 101))
            (OPERATION (CLAUSE 229 P12 (20 110) ((124 . ANY)) ((+ 2 ((6 34 (6 36 124)) (6 35 (6 36 124)))) ))
                       (REWRITE 258 1 229))
            (OPERATION (CLAUSE 229 P12 (20 110) ((124 . ANY)) ((+ 2 ((6 35 (6 36 124)) (6 35 (6 36 124)))) ))
                       (REWRITE 33 1 229))
            (OPERATION (CLAUSE 180 P13 (67 101) () ((+ 2 ((6 (14 (14 (14 34))) (6 35 36)) 36)) ))
                       (REWRITE 258 1 180))
            (OPERATION (CLAUSE 180 P13 (67 101) () ((+ 2 ((6 (14 34) (6 35 36)) 36)) ))
                       (REWRITE 258 1 180))
            (OPERATION (CLAUSE 180 P13 (67 101) () ((+ 2 (36 36)) ))
                       (REWRITE 74 1 180))
            (OPERATION (CLAUSE 252 P14 (67 157) ((219 . ANY)) ((+ 2 ((6 (14 219) 219) 8)) ))
                       (REWRITE 258 1 252))
            (OPERATION (CLAUSE 252 P14 (67 157) () ((+ 2 (8 8)) ))
                       (REWRITE 31 1 252))
            (OPERATION (CLAUSE 330 P16 (31 258) ((333 . ANY)) ((+ 2 ((6 333 (14 333)) 8)) ))
                       (PARAMODULATION 258 1 (1) 31 1 (1 1) NIL (9 (14 257)) 330))
            (OPERATION (CLAUSE 271 P17 (33 330) () ((+ 2 ((6 34 8) (6 35 (6 36 (14 36))))) ))
                       (PARAMODULATION 330 1 (1) 33 1 (1 2) NIL (333 36 28 (14 36)) 271))
            (OPERATION (CLAUSE 271 P17 (33 330) () ((+ 2 ((6 34 8) (6 35 8))) ))
                       (REWRITE 330 1 271))
            (OPERATION (CLAUSE 271 P17 (33 330) () ((+ 2 (34 (6 35 8))) ))
                       (REWRITE 157 1 271))
            (OPERATION (CLAUSE 271 P17 (33 330) () ((+ 2 (34 35)) ))
                       (REWRITE 157 1 271))
            (OPERATION (CLAUSE 271 P17 (33 330) () ((+ 2 (34 35)) ))
                       (REPLACEMENT.OPERATION NIL (271 37)
  (((271 . 1) (37 . 1) SYMMETRIC))
  (NIL)
  NIL))
            (END.TIME 51610000)
            (SYMBOLS 
                     (LET (NEW.ADDRESS)
          (LIST (PROG1 (CONS    2 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "=" '(ANY ANY))))
                                    (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED SYMMETRIC REFLEXIVE)))
                             (PROG1 (CONS    1 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "FALSE" 'NIL)))
                                    (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
                             (PROG1 (CONS    0 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "TRUE" 'NIL)))
                                    (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
                             (CONS   36 (DT-CONSTANT.CREATE "c_3" 'ANY))
                             (CONS   35 (DT-CONSTANT.CREATE "c_2" 'ANY))
                             (CONS   34 (DT-CONSTANT.CREATE "c_1" 'ANY))
                             (CONS    8 (DT-CONSTANT.CREATE "a" 'ANY))
                             (CONS   14 (DT-FUNCTION.CREATE "f_1" 'ANY '(ANY) 'NIL))
                             (CONS    6 (DT-FUNCTION.CREATE "f" 'ANY '(ANY ANY) 'NIL)))))
            (SPLITPART.IDENTIFIER 1)
            (RESULT SUCCESS 271)
)