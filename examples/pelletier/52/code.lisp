;;; -*- Package: MKRP; Base: 10; Mode: LISP; Syntax: Common-lisp -*-

(CONSTRUCTION  "Genera 8.0.2 IP-TCP 422.9 IP-TCP-DOC 404.0 CLX 419.3 X Remote Screen 418.1 X Documentation 403.0 Network RPC 415.5 NFS Client 415.3 NFS Documentation 404.0 Logical Pathnames Translation Files NEWEST KKL 24.1 HADES 19.0 Waltz 8.0 COLUMN 9.0 Experimental MKRP 53.9 GENTRAFO 3.0" "05-MAY,1992 20:21" 
   ("Edit:     Axioms and Theorems edited: 24-JUN,1990 17:31 "
   ))

(AXIOMS.INFIX    ((* AXIOMS *)
   (EX |Z,W| (ALL |X,Y| F (X Y) EQV (X = Z AND Y = W)))))

(THEOREMS.INFIX ((* THEOREMS *)
   (EX W (ALL Y (EX Z (ALL X F (X Y) EQV X = Z)) EQV Y = W))))

(AXIOMS.PREFIX   (COMMENT
   (EX 4 (EX 3 (ALL 6 (ALL 5 (EQV (+ 7 (5 6) (KIND (EQV T 30))) (AND (+ 2 (5 3) (KIND (EQV NIL 30))) (+ 2 (6 4) (KIND (EQV NIL 30)))))))))))

(THEOREMS.PREFIX (COMMENT
   (EX 8 (ALL 9 (EQV (EX 10 (ALL 11 (EQV (+ 7 (11 9) (KIND (EQV T 30 EQV T 31))) (+ 2 (11 10) (KIND (EQV NIL 30 EQV T 31)))))) (+ 2 (9 8) (KIND (EQV NIL 31))))))))

(OPTIONS (TWO_RULES)
    (TWO_RULES.MAXLEVEL . 1)
    (TWO_SUPPRESS.NORULES)
    (RED.I_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.I_CLAUSE.PURITY . PARTIAL)
    (RED.I_CLAUSE.TAUTOLOGY . T)
    (RED.I_CLAUSE.TAUTOLOGY.RECHECK . PARTIAL)
    (RED.I_CLAUSE.SUBSUMPTION . T)
    (RED.I_CLAUSE.SUBSUMPTION.RECHECK . PARTIAL)
    (RED.I_CLAUSE.REPL.FACTORING . T)
    (RED.I_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.I_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.I_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.I_CLAUSE.REWRITING . DEM)
    (RED.I_LINK.INCOMPATIBILITY . T)
    (RED.I_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.I_LINK.TAUTOLOGY.RECHECK)
    (RED.I_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.I_LINK.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.D_CLAUSE.PURITY . PARTIAL)
    (RED.D_CLAUSE.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_CLAUSE.TAUTOLOGY.RECHECK)
    (RED.D_CLAUSE.SUBSUMPTION.FORWARD . REMOVE-INHIBIT)
    (RED.D_CLAUSE.SUBSUMPTION.BACKWARD . REMOVE)
    (RED.D_CLAUSE.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.REPL.FACTORING . T)
    (RED.D_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.D_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.D_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.D_CLAUSE.REWRITING . DEM)
    (RED.D_LINK.INCOMPATIBILITY . T)
    (RED.D_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_LINK.TAUTOLOGY.RECHECK)
    (RED.D_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.D_LINK.SUBSUMPTION.RECHECK)
    (FAC_INITIAL)
    (FAC_EACH.STEP)
    (STR_RESOLUTION . SET-OF-SUPPORT)
    (STR_R.SELECTION * 10 (+ 2 VARIABLES (* 2 DEPTH) (* 3 NOLIT)))
    (STR_LINK.DEPTH)
    (STR_TERM.DEPTH)
    (STR_FINITE.DOMAIN . T)
    (TERM_UNITS . T)
    (TERM_ITERATIONS . 0)
    (TERM_SET.OF.SUPPORT)
    (TERM_BREADTH.FIRST)
    (SORT_LITERALS)
    (SORT_MAX.UNIFICATION.RULE.STEPS . 100)
    (SORT_MAX.UNIFICATION.TREE.DEPTH . 100)
    (SORT_MAX.UNIFICATION.TREE.OPEN.NODES . 20)
    (SORT_UNIFIER.STOP.NUMBER . 100)
    (SORT_SHOW.VARIABLE.SORTS . T)
    (ER_PARAMODULATION . BACHMAIR-GANZINGER)
    (ER_WEIGHT.POLYNOMIALS)
    (ER_P.SELECTION * WEIGHT (IF SUPPORT 1 1.5) (IF EQUATIONAL 1 2))
    (ER_COMPLETION . UNFAILING)
    (ER_CP.REDUCTION . T)
    (ER_ORDERING . LEXICOGRAPHIC-RECURSIVE-PATH)
    (ER_OPERATOR.ORDERING P F_2 F_3 F_1)
    (ER_KNUTH.BENDIX.WEIGHT (+ 1) (* 1) (- 0) (0 1) (1 1))
    (ER_POLYNOMIAL.WEIGHT (+ (X Y) (+ (* 2 Y) X)) (* (X Y) (+ (* X Y) X)) (- (X) (* X X)) (0 NIL 2) (1 NIL 2))
    (ER_NARROW.DEPTH . 0)
    (ER_NARROW.NEXT . DEPTH)
    (ER_NARROW.TEST NORM C DELTA SL N)
    (ER_COMPILE)
    (GEN_SPLITTING . 0)
    (GEN_PRESIMPLIFICATION . T)
    (GEN_MIN.EXPRESSION.LENGTH.FOR.FILE)
    (GEN_MIN.EXPRESSION.SIZE.FOR.FILE)
    (GEN_MANUAL.CONTROL)
    (GEN_MAXIMUM.STEPS)
    (GEN_GRAPH.SAVING)
    (GEN_SAVE.FILE . SAVEDEFAULT)
    (GEN_LISP.GARBAGE.COLLECTION)
    (GEN_COMMON.LISP)
    (GEN_OTHER.PROVER . MKRP)
    (TR_PREPROCESSING)
    (TR_STEP.MODE . LR)
    (TR_DUMP)
    (TR_CLAUSE.MODE . I)
    (TR_LINK.MODE . I)
    (TR_TRACE.FILE)
    (TR_TERMINAL . T)
    (PR_INFIX.FORM . T)
    (PR_PREFIX.FORM)
    (PR_OPTIONS)
    (PR_AXIOM.CLAUSES . T)
    (PR_SYMBOLS)
    (PR_DIRECT.PROOF)
    (PR_VARIABLE.PRINT.NAMES X Y Z U V W XX YY ZZ UU VV WW XXX YYY ZZZ UUU VVV WWW)
    (PR_PROTOCOL . STANDARD)
    (PR_LEFT.MARGIN . 0)
    (PR_RIGHT.MARGIN . 117)
    (PR_LATEX)
    (PR_LINELENGTH . 117)
    (PR_LITERALS)
   )

(LINK.COLOURS (R RIW RD S SI SIW SID T TI TIW P PIW PD RIWD))

(AXIOMS (START.TIME 84482076)
   (PARTIAL   (CLAUSE 18 R.= AXIOM ((16 . ANY)) ((+ 2 (16 16)) ))(CLAUSE 21 A1 AXIOM ((12 . ANY)(4 . ANY))
   ((- 7 (4 12)) (+ 2 (4 14)) )))
   (PARTIAL   (CLAUSE 25 A2 AXIOM ((13 . ANY)(3 . ANY))
   ((- 7 (3 13)) (+ 2 (13 15)) )))
   (PARTIAL   (CLAUSE 33 A3 AXIOM ((6 . ANY)(5 . ANY))
   ((+ 7 (5 6)) (- 2 (5 14)) (- 2 (6 15)) )))
   (END.TIME 84483135)
   (FINAL 18 21 25 33)
   (SYMBOLS 
   (LET (NEW.ADDRESS)
   (LIST (CONS    7 (DT-PREDICATE.CREATE "F" '(ANY ANY)))
   (PROG1 (CONS    2 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "=" '(ANY ANY))))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED SYMMETRIC REFLEXIVE)))
   (PROG1 (CONS    1 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "FALSE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (PROG1 (CONS    0 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "TRUE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (CONS   15 (DT-CONSTANT.CREATE "c_2" 'ANY))
   (CONS   14 (DT-CONSTANT.CREATE "c_1" 'ANY)))))
   (RESULT))

(THEOREMS (SPLITPART.IDENTIFIER 1)
   (START.TIME 84483164)
   (PARTIAL   (CLAUSE 59 T4 THEOREM ((8 . ANY)(53 . ANY))
   ((- 7 ((54 53 8) (50 8))) (- 2 ((54 53 8) 53)) (- 2 ((50 8) 8)) )))
   (PARTIAL   (CLAUSE 81 T5 THEOREM ((10 . ANY)(57 . ANY))
   ((+ 7 ((54 57 10) (50 10))) (+ 2 ((54 57 10) 57)) (- 2 ((50 10) 10)) )))
   (PARTIAL   (CLAUSE 106 T6 THEOREM ((55 . ANY)(56 . ANY))
   ((+ 7 (56 (50 55))) (- 2 (56 (52 55))) (+ 2 ((50 55) 55)) )))
   (PARTIAL   (CLAUSE 138 T7 THEOREM ((9 . ANY)(51 . ANY))
   ((- 7 (51 (50 9))) (+ 2 (51 (52 9))) (+ 2 ((50 9) 9)) )))
   (INITIAL   (CLAUSE 18 R.= AXIOM ((16 . ANY)) ((+ 2 (16 16)) ))
(CLAUSE 21 A1 AXIOM ((12 . ANY)(4 . ANY))
   ((- 7 (4 12)) (+ 2 (4 14)) ))
(CLAUSE 25 A2 AXIOM ((13 . ANY)(3 . ANY))
   ((- 7 (3 13)) (+ 2 (13 15)) ))
(CLAUSE 33 A3 AXIOM ((6 . ANY)(5 . ANY))
   ((+ 7 (5 6)) (- 2 (5 14)) (- 2 (6 15)) ))
(CLAUSE 59 T4 THEOREM ((8 . ANY)(53 . ANY))
   ((- 7 ((54 53 8) (50 8))) (- 2 ((54 53 8) 53)) (- 2 ((50 8) 8)) ))
(CLAUSE 81 T5 THEOREM ((10 . ANY)(57 . ANY))
   ((+ 7 ((54 57 10) (50 10))) (+ 2 ((54 57 10) 57)) (- 2 ((50 10) 10)) ))
(CLAUSE 106 T6 THEOREM ((55 . ANY)(56 . ANY))
   ((+ 7 (56 (50 55))) (- 2 (56 (52 55))) (+ 2 ((50 55) 55)) ))
(CLAUSE 138 T7 THEOREM ((9 . ANY)(51 . ANY))
   ((- 7 (51 (50 9))) (+ 2 (51 (52 9))) (+ 2 ((50 9) 9)) ))   )
   (END.TIME 84490861)
   (FINAL 18 21 25 33 59 81 106 138)
   (SYMBOLS 
   (LET (NEW.ADDRESS)
   (LIST (CONS    7 (DT-PREDICATE.CREATE "F" '(ANY ANY)))
   (PROG1 (CONS    2 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "=" '(ANY ANY))))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED SYMMETRIC REFLEXIVE)))
   (PROG1 (CONS    1 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "FALSE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (PROG1 (CONS    0 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "TRUE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (CONS   15 (DT-CONSTANT.CREATE "c_2" 'ANY))
   (CONS   14 (DT-CONSTANT.CREATE "c_1" 'ANY))
   (CONS   52 (DT-FUNCTION.CREATE "f_3" 'ANY '(ANY) 'NIL))
   (CONS   54 (DT-FUNCTION.CREATE "f_2" 'ANY '(ANY ANY) 'NIL))
   (CONS   50 (DT-FUNCTION.CREATE "f_1" 'ANY '(ANY) 'NIL)))))
   (RESULT))
(indices ((138 4 5 6) (106 4 5 6) (81 4 5 6) (59 4 5 6) (33 1 2 3) (25 1 3) (21 1 2) (18 NIL)))

(SPLITPARTS "Genera 8.0.2 IP-TCP 422.9 IP-TCP-DOC 404.0 CLX 419.3 X Remote Screen 418.1 X Documentation 403.0 Network RPC 415.5 NFS Client 415.3 NFS Documentation 404.0 Logical Pathnames Translation Files NEWEST KKL 24.1 HADES 19.0 Waltz 8.0 COLUMN 9.0 Experimental MKRP 53.9 GENTRAFO 3.0" "05-MAY,1992 20:21" NIL)

(OPTIONS (TWO_RULES)
    (TWO_RULES.MAXLEVEL . 1)
    (TWO_SUPPRESS.NORULES)
    (RED.I_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.I_CLAUSE.PURITY . PARTIAL)
    (RED.I_CLAUSE.TAUTOLOGY . T)
    (RED.I_CLAUSE.TAUTOLOGY.RECHECK . PARTIAL)
    (RED.I_CLAUSE.SUBSUMPTION . T)
    (RED.I_CLAUSE.SUBSUMPTION.RECHECK . PARTIAL)
    (RED.I_CLAUSE.REPL.FACTORING . T)
    (RED.I_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.I_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.I_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.I_CLAUSE.REWRITING . DEM)
    (RED.I_LINK.INCOMPATIBILITY . T)
    (RED.I_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.I_LINK.TAUTOLOGY.RECHECK)
    (RED.I_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.I_LINK.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.D_CLAUSE.PURITY . PARTIAL)
    (RED.D_CLAUSE.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_CLAUSE.TAUTOLOGY.RECHECK)
    (RED.D_CLAUSE.SUBSUMPTION.FORWARD . REMOVE-INHIBIT)
    (RED.D_CLAUSE.SUBSUMPTION.BACKWARD . REMOVE)
    (RED.D_CLAUSE.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.REPL.FACTORING . T)
    (RED.D_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.D_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.D_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.D_CLAUSE.REWRITING . DEM)
    (RED.D_LINK.INCOMPATIBILITY . T)
    (RED.D_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_LINK.TAUTOLOGY.RECHECK)
    (RED.D_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.D_LINK.SUBSUMPTION.RECHECK)
    (FAC_INITIAL)
    (FAC_EACH.STEP)
    (STR_RESOLUTION . SET-OF-SUPPORT)
    (STR_R.SELECTION * 10 (+ 2 VARIABLES (* 2 DEPTH) (* 3 NOLIT)))
    (STR_LINK.DEPTH)
    (STR_TERM.DEPTH)
    (STR_FINITE.DOMAIN . T)
    (TERM_UNITS . T)
    (TERM_ITERATIONS . 0)
    (TERM_SET.OF.SUPPORT)
    (TERM_BREADTH.FIRST)
    (SORT_LITERALS)
    (SORT_MAX.UNIFICATION.RULE.STEPS . 100)
    (SORT_MAX.UNIFICATION.TREE.DEPTH . 100)
    (SORT_MAX.UNIFICATION.TREE.OPEN.NODES . 20)
    (SORT_UNIFIER.STOP.NUMBER . 100)
    (SORT_SHOW.VARIABLE.SORTS . T)
    (ER_PARAMODULATION . BACHMAIR-GANZINGER)
    (ER_WEIGHT.POLYNOMIALS)
    (ER_P.SELECTION * WEIGHT (IF SUPPORT 1 1.5) (IF EQUATIONAL 1 2))
    (ER_COMPLETION . UNFAILING)
    (ER_CP.REDUCTION . T)
    (ER_ORDERING . LEXICOGRAPHIC-RECURSIVE-PATH)
    (ER_OPERATOR.ORDERING P F_2 F_3 F_1)
    (ER_KNUTH.BENDIX.WEIGHT (+ 1) (* 1) (- 0) (0 1) (1 1))
    (ER_POLYNOMIAL.WEIGHT (+ (X Y) (+ (* 2 Y) X)) (* (X Y) (+ (* X Y) X)) (- (X) (* X X)) (0 NIL 2) (1 NIL 2))
    (ER_NARROW.DEPTH . 0)
    (ER_NARROW.NEXT . DEPTH)
    (ER_NARROW.TEST NORM C DELTA SL N)
    (ER_COMPILE)
    (GEN_SPLITTING . 0)
    (GEN_PRESIMPLIFICATION . T)
    (GEN_MIN.EXPRESSION.LENGTH.FOR.FILE)
    (GEN_MIN.EXPRESSION.SIZE.FOR.FILE)
    (GEN_MANUAL.CONTROL)
    (GEN_MAXIMUM.STEPS)
    (GEN_GRAPH.SAVING)
    (GEN_SAVE.FILE . SAVEDEFAULT)
    (GEN_LISP.GARBAGE.COLLECTION)
    (GEN_COMMON.LISP)
    (GEN_OTHER.PROVER . MKRP)
    (TR_PREPROCESSING)
    (TR_STEP.MODE . LR)
    (TR_DUMP)
    (TR_CLAUSE.MODE . I)
    (TR_LINK.MODE . I)
    (TR_TRACE.FILE)
    (TR_TERMINAL . T)
    (PR_INFIX.FORM . T)
    (PR_PREFIX.FORM)
    (PR_OPTIONS)
    (PR_AXIOM.CLAUSES . T)
    (PR_SYMBOLS)
    (PR_DIRECT.PROOF)
    (PR_VARIABLE.PRINT.NAMES X Y Z U V W XX YY ZZ UU VV WW XXX YYY ZZZ UUU VVV WWW)
    (PR_PROTOCOL . STANDARD)
    (PR_LEFT.MARGIN . 0)
    (PR_RIGHT.MARGIN . 117)
    (PR_LATEX)
    (PR_LINELENGTH . 117)
    (PR_LITERALS)
   )

(REFUTATION (START.TIME 84491340)

(OPTIONS (TWO_RULES)
    (TWO_RULES.MAXLEVEL . 1)
    (TWO_SUPPRESS.NORULES)
    (RED.I_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.I_CLAUSE.PURITY . PARTIAL)
    (RED.I_CLAUSE.TAUTOLOGY . T)
    (RED.I_CLAUSE.TAUTOLOGY.RECHECK . PARTIAL)
    (RED.I_CLAUSE.SUBSUMPTION . T)
    (RED.I_CLAUSE.SUBSUMPTION.RECHECK . PARTIAL)
    (RED.I_CLAUSE.REPL.FACTORING . T)
    (RED.I_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.I_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.I_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.I_CLAUSE.REWRITING . DEM)
    (RED.I_LINK.INCOMPATIBILITY . T)
    (RED.I_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.I_LINK.TAUTOLOGY.RECHECK)
    (RED.I_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.I_LINK.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.D_CLAUSE.PURITY . PARTIAL)
    (RED.D_CLAUSE.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_CLAUSE.TAUTOLOGY.RECHECK)
    (RED.D_CLAUSE.SUBSUMPTION.FORWARD . REMOVE-INHIBIT)
    (RED.D_CLAUSE.SUBSUMPTION.BACKWARD . REMOVE)
    (RED.D_CLAUSE.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.REPL.FACTORING . T)
    (RED.D_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.D_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.D_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.D_CLAUSE.REWRITING . DEM)
    (RED.D_LINK.INCOMPATIBILITY . T)
    (RED.D_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_LINK.TAUTOLOGY.RECHECK)
    (RED.D_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.D_LINK.SUBSUMPTION.RECHECK)
    (FAC_INITIAL)
    (FAC_EACH.STEP)
    (STR_RESOLUTION . SET-OF-SUPPORT)
    (STR_R.SELECTION * 10 (+ 2 VARIABLES (* 2 DEPTH) (* 3 NOLIT)))
    (STR_LINK.DEPTH)
    (STR_TERM.DEPTH)
    (STR_FINITE.DOMAIN . T)
    (TERM_UNITS . T)
    (TERM_ITERATIONS . 0)
    (TERM_SET.OF.SUPPORT)
    (TERM_BREADTH.FIRST)
    (SORT_LITERALS)
    (SORT_MAX.UNIFICATION.RULE.STEPS . 100)
    (SORT_MAX.UNIFICATION.TREE.DEPTH . 100)
    (SORT_MAX.UNIFICATION.TREE.OPEN.NODES . 20)
    (SORT_UNIFIER.STOP.NUMBER . 100)
    (SORT_SHOW.VARIABLE.SORTS . T)
    (ER_PARAMODULATION . BACHMAIR-GANZINGER)
    (ER_WEIGHT.POLYNOMIALS)
    (ER_P.SELECTION * WEIGHT (IF SUPPORT 1 1.5) (IF EQUATIONAL 1 2))
    (ER_COMPLETION . UNFAILING)
    (ER_CP.REDUCTION . T)
    (ER_ORDERING . LEXICOGRAPHIC-RECURSIVE-PATH)
    (ER_OPERATOR.ORDERING P F_2 F_3 F_1)
    (ER_KNUTH.BENDIX.WEIGHT (+ 1) (* 1) (- 0) (0 1) (1 1))
    (ER_POLYNOMIAL.WEIGHT (+ (X Y) (+ (* 2 Y) X)) (* (X Y) (+ (* X Y) X)) (- (X) (* X X)) (0 NIL 2) (1 NIL 2))
    (ER_NARROW.DEPTH . 0)
    (ER_NARROW.NEXT . DEPTH)
    (ER_NARROW.TEST NORM C DELTA SL N)
    (ER_COMPILE)
    (GEN_SPLITTING . 0)
    (GEN_PRESIMPLIFICATION . T)
    (GEN_MIN.EXPRESSION.LENGTH.FOR.FILE)
    (GEN_MIN.EXPRESSION.SIZE.FOR.FILE)
    (GEN_MANUAL.CONTROL)
    (GEN_MAXIMUM.STEPS)
    (GEN_GRAPH.SAVING)
    (GEN_SAVE.FILE . SAVEDEFAULT)
    (GEN_LISP.GARBAGE.COLLECTION)
    (GEN_COMMON.LISP)
    (GEN_OTHER.PROVER . MKRP)
    (TR_PREPROCESSING)
    (TR_STEP.MODE . LR)
    (TR_DUMP)
    (TR_CLAUSE.MODE . I)
    (TR_LINK.MODE . I)
    (TR_TRACE.FILE)
    (TR_TERMINAL . T)
    (PR_INFIX.FORM . T)
    (PR_PREFIX.FORM)
    (PR_OPTIONS)
    (PR_AXIOM.CLAUSES . T)
    (PR_SYMBOLS)
    (PR_DIRECT.PROOF)
    (PR_VARIABLE.PRINT.NAMES X Y Z U V W XX YY ZZ UU VV WW XXX YYY ZZZ UUU VVV WWW)
    (PR_PROTOCOL . STANDARD)
    (PR_LEFT.MARGIN . 0)
    (PR_RIGHT.MARGIN . 117)
    (PR_LATEX)
    (PR_LINELENGTH . 117)
    (PR_LITERALS)
   )
   (INITIAL   (CLAUSE 18 R.= AXIOM ((16 . ANY)) ((+ 2 (16 16)) ))
(CLAUSE 21 A1 AXIOM ((12 . ANY)(4 . ANY))
   ((- 7 (4 12)) (+ 2 (4 14)) ))
(CLAUSE 25 A2 AXIOM ((13 . ANY)(3 . ANY))
   ((- 7 (3 13)) (+ 2 (13 15)) ))
(CLAUSE 33 A3 AXIOM ((6 . ANY)(5 . ANY))
   ((+ 7 (5 6)) (- 2 (5 14)) (- 2 (6 15)) ))
(CLAUSE 59 T4 THEOREM ((8 . ANY)(53 . ANY))
   ((- 7 ((54 53 8) (50 8))) (- 2 ((54 53 8) 53)) (- 2 ((50 8) 8)) ))
(CLAUSE 81 T5 THEOREM ((10 . ANY)(57 . ANY))
   ((+ 7 ((54 57 10) (50 10))) (+ 2 ((54 57 10) 57)) (- 2 ((50 10) 10)) ))
(CLAUSE 106 T6 THEOREM ((55 . ANY)(56 . ANY))
   ((+ 7 (56 (50 55))) (- 2 (56 (52 55))) (+ 2 ((50 55) 55)) ))
(CLAUSE 138 T7 THEOREM ((9 . ANY)(51 . ANY))
   ((- 7 (51 (50 9))) (+ 2 (51 (52 9))) (+ 2 ((50 9) 9)) ))   )
   (OPERATION (CLAUSE 48 R1 (25 106) ((115 . ANY)(41 . ANY))
   ((- 2 (41 (52 115))) (+ 2 ((50 115) 115)) (+ 2 ((50 115) 15)) ))
   (RESOLUTION 106 1 25 1 NIL (56 3 13 (50 55)) 48))
   (OPERATION (CLAUSE 48 R1 (25 106) ((115 . ANY)(41 . ANY))
   ((- 2 (41 (52 115))) (+ 2 ((50 115) 115)) (+ 2 ((50 115) 15)) ))
   (REPLACEMENT.OPERATION (16 (52 115) 41 (52 115)) (48 18)
  (((48 . 1) (18 . 1) SYMMETRIC))
  (NIL)
  ((115 . ANY))))
   (OPERATION (CLAUSE 509 R1.F1 (48) () ((+ 2 ((50 15) 15)) ))
   (FACTORIZATION 48 SYMMETRIC (115 15) 509))
   (OPERATION (CLAUSE 138 T7 THEOREM ((9 . ANY)(51 . ANY))
   ((- 7 (51 15)) (+ 2 (51 (52 9))) (+ 2 ((50 9) 9)) ))
   (REWRITE 48 1 138))
   (OPERATION (CLAUSE 106 T6 THEOREM ((55 . ANY)(56 . ANY))
   ((+ 7 (56 15)) (- 2 (56 (52 55))) (+ 2 ((50 55) 55)) ))
   (REWRITE 48 1 106))
   (OPERATION (CLAUSE 952 P1 (59 509) ((956 . ANY))
   ((- 7 ((54 956 15) 15)) (- 2 ((54 956 15) 956)) (- 2 ((50 15) 15)) ))
   (PARAMODULATION 509 1 (1) 59 1 (2) NIL (8 15) 952))
   (OPERATION (CLAUSE 952 P1 (59 509) ((956 . ANY))
   ((- 7 ((54 956 15) 15)) (- 2 ((54 956 15) 956)) (- 2 (15 15)) ))
   (REWRITE 509 3 952))
   (OPERATION (CLAUSE 952 P1 (59 509) ((956 . ANY))
   ((- 7 ((54 956 15) 15)) (- 2 ((54 956 15) 956)) ))
   (REPLACEMENT.OPERATION NIL (952 18)
  (((952 . 3) (18 . 1) NIL))
  (NIL)
  NIL))
   (OPERATION (CLAUSE 60 P2 (81 509) ((1245 . ANY))
   ((+ 7 ((54 1245 15) 15)) (+ 2 ((54 1245 15) 1245)) (- 2 ((50 15) 15)) ))
   (PARAMODULATION 509 1 (1) 81 1 (2) NIL (10 15) 60))
   (OPERATION (CLAUSE 60 P2 (81 509) ((1245 . ANY))
   ((+ 7 ((54 1245 15) 15)) (+ 2 ((54 1245 15) 1245)) (- 2 (15 15)) ))
   (REWRITE 509 3 60))
   (OPERATION (CLAUSE 60 P2 (81 509) ((1245 . ANY))
   ((+ 7 ((54 1245 15) 15)) (+ 2 ((54 1245 15) 1245)) ))
   (REPLACEMENT.OPERATION NIL (60 18)
  (((60 . 3) (18 . 1) NIL))
  (NIL)
  NIL))
   (OPERATION (CLAUSE 82 R2 (21 60) ((669 . ANY))
   ((+ 2 ((54 669 15) 669)) (+ 2 ((54 669 15) 14)) ))
   (RESOLUTION 60 1 21 1 NIL (4 (54 1245 15) 12 15) 82))
   (OPERATION (CLAUSE 1248 R2.F2 (82) () ((+ 2 ((54 14 15) 14)) ))
   (FACTORIZATION 82 SYMMETRIC (669 14) 1248))
   (OPERATION (CLAUSE 60 P2 (81 509) ((1245 . ANY))
   ((+ 7 (14 15)) (+ 2 ((54 1245 15) 1245)) ))
   (REWRITE 82 1 60))
   (OPERATION (CLAUSE 1663 P3 (59 1248) ()
   ((- 7 (14 (50 15))) (- 2 ((54 14 15) 14)) (- 2 ((50 15) 15)) ))
   (PARAMODULATION 1248 1 (1) 59 1 (1) NIL (53 14 8 15) 1663))
   (OPERATION (CLAUSE 1663 P3 (59 1248) ()
   ((- 7 (14 (50 15))) (- 2 ((54 14 15) 14)) (- 2 (15 15)) ))
   (REWRITE 509 3 1663))
   (OPERATION (CLAUSE 1663 P3 (59 1248) ()
   ((- 7 (14 (50 15))) (- 2 (14 14)) (- 2 (15 15)) ))
   (REWRITE 1248 2 1663))
   (OPERATION (CLAUSE 1663 P3 (59 1248) ()
   ((- 7 (14 15)) (- 2 (14 14)) (- 2 (15 15)) ))
   (REWRITE 509 1 1663))
   (OPERATION (CLAUSE 1663 P3 (59 1248) ()
   ((- 7 (14 15)) (- 2 (15 15)) ))
   (REPLACEMENT.OPERATION NIL (1663 18)
  (((1663 . 2) (18 . 1) NIL))
  (NIL)
  NIL))
   (OPERATION (CLAUSE 1663 P3 (59 1248) () ((- 7 (14 15)) ))
   (REPLACEMENT.OPERATION NIL (1663 18)
  (((1663 . 2) (18 . 1) NIL))
  (NIL)
  NIL))
   (OPERATION (CLAUSE 1663 P3 (59 1248) () ((- 7 (14 15)) ))
   (REPLACEMENT.OPERATION (5 14 6 15) (1663 33 18 18)
  (((1663 . 1) (33 . 1) NIL) ((33 . 2) (18 . 1) NIL) ((33 . 3) (18 . 1) NIL))
  (NIL NIL NIL)
  NIL))
   (END.TIME 84521456)
   (SYMBOLS 
   (LET (NEW.ADDRESS)
   (LIST (CONS    7 (DT-PREDICATE.CREATE "F" '(ANY ANY)))
   (PROG1 (CONS    2 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "=" '(ANY ANY))))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED SYMMETRIC REFLEXIVE)))
   (PROG1 (CONS    1 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "FALSE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (PROG1 (CONS    0 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "TRUE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (CONS   15 (DT-CONSTANT.CREATE "c_2" 'ANY))
   (CONS   14 (DT-CONSTANT.CREATE "c_1" 'ANY))
   (CONS   52 (DT-FUNCTION.CREATE "f_3" 'ANY '(ANY) 'NIL))
   (CONS   54 (DT-FUNCTION.CREATE "f_2" 'ANY '(ANY ANY) 'NIL))
   (CONS   50 (DT-FUNCTION.CREATE "f_1" 'ANY '(ANY) 'NIL)))))
   (SPLITPART.IDENTIFIER 1)
   (RESULT SUCCESS 1663)
)