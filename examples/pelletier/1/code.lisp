;;; -*- Package: MKRP; Base: 10; Mode: LISP; Syntax: Common-lisp -*-

(CONSTRUCTION  "Genera 8.0.2 IP-TCP 422.9 IP-TCP-DOC 404.0 CLX 419.3 X Remote Screen 418.1 X Documentation 403.0 Network RPC 415.5 NFS Client 415.3 NFS Documentation 404.0 Logical Pathnames Translation Files NEWEST KKL 24.0 HADES 19.0 Waltz 8.0 COLUMN 9.0 Experimental MKRP 53.7 GENTRAFO 3.0" "22-APR,1992 13:37" 
   ("Edit:     Axioms and Theorems edited: 31-OCT,1989 21:08 "
   ))

(AXIOMS.INFIX    (NIL))

(THEOREMS.INFIX ((* THEOREMS *)
   ((P IMPL Q) EQV (NOT (Q) IMPL NOT (P)))))

(AXIOMS.PREFIX   (NIL))

(THEOREMS.PREFIX (COMMENT
   (EQV (IMPL (+ 6 NIL (KIND (EQV T 30))) (+ 7 NIL (KIND (EQV T 30)))) (IMPL (NOT (+ 7 NIL (KIND (EQV NIL 30)))) (NOT (+ 6 NIL (KIND (EQV NIL 30))))))))

(OPTIONS (TWO_RULES)
    (TWO_RULES.MAXLEVEL . 1)
    (TWO_SUPPRESS.NORULES)
    (RED.I_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.I_CLAUSE.PURITY . PARTIAL)
    (RED.I_CLAUSE.TAUTOLOGY . T)
    (RED.I_CLAUSE.TAUTOLOGY.RECHECK . PARTIAL)
    (RED.I_CLAUSE.SUBSUMPTION . T)
    (RED.I_CLAUSE.SUBSUMPTION.RECHECK . PARTIAL)
    (RED.I_CLAUSE.REPL.FACTORING . T)
    (RED.I_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.I_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.I_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.I_CLAUSE.REWRITING . DEM)
    (RED.I_LINK.INCOMPATIBILITY . T)
    (RED.I_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.I_LINK.TAUTOLOGY.RECHECK)
    (RED.I_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.I_LINK.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.D_CLAUSE.PURITY . PARTIAL)
    (RED.D_CLAUSE.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_CLAUSE.TAUTOLOGY.RECHECK)
    (RED.D_CLAUSE.SUBSUMPTION.FORWARD . REMOVE-INHIBIT)
    (RED.D_CLAUSE.SUBSUMPTION.BACKWARD . REMOVE)
    (RED.D_CLAUSE.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.REPL.FACTORING . T)
    (RED.D_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.D_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.D_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.D_CLAUSE.REWRITING . DEM)
    (RED.D_LINK.INCOMPATIBILITY . T)
    (RED.D_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_LINK.TAUTOLOGY.RECHECK)
    (RED.D_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.D_LINK.SUBSUMPTION.RECHECK)
    (FAC_INITIAL)
    (FAC_EACH.STEP)
    (STR_RESOLUTION . SET-OF-SUPPORT)
    (STR_R.SELECTION * 10 (+ 2 VARIABLES (* 2 DEPTH) (* 3 NOLIT)))
    (STR_LINK.DEPTH)
    (STR_TERM.DEPTH)
    (STR_FINITE.DOMAIN . T)
    (TERM_UNITS . T)
    (TERM_ITERATIONS . 0)
    (TERM_SET.OF.SUPPORT)
    (TERM_BREADTH.FIRST)
    (SORT_LITERALS)
    (SORT_MAX.UNIFICATION.RULE.STEPS . 100)
    (SORT_MAX.UNIFICATION.TREE.DEPTH . 100)
    (SORT_MAX.UNIFICATION.TREE.OPEN.NODES . 20)
    (SORT_UNIFIER.STOP.NUMBER . 100)
    (SORT_SHOW.VARIABLE.SORTS . T)
    (ER_PARAMODULATION . HEURISTIC-COMPLETION)
    (ER_WEIGHT.POLYNOMIALS)
    (ER_P.SELECTION * WEIGHT (IF SUPPORT 1 1.5) (IF EQUATIONAL 1 2))
    (ER_COMPLETION . UNFAILING)
    (ER_CP.REDUCTION . T)
    (ER_ORDERING . LEXICOGRAPHIC-RECURSIVE-PATH)
    (ER_OPERATOR.ORDERING * - + 0 1)
    (ER_KNUTH.BENDIX.WEIGHT (+ 1) (* 1) (- 0) (0 1) (1 1))
    (ER_POLYNOMIAL.WEIGHT (+ (X Y) (+ (* 2 Y) X)) (* (X Y) (+ (* X Y) X)) (- (X) (* X X)) (0 NIL 2) (1 NIL 2))
    (ER_NARROW.DEPTH . 0)
    (ER_NARROW.NEXT . DEPTH)
    (ER_NARROW.TEST NORM C DELTA SL N)
    (ER_COMPILE)
    (GEN_SPLITTING . 0)
    (GEN_PRESIMPLIFICATION . T)
    (GEN_MIN.EXPRESSION.LENGTH.FOR.FILE)
    (GEN_MIN.EXPRESSION.SIZE.FOR.FILE)
    (GEN_MANUAL.CONTROL)
    (GEN_MAXIMUM.STEPS)
    (GEN_GRAPH.SAVING)
    (GEN_SAVE.FILE . SAVEDEFAULT)
    (GEN_LISP.GARBAGE.COLLECTION)
    (GEN_COMMON.LISP)
    (TR_PREPROCESSING)
    (TR_STEP.MODE . LR)
    (TR_DUMP)
    (TR_CLAUSE.MODE . I)
    (TR_LINK.MODE . I)
    (TR_TRACE.FILE)
    (TR_TERMINAL . T)
    (PR_INFIX.FORM . T)
    (PR_PREFIX.FORM)
    (PR_OPTIONS)
    (PR_AXIOM.CLAUSES . T)
    (PR_SYMBOLS)
    (PR_DIRECT.PROOF . T)
    (PR_VARIABLE.PRINT.NAMES X Y Z U V W XX YY ZZ UU VV WW XXX YYY ZZZ UUU VVV WWW)
    (PR_PROTOCOL . STANDARD)
    (PR_LEFT.MARGIN . 0)
    (PR_RIGHT.MARGIN . 117)
    (PR_LATEX)
    (PR_LINELENGTH . 117)
    (PR_LITERALS)
   )

(LINK.COLOURS (R RIW RD S SI SIW SID T TI TIW P PIW PD RIWD))

(AXIOMS (START.TIME 57043129)
   (END.TIME 57043201)
   (FINAL)
   (SYMBOLS 
   (LET (NEW.ADDRESS)
   (LIST (CONS    7 (DT-PREDICATE.CREATE "Q" 'NIL))
   (CONS    6 (DT-PREDICATE.CREATE "P" 'NIL))
   (PROG1 (CONS    1 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "FALSE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (PROG1 (CONS    0 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "TRUE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED))))))
   (RESULT))

(THEOREMS (SPLITPART.IDENTIFIER 1)
   (START.TIME 57043212)
   (PARTIAL   (CLAUSE 8 T1 THEOREM ()
   ((+ 6 NIL) (- 7 NIL) )))
   (PARTIAL   (CLAUSE 9 T2 THEOREM ()
   ((+ 6 NIL) (+ 6 NIL) )))
   (OPERATION (CLAUSE 9 T2 THEOREM () ((+ 6 NIL) ))
   (DOUBLE.LITERAL 2 1 NIL 9))
   (PARTIAL   (CLAUSE 11 T3 THEOREM ()
   ((- 7 NIL) (- 7 NIL) )))
   (OPERATION (CLAUSE 11 T3 THEOREM () ((- 7 NIL) ))
   (DOUBLE.LITERAL 2 1 NIL 11))
   (PARTIAL   (CLAUSE 13 T4 THEOREM ()
   ((- 7 NIL) (+ 6 NIL) )))
   (PARTIAL   (CLAUSE 12 T5 THEOREM ()
   ((- 6 NIL) (+ 7 NIL) (+ 7 NIL) (- 6 NIL) )))
   (OPERATION (CLAUSE 12 T5 THEOREM ()
   ((+ 7 NIL) (+ 7 NIL) (- 6 NIL) ))
   (DOUBLE.LITERAL 4 1 NIL 12))
   (OPERATION (CLAUSE 12 T5 THEOREM ()
   ((+ 7 NIL) (- 6 NIL) ))
   (DOUBLE.LITERAL 2 1 NIL 12))
   (OPERATION (CLAUSE 12 T5 THEOREM ()
   ((+ 7 NIL) (- 6 NIL) ))
   (REPLACEMENT.OPERATION NIL (12 9)
  (((12 . 2) (9 . 1) NIL))
  (NIL)
  NIL))
   (OPERATION (CLAUSE 12 T5 THEOREM () ((+ 7 NIL) ))
   (REPLACEMENT.OPERATION NIL (12 11)
  (((12 . 1) (11 . 1) NIL))
  (NIL)
  NIL))
   (END.TIME 57044112)
   (FINAL 9 11 12)
   (SYMBOLS 
   (LET (NEW.ADDRESS)
   (LIST (CONS    7 (DT-PREDICATE.CREATE "Q" 'NIL))
   (CONS    6 (DT-PREDICATE.CREATE "P" 'NIL))
   (PROG1 (CONS    1 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "FALSE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (PROG1 (CONS    0 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "TRUE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED))))))
   (RESULT SUCCESS 12))
(indices ((12 1 2 3 4) (13 2 4) (11 2 3) (9 1 4) (8 1 3)))