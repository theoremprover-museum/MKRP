;;; -*- Package: MKRP; Base: 10; Mode: LISP; Syntax: Common-lisp -*-

(CONSTRUCTION  "Unix" "09-JUL,1992 17:39" 
              ("Edit:     Axioms and Theorems edited: 28-JUN,1990 19:39 "
               ))

(AXIOMS.INFIX    (NIL))

(THEOREMS.INFIX ((* THEOREMS *)
                  ((ALL X (EX Y P (Y) AND X = F (Y)) IMPL P (X)) EQV (ALL X P (X) IMPL P (F (X))))))

(AXIOMS.PREFIX   (NIL))

(THEOREMS.PREFIX (COMMENT
                  (EQV (ALL 3 (IMPL (EX 4 (AND (+ 5 (4) (KIND (EQV T 30))) (+ 2 (3 (6 4)) (KIND (EQV T 30))))) (+ 5 (3) (KIND (EQV T 30))))) (ALL 7 (IMPL (+ 5 (7) (KIND (EQV NIL 30))) (+ 5 ((6 7)) (KIND (EQV NIL 30))))))))

(OPTIONS (TWO_RULES)
          (TWO_RULES.MAXLEVEL . 1)
          (TWO_SUPPRESS.NORULES)
          (RED.I_CLAUSE.MULTIPLE.LITERALS . T)
          (RED.I_CLAUSE.PURITY . T)
          (RED.I_CLAUSE.TAUTOLOGY . T)
          (RED.I_CLAUSE.TAUTOLOGY.RECHECK . PARTIAL)
          (RED.I_CLAUSE.SUBSUMPTION . T)
          (RED.I_CLAUSE.SUBSUMPTION.RECHECK . PARTIAL)
          (RED.I_CLAUSE.REPL.FACTORING . T)
          (RED.I_CLAUSE.REPL.FACTORING.RECHECK . T)
          (RED.I_CLAUSE.REPL.RESOLUTION . SIMPLE)
          (RED.I_CLAUSE.REPL.RESOLUTION.RECHECK . T)
          (RED.I_CLAUSE.REWRITING . DEM)
          (RED.I_LINK.INCOMPATIBILITY . T)
          (RED.I_LINK.TAUTOLOGY . REMOVE-INHIBIT)
          (RED.I_LINK.TAUTOLOGY.RECHECK)
          (RED.I_LINK.SUBSUMPTION . REMOVE-INHIBIT)
          (RED.I_LINK.SUBSUMPTION.RECHECK)
          (RED.D_CLAUSE.MULTIPLE.LITERALS . T)
          (RED.D_CLAUSE.PURITY . T)
          (RED.D_CLAUSE.TAUTOLOGY . REMOVE-INHIBIT)
          (RED.D_CLAUSE.TAUTOLOGY.RECHECK)
          (RED.D_CLAUSE.SUBSUMPTION.FORWARD . REMOVE-INHIBIT)
          (RED.D_CLAUSE.SUBSUMPTION.BACKWARD . REMOVE)
          (RED.D_CLAUSE.SUBSUMPTION.RECHECK)
          (RED.D_CLAUSE.REPL.FACTORING . T)
          (RED.D_CLAUSE.REPL.FACTORING.RECHECK . T)
          (RED.D_CLAUSE.REPL.RESOLUTION . SIMPLE)
          (RED.D_CLAUSE.REPL.RESOLUTION.RECHECK . T)
          (RED.D_CLAUSE.REWRITING . DEM)
          (RED.D_LINK.INCOMPATIBILITY . T)
          (RED.D_LINK.TAUTOLOGY . REMOVE-INHIBIT)
          (RED.D_LINK.TAUTOLOGY.RECHECK)
          (RED.D_LINK.SUBSUMPTION . REMOVE-INHIBIT)
          (RED.D_LINK.SUBSUMPTION.RECHECK)
          (FAC_INITIAL)
          (FAC_EACH.STEP)
          (STR_RESOLUTION . SET-OF-SUPPORT)
          (STR_R.SELECTION * 10 (+ 2 VARIABLES (* 2 DEPTH) (* 3 NOLIT)))
          (STR_LINK.DEPTH)
          (STR_TERM.DEPTH)
          (STR_FINITE.DOMAIN)
          (TERM_UNITS . T)
          (TERM_ITERATIONS . 0)
          (TERM_SET.OF.SUPPORT)
          (TERM_BREADTH.FIRST)
          (SORT_LITERALS)
          (SORT_MAX.UNIFICATION.RULE.STEPS . 100)
          (SORT_MAX.UNIFICATION.TREE.DEPTH . 100)
          (SORT_MAX.UNIFICATION.TREE.OPEN.NODES . 20)
          (SORT_UNIFIER.STOP.NUMBER . 100)
          (SORT_SHOW.VARIABLE.SORTS . T)
          (ER_PARAMODULATION . BACHMAIR-GANZINGER)
          (ER_WEIGHT.POLYNOMIALS)
          (ER_P.SELECTION * WEIGHT (IF SUPPORT 1 1.5) (IF EQUATIONAL 1 2))
          (ER_COMPLETION . UNFAILING)
          (ER_CP.REDUCTION . T)
          (ER_ORDERING . LEXICOGRAPHIC-RECURSIVE-PATH)
          (ER_OPERATOR.ORDERING F_2 F_3 F_1 F)
          (ER_KNUTH.BENDIX.WEIGHT (+ 1) (* 1) (- 0) (0 1) (1 1))
          (ER_POLYNOMIAL.WEIGHT (+ (+ 5 (* 2 X) Y)) (* (+ X (* X Y))) (- (* 2 X)) (0 2) (1 2))
          (ER_NARROW.DEPTH . 0)
          (ER_NARROW.NEXT . DEPTH)
          (ER_NARROW.TEST NORM C DELTA SL N)
          (ER_COMPILE)
          (GEN_SPLITTING . 0)
          (GEN_PRESIMPLIFICATION . T)
          (GEN_MIN.EXPRESSION.LENGTH.FOR.FILE)
          (GEN_MIN.EXPRESSION.SIZE.FOR.FILE)
          (GEN_MANUAL.CONTROL)
          (GEN_MAXIMUM.STEPS)
          (GEN_MAXIMUM.TIME)
          (GEN_GRAPH.SAVING)
          (GEN_SAVE.FILE . SAVEDEFAULT)
          (GEN_LISP.GARBAGE.COLLECTION)
          (GEN_COMMON.LISP . T)
          (GEN_OTHER.PROVER . MKRP)
          (TR_PREPROCESSING)
          (TR_STEP.MODE . LR)
          (TR_DUMP)
          (TR_CLAUSE.MODE . I)
          (TR_LINK.MODE . I)
          (TR_TRACE.FILE)
          (TR_TERMINAL . T)
          (PR_INFIX.FORM . T)
          (PR_PREFIX.FORM)
          (PR_OPTIONS)
          (PR_AXIOM.CLAUSES . T)
          (PR_SYMBOLS)
          (PR_DIRECT.PROOF)
          (PR_VARIABLE.PRINT.NAMES X Y Z U V W XX YY ZZ UU VV WW XXX YYY ZZZ UUU VVV WWW)
          (PR_PROTOCOL . STANDARD)
          (PR_LEFT.MARGIN . 3)
          (PR_RIGHT.MARGIN . 117)
          (PR_LATEX)
          (PR_LINELENGTH . 114)
          (PR_LITERALS)
         )

(LINK.COLOURS (R RIW RD S SI SIW SID T TI TIW P PIW PD RIWD))

(AXIOMS (START.TIME 1979110000)
        (END.TIME 1979200000)
        (FINAL 10)
        (SYMBOLS 
                 (LET (NEW.ADDRESS)
          (LIST (CONS    5 (DT-PREDICATE.CREATE "P" '(ANY)))
                         (PROG1 (CONS    2 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "=" '(ANY ANY))))
                                (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED SYMMETRIC REFLEXIVE)))
                         (PROG1 (CONS    1 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "FALSE" 'NIL)))
                                (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
                         (PROG1 (CONS    0 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "TRUE" 'NIL)))
                                (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
                         (CONS    6 (DT-FUNCTION.CREATE "f" 'ANY '(ANY) 'NIL)))))
        (RESULT))

(THEOREMS (SPLITPART.IDENTIFIER 1)
          (START.TIME 1979350000)
          (PARTIAL   (CLAUSE 10 R.= AXIOM ((8 . ANY)) ((+ 2 (8 8)) ))(CLAUSE 7 T1 THEOREM ()
                           ((+ 5 (15)) (+ 5 (12)) )))
          (PARTIAL   (CLAUSE 3 T2 THEOREM ()
                           ((+ 5 (15)) (- 5 ((6 12))) )))
          (PARTIAL   (CLAUSE 17 T3 THEOREM ()
                           ((+ 2 (14 (6 15))) (+ 5 (12)) )))
          (PARTIAL   (CLAUSE 19 T4 THEOREM ()
                           ((+ 2 (14 (6 15))) (- 5 ((6 12))) )))
          (PARTIAL   (CLAUSE 22 T5 THEOREM ()
                           ((- 5 (14)) (+ 5 (12)) )))
          (PARTIAL   (CLAUSE 25 T6 THEOREM ()
                           ((- 5 (14)) (- 5 ((6 12))) )))
          (PARTIAL   (CLAUSE 32 T7 THEOREM ((11 . ANY)(13 . ANY)(16 . ANY))
                           ((- 5 (16)) (- 2 (13 (6 16))) (+ 5 (13)) (- 5 (11)) (+ 5 ((6 11))) )))
          (OPERATION (CLAUSE 32 T7 THEOREM ((11 . ANY)(13 . ANY)(16 . ANY))
                             ((- 5 (16)) (- 2 (13 (6 16))) (+ 5 (13)) (- 5 (11)) (+ 5 ((6 11))) ))
                     (REPLACEMENT.OPERATION (8 (6 11) 13 (6 11) 16 11) (32 10)
  (((32 . 2) (10 . 1) SYMMETRIC))
  ((((32 . 4) (32 . 1) NIL) ((32 . 5) (32 . 3) NIL)))
  ((11 . ANY))))
          (INITIAL   (CLAUSE 10 R.= AXIOM ((8 . ANY)) ((+ 2 (8 8)) ))
(CLAUSE 7 T1 THEOREM ()
                           ((+ 5 (15)) (+ 5 (12)) ))
(CLAUSE 3 T2 THEOREM ()
                           ((+ 5 (15)) (- 5 ((6 12))) ))
(CLAUSE 17 T3 THEOREM ()
                           ((+ 2 (14 (6 15))) (+ 5 (12)) ))
(CLAUSE 19 T4 THEOREM ()
                           ((+ 2 (14 (6 15))) (- 5 ((6 12))) ))
(CLAUSE 22 T5 THEOREM ()
                           ((- 5 (14)) (+ 5 (12)) ))
(CLAUSE 25 T6 THEOREM ()
                           ((- 5 (14)) (- 5 ((6 12))) ))
(CLAUSE 32 T7 THEOREM ((11 . ANY))
                           ((- 5 (11)) (+ 5 ((6 11))) )) )
          (END.TIME 1986190000)
          (FINAL 10 7 3 17 19 22 25 32)
          (SYMBOLS 
                   (LET (NEW.ADDRESS)
          (LIST (CONS    5 (DT-PREDICATE.CREATE "P" '(ANY)))
                           (PROG1 (CONS    2 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "=" '(ANY ANY))))
                                  (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED SYMMETRIC REFLEXIVE)))
                           (PROG1 (CONS    1 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "FALSE" 'NIL)))
                                  (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
                           (PROG1 (CONS    0 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "TRUE" 'NIL)))
                                  (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
                           (CONS   12 (DT-CONSTANT.CREATE "c_3" 'ANY))
                           (CONS   15 (DT-CONSTANT.CREATE "c_2" 'ANY))
                           (CONS   14 (DT-CONSTANT.CREATE "c_1" 'ANY))
                           (CONS    6 (DT-FUNCTION.CREATE "f" 'ANY '(ANY) 'NIL)))))
          (RESULT))
(indices ((32 1 2 3 4 5) (25 3 5) (22 3 4) (19 2 5) (17 2 4) (3 1 5) (7 1 4) (10 NIL)))

(SPLITPARTS "Unix" "09-JUL,1992 17:39" NIL)

(OPTIONS (TWO_RULES)
          (TWO_RULES.MAXLEVEL . 1)
          (TWO_SUPPRESS.NORULES)
          (RED.I_CLAUSE.MULTIPLE.LITERALS . T)
          (RED.I_CLAUSE.PURITY . T)
          (RED.I_CLAUSE.TAUTOLOGY . T)
          (RED.I_CLAUSE.TAUTOLOGY.RECHECK . PARTIAL)
          (RED.I_CLAUSE.SUBSUMPTION . T)
          (RED.I_CLAUSE.SUBSUMPTION.RECHECK . PARTIAL)
          (RED.I_CLAUSE.REPL.FACTORING . T)
          (RED.I_CLAUSE.REPL.FACTORING.RECHECK . T)
          (RED.I_CLAUSE.REPL.RESOLUTION . SIMPLE)
          (RED.I_CLAUSE.REPL.RESOLUTION.RECHECK . T)
          (RED.I_CLAUSE.REWRITING . DEM)
          (RED.I_LINK.INCOMPATIBILITY . T)
          (RED.I_LINK.TAUTOLOGY . REMOVE-INHIBIT)
          (RED.I_LINK.TAUTOLOGY.RECHECK)
          (RED.I_LINK.SUBSUMPTION . REMOVE-INHIBIT)
          (RED.I_LINK.SUBSUMPTION.RECHECK)
          (RED.D_CLAUSE.MULTIPLE.LITERALS . T)
          (RED.D_CLAUSE.PURITY . T)
          (RED.D_CLAUSE.TAUTOLOGY . REMOVE-INHIBIT)
          (RED.D_CLAUSE.TAUTOLOGY.RECHECK)
          (RED.D_CLAUSE.SUBSUMPTION.FORWARD . REMOVE-INHIBIT)
          (RED.D_CLAUSE.SUBSUMPTION.BACKWARD . REMOVE)
          (RED.D_CLAUSE.SUBSUMPTION.RECHECK)
          (RED.D_CLAUSE.REPL.FACTORING . T)
          (RED.D_CLAUSE.REPL.FACTORING.RECHECK . T)
          (RED.D_CLAUSE.REPL.RESOLUTION . SIMPLE)
          (RED.D_CLAUSE.REPL.RESOLUTION.RECHECK . T)
          (RED.D_CLAUSE.REWRITING . DEM)
          (RED.D_LINK.INCOMPATIBILITY . T)
          (RED.D_LINK.TAUTOLOGY . REMOVE-INHIBIT)
          (RED.D_LINK.TAUTOLOGY.RECHECK)
          (RED.D_LINK.SUBSUMPTION . REMOVE-INHIBIT)
          (RED.D_LINK.SUBSUMPTION.RECHECK)
          (FAC_INITIAL)
          (FAC_EACH.STEP)
          (STR_RESOLUTION . SET-OF-SUPPORT)
          (STR_R.SELECTION * 10 (+ 2 VARIABLES (* 2 DEPTH) (* 3 NOLIT)))
          (STR_LINK.DEPTH)
          (STR_TERM.DEPTH)
          (STR_FINITE.DOMAIN)
          (TERM_UNITS . T)
          (TERM_ITERATIONS . 0)
          (TERM_SET.OF.SUPPORT)
          (TERM_BREADTH.FIRST)
          (SORT_LITERALS)
          (SORT_MAX.UNIFICATION.RULE.STEPS . 100)
          (SORT_MAX.UNIFICATION.TREE.DEPTH . 100)
          (SORT_MAX.UNIFICATION.TREE.OPEN.NODES . 20)
          (SORT_UNIFIER.STOP.NUMBER . 100)
          (SORT_SHOW.VARIABLE.SORTS . T)
          (ER_PARAMODULATION . BACHMAIR-GANZINGER)
          (ER_WEIGHT.POLYNOMIALS)
          (ER_P.SELECTION * WEIGHT (IF SUPPORT 1 1.5) (IF EQUATIONAL 1 2))
          (ER_COMPLETION . UNFAILING)
          (ER_CP.REDUCTION . T)
          (ER_ORDERING . LEXICOGRAPHIC-RECURSIVE-PATH)
          (ER_OPERATOR.ORDERING F_2 F_3 F_1 F)
          (ER_KNUTH.BENDIX.WEIGHT (+ 1) (* 1) (- 0) (0 1) (1 1))
          (ER_POLYNOMIAL.WEIGHT (+ (+ 5 (* 2 X) Y)) (* (+ X (* X Y))) (- (* 2 X)) (0 2) (1 2))
          (ER_NARROW.DEPTH . 0)
          (ER_NARROW.NEXT . DEPTH)
          (ER_NARROW.TEST NORM C DELTA SL N)
          (ER_COMPILE)
          (GEN_SPLITTING . 0)
          (GEN_PRESIMPLIFICATION . T)
          (GEN_MIN.EXPRESSION.LENGTH.FOR.FILE)
          (GEN_MIN.EXPRESSION.SIZE.FOR.FILE)
          (GEN_MANUAL.CONTROL)
          (GEN_MAXIMUM.STEPS)
          (GEN_MAXIMUM.TIME)
          (GEN_GRAPH.SAVING)
          (GEN_SAVE.FILE . SAVEDEFAULT)
          (GEN_LISP.GARBAGE.COLLECTION)
          (GEN_COMMON.LISP . T)
          (GEN_OTHER.PROVER . MKRP)
          (TR_PREPROCESSING)
          (TR_STEP.MODE . LR)
          (TR_DUMP)
          (TR_CLAUSE.MODE . I)
          (TR_LINK.MODE . I)
          (TR_TRACE.FILE)
          (TR_TERMINAL . T)
          (PR_INFIX.FORM . T)
          (PR_PREFIX.FORM)
          (PR_OPTIONS)
          (PR_AXIOM.CLAUSES . T)
          (PR_SYMBOLS)
          (PR_DIRECT.PROOF)
          (PR_VARIABLE.PRINT.NAMES X Y Z U V W XX YY ZZ UU VV WW XXX YYY ZZZ UUU VVV WWW)
          (PR_PROTOCOL . STANDARD)
          (PR_LEFT.MARGIN . 3)
          (PR_RIGHT.MARGIN . 117)
          (PR_LATEX)
          (PR_LINELENGTH . 114)
          (PR_LITERALS)
         )

(REFUTATION (START.TIME 1986720000)

(OPTIONS (TWO_RULES)
          (TWO_RULES.MAXLEVEL . 1)
          (TWO_SUPPRESS.NORULES)
          (RED.I_CLAUSE.MULTIPLE.LITERALS . T)
          (RED.I_CLAUSE.PURITY . T)
          (RED.I_CLAUSE.TAUTOLOGY . T)
          (RED.I_CLAUSE.TAUTOLOGY.RECHECK . PARTIAL)
          (RED.I_CLAUSE.SUBSUMPTION . T)
          (RED.I_CLAUSE.SUBSUMPTION.RECHECK . PARTIAL)
          (RED.I_CLAUSE.REPL.FACTORING . T)
          (RED.I_CLAUSE.REPL.FACTORING.RECHECK . T)
          (RED.I_CLAUSE.REPL.RESOLUTION . SIMPLE)
          (RED.I_CLAUSE.REPL.RESOLUTION.RECHECK . T)
          (RED.I_CLAUSE.REWRITING . DEM)
          (RED.I_LINK.INCOMPATIBILITY . T)
          (RED.I_LINK.TAUTOLOGY . REMOVE-INHIBIT)
          (RED.I_LINK.TAUTOLOGY.RECHECK)
          (RED.I_LINK.SUBSUMPTION . REMOVE-INHIBIT)
          (RED.I_LINK.SUBSUMPTION.RECHECK)
          (RED.D_CLAUSE.MULTIPLE.LITERALS . T)
          (RED.D_CLAUSE.PURITY . T)
          (RED.D_CLAUSE.TAUTOLOGY . REMOVE-INHIBIT)
          (RED.D_CLAUSE.TAUTOLOGY.RECHECK)
          (RED.D_CLAUSE.SUBSUMPTION.FORWARD . REMOVE-INHIBIT)
          (RED.D_CLAUSE.SUBSUMPTION.BACKWARD . REMOVE)
          (RED.D_CLAUSE.SUBSUMPTION.RECHECK)
          (RED.D_CLAUSE.REPL.FACTORING . T)
          (RED.D_CLAUSE.REPL.FACTORING.RECHECK . T)
          (RED.D_CLAUSE.REPL.RESOLUTION . SIMPLE)
          (RED.D_CLAUSE.REPL.RESOLUTION.RECHECK . T)
          (RED.D_CLAUSE.REWRITING . DEM)
          (RED.D_LINK.INCOMPATIBILITY . T)
          (RED.D_LINK.TAUTOLOGY . REMOVE-INHIBIT)
          (RED.D_LINK.TAUTOLOGY.RECHECK)
          (RED.D_LINK.SUBSUMPTION . REMOVE-INHIBIT)
          (RED.D_LINK.SUBSUMPTION.RECHECK)
          (FAC_INITIAL)
          (FAC_EACH.STEP)
          (STR_RESOLUTION . SET-OF-SUPPORT)
          (STR_R.SELECTION * 10 (+ 2 VARIABLES (* 2 DEPTH) (* 3 NOLIT)))
          (STR_LINK.DEPTH)
          (STR_TERM.DEPTH)
          (STR_FINITE.DOMAIN)
          (TERM_UNITS . T)
          (TERM_ITERATIONS . 0)
          (TERM_SET.OF.SUPPORT)
          (TERM_BREADTH.FIRST)
          (SORT_LITERALS)
          (SORT_MAX.UNIFICATION.RULE.STEPS . 100)
          (SORT_MAX.UNIFICATION.TREE.DEPTH . 100)
          (SORT_MAX.UNIFICATION.TREE.OPEN.NODES . 20)
          (SORT_UNIFIER.STOP.NUMBER . 100)
          (SORT_SHOW.VARIABLE.SORTS . T)
          (ER_PARAMODULATION . BACHMAIR-GANZINGER)
          (ER_WEIGHT.POLYNOMIALS)
          (ER_P.SELECTION * WEIGHT (IF SUPPORT 1 1.5) (IF EQUATIONAL 1 2))
          (ER_COMPLETION . UNFAILING)
          (ER_CP.REDUCTION . T)
          (ER_ORDERING . LEXICOGRAPHIC-RECURSIVE-PATH)
          (ER_OPERATOR.ORDERING F_2 F_3 F_1 F)
          (ER_KNUTH.BENDIX.WEIGHT (+ 1) (* 1) (- 0) (0 1) (1 1))
          (ER_POLYNOMIAL.WEIGHT (+ (+ 5 (* 2 X) Y)) (* (+ X (* X Y))) (- (* 2 X)) (0 2) (1 2))
          (ER_NARROW.DEPTH . 0)
          (ER_NARROW.NEXT . DEPTH)
          (ER_NARROW.TEST NORM C DELTA SL N)
          (ER_COMPILE)
          (GEN_SPLITTING . 0)
          (GEN_PRESIMPLIFICATION . T)
          (GEN_MIN.EXPRESSION.LENGTH.FOR.FILE)
          (GEN_MIN.EXPRESSION.SIZE.FOR.FILE)
          (GEN_MANUAL.CONTROL)
          (GEN_MAXIMUM.STEPS)
          (GEN_MAXIMUM.TIME)
          (GEN_GRAPH.SAVING)
          (GEN_SAVE.FILE . SAVEDEFAULT)
          (GEN_LISP.GARBAGE.COLLECTION)
          (GEN_COMMON.LISP . T)
          (GEN_OTHER.PROVER . MKRP)
          (TR_PREPROCESSING)
          (TR_STEP.MODE . LR)
          (TR_DUMP)
          (TR_CLAUSE.MODE . I)
          (TR_LINK.MODE . I)
          (TR_TRACE.FILE)
          (TR_TERMINAL . T)
          (PR_INFIX.FORM . T)
          (PR_PREFIX.FORM)
          (PR_OPTIONS)
          (PR_AXIOM.CLAUSES . T)
          (PR_SYMBOLS)
          (PR_DIRECT.PROOF)
          (PR_VARIABLE.PRINT.NAMES X Y Z U V W XX YY ZZ UU VV WW XXX YYY ZZZ UUU VVV WWW)
          (PR_PROTOCOL . STANDARD)
          (PR_LEFT.MARGIN . 3)
          (PR_RIGHT.MARGIN . 117)
          (PR_LATEX)
          (PR_LINELENGTH . 114)
          (PR_LITERALS)
         )
            (INITIAL   (CLAUSE 10 R.= AXIOM ((8 . ANY)) ((+ 2 (8 8)) ))
(CLAUSE 7 T1 THEOREM ()
                             ((+ 5 (15)) (+ 5 (12)) ))
(CLAUSE 3 T2 THEOREM ()
                             ((+ 5 (15)) (- 5 ((6 12))) ))
(CLAUSE 17 T3 THEOREM ()
                             ((+ 2 (14 (6 15))) (+ 5 (12)) ))
(CLAUSE 19 T4 THEOREM ()
                             ((+ 2 (14 (6 15))) (- 5 ((6 12))) ))
(CLAUSE 22 T5 THEOREM ()
                             ((- 5 (14)) (+ 5 (12)) ))
(CLAUSE 25 T6 THEOREM ()
                             ((- 5 (14)) (- 5 ((6 12))) ))
(CLAUSE 32 T7 THEOREM ((11 . ANY))
                             ((- 5 (11)) (+ 5 ((6 11))) )) )
            (OPERATION (CLAUSE 48 R1 (25 32) ()
                               ((- 5 (12)) (- 5 (14)) ))
                       (RESOLUTION 32 2 25 2 NIL (11 12) 48))
            (OPERATION (CLAUSE 48 R1 (25 32) ()
                               ((- 5 (12)) (- 5 (14)) ))
                       (REPLACEMENT.OPERATION NIL (48 22)
  (((48 . 1) (22 . 2) NIL))
  ((((48 . 2) (22 . 1) NIL)))
  NIL))
            (OPERATION (CLAUSE 54 R2 (3 32) ()
                               ((- 5 (12)) (+ 5 (15)) ))
                       (RESOLUTION 32 2 3 2 NIL (11 12) 54))
            (OPERATION (CLAUSE 54 R2 (3 32) ()
                               ((- 5 (12)) (+ 5 (15)) ))
                       (REPLACEMENT.OPERATION NIL (54 7)
  (((54 . 1) (7 . 2) NIL))
  ((((54 . 2) (7 . 1) NIL)))
  NIL))
            (OPERATION (CLAUSE 73 R3 (19 32) ()
                               ((- 5 (12)) (+ 2 (14 (6 15))) ))
                       (RESOLUTION 32 2 19 2 NIL (11 12) 73))
            (OPERATION (CLAUSE 73 R3 (19 32) ()
                               ((- 5 (12)) (+ 2 (14 (6 15))) ))
                       (REPLACEMENT.OPERATION NIL (73 17)
  (((73 . 1) (17 . 2) NIL))
  ((((73 . 2) (17 . 1) SYMMETRIC)))
  NIL))
            (OPERATION (CLAUSE 33 P1 (32 73) ()
                               ((+ 5 (14)) (- 5 (15)) ))
                       (PARAMODULATION 73 1 (2) 32 2 (1) NIL (11 15) 33))
            (OPERATION (CLAUSE 33 P1 (32 73) ()
                               ((+ 5 (14)) (- 5 (15)) ))
                       (REPLACEMENT.OPERATION NIL (33 54)
  (((33 . 2) (54 . 1) NIL))
  (NIL)
  NIL))
            (OPERATION (CLAUSE 33 P1 (32 73) () ((+ 5 (14)) ))
                       (REPLACEMENT.OPERATION NIL (33 48)
  (((33 . 1) (48 . 1) NIL))
  (NIL)
  NIL))
            (END.TIME 1990810000)
            (SYMBOLS 
                     (LET (NEW.ADDRESS)
          (LIST (CONS    5 (DT-PREDICATE.CREATE "P" '(ANY)))
                             (PROG1 (CONS    2 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "=" '(ANY ANY))))
                                    (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED SYMMETRIC REFLEXIVE)))
                             (PROG1 (CONS    1 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "FALSE" 'NIL)))
                                    (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
                             (PROG1 (CONS    0 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "TRUE" 'NIL)))
                                    (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
                             (CONS   12 (DT-CONSTANT.CREATE "c_3" 'ANY))
                             (CONS   15 (DT-CONSTANT.CREATE "c_2" 'ANY))
                             (CONS   14 (DT-CONSTANT.CREATE "c_1" 'ANY))
                             (CONS    6 (DT-FUNCTION.CREATE "f" 'ANY '(ANY) 'NIL)))))
            (SPLITPART.IDENTIFIER 1)
            (RESULT SUCCESS 33)
)