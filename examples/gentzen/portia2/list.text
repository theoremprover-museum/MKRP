;;; -*- Package: MKRP; Base: 10; Mode: TEXT; Syntax: Common-lisp -*-



                     ****************************************************************************
                     *                                                                          *
                     *     ATP-SYSTEM: MARKGRAF KARL REFUTATION PROCEDURE, UNI KAISERSLAUTERN   *
                     *                                                                          *
                     *        VERSION: MKRP 48.5                                                *
                     *           DATE: 23-JUL,1991  09:25                                       *
                     *                                                                          *
                     ****************************************************************************

   
   ------------------------------------------------------------------------------------------------------------------

   Edit:     Axioms and Theorems edited: 16-JUL,1991 10:50 
   
   ------------------------------------------------------------------------------------------------------------------






             Formulae given to the editor
             ============================

   
   Axioms:   * PORTIA AND HER HUSBAND DID,AS A MATTER OF FACT, LIVE HAPPILY
             * EVER AFTER. THEY HAD A DAUGHTER PORTIA II - HENCEFORTH TO BE
             * CALLED PORTIA. WHEN THE YOUNG PORTIA GREW TO YOUNG WOMANHOOD
             * SHE WAS BOTH CLEVER AND BEAUTIFUL, JUST LIKE HER MOMMY. SHE
             * ALSO DECIDED TO SELECT HER HUSBAND BY THE CASKET METHOD. THE
             * SUITOR HAD TO PASS TWO TESTS IN ORDER TO WIN HER.
             *
             * 68A. THE FIRST TEST.
             *
             * IN THIS TEST EACH LID CONTAINED TWO STATEMENTS, AND PORTIA EX-
             * PLAINED THAT NO LID CONTAINED MORE THAN ONE FALSE STATEMENT.
             *
             * GOLD : (1) THE PORTRAIT IS NOT IN HERE.
             * (2) THE ARTIST OF THE PORTRAIT IS FROM VENICE
             * SILVER : (1) THE PORTRAIT IS NOT IN THE GOLD CASKET
             * (2) THE ARTIST OF THE PORTRAIT IS REALLY FROM FLORENCE
             * LEAD : (1) THE PORTRAIT IS NOT IN HERE
             * (2) THE PORTRAIT IS REALLY IN THE SILVER CASKET
             *
             * WHICH CASKET CONTAINS THE PORTRAIT?
             *
             * WE DEFINE THE FOLLOWING PREDICATES :
             * THE PREDICATES PORTRAIT,TRUTH,INSRIPTION,NEGATIVE.INSCRIPTION
             * MEAN THE SAME AS IN 66 AND 67
             TYPE PORTRAIT (CASKET)
             TYPE TRUTH (INSCRIPT)
             TYPE INSCRIPTION (INSCRIPT CASKET)
             TYPE NEGATIVE.INSCRIPTION (INSCRIPT CASKET)
             * V---THE ARTIST OF THE PORTRAIT IS FROM VENICE
             * F---THE ARTIST OF THE PORTRAIT IS FROM FLORENCE
             * INSCRIPTION.VENICE (X) --- THE INSCRIPTION X TELLS THAT THE ARTIST OF THE PORTRAIT
             * IS FROM VENICE.
             * INSCRIPTION.FLORENCE (X) --- THE INSCRIPTION X TELLS THAT THE ARTIST OF THE PORTRAIT
             * IS FROM FLORENCE
             TYPE INSCRIPTION.VENICE (INSCRIPT)
             TYPE INSCRIPTION.FLORENCE (INSCRIPT)
             *
             * WE DEFINE THE FOLLOWING FUNCTIONS :
             * FIRST (X) ---ASSIGNS EACH CASKET AN INSCRIPTION
             * SECOND (X) ---ASSIGNS EACH CASKET AN INSCRIPTION
             TYPE GOLD,SILVER,LEAD : CASKET
             TYPE FIRST (CASKET) : INSCRIPT
             TYPE SECOND (CASKET) : INSCRIPT
             *
             * THEN THE FOLLOWING PROPOSITIONS HOLD.
             *
             * THERE IS EXACTLY ONE PORTRAIT :
             PORTRAIT (GOLD) OR PORTRAIT (SILVER) OR PORTRAIT (LEAD)
             NOT (PORTRAIT (GOLD) AND PORTRAIT (SILVER)
                  OR PORTRAIT (GOLD) AND PORTRAIT (LEAD)
                  OR PORTRAIT (SILVER) AND PORTRAIT (LEAD))
             *
             * NO MORE THAN ONE INSCRIPTION IS FALSE ON ANY CASKET :
             ALL X : CASKET TRUTH (FIRST (X)) OR TRUTH (SECOND (X))
             *
             * THE ARTIST OF THE PORTRAIT IS EITHER FROM VENICE OR FROM FLORENCE
             NOT (VENICE AND FLORENCE)
             *
             * IMPLICATIONS TO BE DRAWN FROM INSCRIPTION :
             ALL X : INSCRIPT ALL Y : CASKET INSCRIPTION (X Y) AND TRUTH (X) IMPL PORTRAIT (Y)
             ALL X : INSCRIPT ALL Y : CASKET INSCRIPTION (X Y) AND NOT TRUTH (X) IMPL NOT PORTRAIT (Y)
             ALL X : INSCRIPT ALL Y : CASKET NEGATIVE.INSCRIPTION (X Y) AND TRUTH (X) IMPL NOT PORTRAIT (Y)
             ALL X : INSCRIPT ALL Y : CASKET NEGATIVE.INSCRIPTION (X Y) AND NOT TRUTH (X) IMPL PORTRAIT (Y)
             ALL X : INSCRIPT INSCRIPTION.VENICE (X) AND TRUTH (X) IMPL VENICE
             ALL X : INSCRIPT INSCRIPTION.VENICE (X) AND NOT TRUTH (X) IMPL NOT VENICE
             ALL X : INSCRIPT INSCRIPTION.FLORENCE (X) AND TRUTH (X) IMPL FLORENCE
             ALL X : INSCRIPT INSCRIPTION.FLORENCE (X) AND NOT TRUTH (X) IMPL NOT FLORENCE
             NEGATIVE.INSCRIPTION (FIRST (GOLD) GOLD) AND INSCRIPTION.VENICE (SECOND (GOLD))
             NEGATIVE.INSCRIPTION (FIRST (SILVER) GOLD) AND INSCRIPTION.FLORENCE (SECOND (SILVER))
             NEGATIVE.INSCRIPTION (FIRST (LEAD) LEAD) AND INSCRIPTION (SECOND (LEAD) SILVER)
             
   Theorems: PORTRAIT (SILVER)
             
   


             Set of Axiom Clauses Resulting from Normalization
             =================================================

             A1:   All x:Any + =(x x)
           * A2:   + NEGATIVE.INSCRIPTION(first(gold) gold)
           * A3:   + INSCRIPTION.VENICE(second(gold))
           * A4:   + NEGATIVE.INSCRIPTION(first(silver) gold)
           * A5:   + INSCRIPTION.FLORENCE(second(silver))
           * A6:   + NEGATIVE.INSCRIPTION(first(lead) lead)
           * A7:   + INSCRIPTION(second(lead) silver)
             A8:   - PORTRAIT(gold)  - PORTRAIT(silver)
             A9:   - PORTRAIT(gold)  - PORTRAIT(lead)
             A10:  - PORTRAIT(silver)  - PORTRAIT(lead)
           * A11:  All x:Casket + TRUTH(first(x))  + TRUTH(second(x))
           * A12:  - VENICE  - FLORENCE
           * A13:  + PORTRAIT(gold)  + PORTRAIT(silver)  + PORTRAIT(lead)
           * A14:  All x:Casket y:Inscript - INSCRIPTION(y x)  - TRUTH(y)  + PORTRAIT(x)
             A15:  All x:Casket y:Inscript - INSCRIPTION(y x)  + TRUTH(y)  - PORTRAIT(x)
           * A16:  All x:Casket y:Inscript - NEGATIVE.INSCRIPTION(y x)  - TRUTH(y)  - PORTRAIT(x)
             A17:  All x:Casket y:Inscript - NEGATIVE.INSCRIPTION(y x)  + TRUTH(y)  + PORTRAIT(x)
           * A18:  All x:Inscript - INSCRIPTION.VENICE(x)  - TRUTH(x)  + VENICE
             A19:  All x:Inscript - INSCRIPTION.VENICE(x)  + TRUTH(x)  - VENICE
           * A20:  All x:Inscript - INSCRIPTION.FLORENCE(x)  - TRUTH(x)  + FLORENCE
             A21:  All x:Inscript - INSCRIPTION.FLORENCE(x)  + TRUTH(x)  - FLORENCE
           




             Set of Theorem Clauses Resulting from Normalization
             ===================================================

           * T22: - PORTRAIT(silver)





    Literals: ((T22 44) (A21 35 36 37) (A20 32 33 34) (A19 29 30 31) (A18 26 27 28) (A17 23 24 25) (A16 20 21 22) (A15 17 18 19) (A14 14 15 16) (A13 1 2 3) (A12 12 13) (A11 10 11) (A10 8 9) (A9 6 7) (A8 4 5) (A7 43) (A6 42) (A5 41) (A4 40) (A3 39) (A2 38) (A1 NIL))




   ------------------------------------------------------------------------------------------------------------------



   Refutation:
   ===========
   
   Initial Clauses:     A1:   All x:Any + =(x x)
                      * A2:   + NEGATIVE.INSCRIPTION(first(gold) gold)
                      * A3:   + INSCRIPTION.VENICE(second(gold))
                      * A4:   + NEGATIVE.INSCRIPTION(first(silver) gold)
                      * A5:   + INSCRIPTION.FLORENCE(second(silver))
                      * A6:   + NEGATIVE.INSCRIPTION(first(lead) lead)
                      * A7:   + INSCRIPTION(second(lead) silver)
                        A9:   - PORTRAIT(gold)  - PORTRAIT(lead)
                      * A11:  All x:Casket + TRUTH(first(x))  + TRUTH(second(x))
                      * A12:  - VENICE  - FLORENCE
                      * A13:   + PORTRAIT(gold)  + PORTRAIT(silver) + PORTRAIT(lead)
                      * A14:  All x:Casket y:Inscript - INSCRIPTION(y x)  - TRUTH(y)  + PORTRAIT(x)
                      * A16:  All x:Casket y:Inscript - NEGATIVE.INSCRIPTION(y x)  - TRUTH(y)  - PORTRAIT(x)
                        A17:  All x:Casket y:Inscript - NEGATIVE.INSCRIPTION(y x)  + TRUTH(y)  + PORTRAIT(x)
                      * A18:  All x:Inscript - INSCRIPTION.VENICE(x)  - TRUTH(x)  + VENICE
                        A19:  All x:Inscript - INSCRIPTION.VENICE(x)  + TRUTH(x)  - VENICE
                      * A20:  All x:Inscript - INSCRIPTION.FLORENCE(x)  - TRUTH(x)  + FLORENCE
                        A21:  All x:Inscript - INSCRIPTION.FLORENCE(x)  + TRUTH(x)  - FLORENCE
                      * T22:  - PORTRAIT(silver)
                      


   A13,2 & T22,1  --> * R1: + PORTRAIT(gold)  + PORTRAIT(lead)   
   
   A5,1 & A20,1   --> * R3:   - TRUTH(second(silver))  + FLORENCE
   
   A3,1 & A18,1   --> * R5:   - TRUTH(second(gold))  + VENICE
   
   R5,2 & A12,1   --> * R6:   - TRUTH(second(gold))  - FLORENCE
   
   A7,1 & A14,1   --> * R7:   - TRUTH(second(lead))  + PORTRAIT(silver)
   
   R7,2 & T22,1   --> * R8:   - TRUTH(second(lead))
   
   R1,1 & A16,3   --> * R10:  All x:Inscript + PORTRAIT(lead)  - NEGATIVE.INSCRIPTION(x gold)  - TRUTH(x)
   
   A2,1 & R10,2   --> * R11:  + PORTRAIT(lead)  - TRUTH(first(gold))
   
   A4,1 & R10,2   --> * R12:  + PORTRAIT(lead)  - TRUTH(first(silver))
   
   A11,1 & R11,2  --> * R13:  + TRUTH(second(gold))  + PORTRAIT(lead)
   
   A11,1 & R12,2  --> * R14:  + TRUTH(second(silver))  + PORTRAIT(lead)
   
   R13,1 & R6,1   --> * R15:  + PORTRAIT(lead)  - FLORENCE
   
   R14,1 & R3,1   --> * R16:  + PORTRAIT(lead)  + FLORENCE
   
   R16,2 & R15,2  --> * R17:  + PORTRAIT(lead)  + PORTRAIT(lead)
   
   R17 1=2        --> * D18:  + PORTRAIT(lead)
   
   D18,1 & A16,3  --> * R26:  All x:Inscript - NEGATIVE.INSCRIPTION(x lead)  - TRUTH(x)
   
   R26,2 & A11,1  --> * R27:  - NEGATIVE.INSCRIPTION(first(lead) lead)  + TRUTH(second(lead))
   
   R27,1 & A6,1   --> * R28:  + TRUTH(second(lead))
   
   R28,1 & R8,1   --> * R29:  []
   

   
   ------------------------------------------------------------------------------------------------------------------



     q.e.d. 


   Time Used for Refutation: 63 seconds
