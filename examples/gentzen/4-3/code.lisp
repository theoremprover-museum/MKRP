;;; -*- Package: MKRP; Base: 10; Mode: LISP; Syntax: Common-lisp -*-

(CONSTRUCTION  "Unix" "14-MAY,1992 11:10" 
              ("Edit:     Axioms and Theorems edited: 14-MAY,1992 11:10 "
               ))

(AXIOMS.INFIX    ((* SORTS *)
                  (SORT |I,ITO,IXITO| |:| ANY)
                  (TYPE A[IXITO] (IXITO I I))
                  (TYPE A[ITO] (ITO I))
                  (* DEFINITION OF COMPOSITION *)
                  (TYPE COMP (IXITO IXITO) |:| IXITO)
                  (ALL RHO |:| IXITO ALL SIGMA |:| IXITO (ALL X |:| I ALL Y |:| I (EX Z |:| I A[IXITO] (RHO X Z) AND A[IXITO] (SIGMA Z Y)) EQV A[IXITO] (COMP (RHO SIGMA) X Y)))))

(THEOREMS.INFIX ((* THEOREM *)
                  (ALL RHO |:| IXITO ALL SIGMA |:| IXITO ALL TAU |:| IXITO ALL X |:| I ALL Y |:| I A[IXITO] (COMP (COMP (RHO SIGMA) TAU) X Y) EQV A[IXITO] (COMP (RHO COMP (SIGMA TAU)) X Y))))

(AXIOMS.PREFIX   (COMMENT
                  (+ 0 NIL NIL)
                  (+ 0 NIL NIL)
                  (+ 0 NIL NIL)
                  COMMENT
                  (+ 0 NIL NIL)
                  (ALL 6 (ALL 7 (ALL 8 (ALL 9 (EQV (EX 10 (AND (+ 3 (6 8 10) (KIND (EQV T 80))) (+ 3 (7 10 9) (KIND (EQV T 80))))) (+ 3 ((5 6 7) 8 9) (KIND (EQV NIL 80))))))))))

(THEOREMS.PREFIX (COMMENT
                  (ALL 11 (ALL 12 (ALL 13 (ALL 14 (ALL 15 (EQV (+ 3 ((5 (5 11 12) 13) 14 15) (KIND (EQV T 30))) (+ 3 ((5 11 (5 12 13)) 14 15) (KIND (EQV NIL 30)))))))))))

(OPTIONS (TWO_RULES)
          (TWO_RULES.MAXLEVEL . 1)
          (TWO_SUPPRESS.NORULES)
          (RED.I_CLAUSE.MULTIPLE.LITERALS . T)
          (RED.I_CLAUSE.PURITY . PARTIAL)
          (RED.I_CLAUSE.TAUTOLOGY . T)
          (RED.I_CLAUSE.TAUTOLOGY.RECHECK . PARTIAL)
          (RED.I_CLAUSE.SUBSUMPTION . T)
          (RED.I_CLAUSE.SUBSUMPTION.RECHECK . PARTIAL)
          (RED.I_CLAUSE.REPL.FACTORING . T)
          (RED.I_CLAUSE.REPL.FACTORING.RECHECK . T)
          (RED.I_CLAUSE.REPL.RESOLUTION . SIMPLE)
          (RED.I_CLAUSE.REPL.RESOLUTION.RECHECK . T)
          (RED.I_CLAUSE.REWRITING . DEM)
          (RED.I_LINK.INCOMPATIBILITY . T)
          (RED.I_LINK.TAUTOLOGY . REMOVE-INHIBIT)
          (RED.I_LINK.TAUTOLOGY.RECHECK)
          (RED.I_LINK.SUBSUMPTION . REMOVE-INHIBIT)
          (RED.I_LINK.SUBSUMPTION.RECHECK)
          (RED.D_CLAUSE.MULTIPLE.LITERALS . T)
          (RED.D_CLAUSE.PURITY . PARTIAL)
          (RED.D_CLAUSE.TAUTOLOGY . REMOVE-INHIBIT)
          (RED.D_CLAUSE.TAUTOLOGY.RECHECK)
          (RED.D_CLAUSE.SUBSUMPTION.FORWARD . REMOVE-INHIBIT)
          (RED.D_CLAUSE.SUBSUMPTION.BACKWARD . REMOVE)
          (RED.D_CLAUSE.SUBSUMPTION.RECHECK)
          (RED.D_CLAUSE.REPL.FACTORING . T)
          (RED.D_CLAUSE.REPL.FACTORING.RECHECK . T)
          (RED.D_CLAUSE.REPL.RESOLUTION . SIMPLE)
          (RED.D_CLAUSE.REPL.RESOLUTION.RECHECK . T)
          (RED.D_CLAUSE.REWRITING . DEM)
          (RED.D_LINK.INCOMPATIBILITY . T)
          (RED.D_LINK.TAUTOLOGY . REMOVE-INHIBIT)
          (RED.D_LINK.TAUTOLOGY.RECHECK)
          (RED.D_LINK.SUBSUMPTION . REMOVE-INHIBIT)
          (RED.D_LINK.SUBSUMPTION.RECHECK)
          (FAC_INITIAL)
          (FAC_EACH.STEP)
          (STR_RESOLUTION . SET-OF-SUPPORT)
          (STR_R.SELECTION * 10 (+ 2 VARIABLES (* 2 DEPTH) (* 3 NOLIT)))
          (STR_LINK.DEPTH)
          (STR_TERM.DEPTH)
          (STR_FINITE.DOMAIN . T)
          (TERM_UNITS . T)
          (TERM_ITERATIONS . 0)
          (TERM_SET.OF.SUPPORT)
          (TERM_BREADTH.FIRST)
          (SORT_LITERALS)
          (SORT_MAX.UNIFICATION.RULE.STEPS . 100)
          (SORT_MAX.UNIFICATION.TREE.DEPTH . 100)
          (SORT_MAX.UNIFICATION.TREE.OPEN.NODES . 20)
          (SORT_UNIFIER.STOP.NUMBER . 100)
          (SORT_SHOW.VARIABLE.SORTS . T)
          (ER_PARAMODULATION . HEURISTIC-COMPLETION)
          (ER_WEIGHT.POLYNOMIALS)
          (ER_P.SELECTION * WEIGHT (IF SUPPORT 1 1.5) (IF EQUATIONAL 1 2))
          (ER_COMPLETION . UNFAILING)
          (ER_CP.REDUCTION . T)
          (ER_ORDERING . LEXICOGRAPHIC-RECURSIVE-PATH)
          (ER_OPERATOR.ORDERING * - + 0 1)
          (ER_KNUTH.BENDIX.WEIGHT (+ 1) (* 1) (- 0) (0 1) (1 1))
          (ER_POLYNOMIAL.WEIGHT (+ (X Y) (+ (* 2 Y) X)) (* (X Y) (+ (* X Y) X)) (- (X) (* X X)) (0 NIL 2) (1 NIL 2))
          (ER_NARROW.DEPTH . 0)
          (ER_NARROW.NEXT . DEPTH)
          (ER_NARROW.TEST NORM C DELTA SL N)
          (ER_COMPILE)
          (GEN_SPLITTING . T)
          (GEN_PRESIMPLIFICATION . T)
          (GEN_MIN.EXPRESSION.LENGTH.FOR.FILE)
          (GEN_MIN.EXPRESSION.SIZE.FOR.FILE)
          (GEN_MANUAL.CONTROL)
          (GEN_MAXIMUM.STEPS)
          (GEN_GRAPH.SAVING)
          (GEN_SAVE.FILE . SAVEDEFAULT)
          (GEN_LISP.GARBAGE.COLLECTION)
          (GEN_COMMON.LISP . T)
          (TR_PREPROCESSING)
          (TR_STEP.MODE . LR)
          (TR_DUMP)
          (TR_CLAUSE.MODE . I)
          (TR_LINK.MODE . I)
          (TR_TRACE.FILE)
          (TR_TERMINAL . T)
          (PR_INFIX.FORM . T)
          (PR_PREFIX.FORM)
          (PR_OPTIONS)
          (PR_AXIOM.CLAUSES . T)
          (PR_SYMBOLS)
          (PR_DIRECT.PROOF . T)
          (PR_VARIABLE.PRINT.NAMES X Y Z U V W XX YY ZZ UU VV WW XXX YYY ZZZ UUU VVV WWW)
          (PR_PROTOCOL . STANDARD)
          (PR_LEFT.MARGIN . 0)
          (PR_RIGHT.MARGIN . 117)
          (PR_LATEX)
          (PR_LINELENGTH . 117)
          (PR_LITERALS . T)
         )

(LINK.COLOURS (R RIW RD S SI SIW SID T TI TIW P PIW PD RIWD))

(AXIOMS (START.TIME 8530000)
        (PARTIAL   (CLAUSE 27 R.= AXIOM ((19 . ANY)) ((+ 2 (19 19)) ))(CLAUSE 32 A1 AXIOM ((7 . IXITO)(9 . I)(8 . I)(6 . IXITO))
                         ((+ 3 (6 8 (21 6 9 8 7))) (- 3 ((5 6 7) 8 9)) )))
        (PARTIAL   (CLAUSE 38 A2 AXIOM ((24 . I)(23 . I)(22 . IXITO)(25 . IXITO))
                         ((+ 3 (25 (21 22 23 24 25) 23)) (- 3 ((5 22 25) 24 23)) )))
        (PARTIAL   (CLAUSE 48 A3 AXIOM ((20 . I)(18 . IXITO)(16 . I)(17 . I)(10 . IXITO))
                         ((- 3 (10 17 16)) (- 3 (18 16 20)) (+ 3 ((5 10 18) 17 20)) )))
        (END.TIME 10770000)
        (FINAL 27 32 38 48)
        (SYMBOLS 
                 (LET (NEW.ADDRESS)
          (LIST (CONS    4 (DT-PREDICATE.CREATE "A[ITO]" '(ITO I)))
                         (CONS    3 (DT-PREDICATE.CREATE "A[IXITO]" '(IXITO I I)))
                         (PROG1 (CONS    2 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "=" '(ANY ANY))))
                                (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED SYMMETRIC REFLEXIVE SYMMETRIC REFLEXIVE)))
                         (PROG1 (CONS    1 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "FALSE" 'NIL)))
                                (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
                         (PROG1 (CONS    0 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "TRUE" 'NIL)))
                                (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
                         (CONS   21 (DT-FUNCTION.CREATE "f_1" 'I '(IXITO I I IXITO) 'NIL))
                         (CONS    5 (DT-FUNCTION.CREATE "comp" 'IXITO '(IXITO IXITO) 'NIL)))))
        (RESULT))

(THEOREMS (SPLITPART.IDENTIFIER 1)
          (START.TIME 11570000)
          (PARTIAL   (CLAUSE 65 T4 THEOREM () ((- 3 ((5 (5 73 70) 71) 72 74)) )))
          (PARTIAL   (CLAUSE 76 T5 THEOREM () ((+ 3 ((5 73 (5 70 71)) 72 74)) )))
          (INITIAL   (CLAUSE 27 R.= AXIOM ((19 . ANY)) ((+ 2 (19 19)) ))
(CLAUSE 32 A1 AXIOM ((7 . IXITO)(9 . I)(8 . I)(6 . IXITO))
                           ((+ 3 (6 8 (21 6 9 8 7))) (- 3 ((5 6 7) 8 9)) ))
(CLAUSE 38 A2 AXIOM ((24 . I)(23 . I)(22 . IXITO)(25 . IXITO))
                           ((+ 3 (25 (21 22 23 24 25) 23)) (- 3 ((5 22 25) 24 23)) ))
(CLAUSE 48 A3 AXIOM ((20 . I)(18 . IXITO)(16 . I)(17 . I)(10 . IXITO))
                           ((- 3 (10 17 16)) (- 3 (18 16 20)) (+ 3 ((5 10 18) 17 20)) ))
(CLAUSE 65 T4 THEOREM () ((- 3 ((5 (5 73 70) 71) 72 74)) ))
(CLAUSE 76 T5 THEOREM () ((+ 3 ((5 73 (5 70 71)) 72 74)) )) )
          (END.TIME 13580000)
          (FINAL 27 32 38 48 65 76)
          (SYMBOLS 
                   (LET (NEW.ADDRESS)
          (LIST (CONS    4 (DT-PREDICATE.CREATE "A[ITO]" '(ITO I)))
                           (CONS    3 (DT-PREDICATE.CREATE "A[IXITO]" '(IXITO I I)))
                           (PROG1 (CONS    2 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "=" '(ANY ANY))))
                                  (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED SYMMETRIC REFLEXIVE SYMMETRIC REFLEXIVE)))
                           (PROG1 (CONS    1 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "FALSE" 'NIL)))
                                  (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
                           (PROG1 (CONS    0 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "TRUE" 'NIL)))
                                  (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
                           (CONS   12 (DT-CONSTANT.CREATE "c_10" 'I))
                           (CONS   13 (DT-CONSTANT.CREATE "c_9" 'IXITO))
                           (CONS   14 (DT-CONSTANT.CREATE "c_8" 'I))
                           (CONS   11 (DT-CONSTANT.CREATE "c_7" 'IXITO))
                           (CONS   15 (DT-CONSTANT.CREATE "c_6" 'IXITO))
                           (CONS   74 (DT-CONSTANT.CREATE "c_5" 'I))
                           (CONS   73 (DT-CONSTANT.CREATE "c_4" 'IXITO))
                           (CONS   72 (DT-CONSTANT.CREATE "c_3" 'I))
                           (CONS   71 (DT-CONSTANT.CREATE "c_2" 'IXITO))
                           (CONS   70 (DT-CONSTANT.CREATE "c_1" 'IXITO))
                           (CONS   21 (DT-FUNCTION.CREATE "f_1" 'I '(IXITO I I IXITO) 'NIL))
                           (CONS    5 (DT-FUNCTION.CREATE "comp" 'IXITO '(IXITO IXITO) 'NIL)))))
          (RESULT))

(THEOREMS (SPLITPART.IDENTIFIER 2)
          (START.TIME 13650000)
          (PARTIAL   (CLAUSE 65 T4 THEOREM () ((+ 3 ((5 (5 13 15) 11) 14 12)) )))
          (PARTIAL   (CLAUSE 76 T5 THEOREM () ((- 3 ((5 13 (5 15 11)) 14 12)) )))
          (INITIAL   (CLAUSE 27 R.= AXIOM ((19 . ANY)) ((+ 2 (19 19)) ))
(CLAUSE 32 A1 AXIOM ((7 . IXITO)(9 . I)(8 . I)(6 . IXITO))
                           ((+ 3 (6 8 (21 6 9 8 7))) (- 3 ((5 6 7) 8 9)) ))
(CLAUSE 38 A2 AXIOM ((24 . I)(23 . I)(22 . IXITO)(25 . IXITO))
                           ((+ 3 (25 (21 22 23 24 25) 23)) (- 3 ((5 22 25) 24 23)) ))
(CLAUSE 48 A3 AXIOM ((20 . I)(18 . IXITO)(16 . I)(17 . I)(10 . IXITO))
                           ((- 3 (10 17 16)) (- 3 (18 16 20)) (+ 3 ((5 10 18) 17 20)) ))
(CLAUSE 65 T4 THEOREM () ((+ 3 ((5 (5 13 15) 11) 14 12)) ))
(CLAUSE 76 T5 THEOREM () ((- 3 ((5 13 (5 15 11)) 14 12)) )) )
          (END.TIME 17780000)
          (FINAL 27 32 38 48 65 76)
          (SYMBOLS 
                   (LET (NEW.ADDRESS)
          (LIST (CONS    4 (DT-PREDICATE.CREATE "A[ITO]" '(ITO I)))
                           (CONS    3 (DT-PREDICATE.CREATE "A[IXITO]" '(IXITO I I)))
                           (PROG1 (CONS    2 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "=" '(ANY ANY))))
                                  (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED SYMMETRIC REFLEXIVE SYMMETRIC REFLEXIVE)))
                           (PROG1 (CONS    1 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "FALSE" 'NIL)))
                                  (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
                           (PROG1 (CONS    0 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "TRUE" 'NIL)))
                                  (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
                           (CONS   12 (DT-CONSTANT.CREATE "c_10" 'I))
                           (CONS   13 (DT-CONSTANT.CREATE "c_9" 'IXITO))
                           (CONS   14 (DT-CONSTANT.CREATE "c_8" 'I))
                           (CONS   11 (DT-CONSTANT.CREATE "c_7" 'IXITO))
                           (CONS   15 (DT-CONSTANT.CREATE "c_6" 'IXITO))
                           (CONS   74 (DT-CONSTANT.CREATE "c_5" 'I))
                           (CONS   73 (DT-CONSTANT.CREATE "c_4" 'IXITO))
                           (CONS   72 (DT-CONSTANT.CREATE "c_3" 'I))
                           (CONS   71 (DT-CONSTANT.CREATE "c_2" 'IXITO))
                           (CONS   70 (DT-CONSTANT.CREATE "c_1" 'IXITO))
                           (CONS   21 (DT-FUNCTION.CREATE "f_1" 'I '(IXITO I I IXITO) 'NIL))
                           (CONS    5 (DT-FUNCTION.CREATE "comp" 'IXITO '(IXITO IXITO) 'NIL)))))
          (RESULT))
(indices ((76 5) (65 4) (76 5) (65 4) (48 1 2 3) (38 2 3) (32 1 3) (27 NIL)))

(SPLITPARTS "Unix" "14-MAY,1992 11:10" NIL)

(OPTIONS (TWO_RULES)
          (TWO_RULES.MAXLEVEL . 1)
          (TWO_SUPPRESS.NORULES)
          (RED.I_CLAUSE.MULTIPLE.LITERALS . T)
          (RED.I_CLAUSE.PURITY . PARTIAL)
          (RED.I_CLAUSE.TAUTOLOGY . T)
          (RED.I_CLAUSE.TAUTOLOGY.RECHECK . PARTIAL)
          (RED.I_CLAUSE.SUBSUMPTION . T)
          (RED.I_CLAUSE.SUBSUMPTION.RECHECK . PARTIAL)
          (RED.I_CLAUSE.REPL.FACTORING . T)
          (RED.I_CLAUSE.REPL.FACTORING.RECHECK . T)
          (RED.I_CLAUSE.REPL.RESOLUTION . SIMPLE)
          (RED.I_CLAUSE.REPL.RESOLUTION.RECHECK . T)
          (RED.I_CLAUSE.REWRITING . DEM)
          (RED.I_LINK.INCOMPATIBILITY . T)
          (RED.I_LINK.TAUTOLOGY . REMOVE-INHIBIT)
          (RED.I_LINK.TAUTOLOGY.RECHECK)
          (RED.I_LINK.SUBSUMPTION . REMOVE-INHIBIT)
          (RED.I_LINK.SUBSUMPTION.RECHECK)
          (RED.D_CLAUSE.MULTIPLE.LITERALS . T)
          (RED.D_CLAUSE.PURITY . PARTIAL)
          (RED.D_CLAUSE.TAUTOLOGY . REMOVE-INHIBIT)
          (RED.D_CLAUSE.TAUTOLOGY.RECHECK)
          (RED.D_CLAUSE.SUBSUMPTION.FORWARD . REMOVE-INHIBIT)
          (RED.D_CLAUSE.SUBSUMPTION.BACKWARD . REMOVE)
          (RED.D_CLAUSE.SUBSUMPTION.RECHECK)
          (RED.D_CLAUSE.REPL.FACTORING . T)
          (RED.D_CLAUSE.REPL.FACTORING.RECHECK . T)
          (RED.D_CLAUSE.REPL.RESOLUTION . SIMPLE)
          (RED.D_CLAUSE.REPL.RESOLUTION.RECHECK . T)
          (RED.D_CLAUSE.REWRITING . DEM)
          (RED.D_LINK.INCOMPATIBILITY . T)
          (RED.D_LINK.TAUTOLOGY . REMOVE-INHIBIT)
          (RED.D_LINK.TAUTOLOGY.RECHECK)
          (RED.D_LINK.SUBSUMPTION . REMOVE-INHIBIT)
          (RED.D_LINK.SUBSUMPTION.RECHECK)
          (FAC_INITIAL)
          (FAC_EACH.STEP)
          (STR_RESOLUTION . SET-OF-SUPPORT)
          (STR_R.SELECTION * 10 (+ 2 VARIABLES (* 2 DEPTH) (* 3 NOLIT)))
          (STR_LINK.DEPTH)
          (STR_TERM.DEPTH)
          (STR_FINITE.DOMAIN . T)
          (TERM_UNITS . T)
          (TERM_ITERATIONS . 0)
          (TERM_SET.OF.SUPPORT)
          (TERM_BREADTH.FIRST)
          (SORT_LITERALS)
          (SORT_MAX.UNIFICATION.RULE.STEPS . 100)
          (SORT_MAX.UNIFICATION.TREE.DEPTH . 100)
          (SORT_MAX.UNIFICATION.TREE.OPEN.NODES . 20)
          (SORT_UNIFIER.STOP.NUMBER . 100)
          (SORT_SHOW.VARIABLE.SORTS . T)
          (ER_PARAMODULATION . HEURISTIC-COMPLETION)
          (ER_WEIGHT.POLYNOMIALS)
          (ER_P.SELECTION * WEIGHT (IF SUPPORT 1 1.5) (IF EQUATIONAL 1 2))
          (ER_COMPLETION . UNFAILING)
          (ER_CP.REDUCTION . T)
          (ER_ORDERING . LEXICOGRAPHIC-RECURSIVE-PATH)
          (ER_OPERATOR.ORDERING * - + 0 1)
          (ER_KNUTH.BENDIX.WEIGHT (+ 1) (* 1) (- 0) (0 1) (1 1))
          (ER_POLYNOMIAL.WEIGHT (+ (X Y) (+ (* 2 Y) X)) (* (X Y) (+ (* X Y) X)) (- (X) (* X X)) (0 NIL 2) (1 NIL 2))
          (ER_NARROW.DEPTH . 0)
          (ER_NARROW.NEXT . DEPTH)
          (ER_NARROW.TEST NORM C DELTA SL N)
          (ER_COMPILE)
          (GEN_SPLITTING . T)
          (GEN_PRESIMPLIFICATION . T)
          (GEN_MIN.EXPRESSION.LENGTH.FOR.FILE)
          (GEN_MIN.EXPRESSION.SIZE.FOR.FILE)
          (GEN_MANUAL.CONTROL)
          (GEN_MAXIMUM.STEPS)
          (GEN_GRAPH.SAVING)
          (GEN_SAVE.FILE . SAVEDEFAULT)
          (GEN_LISP.GARBAGE.COLLECTION)
          (GEN_COMMON.LISP . T)
          (TR_PREPROCESSING)
          (TR_STEP.MODE . LR)
          (TR_DUMP)
          (TR_CLAUSE.MODE . I)
          (TR_LINK.MODE . I)
          (TR_TRACE.FILE)
          (TR_TERMINAL . T)
          (PR_INFIX.FORM . T)
          (PR_PREFIX.FORM)
          (PR_OPTIONS)
          (PR_AXIOM.CLAUSES . T)
          (PR_SYMBOLS)
          (PR_DIRECT.PROOF . T)
          (PR_VARIABLE.PRINT.NAMES X Y Z U V W XX YY ZZ UU VV WW XXX YYY ZZZ UUU VVV WWW)
          (PR_PROTOCOL . STANDARD)
          (PR_LEFT.MARGIN . 0)
          (PR_RIGHT.MARGIN . 117)
          (PR_LATEX)
          (PR_LINELENGTH . 117)
          (PR_LITERALS . T)
         )

(REFUTATION (START.TIME 20040000)

(OPTIONS (TWO_RULES)
          (TWO_RULES.MAXLEVEL . 1)
          (TWO_SUPPRESS.NORULES)
          (RED.I_CLAUSE.MULTIPLE.LITERALS . T)
          (RED.I_CLAUSE.PURITY . PARTIAL)
          (RED.I_CLAUSE.TAUTOLOGY . T)
          (RED.I_CLAUSE.TAUTOLOGY.RECHECK . PARTIAL)
          (RED.I_CLAUSE.SUBSUMPTION . T)
          (RED.I_CLAUSE.SUBSUMPTION.RECHECK . PARTIAL)
          (RED.I_CLAUSE.REPL.FACTORING . T)
          (RED.I_CLAUSE.REPL.FACTORING.RECHECK . T)
          (RED.I_CLAUSE.REPL.RESOLUTION . SIMPLE)
          (RED.I_CLAUSE.REPL.RESOLUTION.RECHECK . T)
          (RED.I_CLAUSE.REWRITING . DEM)
          (RED.I_LINK.INCOMPATIBILITY . T)
          (RED.I_LINK.TAUTOLOGY . REMOVE-INHIBIT)
          (RED.I_LINK.TAUTOLOGY.RECHECK)
          (RED.I_LINK.SUBSUMPTION . REMOVE-INHIBIT)
          (RED.I_LINK.SUBSUMPTION.RECHECK)
          (RED.D_CLAUSE.MULTIPLE.LITERALS . T)
          (RED.D_CLAUSE.PURITY . PARTIAL)
          (RED.D_CLAUSE.TAUTOLOGY . REMOVE-INHIBIT)
          (RED.D_CLAUSE.TAUTOLOGY.RECHECK)
          (RED.D_CLAUSE.SUBSUMPTION.FORWARD . REMOVE-INHIBIT)
          (RED.D_CLAUSE.SUBSUMPTION.BACKWARD . REMOVE)
          (RED.D_CLAUSE.SUBSUMPTION.RECHECK)
          (RED.D_CLAUSE.REPL.FACTORING . T)
          (RED.D_CLAUSE.REPL.FACTORING.RECHECK . T)
          (RED.D_CLAUSE.REPL.RESOLUTION . SIMPLE)
          (RED.D_CLAUSE.REPL.RESOLUTION.RECHECK . T)
          (RED.D_CLAUSE.REWRITING . DEM)
          (RED.D_LINK.INCOMPATIBILITY . T)
          (RED.D_LINK.TAUTOLOGY . REMOVE-INHIBIT)
          (RED.D_LINK.TAUTOLOGY.RECHECK)
          (RED.D_LINK.SUBSUMPTION . REMOVE-INHIBIT)
          (RED.D_LINK.SUBSUMPTION.RECHECK)
          (FAC_INITIAL)
          (FAC_EACH.STEP)
          (STR_RESOLUTION . SET-OF-SUPPORT)
          (STR_R.SELECTION * 10 (+ 2 VARIABLES (* 2 DEPTH) (* 3 NOLIT)))
          (STR_LINK.DEPTH)
          (STR_TERM.DEPTH)
          (STR_FINITE.DOMAIN . T)
          (TERM_UNITS . T)
          (TERM_ITERATIONS . 0)
          (TERM_SET.OF.SUPPORT)
          (TERM_BREADTH.FIRST)
          (SORT_LITERALS)
          (SORT_MAX.UNIFICATION.RULE.STEPS . 100)
          (SORT_MAX.UNIFICATION.TREE.DEPTH . 100)
          (SORT_MAX.UNIFICATION.TREE.OPEN.NODES . 20)
          (SORT_UNIFIER.STOP.NUMBER . 100)
          (SORT_SHOW.VARIABLE.SORTS . T)
          (ER_PARAMODULATION . HEURISTIC-COMPLETION)
          (ER_WEIGHT.POLYNOMIALS)
          (ER_P.SELECTION * WEIGHT (IF SUPPORT 1 1.5) (IF EQUATIONAL 1 2))
          (ER_COMPLETION . UNFAILING)
          (ER_CP.REDUCTION . T)
          (ER_ORDERING . LEXICOGRAPHIC-RECURSIVE-PATH)
          (ER_OPERATOR.ORDERING * - + 0 1)
          (ER_KNUTH.BENDIX.WEIGHT (+ 1) (* 1) (- 0) (0 1) (1 1))
          (ER_POLYNOMIAL.WEIGHT (+ (X Y) (+ (* 2 Y) X)) (* (X Y) (+ (* X Y) X)) (- (X) (* X X)) (0 NIL 2) (1 NIL 2))
          (ER_NARROW.DEPTH . 0)
          (ER_NARROW.NEXT . DEPTH)
          (ER_NARROW.TEST NORM C DELTA SL N)
          (ER_COMPILE)
          (GEN_SPLITTING . T)
          (GEN_PRESIMPLIFICATION . T)
          (GEN_MIN.EXPRESSION.LENGTH.FOR.FILE)
          (GEN_MIN.EXPRESSION.SIZE.FOR.FILE)
          (GEN_MANUAL.CONTROL)
          (GEN_MAXIMUM.STEPS)
          (GEN_GRAPH.SAVING)
          (GEN_SAVE.FILE . SAVEDEFAULT)
          (GEN_LISP.GARBAGE.COLLECTION)
          (GEN_COMMON.LISP . T)
          (TR_PREPROCESSING)
          (TR_STEP.MODE . LR)
          (TR_DUMP)
          (TR_CLAUSE.MODE . I)
          (TR_LINK.MODE . I)
          (TR_TRACE.FILE)
          (TR_TERMINAL . T)
          (PR_INFIX.FORM . T)
          (PR_PREFIX.FORM)
          (PR_OPTIONS)
          (PR_AXIOM.CLAUSES . T)
          (PR_SYMBOLS)
          (PR_DIRECT.PROOF . T)
          (PR_VARIABLE.PRINT.NAMES X Y Z U V W XX YY ZZ UU VV WW XXX YYY ZZZ UUU VVV WWW)
          (PR_PROTOCOL . STANDARD)
          (PR_LEFT.MARGIN . 0)
          (PR_RIGHT.MARGIN . 117)
          (PR_LATEX)
          (PR_LINELENGTH . 117)
          (PR_LITERALS . T)
         )
            (INITIAL   (CLAUSE 27 R.= AXIOM ((19 . ANY)) ((+ 2 (19 19)) ))
(CLAUSE 32 A1 AXIOM ((7 . IXITO)(9 . I)(8 . I)(6 . IXITO))
                             ((+ 3 (6 8 (21 6 9 8 7))) (- 3 ((5 6 7) 8 9)) ))
(CLAUSE 38 A2 AXIOM ((24 . I)(23 . I)(22 . IXITO)(25 . IXITO))
                             ((+ 3 (25 (21 22 23 24 25) 23)) (- 3 ((5 22 25) 24 23)) ))
(CLAUSE 48 A3 AXIOM ((20 . I)(18 . IXITO)(16 . I)(17 . I)(10 . IXITO))
                             ((- 3 (10 17 16)) (- 3 (18 16 20)) (+ 3 ((5 10 18) 17 20)) ))
(CLAUSE 65 T4 THEOREM () ((- 3 ((5 (5 73 70) 71) 72 74)) ))
(CLAUSE 76 T5 THEOREM () ((+ 3 ((5 73 (5 70 71)) 72 74)) )) )
            (OPERATION (CLAUSE 85 R1 (38 76) () ((+ 3 ((5 70 71) (21 73 74 72 (5 70 71)) 74)) ))
                       (RESOLUTION 76 1 38 2 NIL (22 73 25 (5 70 71) 24 72 23 74) 85))
            (OPERATION (CLAUSE 99 R2 (32 76) () ((+ 3 (73 72 (21 73 74 72 (5 70 71)))) ))
                       (RESOLUTION 76 1 32 2 NIL (6 73 7 (5 70 71) 8 72 9 74) 99))
            (OPERATION (CLAUSE 107 R3 (32 85) () ((+ 3 (70 (21 73 74 72 (5 70 71)) (21 70 74 (21 73 74 72 (5 70 71)) 71))) ))
                       (RESOLUTION 85 1 32 2 NIL (6 70 7 71 8 (21 73 74 72 (5 70 71)) 9 74) 107))
            (OPERATION (CLAUSE 116 R4 (38 85) () ((+ 3 (71 (21 70 74 (21 73 74 72 (5 70 71)) 71) 74)) ))
                       (RESOLUTION 85 1 38 2 NIL (22 70 25 71 24 (21 73 74 72 (5 70 71)) 23 74) 116))
            (OPERATION (CLAUSE 122 R5 (65 48) ((126 . I))
                               ((- 3 ((5 73 70) 72 126)) (- 3 (71 126 74)) ))
                       (RESOLUTION 48 3 65 1 NIL (10 (5 73 70) 18 71 17 72 20 74) 122))
            (OPERATION (CLAUSE 87 R6 (122 116) () ((- 3 ((5 73 70) 72 (21 70 74 (21 73 74 72 (5 70 71)) 71))) ))
                       (RESOLUTION 116 1 122 2 NIL (126 (21 70 74 (21 73 74 72 (5 70 71)) 71)) 87))
            (OPERATION (CLAUSE 137 R7 (48 76) ((142 . I)(143 . IXITO))
                               ((- 3 (143 74 142)) (+ 3 ((5 (5 73 (5 70 71)) 143) 72 142)) ))
                       (RESOLUTION 76 1 48 1 NIL (10 (5 73 (5 70 71)) 17 72 16 74) 137))
            (OPERATION (CLAUSE 95 R8 (48 76) ((123 . I)(140 . IXITO))
                               ((- 3 (140 123 72)) (+ 3 ((5 140 (5 73 (5 70 71))) 123 74)) ))
                       (RESOLUTION 76 1 48 2 NIL (18 (5 73 (5 70 71)) 16 72 20 74) 95))
            (OPERATION (CLAUSE 94 R9 (137 95) ((110 . IXITO))
                               ((- 3 (110 74 72)) (+ 3 ((5 (5 73 (5 70 71)) (5 110 (5 73 (5 70 71)))) 72 74)) ))
                       (RESOLUTION 95 2 137 1 NIL (143 (5 140 (5 73 (5 70 71))) 123 74 142 74) 94))
            (OPERATION (CLAUSE 172 R10 (95 137) ((78 . IXITO))
                               ((- 3 (78 74 72)) (+ 3 ((5 (5 (5 73 (5 70 71)) 78) (5 73 (5 70 71))) 72 74)) ))
                       (RESOLUTION 137 2 95 1 NIL (140 (5 (5 73 (5 70 71)) 143) 123 72 142 72) 172))
            (OPERATION (CLAUSE 191 R11 (48 85) ((91 . I)(170 . IXITO))
                               ((- 3 (170 74 91)) (+ 3 ((5 (5 70 71) 170) (21 73 74 72 (5 70 71)) 91)) ))
                       (RESOLUTION 85 1 48 1 NIL (10 (5 70 71) 17 (21 73 74 72 (5 70 71)) 16 74) 191))
            (OPERATION (CLAUSE 216 R12 (48 85) ((212 . I)(213 . IXITO))
                               ((- 3 (213 212 (21 73 74 72 (5 70 71)))) (+ 3 ((5 213 (5 70 71)) 212 74)) ))
                       (RESOLUTION 85 1 48 2 NIL (18 (5 70 71) 16 (21 73 74 72 (5 70 71)) 20 74) 216))
            (OPERATION (CLAUSE 83 R13 (216 99) () ((+ 3 ((5 73 (5 70 71)) 72 74)) ))
                       (RESOLUTION 99 1 216 1 NIL (213 73 212 72) 83))
            (OPERATION (CLAUSE 257 R14 (38 83) () ((+ 3 ((5 70 71) (21 73 74 72 (5 70 71)) 74)) ))
                       (RESOLUTION 83 1 38 2 NIL (22 73 25 (5 70 71) 24 72 23 74) 257))
            (OPERATION (CLAUSE 266 R15 (48 99) ((271 . I)(272 . IXITO))
                               ((- 3 (272 (21 73 74 72 (5 70 71)) 271)) (+ 3 ((5 73 272) 72 271)) ))
                       (RESOLUTION 99 1 48 1 NIL (10 73 17 72 16 (21 73 74 72 (5 70 71))) 266))
            (OPERATION (CLAUSE 266 R15 (48 99) ((271 . I)(272 . IXITO))
                               ((- 3 (272 (21 73 74 72 (5 70 71)) 271)) (+ 3 ((5 73 272) 72 271)) ))
                       (REPLACEMENT.OPERATION (272 70 271 (21 70 74 (21 73 74 72 (5 70 71)) 71)) (266 107 87)
  (((266 . 1) (107 . 1) NIL) ((266 . 2) (87 . 1) NIL))
  (NIL NIL)
  NIL))
            (END.TIME 41930000)
            (SYMBOLS 
                     (LET (NEW.ADDRESS)
          (LIST (CONS    4 (DT-PREDICATE.CREATE "A[ITO]" '(ITO I)))
                             (CONS    3 (DT-PREDICATE.CREATE "A[IXITO]" '(IXITO I I)))
                             (PROG1 (CONS    2 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "=" '(ANY ANY))))
                                    (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED SYMMETRIC REFLEXIVE SYMMETRIC REFLEXIVE)))
                             (PROG1 (CONS    1 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "FALSE" 'NIL)))
                                    (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
                             (PROG1 (CONS    0 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "TRUE" 'NIL)))
                                    (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
                             (CONS   12 (DT-CONSTANT.CREATE "c_10" 'I))
                             (CONS   13 (DT-CONSTANT.CREATE "c_9" 'IXITO))
                             (CONS   14 (DT-CONSTANT.CREATE "c_8" 'I))
                             (CONS   11 (DT-CONSTANT.CREATE "c_7" 'IXITO))
                             (CONS   15 (DT-CONSTANT.CREATE "c_6" 'IXITO))
                             (CONS   74 (DT-CONSTANT.CREATE "c_5" 'I))
                             (CONS   73 (DT-CONSTANT.CREATE "c_4" 'IXITO))
                             (CONS   72 (DT-CONSTANT.CREATE "c_3" 'I))
                             (CONS   71 (DT-CONSTANT.CREATE "c_2" 'IXITO))
                             (CONS   70 (DT-CONSTANT.CREATE "c_1" 'IXITO))
                             (CONS   21 (DT-FUNCTION.CREATE "f_1" 'I '(IXITO I I IXITO) 'NIL))
                             (CONS    5 (DT-FUNCTION.CREATE "comp" 'IXITO '(IXITO IXITO) 'NIL)))))
            (SPLITPART.IDENTIFIER 1)
            (RESULT SUCCESS 266)
)

(REFUTATION (START.TIME 43720000)

(OPTIONS (TWO_RULES)
          (TWO_RULES.MAXLEVEL . 1)
          (TWO_SUPPRESS.NORULES)
          (RED.I_CLAUSE.MULTIPLE.LITERALS . T)
          (RED.I_CLAUSE.PURITY . PARTIAL)
          (RED.I_CLAUSE.TAUTOLOGY . T)
          (RED.I_CLAUSE.TAUTOLOGY.RECHECK . PARTIAL)
          (RED.I_CLAUSE.SUBSUMPTION . T)
          (RED.I_CLAUSE.SUBSUMPTION.RECHECK . PARTIAL)
          (RED.I_CLAUSE.REPL.FACTORING . T)
          (RED.I_CLAUSE.REPL.FACTORING.RECHECK . T)
          (RED.I_CLAUSE.REPL.RESOLUTION . SIMPLE)
          (RED.I_CLAUSE.REPL.RESOLUTION.RECHECK . T)
          (RED.I_CLAUSE.REWRITING . DEM)
          (RED.I_LINK.INCOMPATIBILITY . T)
          (RED.I_LINK.TAUTOLOGY . REMOVE-INHIBIT)
          (RED.I_LINK.TAUTOLOGY.RECHECK)
          (RED.I_LINK.SUBSUMPTION . REMOVE-INHIBIT)
          (RED.I_LINK.SUBSUMPTION.RECHECK)
          (RED.D_CLAUSE.MULTIPLE.LITERALS . T)
          (RED.D_CLAUSE.PURITY . PARTIAL)
          (RED.D_CLAUSE.TAUTOLOGY . REMOVE-INHIBIT)
          (RED.D_CLAUSE.TAUTOLOGY.RECHECK)
          (RED.D_CLAUSE.SUBSUMPTION.FORWARD . REMOVE-INHIBIT)
          (RED.D_CLAUSE.SUBSUMPTION.BACKWARD . REMOVE)
          (RED.D_CLAUSE.SUBSUMPTION.RECHECK)
          (RED.D_CLAUSE.REPL.FACTORING . T)
          (RED.D_CLAUSE.REPL.FACTORING.RECHECK . T)
          (RED.D_CLAUSE.REPL.RESOLUTION . SIMPLE)
          (RED.D_CLAUSE.REPL.RESOLUTION.RECHECK . T)
          (RED.D_CLAUSE.REWRITING . DEM)
          (RED.D_LINK.INCOMPATIBILITY . T)
          (RED.D_LINK.TAUTOLOGY . REMOVE-INHIBIT)
          (RED.D_LINK.TAUTOLOGY.RECHECK)
          (RED.D_LINK.SUBSUMPTION . REMOVE-INHIBIT)
          (RED.D_LINK.SUBSUMPTION.RECHECK)
          (FAC_INITIAL)
          (FAC_EACH.STEP)
          (STR_RESOLUTION . SET-OF-SUPPORT)
          (STR_R.SELECTION * 10 (+ 2 VARIABLES (* 2 DEPTH) (* 3 NOLIT)))
          (STR_LINK.DEPTH)
          (STR_TERM.DEPTH)
          (STR_FINITE.DOMAIN . T)
          (TERM_UNITS . T)
          (TERM_ITERATIONS . 0)
          (TERM_SET.OF.SUPPORT)
          (TERM_BREADTH.FIRST)
          (SORT_LITERALS)
          (SORT_MAX.UNIFICATION.RULE.STEPS . 100)
          (SORT_MAX.UNIFICATION.TREE.DEPTH . 100)
          (SORT_MAX.UNIFICATION.TREE.OPEN.NODES . 20)
          (SORT_UNIFIER.STOP.NUMBER . 100)
          (SORT_SHOW.VARIABLE.SORTS . T)
          (ER_PARAMODULATION . HEURISTIC-COMPLETION)
          (ER_WEIGHT.POLYNOMIALS)
          (ER_P.SELECTION * WEIGHT (IF SUPPORT 1 1.5) (IF EQUATIONAL 1 2))
          (ER_COMPLETION . UNFAILING)
          (ER_CP.REDUCTION . T)
          (ER_ORDERING . LEXICOGRAPHIC-RECURSIVE-PATH)
          (ER_OPERATOR.ORDERING * - + 0 1)
          (ER_KNUTH.BENDIX.WEIGHT (+ 1) (* 1) (- 0) (0 1) (1 1))
          (ER_POLYNOMIAL.WEIGHT (+ (X Y) (+ (* 2 Y) X)) (* (X Y) (+ (* X Y) X)) (- (X) (* X X)) (0 NIL 2) (1 NIL 2))
          (ER_NARROW.DEPTH . 0)
          (ER_NARROW.NEXT . DEPTH)
          (ER_NARROW.TEST NORM C DELTA SL N)
          (ER_COMPILE)
          (GEN_SPLITTING . T)
          (GEN_PRESIMPLIFICATION . T)
          (GEN_MIN.EXPRESSION.LENGTH.FOR.FILE)
          (GEN_MIN.EXPRESSION.SIZE.FOR.FILE)
          (GEN_MANUAL.CONTROL)
          (GEN_MAXIMUM.STEPS)
          (GEN_GRAPH.SAVING)
          (GEN_SAVE.FILE . SAVEDEFAULT)
          (GEN_LISP.GARBAGE.COLLECTION)
          (GEN_COMMON.LISP . T)
          (TR_PREPROCESSING)
          (TR_STEP.MODE . LR)
          (TR_DUMP)
          (TR_CLAUSE.MODE . I)
          (TR_LINK.MODE . I)
          (TR_TRACE.FILE)
          (TR_TERMINAL . T)
          (PR_INFIX.FORM . T)
          (PR_PREFIX.FORM)
          (PR_OPTIONS)
          (PR_AXIOM.CLAUSES . T)
          (PR_SYMBOLS)
          (PR_DIRECT.PROOF . T)
          (PR_VARIABLE.PRINT.NAMES X Y Z U V W XX YY ZZ UU VV WW XXX YYY ZZZ UUU VVV WWW)
          (PR_PROTOCOL . STANDARD)
          (PR_LEFT.MARGIN . 0)
          (PR_RIGHT.MARGIN . 117)
          (PR_LATEX)
          (PR_LINELENGTH . 117)
          (PR_LITERALS . T)
         )
            (INITIAL   (CLAUSE 27 R.= AXIOM ((19 . ANY)) ((+ 2 (19 19)) ))
(CLAUSE 32 A1 AXIOM ((7 . IXITO)(9 . I)(8 . I)(6 . IXITO))
                             ((+ 3 (6 8 (21 6 9 8 7))) (- 3 ((5 6 7) 8 9)) ))
(CLAUSE 38 A2 AXIOM ((24 . I)(23 . I)(22 . IXITO)(25 . IXITO))
                             ((+ 3 (25 (21 22 23 24 25) 23)) (- 3 ((5 22 25) 24 23)) ))
(CLAUSE 48 A3 AXIOM ((20 . I)(18 . IXITO)(16 . I)(17 . I)(10 . IXITO))
                             ((- 3 (10 17 16)) (- 3 (18 16 20)) (+ 3 ((5 10 18) 17 20)) ))
(CLAUSE 65 T4 THEOREM () ((+ 3 ((5 (5 13 15) 11) 14 12)) ))
(CLAUSE 76 T5 THEOREM () ((- 3 ((5 13 (5 15 11)) 14 12)) )) )
            (OPERATION (CLAUSE 85 R1 (38 65) () ((+ 3 (11 (21 (5 13 15) 12 14 11) 12)) ))
                       (RESOLUTION 65 1 38 2 NIL (22 (5 13 15) 25 11 24 14 23 12) 85))
            (OPERATION (CLAUSE 95 R2 (32 65) () ((+ 3 ((5 13 15) 14 (21 (5 13 15) 12 14 11))) ))
                       (RESOLUTION 65 1 32 2 NIL (6 (5 13 15) 7 11 8 14 9 12) 95))
            (OPERATION (CLAUSE 107 R3 (38 95) () ((+ 3 (15 (21 13 (21 (5 13 15) 12 14 11) 14 15) (21 (5 13 15) 12 14 11))) ))
                       (RESOLUTION 95 1 38 2 NIL (22 13 25 15 24 14 23 (21 (5 13 15) 12 14 11)) 107))
            (OPERATION (CLAUSE 116 R4 (32 95) () ((+ 3 (13 14 (21 13 (21 (5 13 15) 12 14 11) 14 15))) ))
                       (RESOLUTION 95 1 32 2 NIL (6 13 7 15 8 14 9 (21 (5 13 15) 12 14 11)) 116))
            (OPERATION (CLAUSE 122 R5 (76 48) ((126 . I))
                               ((- 3 (13 14 126)) (- 3 ((5 15 11) 126 12)) ))
                       (RESOLUTION 48 3 76 1 NIL (10 13 18 (5 15 11) 17 14 20 12) 122))
            (OPERATION (CLAUSE 94 R6 (122 116) () ((- 3 ((5 15 11) (21 13 (21 (5 13 15) 12 14 11) 14 15) 12)) ))
                       (RESOLUTION 116 1 122 1 NIL (126 (21 13 (21 (5 13 15) 12 14 11) 14 15)) 94))
            (OPERATION (CLAUSE 137 R7 (48 65) ((142 . I)(143 . IXITO))
                               ((- 3 (143 12 142)) (+ 3 ((5 (5 (5 13 15) 11) 143) 14 142)) ))
                       (RESOLUTION 65 1 48 1 NIL (10 (5 (5 13 15) 11) 17 14 16 12) 137))
            (OPERATION (CLAUSE 98 R8 (48 65) ((113 . I)(140 . IXITO))
                               ((- 3 (140 113 14)) (+ 3 ((5 140 (5 (5 13 15) 11)) 113 12)) ))
                       (RESOLUTION 65 1 48 2 NIL (18 (5 (5 13 15) 11) 16 14 20 12) 98))
            (OPERATION (CLAUSE 87 R9 (137 98) ((110 . IXITO))
                               ((- 3 (110 12 14)) (+ 3 ((5 (5 (5 13 15) 11) (5 110 (5 (5 13 15) 11))) 14 12)) ))
                       (RESOLUTION 98 2 137 1 NIL (143 (5 140 (5 (5 13 15) 11)) 113 12 142 12) 87))
            (OPERATION (CLAUSE 172 R10 (98 137) ((67 . IXITO))
                               ((- 3 (67 12 14)) (+ 3 ((5 (5 (5 (5 13 15) 11) 67) (5 (5 13 15) 11)) 14 12)) ))
                       (RESOLUTION 137 2 98 1 NIL (140 (5 (5 (5 13 15) 11) 143) 113 14 142 14) 172))
            (OPERATION (CLAUSE 191 R11 (48 85) ((93 . I)(170 . IXITO))
                               ((- 3 (170 12 93)) (+ 3 ((5 11 170) (21 (5 13 15) 12 14 11) 93)) ))
                       (RESOLUTION 85 1 48 1 NIL (10 11 17 (21 (5 13 15) 12 14 11) 16 12) 191))
            (OPERATION (CLAUSE 216 R12 (48 85) ((212 . I)(213 . IXITO))
                               ((- 3 (213 212 (21 (5 13 15) 12 14 11))) (+ 3 ((5 213 11) 212 12)) ))
                       (RESOLUTION 85 1 48 2 NIL (18 11 16 (21 (5 13 15) 12 14 11) 20 12) 216))
            (OPERATION (CLAUSE 216 R12 (48 85) ((212 . I)(213 . IXITO))
                               ((- 3 (213 212 (21 (5 13 15) 12 14 11))) (+ 3 ((5 213 11) 212 12)) ))
                       (REPLACEMENT.OPERATION (213 15 212 (21 13 (21 (5 13 15) 12 14 11) 14 15) 126 (21 13 (21 (5 13 15) 12 14 11) 14 15)) (216 122 107 116)
  (((216 . 2) (122 . 2) NIL) ((216 . 1) (107 . 1) NIL) ((122 . 1) (116 . 1) NIL))
  (NIL NIL NIL)
  NIL))
            (END.TIME 59270000)
            (SYMBOLS 
                     (LET (NEW.ADDRESS)
          (LIST (CONS    4 (DT-PREDICATE.CREATE "A[ITO]" '(ITO I)))
                             (CONS    3 (DT-PREDICATE.CREATE "A[IXITO]" '(IXITO I I)))
                             (PROG1 (CONS    2 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "=" '(ANY ANY))))
                                    (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED SYMMETRIC REFLEXIVE SYMMETRIC REFLEXIVE)))
                             (PROG1 (CONS    1 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "FALSE" 'NIL)))
                                    (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
                             (PROG1 (CONS    0 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "TRUE" 'NIL)))
                                    (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
                             (CONS   12 (DT-CONSTANT.CREATE "c_10" 'I))
                             (CONS   13 (DT-CONSTANT.CREATE "c_9" 'IXITO))
                             (CONS   14 (DT-CONSTANT.CREATE "c_8" 'I))
                             (CONS   11 (DT-CONSTANT.CREATE "c_7" 'IXITO))
                             (CONS   15 (DT-CONSTANT.CREATE "c_6" 'IXITO))
                             (CONS   74 (DT-CONSTANT.CREATE "c_5" 'I))
                             (CONS   73 (DT-CONSTANT.CREATE "c_4" 'IXITO))
                             (CONS   72 (DT-CONSTANT.CREATE "c_3" 'I))
                             (CONS   71 (DT-CONSTANT.CREATE "c_2" 'IXITO))
                             (CONS   70 (DT-CONSTANT.CREATE "c_1" 'IXITO))
                             (CONS   21 (DT-FUNCTION.CREATE "f_1" 'I '(IXITO I I IXITO) 'NIL))
                             (CONS    5 (DT-FUNCTION.CREATE "comp" 'IXITO '(IXITO IXITO) 'NIL)))))
            (SPLITPART.IDENTIFIER 2)
            (RESULT SUCCESS 216)
)