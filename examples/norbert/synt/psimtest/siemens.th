(COND ((FMT-LOAD "31-JUL-85 16:56:21"
NIL(((* TESTING DEFINITION EXPANSION:) COMMENT COMMENT) ((ALL X Q (A) IMPL P (A X)) (ALL 31 (IMPL (+ 5 (4) NIL)
(+ 6 (4 31) NIL))) QUANTIFICATION) ((ALL X,Y P (X Y) EQV PP (X) AND PP (Y)) (ALL 33 (ALL 32 (EQV (+ 6 (32 33) NIL)
(AND (+ 9 (32) NIL) (+ 9 (33) NIL))))) QUANTIFICATION) ((P (A B)) (+ 6 (4 10) NIL) QUANTIFICATION) ((*) COMMENT
COMMENT) ((* TESTING TRUTH VALUE HANDLING WITHOUT DEFINITION EXPANSION) COMMENT COMMENT) ((Q (A) IMPL Q (A)) (IMPL
(+ 5 (4) NIL) (+ 5 (4) NIL)) QUANTIFICATION) ((A = A IMPL A = B) (IMPL (+ 21 (4 4) NIL) (+ 21 (4 10) NIL)) 
QUANTIFICATION) (((ALL X,Y Q (X) AND Q (Y)) IMPL (ALL U,V Q (V) OR Q (U))) (IMPL (ALL 35 (ALL 34 (AND (+ 5 (34)
NIL) (+ 5 (35) NIL)))) (ALL 37 (ALL 36 (OR (+ 5 (37) NIL) (+ 5 (36) NIL))))) QUANTIFICATION) (((ALL X,Y Q (X) AND
Q (Y)) IMPL (ALL U,V Q (U) OR Q (V))) (IMPL (ALL 39 (ALL 38 (AND (+ 5 (38) NIL) (+ 5 (39) NIL)))) (ALL 41 (ALL
40 (OR (+ 5 (40) NIL) (+ 5 (41) NIL))))) QUANTIFICATION) (((ALL X,Y Q (X) AND Q (Y)) IMPL (ALL U,V Q (V) AND Q
(U))) (IMPL (ALL 43 (ALL 42 (AND (+ 5 (42) NIL) (+ 5 (43) NIL)))) (ALL 45 (ALL 44 (AND (+ 5 (45) NIL) (+ 5 (44)
NIL))))) QUANTIFICATION) (((ALL X,Y Q (X) AND Q (Y)) IMPL (ALL U,V Q (U) AND Q (V))) (IMPL (ALL 47 (ALL 46 (AND
(+ 5 (46) NIL) (+ 5 (47) NIL)))) (ALL 49 (ALL 48 (AND (+ 5 (48) NIL) (+ 5 (49) NIL))))) QUANTIFICATION) (((ALL
X Q (X)) IMPL (ALL U Q (U)) AND Q (A)) (IMPL (ALL 50 (+ 5 (50) NIL)) (AND (ALL 51 (+ 5 (51) NIL)) (+ 5 (4) NIL)))
QUANTIFICATION) ((*) COMMENT COMMENT) ((* TESTING TRUTH VALUE HANDLING WITH DEFINITION EXPANSION) COMMENT COMMENT)
((P (A A)) (+ 6 (4 4) NIL) QUANTIFICATION) ((PP (A) IMPL P (A B)) (IMPL (+ 9 (4) NIL) (+ 6 (4 10) NIL)) QUANTIFICATION)
((P (A B) EQV P (B A)) (EQV (+ 6 (4 10) NIL) (+ 6 (10 4) NIL)) QUANTIFICATION)))(COND (ST*LOAD.FLAG (PROGN (DT-RESET))
(MEM-RESTORE NIL NIL 52 10190 10500 (QUOTE (10195 10200 10205 10210 10215 10220 10225 10230 10235 10240 10245 10250
10255 10260 10265 10270 10275 10280 10285 10290 10295 10300 10305 10310 10315 10320 10325 10330 10335 10345 10400
10385 10380 10375 10365 10370 10360 10355 10350 10340 ATP.MEMORY.NIL 10405 10420 10425 10430 10445 10460 10465
10470 10485 10500))(QUOTE (15 TRUE NIL NIL NIL (DEFINED) NIL ((- 1 (POSITIVE))) ((+ 1 (NEGATIVE))) ((+ 1 (NIL)))
((- 1 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 FALSE NIL NIL NIL (DEFINED) NIL ((- 2 (POSITIVE))) ((+ 2 (NEGATIVE)))
((+ 2 (NIL))) ((- 2 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE
5 A ANY (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT 15 Q NIL NIL (ANY) NIL NIL ((- 5 (POSITIVE))) ((+ 5 (NEGATIVE)))
((+ 5 (NIL))) ((- 5 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 P NIL NIL (ANY ANY) NIL NIL ((- 6 (POSITIVE)))
((+ 6 (NEGATIVE))) ((+ 6 (NIL))) ((- 6 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 15 PP NIL NIL (ANY) NIL NIL ((- 9 (POSITIVE)))
((+ 9 (NEGATIVE))) ((+ 9 (NIL))) ((- 9 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 B ANY (ST*ATTRIBUTE NIL DT*ST-KIND
NIL) CONSTANT 15 = NIL NIL (ANY ANY) (DEFINED SYMMETRIC REFLEXIVE SYMMETRIC REFLEXIVE) NIL ((- 21 (POSITIVE . SYMMETRIC))
) ((+ 21 (NEGATIVE . SYMMETRIC))) ((+ 21 (NIL . SYMMETRIC))) ((- 21 (NIL . SYMMETRIC))) NIL NIL (DT*ST-KIND NIL)
PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE
5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
(ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA
NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE
5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
(ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA
NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE
5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
(ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA
NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE
5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
(ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE)))(PROGN (RPAQQ 
DT*SORT.ALL (ANY)) (RPAQQ DT*SORT.NR 2) (RPAQQ DT*SORT.PROPERTIES (DT*MAX.SUBSORTS DT*LEAST.SUPERSORTS 
DT*TRANSITIVE.CLOSURE DT*INVERSE.TRANSITIVE.CLOSURE DT*MINIMAL.SUBSORTS DT*DIRECT.SUBSORTS DT*DIRECT.SUPERSORTS
DT*DISJOINT.SORTS DT*COMPLETION.SORT)) (RPAQQ DT*SORT.COMMON.COMPUTE.FLAG NIL) (RPAQQ DT*VARIABLE.COUNTER 0) (RPAQQ
DT*CONSTANT.COUNTER 0) (RPAQQ DT*CONSTANT.ALL (10 4)) (RPAQQ DT*ABBREVIATIONS NIL) (RPAQQ DT*FUNCTION.COUNTER 0)
(RPAQQ DT*FUNCTION.ALL NIL) (RPAQQ DT*FUNCTION.ADMISSIBLE.THEORIES (ASSOCIATIVE POLYMORPHIC)) (RPAQQ 
DT*FUNCTION.ACTUAL.THEORIES NIL) (RPAQQ DT*FUNCTION.WITH.ARGUMENT.SYMMETRIES NIL) (RPAQQ DT*FUNCTION.COMPONENTS
(PNAME ATTRIBUTES MAX.RANGE.SORT MAX.DOMAIN.SORTS MIN.RANGE.SORTS SORT.LIST SORT.LIST.INVERSE SORT.TREE.CALC 
ARGUMENT.SYMMETRIES ARITY G.L.B.OF.RANGES)) (RPAQQ DT*PREDICATE.ADMISSABLE.ATTRIBUTES (SYMMETRIC DEFINED REFLEXIVE))
(RPAQQ DT*PREDICATE.COUNTER 0) (RPAQQ DT*EQUALITY.SYMBOLS ("=" ":=" "=:" ":=:")) (RPAQQ DT*EQUALITY.PREDICATES
(21)) (RPAQQ DT*NONEQUALITY.PREDICATES (9 6 5 2 1)) (RPAQQ DT*PREDICATE.ALL (21 9 6 5 2 1)) (RPAQQ 
DT*PREDICATE.WITH.ATTRIBUTES NIL) (RPAQQ DT*PREDICATE.COMPONENTS (PNAME POSITIVE.OCCURRENCES NEGATIVE.OCCURRENCES
DOMAINSORTS ATTRIBUTES REFL.CLAUSE +ROTHERSIDES -ROTHERSIDES +SOTHERSIDES -SOTHERSIDES +TOTHERSIDES -TOTHERSIDES))
(RPAQQ DT*TRUE.PREDICATE 1) (RPAQQ DT*FALSE.PREDICATE 2) (RPAQQ DT*UNI.CREATES.VARIABLES NIL) (RPAQQ 
DT*SIGN.MINUS.SYMBOLS (- --)) (RPAQQ DT*SIGN.PLUS.SYMBOLS (+ ++)) (RPAQQ DT*SYMBOL.KINDS (CONSTANT.ALL FUNCTION.ALL
PREDICATE.ALL)))
(PROGN)
(PROGN (SETPROPLIST (QUOTE DT*PREDICATE.WITH.ATTRIBUTES) (QUOTE (DEFINED (21) REFLEXIVE (21 21) SYMMETRIC (21 21)))))
(PROGN (SETPROPLIST (QUOTE ANY) (QUOTE (DT*ATTRIBUTE NIL DT*INVERSE.TRANSITIVE.CLOSURE (ANY) DT*DIRECT.SUPERSORTS
NIL DT*MINIMAL.SUBSORTS (ANY) DT*MAX.SUBSORTS ((ANY ANY)) DT*TRANSITIVE.CLOSURE (ANY) DT*SORT.NUMBER 1 
DT*DIRECT.SUBSORTS NIL))))
(PROGN (RPAQQ ST*STACK1 (NIL NIL NIL NIL NIL NIL ((X_51 PROGN (DT-VARIABLE.DELETE 51) (RPAQ ST*SYMBOL.ADDRESSES
(REMASSOC (QUOTE X_51) ST*SYMBOL.ADDRESSES))) (X_50 PROGN (DT-VARIABLE.DELETE 50) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC
(QUOTE X_50) ST*SYMBOL.ADDRESSES)))) ((X_49 PROGN (DT-VARIABLE.DELETE 49) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE
X_49) ST*SYMBOL.ADDRESSES))) (X_48 PROGN (DT-VARIABLE.DELETE 48) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_48)
ST*SYMBOL.ADDRESSES))) (X_47 PROGN (DT-VARIABLE.DELETE 47) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_47) 
ST*SYMBOL.ADDRESSES))) (X_46 PROGN (DT-VARIABLE.DELETE 46) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_46) 
ST*SYMBOL.ADDRESSES)))) ((X_45 PROGN (DT-VARIABLE.DELETE 45) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_45) 
ST*SYMBOL.ADDRESSES))) (X_44 PROGN (DT-VARIABLE.DELETE 44) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_44) 
ST*SYMBOL.ADDRESSES))) (X_43 PROGN (DT-VARIABLE.DELETE 43) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_43) 
ST*SYMBOL.ADDRESSES))) (X_42 PROGN (DT-VARIABLE.DELETE 42) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_42) 
ST*SYMBOL.ADDRESSES)))) ((X_41 PROGN (DT-VARIABLE.DELETE 41) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_41) 
ST*SYMBOL.ADDRESSES))) (X_40 PROGN (DT-VARIABLE.DELETE 40) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_40) 
ST*SYMBOL.ADDRESSES))) (X_39 PROGN (DT-VARIABLE.DELETE 39) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_39) 
ST*SYMBOL.ADDRESSES))) (X_38 PROGN (DT-VARIABLE.DELETE 38) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_38) 
ST*SYMBOL.ADDRESSES)))) ((X_37 PROGN (DT-VARIABLE.DELETE 37) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_37) 
ST*SYMBOL.ADDRESSES))) (X_36 PROGN (DT-VARIABLE.DELETE 36) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_36) 
ST*SYMBOL.ADDRESSES))) (X_35 PROGN (DT-VARIABLE.DELETE 35) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_35) 
ST*SYMBOL.ADDRESSES))) (X_34 PROGN (DT-VARIABLE.DELETE 34) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_34) 
ST*SYMBOL.ADDRESSES)))) NIL NIL NIL NIL NIL ((X_33 PROGN (DT-VARIABLE.DELETE 33) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC
(QUOTE X_33) ST*SYMBOL.ADDRESSES))) (X_32 PROGN (DT-VARIABLE.DELETE 32) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE
X_32) ST*SYMBOL.ADDRESSES)))) ((X_31 PROGN (DT-VARIABLE.DELETE 31) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_31)
ST*SYMBOL.ADDRESSES)))) NIL NIL)) (RPAQQ ST*SYMBOL.ADDRESSES (NIL (ANY . T) (TRUE . 1) (FALSE . 2) (X_3 . 3) (A
. 4) (Q . 5) (P . 6) (X_7 . 7) (X_8 . 8) (PP . 9) (B . 10) (= . 21) (X_20 . 20) (X_19 . 19) (X_18 . 18) (X_16 .
16) (X_17 . 17) (X_15 . 15) (X_14 . 14) (X_13 . 13) (X_22 . 22) (X_12 . 12) (X_23 . 23) (X_24 . 24) (X_25 . 25)
(X_26 . 26) (X_27 . 27) (X_28 . 28) (X_29 . 29) (X_30 . 30) (X_31 . 31) (X_32 . 32) (X_33 . 33) (X_34 . 34) (X_35
. 35) (X_36 . 36) (X_37 . 37) (X_38 . 38) (X_39 . 39) (X_40 . 40) (X_41 . 41) (X_42 . 42) (X_43 . 43) (X_44 . 44)
(X_45 . 45) (X_46 . 46) (X_47 . 47) (X_48 . 48) (X_49 . 49) (X_50 . 50) (X_51 . 51))))))))STOP
 
