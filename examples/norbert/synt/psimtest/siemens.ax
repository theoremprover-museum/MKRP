(COND ((FMT-LOAD "31-JUL-85 16:55:29"
NIL(((* TESTING DEFINITION EXPANSION:) COMMENT COMMENT) ((ALL X Q (A) IMPL P (A X)) (ALL 3 (IMPL (+ 5 (4) NIL)
(+ 6 (4 3) NIL))) QUANTIFICATION) ((ALL X,Y P (X Y) EQV PP (X) AND PP (Y)) (ALL 8 (ALL 7 (EQV (+ 6 (7 8) NIL) (AND
(+ 9 (7) NIL) (+ 9 (8) NIL))))) QUANTIFICATION) ((P (A B)) (+ 6 (4 10) NIL) QUANTIFICATION) ((*) COMMENT COMMENT)
((* TESTING TRUTH VALUE HANDLING WITHOUT DEFINITION EXPANSION) COMMENT COMMENT) ((Q (A) IMPL Q (A)) (IMPL (+ 5
(4) NIL) (+ 5 (4) NIL)) QUANTIFICATION) ((A = A IMPL A = B) (IMPL (+ 21 (4 4) NIL) (+ 21 (4 10) NIL)) QUANTIFICATION)
(((ALL X,Y Q (X) AND Q (Y)) IMPL (ALL U,V Q (V) OR Q (U))) (IMPL (ALL 19 (ALL 20 (AND (+ 5 (20) NIL) (+ 5 (19)
NIL)))) (ALL 16 (ALL 18 (OR (+ 5 (16) NIL) (+ 5 (18) NIL))))) QUANTIFICATION) (((ALL X,Y Q (X) AND Q (Y)) IMPL
(ALL U,V Q (U) OR Q (V))) (IMPL (ALL 15 (ALL 17 (AND (+ 5 (17) NIL) (+ 5 (15) NIL)))) (ALL 13 (ALL 14 (OR (+ 5
(14) NIL) (+ 5 (13) NIL))))) QUANTIFICATION) (((ALL X,Y Q (X) AND Q (Y)) IMPL (ALL U,V Q (V) AND Q (U))) (IMPL
(ALL 12 (ALL 22 (AND (+ 5 (22) NIL) (+ 5 (12) NIL)))) (ALL 24 (ALL 23 (AND (+ 5 (24) NIL) (+ 5 (23) NIL))))) 
QUANTIFICATION) (((ALL X,Y Q (X) AND Q (Y)) IMPL (ALL U,V Q (U) AND Q (V))) (IMPL (ALL 26 (ALL 25 (AND (+ 5 (25)
NIL) (+ 5 (26) NIL)))) (ALL 28 (ALL 27 (AND (+ 5 (27) NIL) (+ 5 (28) NIL))))) QUANTIFICATION) (((ALL X Q (X)) IMPL
(ALL U Q (U)) AND Q (A)) (IMPL (ALL 29 (+ 5 (29) NIL)) (AND (ALL 30 (+ 5 (30) NIL)) (+ 5 (4) NIL))) QUANTIFICATION)
((*) COMMENT COMMENT) ((* TESTING TRUTH VALUE HANDLING WITH DEFINITION EXPANSION) COMMENT COMMENT) ((P (A A)) (+
6 (4 4) NIL) QUANTIFICATION) ((PP (A) IMPL P (A B)) (IMPL (+ 9 (4) NIL) (+ 6 (4 10) NIL)) QUANTIFICATION) ((P (A
B) EQV P (B A)) (EQV (+ 6 (4 10) NIL) (+ 6 (10 4) NIL)) QUANTIFICATION)))(COND (ST*LOAD.FLAG (PROGN (DT-RESET))
(MEM-RESTORE NIL NIL 31 10295 10500 (QUOTE (10300 10305 10310 10315 10320 10325 10330 10335 10345 10400 10385 10380
10375 10365 10370 10360 10355 10350 10340 ATP.MEMORY.NIL 10405 10420 10425 10430 10445 10460 10465 10470 10485
10500))(QUOTE (15 TRUE NIL NIL NIL (DEFINED) NIL ((- 1 (POSITIVE))) ((+ 1 (NEGATIVE))) ((+ 1 (NIL))) ((- 1 (NIL)))
NIL NIL (DT*ST-KIND NIL) PREDICATE 15 FALSE NIL NIL NIL (DEFINED) NIL ((- 2 (POSITIVE))) ((+ 2 (NEGATIVE))) ((+
2 (NIL))) ((- 2 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE
5 A ANY (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT 15 Q NIL NIL (ANY) NIL NIL ((- 5 (POSITIVE))) ((+ 5 (NEGATIVE)))
((+ 5 (NIL))) ((- 5 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 P NIL NIL (ANY ANY) NIL NIL ((- 6 (POSITIVE)))
((+ 6 (NEGATIVE))) ((+ 6 (NIL))) ((- 6 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 15 PP NIL NIL (ANY) NIL NIL ((- 9 (POSITIVE)))
((+ 9 (NEGATIVE))) ((+ 9 (NIL))) ((- 9 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 B ANY (ST*ATTRIBUTE NIL DT*ST-KIND
NIL) CONSTANT 15 = NIL NIL (ANY ANY) (DEFINED SYMMETRIC REFLEXIVE SYMMETRIC REFLEXIVE) NIL ((- 21 (POSITIVE . SYMMETRIC))
) ((+ 21 (NEGATIVE . SYMMETRIC))) ((+ 21 (NIL . SYMMETRIC))) ((- 21 (NIL . SYMMETRIC))) NIL NIL (DT*ST-KIND NIL)
PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE
5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
(ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA
NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE
5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
(ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA
NIL DT*ST-KIND SYS-VAR) VARIABLE)))(PROGN (RPAQQ DT*SORT.ALL (ANY)) (RPAQQ DT*SORT.NR 2) (RPAQQ DT*SORT.PROPERTIES
(DT*MAX.SUBSORTS DT*LEAST.SUPERSORTS DT*TRANSITIVE.CLOSURE DT*INVERSE.TRANSITIVE.CLOSURE DT*MINIMAL.SUBSORTS 
DT*DIRECT.SUBSORTS DT*DIRECT.SUPERSORTS DT*DISJOINT.SORTS DT*COMPLETION.SORT)) (RPAQQ DT*SORT.COMMON.COMPUTE.FLAG
NIL) (RPAQQ DT*VARIABLE.COUNTER 0) (RPAQQ DT*CONSTANT.COUNTER 0) (RPAQQ DT*CONSTANT.ALL (10 4)) (RPAQQ DT*ABBREVIATIONS
NIL) (RPAQQ DT*FUNCTION.COUNTER 0) (RPAQQ DT*FUNCTION.ALL NIL) (RPAQQ DT*FUNCTION.ADMISSIBLE.THEORIES (ASSOCIATIVE
POLYMORPHIC)) (RPAQQ DT*FUNCTION.ACTUAL.THEORIES NIL) (RPAQQ DT*FUNCTION.WITH.ARGUMENT.SYMMETRIES NIL) (RPAQQ 
DT*FUNCTION.COMPONENTS (PNAME ATTRIBUTES MAX.RANGE.SORT MAX.DOMAIN.SORTS MIN.RANGE.SORTS SORT.LIST SORT.LIST.INVERSE
SORT.TREE.CALC ARGUMENT.SYMMETRIES ARITY G.L.B.OF.RANGES)) (RPAQQ DT*PREDICATE.ADMISSABLE.ATTRIBUTES (SYMMETRIC
DEFINED REFLEXIVE)) (RPAQQ DT*PREDICATE.COUNTER 0) (RPAQQ DT*EQUALITY.SYMBOLS ("=" ":=" "=:" ":=:")) (RPAQQ 
DT*EQUALITY.PREDICATES (21)) (RPAQQ DT*NONEQUALITY.PREDICATES (9 6 5 2 1)) (RPAQQ DT*PREDICATE.ALL (21 9 6 5 2
1)) (RPAQQ DT*PREDICATE.WITH.ATTRIBUTES NIL) (RPAQQ DT*PREDICATE.COMPONENTS (PNAME POSITIVE.OCCURRENCES 
NEGATIVE.OCCURRENCES DOMAINSORTS ATTRIBUTES REFL.CLAUSE +ROTHERSIDES -ROTHERSIDES +SOTHERSIDES -SOTHERSIDES +TOTHERSIDES
-TOTHERSIDES)) (RPAQQ DT*TRUE.PREDICATE 1) (RPAQQ DT*FALSE.PREDICATE 2) (RPAQQ DT*UNI.CREATES.VARIABLES NIL) (RPAQQ
DT*SIGN.MINUS.SYMBOLS (- --)) (RPAQQ DT*SIGN.PLUS.SYMBOLS (+ ++)) (RPAQQ DT*SYMBOL.KINDS (CONSTANT.ALL FUNCTION.ALL
PREDICATE.ALL)))
(PROGN)
(PROGN (SETPROPLIST (QUOTE DT*PREDICATE.WITH.ATTRIBUTES) (QUOTE (DEFINED (21) REFLEXIVE (21 21) SYMMETRIC (21 21)))))
(PROGN (SETPROPLIST (QUOTE ANY) (QUOTE (DT*ATTRIBUTE NIL DT*INVERSE.TRANSITIVE.CLOSURE (ANY) DT*DIRECT.SUPERSORTS
NIL DT*MINIMAL.SUBSORTS (ANY) DT*MAX.SUBSORTS ((ANY ANY)) DT*TRANSITIVE.CLOSURE (ANY) DT*SORT.NUMBER 1 
DT*DIRECT.SUBSORTS NIL))))
(PROGN (RPAQQ ST*STACK1 (NIL NIL NIL NIL NIL NIL ((X_30 PROGN (DT-VARIABLE.DELETE 30) (RPAQ ST*SYMBOL.ADDRESSES
(REMASSOC (QUOTE X_30) ST*SYMBOL.ADDRESSES))) (X_29 PROGN (DT-VARIABLE.DELETE 29) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC
(QUOTE X_29) ST*SYMBOL.ADDRESSES)))) ((X_28 PROGN (DT-VARIABLE.DELETE 28) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE
X_28) ST*SYMBOL.ADDRESSES))) (X_27 PROGN (DT-VARIABLE.DELETE 27) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_27)
ST*SYMBOL.ADDRESSES))) (X_26 PROGN (DT-VARIABLE.DELETE 26) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_26) 
ST*SYMBOL.ADDRESSES))) (X_25 PROGN (DT-VARIABLE.DELETE 25) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_25) 
ST*SYMBOL.ADDRESSES)))) ((X_24 PROGN (DT-VARIABLE.DELETE 24) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_24) 
ST*SYMBOL.ADDRESSES))) (X_23 PROGN (DT-VARIABLE.DELETE 23) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_23) 
ST*SYMBOL.ADDRESSES))) (X_12 PROGN (DT-VARIABLE.DELETE 12) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_12) 
ST*SYMBOL.ADDRESSES))) (X_22 PROGN (DT-VARIABLE.DELETE 22) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_22) 
ST*SYMBOL.ADDRESSES)))) ((X_13 PROGN (DT-VARIABLE.DELETE 13) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_13) 
ST*SYMBOL.ADDRESSES))) (X_14 PROGN (DT-VARIABLE.DELETE 14) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_14) 
ST*SYMBOL.ADDRESSES))) (X_15 PROGN (DT-VARIABLE.DELETE 15) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_15) 
ST*SYMBOL.ADDRESSES))) (X_17 PROGN (DT-VARIABLE.DELETE 17) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_17) 
ST*SYMBOL.ADDRESSES)))) ((X_16 PROGN (DT-VARIABLE.DELETE 16) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_16) 
ST*SYMBOL.ADDRESSES))) (X_18 PROGN (DT-VARIABLE.DELETE 18) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_18) 
ST*SYMBOL.ADDRESSES))) (X_19 PROGN (DT-VARIABLE.DELETE 19) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_19) 
ST*SYMBOL.ADDRESSES))) (X_20 PROGN (DT-VARIABLE.DELETE 20) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_20) 
ST*SYMBOL.ADDRESSES)))) ((= PROGN (DT-PREDICATE.DELETE 21) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE =) 
ST*SYMBOL.ADDRESSES)))) NIL NIL NIL ((B PROGN (DT-CONSTANT.DELETE 10) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE
B) ST*SYMBOL.ADDRESSES)))) ((PP PROGN (DT-PREDICATE.DELETE 9) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE PP) 
ST*SYMBOL.ADDRESSES))) (X_8 PROGN (DT-VARIABLE.DELETE 8) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_8) 
ST*SYMBOL.ADDRESSES))) (X_7 PROGN (DT-VARIABLE.DELETE 7) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_7) 
ST*SYMBOL.ADDRESSES)))) ((P PROGN (DT-PREDICATE.DELETE 6) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE P) 
ST*SYMBOL.ADDRESSES))) (Q PROGN (DT-PREDICATE.DELETE 5) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE Q) 
ST*SYMBOL.ADDRESSES))) (A PROGN (DT-CONSTANT.DELETE 4) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE A) ST*SYMBOL.ADDRESSES)
)) (X_3 PROGN (DT-VARIABLE.DELETE 3) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_3) ST*SYMBOL.ADDRESSES)))) NIL
((FALSE PROGN (DT-PREDICATE.DELETE 2) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE FALSE) ST*SYMBOL.ADDRESSES)))
(TRUE PROGN (DT-PREDICATE.DELETE 1) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE TRUE) ST*SYMBOL.ADDRESSES))) (ANY
PROGN (DT-SORT.ST.REMOVE (QUOTE ANY)) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE ANY) ST*SYMBOL.ADDRESSES))) (ANY
REMPROP (QUOTE ANY) (QUOTE ST*DATA))))) (RPAQQ ST*SYMBOL.ADDRESSES (NIL (ANY . T) (TRUE . 1) (FALSE . 2) (X_3 .
3) (A . 4) (Q . 5) (P . 6) (X_7 . 7) (X_8 . 8) (PP . 9) (B . 10) (= . 21) (X_20 . 20) (X_19 . 19) (X_18 . 18) (X_16
. 16) (X_17 . 17) (X_15 . 15) (X_14 . 14) (X_13 . 13) (X_22 . 22) (X_12 . 12) (X_23 . 23) (X_24 . 24) (X_25 . 25)
(X_26 . 26) (X_27 . 27) (X_28 . 28) (X_29 . 29) (X_30 . 30))))))))STOP
 
