;;; -*- Package: MKRP; Base: 10; Mode: LISP; Syntax: Common-lisp -*-

(CONSTRUCTION  "Genera 8.0.2 IP-TCP 422.9 IP-TCP-DOC 404.0 CLX 419.3 X Remote Screen 418.1 X Documentation 403.0 Network RPC 415.5 NFS Client 415.3 NFS Documentation 404.0 Logical Pathnames Translation Files NEWEST KKL 24.0 HADES 19.0 Waltz 8.0 COLUMN 9.0 Experimental MKRP 53.2 GENTRAFO 3.0" "26-MAR,1992 22:30" 
   ("                                                                       "
   "***********************************************************************"
   "                                                                       "
   " FORMULA:  Date: 19-MAR,1992 10:31"
   "           Axioms und Theorems for this proof have been read from"
   "              Axiom-File: NIL"
   "            Theorem-File: NIL"
   "                                                                       "
   "***********************************************************************"
   ))

(AXIOMS.INFIX    ((ALL X NOT Q (X) OR P (X A) OR P (X B))
   (ALL X NOT Q (X) OR NOT P (X A) OR P (B X))
   (ALL X NOT Q (X) OR NOT P (X B) OR P (A X))
   (ALL X NOT Q (X) OR NOT P (B X) OR NOT P (A X))
   (Q (A) OR Q (B))))

(THEOREMS.INFIX (NIL))

(AXIOMS.PREFIX   ((ALL 3 (OR (NOT (+ 4 (3) NIL)) (OR (+ 6 (3 5) NIL) (+ 6 (3 7) NIL))))
   (ALL 8 (OR (NOT (+ 4 (8) NIL)) (OR (NOT (+ 6 (8 5) NIL)) (+ 6 (7 8) NIL))))
   (ALL 9 (OR (NOT (+ 4 (9) NIL)) (OR (NOT (+ 6 (9 7) NIL)) (+ 6 (5 9) NIL))))
   (ALL 10 (OR (NOT (+ 4 (10) NIL)) (OR (NOT (+ 6 (7 10) NIL)) (NOT (+ 6 (5 10) NIL)))))
   (OR (+ 4 (5) NIL) (+ 4 (7) NIL))))

(THEOREMS.PREFIX (NIL))

(OPTIONS (TWO_RULES)
    (TWO_RULES.MAXLEVEL . 1)
    (TWO_SUPPRESS.NORULES)
    (RED.I_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.I_CLAUSE.PURITY . PARTIAL)
    (RED.I_CLAUSE.TAUTOLOGY . T)
    (RED.I_CLAUSE.TAUTOLOGY.RECHECK . PARTIAL)
    (RED.I_CLAUSE.SUBSUMPTION . T)
    (RED.I_CLAUSE.SUBSUMPTION.RECHECK . PARTIAL)
    (RED.I_CLAUSE.REPL.FACTORING . T)
    (RED.I_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.I_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.I_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.I_CLAUSE.REWRITING . DEM)
    (RED.I_LINK.INCOMPATIBILITY . T)
    (RED.I_LINK.TAUTOLOGY)
    (RED.I_LINK.TAUTOLOGY.RECHECK)
    (RED.I_LINK.SUBSUMPTION)
    (RED.I_LINK.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.D_CLAUSE.PURITY . PARTIAL)
    (RED.D_CLAUSE.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_CLAUSE.TAUTOLOGY.RECHECK)
    (RED.D_CLAUSE.SUBSUMPTION.FORWARD . REMOVE-INHIBIT)
    (RED.D_CLAUSE.SUBSUMPTION.BACKWARD . REMOVE)
    (RED.D_CLAUSE.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.REPL.FACTORING)
    (RED.D_CLAUSE.REPL.FACTORING.RECHECK)
    (RED.D_CLAUSE.REPL.RESOLUTION)
    (RED.D_CLAUSE.REPL.RESOLUTION.RECHECK)
    (RED.D_CLAUSE.REWRITING . DEM)
    (RED.D_LINK.INCOMPATIBILITY)
    (RED.D_LINK.TAUTOLOGY)
    (RED.D_LINK.TAUTOLOGY.RECHECK)
    (RED.D_LINK.SUBSUMPTION)
    (RED.D_LINK.SUBSUMPTION.RECHECK)
    (FAC_INITIAL)
    (FAC_EACH.STEP)
    (STR_RESOLUTION . SET-OF-SUPPORT)
    (STR_R.SELECTION * 10 (+ 2 VARIABLES (* 2 DEPTH) (* 3 NOLIT)))
    (STR_LINK.DEPTH)
    (STR_TERM.DEPTH)
    (STR_FINITE.DOMAIN . T)
    (TERM_UNITS . T)
    (TERM_ITERATIONS . 0)
    (TERM_SET.OF.SUPPORT)
    (TERM_BREADTH.FIRST)
    (SORT_LITERALS)
    (SORT_MAX.UNIFICATION.RULE.STEPS . 100)
    (SORT_MAX.UNIFICATION.TREE.DEPTH . 100)
    (SORT_MAX.UNIFICATION.TREE.OPEN.NODES . 20)
    (SORT_UNIFIER.STOP.NUMBER . 100)
    (SORT_SHOW.VARIABLE.SORTS . T)
    (ER_PARAMODULATION . CLAUSE-GRAPH)
    (ER_WEIGHT.POLYNOMIALS)
    (ER_P.SELECTION * WEIGHT (IF SUPPORT 1 1.5) (IF EQUATIONAL 1 2))
    (ER_COMPLETION . UNFAILING)
    (ER_CP.REDUCTION . T)
    (ER_ORDERING . LEXICOGRAPHIC-RECURSIVE-PATH)
    (ER_OPERATOR.ORDERING * - + 0 1)
    (ER_KNUTH.BENDIX.WEIGHT (+ 1) (* 1) (- 0) (0 1) (1 1))
    (ER_POLYNOMIAL.WEIGHT (+ (X Y) (+ (* 2 Y) X)) (* (X Y) (+ (* X Y) X)) (- (X) (* X X)) (0 NIL 2) (1 NIL 2))
    (ER_NARROW.DEPTH . 0)
    (ER_NARROW.NEXT . DEPTH)
    (ER_NARROW.TEST NORM C DELTA SL N)
    (ER_COMPILE)
    (GEN_SPLITTING . 0)
    (GEN_PRESIMPLIFICATION . T)
    (GEN_MIN.EXPRESSION.LENGTH.FOR.FILE)
    (GEN_MIN.EXPRESSION.SIZE.FOR.FILE)
    (GEN_MANUAL.CONTROL . T)
    (GEN_MAXIMUM.STEPS)
    (GEN_GRAPH.SAVING)
    (GEN_SAVE.FILE . SAVEDEFAULT)
    (GEN_LISP.GARBAGE.COLLECTION)
    (GEN_COMMON.LISP)
    (TR_PREPROCESSING)
    (TR_STEP.MODE . LR)
    (TR_DUMP)
    (TR_CLAUSE.MODE . I)
    (TR_LINK.MODE . I)
    (TR_TRACE.FILE)
    (TR_TERMINAL . T)
    (PR_INFIX.FORM . T)
    (PR_PREFIX.FORM)
    (PR_OPTIONS)
    (PR_AXIOM.CLAUSES . T)
    (PR_SYMBOLS)
    (PR_DIRECT.PROOF . T)
    (PR_VARIABLE.PRINT.NAMES X Y Z U V W XX YY ZZ UU VV WW XXX YYY ZZZ UUU VVV WWW)
    (PR_PROTOCOL . T)
    (PR_LEFT.MARGIN . 0)
    (PR_RIGHT.MARGIN . 117)
    (PR_LATEX)
    (PR_LINELENGTH . 117)
    (PR_LITERALS)
   )

(LINK.COLOURS (R RIW RD S SI SIW SID T TI TIW P PIW PD RIWD))

(AXIOMS (START.TIME 58347768)
   (PARTIAL   (CLAUSE 13 R.= AXIOM ((11 . ANY)) ((+ 2 (11 11)) ))(CLAUSE 14 A1 AXIOM ()
   ((+ 4 (5)) (+ 4 (7)) )))
   (PARTIAL   (CLAUSE 16 A2 AXIOM ((3 . ANY))
   ((- 4 (3)) (+ 6 (3 5)) (+ 6 (3 7)) )))
   (PARTIAL   (CLAUSE 20 A3 AXIOM ((8 . ANY))
   ((- 4 (8)) (- 6 (8 5)) (+ 6 (7 8)) )))
   (PARTIAL   (CLAUSE 29 A4 AXIOM ((9 . ANY))
   ((- 4 (9)) (- 6 (9 7)) (+ 6 (5 9)) )))
   (PARTIAL   (CLAUSE 41 A5 AXIOM ((10 . ANY))
   ((- 4 (10)) (- 6 (7 10)) (- 6 (5 10)) )))
   (END.TIME 58349115)
   (FINAL 13 14 16 20 29 41)
   (SYMBOLS 
   (LET (NEW.ADDRESS)
   (LIST (CONS    6 (DT-PREDICATE.CREATE "P" '(ANY ANY)))
   (CONS    4 (DT-PREDICATE.CREATE "Q" '(ANY)))
   (PROG1 (CONS    2 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "=" '(ANY ANY))))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED SYMMETRIC REFLEXIVE SYMMETRIC REFLEXIVE)))
   (PROG1 (CONS    1 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "FALSE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (PROG1 (CONS    0 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "TRUE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (CONS    7 (DT-CONSTANT.CREATE "b" 'ANY))
   (CONS    5 (DT-CONSTANT.CREATE "a" 'ANY)))))
   (RESULT))

(THEOREMS (SPLITPART.IDENTIFIER 1)
   (START.TIME 58349146)
   (INITIAL   (CLAUSE 13 R.= AXIOM ((11 . ANY)) ((+ 2 (11 11)) ))
(CLAUSE 14 A1 AXIOM ()
   ((+ 4 (5)) (+ 4 (7)) ))
(CLAUSE 16 A2 AXIOM ((3 . ANY))
   ((- 4 (3)) (+ 6 (3 5)) (+ 6 (3 7)) ))
(CLAUSE 20 A3 AXIOM ((8 . ANY))
   ((- 4 (8)) (- 6 (8 5)) (+ 6 (7 8)) ))
(CLAUSE 29 A4 AXIOM ((9 . ANY))
   ((- 4 (9)) (- 6 (9 7)) (+ 6 (5 9)) ))
(CLAUSE 41 A5 AXIOM ((10 . ANY))
   ((- 4 (10)) (- 6 (7 10)) (- 6 (5 10)) ))   )
   (END.TIME 58349828)
   (FINAL 13 14 16 20 29 41)
   (SYMBOLS 
   (LET (NEW.ADDRESS)
   (LIST (CONS    6 (DT-PREDICATE.CREATE "P" '(ANY ANY)))
   (CONS    4 (DT-PREDICATE.CREATE "Q" '(ANY)))
   (PROG1 (CONS    2 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "=" '(ANY ANY))))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED SYMMETRIC REFLEXIVE SYMMETRIC REFLEXIVE)))
   (PROG1 (CONS    1 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "FALSE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (PROG1 (CONS    0 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "TRUE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (CONS    7 (DT-CONSTANT.CREATE "b" 'ANY))
   (CONS    5 (DT-CONSTANT.CREATE "a" 'ANY)))))
   (RESULT))
(indices ((41 10 11 12) (29 7 8 9) (20 4 5 6) (16 1 2 3) (14 13 14) (13 NIL)))

(SPLITPARTS "Genera 8.0.2 IP-TCP 422.9 IP-TCP-DOC 404.0 CLX 419.3 X Remote Screen 418.1 X Documentation 403.0 Network RPC 415.5 NFS Client 415.3 NFS Documentation 404.0 Logical Pathnames Translation Files NEWEST KKL 24.0 HADES 19.0 Waltz 8.0 COLUMN 9.0 Experimental MKRP 53.2 GENTRAFO 3.0" "26-MAR,1992 22:31" NIL)

(OPTIONS (TWO_RULES)
    (TWO_RULES.MAXLEVEL . 1)
    (TWO_SUPPRESS.NORULES)
    (RED.I_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.I_CLAUSE.PURITY . PARTIAL)
    (RED.I_CLAUSE.TAUTOLOGY . T)
    (RED.I_CLAUSE.TAUTOLOGY.RECHECK . PARTIAL)
    (RED.I_CLAUSE.SUBSUMPTION . T)
    (RED.I_CLAUSE.SUBSUMPTION.RECHECK . PARTIAL)
    (RED.I_CLAUSE.REPL.FACTORING . T)
    (RED.I_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.I_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.I_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.I_CLAUSE.REWRITING . DEM)
    (RED.I_LINK.INCOMPATIBILITY . T)
    (RED.I_LINK.TAUTOLOGY)
    (RED.I_LINK.TAUTOLOGY.RECHECK)
    (RED.I_LINK.SUBSUMPTION)
    (RED.I_LINK.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.D_CLAUSE.PURITY . PARTIAL)
    (RED.D_CLAUSE.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_CLAUSE.TAUTOLOGY.RECHECK)
    (RED.D_CLAUSE.SUBSUMPTION.FORWARD . REMOVE-INHIBIT)
    (RED.D_CLAUSE.SUBSUMPTION.BACKWARD . REMOVE)
    (RED.D_CLAUSE.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.REPL.FACTORING)
    (RED.D_CLAUSE.REPL.FACTORING.RECHECK)
    (RED.D_CLAUSE.REPL.RESOLUTION)
    (RED.D_CLAUSE.REPL.RESOLUTION.RECHECK)
    (RED.D_CLAUSE.REWRITING . DEM)
    (RED.D_LINK.INCOMPATIBILITY)
    (RED.D_LINK.TAUTOLOGY)
    (RED.D_LINK.TAUTOLOGY.RECHECK)
    (RED.D_LINK.SUBSUMPTION)
    (RED.D_LINK.SUBSUMPTION.RECHECK)
    (FAC_INITIAL)
    (FAC_EACH.STEP)
    (STR_RESOLUTION . SET-OF-SUPPORT)
    (STR_R.SELECTION * 10 (+ 2 VARIABLES (* 2 DEPTH) (* 3 NOLIT)))
    (STR_LINK.DEPTH)
    (STR_TERM.DEPTH)
    (STR_FINITE.DOMAIN . T)
    (TERM_UNITS . T)
    (TERM_ITERATIONS . 0)
    (TERM_SET.OF.SUPPORT)
    (TERM_BREADTH.FIRST)
    (SORT_LITERALS)
    (SORT_MAX.UNIFICATION.RULE.STEPS . 100)
    (SORT_MAX.UNIFICATION.TREE.DEPTH . 100)
    (SORT_MAX.UNIFICATION.TREE.OPEN.NODES . 20)
    (SORT_UNIFIER.STOP.NUMBER . 100)
    (SORT_SHOW.VARIABLE.SORTS . T)
    (ER_PARAMODULATION . CLAUSE-GRAPH)
    (ER_WEIGHT.POLYNOMIALS)
    (ER_P.SELECTION * WEIGHT (IF SUPPORT 1 1.5) (IF EQUATIONAL 1 2))
    (ER_COMPLETION . UNFAILING)
    (ER_CP.REDUCTION . T)
    (ER_ORDERING . LEXICOGRAPHIC-RECURSIVE-PATH)
    (ER_OPERATOR.ORDERING * - + 0 1)
    (ER_KNUTH.BENDIX.WEIGHT (+ 1) (* 1) (- 0) (0 1) (1 1))
    (ER_POLYNOMIAL.WEIGHT (+ (X Y) (+ (* 2 Y) X)) (* (X Y) (+ (* X Y) X)) (- (X) (* X X)) (0 NIL 2) (1 NIL 2))
    (ER_NARROW.DEPTH . 0)
    (ER_NARROW.NEXT . DEPTH)
    (ER_NARROW.TEST NORM C DELTA SL N)
    (ER_COMPILE)
    (GEN_SPLITTING . 0)
    (GEN_PRESIMPLIFICATION . T)
    (GEN_MIN.EXPRESSION.LENGTH.FOR.FILE)
    (GEN_MIN.EXPRESSION.SIZE.FOR.FILE)
    (GEN_MANUAL.CONTROL . T)
    (GEN_MAXIMUM.STEPS)
    (GEN_GRAPH.SAVING)
    (GEN_SAVE.FILE . SAVEDEFAULT)
    (GEN_LISP.GARBAGE.COLLECTION)
    (GEN_COMMON.LISP)
    (TR_PREPROCESSING)
    (TR_STEP.MODE . LR)
    (TR_DUMP)
    (TR_CLAUSE.MODE . I)
    (TR_LINK.MODE . I)
    (TR_TRACE.FILE)
    (TR_TERMINAL . T)
    (PR_INFIX.FORM . T)
    (PR_PREFIX.FORM)
    (PR_OPTIONS)
    (PR_AXIOM.CLAUSES . T)
    (PR_SYMBOLS)
    (PR_DIRECT.PROOF . T)
    (PR_VARIABLE.PRINT.NAMES X Y Z U V W XX YY ZZ UU VV WW XXX YYY ZZZ UUU VVV WWW)
    (PR_PROTOCOL . T)
    (PR_LEFT.MARGIN . 0)
    (PR_RIGHT.MARGIN . 117)
    (PR_LATEX)
    (PR_LINELENGTH . 117)
    (PR_LITERALS)
   )

(REFUTATION (START.TIME 58351100)

(OPTIONS (TWO_RULES)
    (TWO_RULES.MAXLEVEL . 1)
    (TWO_SUPPRESS.NORULES)
    (RED.I_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.I_CLAUSE.PURITY . PARTIAL)
    (RED.I_CLAUSE.TAUTOLOGY . T)
    (RED.I_CLAUSE.TAUTOLOGY.RECHECK . PARTIAL)
    (RED.I_CLAUSE.SUBSUMPTION . T)
    (RED.I_CLAUSE.SUBSUMPTION.RECHECK . PARTIAL)
    (RED.I_CLAUSE.REPL.FACTORING . T)
    (RED.I_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.I_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.I_CLAUSE.REPL.RESOLUTION.RECHECK . T)
    (RED.I_CLAUSE.REWRITING . DEM)
    (RED.I_LINK.INCOMPATIBILITY . T)
    (RED.I_LINK.TAUTOLOGY)
    (RED.I_LINK.TAUTOLOGY.RECHECK)
    (RED.I_LINK.SUBSUMPTION)
    (RED.I_LINK.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.MULTIPLE.LITERALS . T)
    (RED.D_CLAUSE.PURITY . PARTIAL)
    (RED.D_CLAUSE.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_CLAUSE.TAUTOLOGY.RECHECK)
    (RED.D_CLAUSE.SUBSUMPTION.FORWARD . REMOVE-INHIBIT)
    (RED.D_CLAUSE.SUBSUMPTION.BACKWARD . REMOVE)
    (RED.D_CLAUSE.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.REPL.FACTORING)
    (RED.D_CLAUSE.REPL.FACTORING.RECHECK)
    (RED.D_CLAUSE.REPL.RESOLUTION)
    (RED.D_CLAUSE.REPL.RESOLUTION.RECHECK)
    (RED.D_CLAUSE.REWRITING . DEM)
    (RED.D_LINK.INCOMPATIBILITY)
    (RED.D_LINK.TAUTOLOGY)
    (RED.D_LINK.TAUTOLOGY.RECHECK)
    (RED.D_LINK.SUBSUMPTION)
    (RED.D_LINK.SUBSUMPTION.RECHECK)
    (FAC_INITIAL)
    (FAC_EACH.STEP)
    (STR_RESOLUTION . SET-OF-SUPPORT)
    (STR_R.SELECTION * 10 (+ 2 VARIABLES (* 2 DEPTH) (* 3 NOLIT)))
    (STR_LINK.DEPTH)
    (STR_TERM.DEPTH)
    (STR_FINITE.DOMAIN . T)
    (TERM_UNITS . T)
    (TERM_ITERATIONS . 0)
    (TERM_SET.OF.SUPPORT)
    (TERM_BREADTH.FIRST)
    (SORT_LITERALS)
    (SORT_MAX.UNIFICATION.RULE.STEPS . 100)
    (SORT_MAX.UNIFICATION.TREE.DEPTH . 100)
    (SORT_MAX.UNIFICATION.TREE.OPEN.NODES . 20)
    (SORT_UNIFIER.STOP.NUMBER . 100)
    (SORT_SHOW.VARIABLE.SORTS . T)
    (ER_PARAMODULATION . CLAUSE-GRAPH)
    (ER_WEIGHT.POLYNOMIALS)
    (ER_P.SELECTION * WEIGHT (IF SUPPORT 1 1.5) (IF EQUATIONAL 1 2))
    (ER_COMPLETION . UNFAILING)
    (ER_CP.REDUCTION . T)
    (ER_ORDERING . LEXICOGRAPHIC-RECURSIVE-PATH)
    (ER_OPERATOR.ORDERING * - + 0 1)
    (ER_KNUTH.BENDIX.WEIGHT (+ 1) (* 1) (- 0) (0 1) (1 1))
    (ER_POLYNOMIAL.WEIGHT (+ (X Y) (+ (* 2 Y) X)) (* (X Y) (+ (* X Y) X)) (- (X) (* X X)) (0 NIL 2) (1 NIL 2))
    (ER_NARROW.DEPTH . 0)
    (ER_NARROW.NEXT . DEPTH)
    (ER_NARROW.TEST NORM C DELTA SL N)
    (ER_COMPILE)
    (GEN_SPLITTING . 0)
    (GEN_PRESIMPLIFICATION . T)
    (GEN_MIN.EXPRESSION.LENGTH.FOR.FILE)
    (GEN_MIN.EXPRESSION.SIZE.FOR.FILE)
    (GEN_MANUAL.CONTROL . T)
    (GEN_MAXIMUM.STEPS)
    (GEN_GRAPH.SAVING)
    (GEN_SAVE.FILE . SAVEDEFAULT)
    (GEN_LISP.GARBAGE.COLLECTION)
    (GEN_COMMON.LISP)
    (TR_PREPROCESSING)
    (TR_STEP.MODE . LR)
    (TR_DUMP)
    (TR_CLAUSE.MODE . I)
    (TR_LINK.MODE . I)
    (TR_TRACE.FILE)
    (TR_TERMINAL . T)
    (PR_INFIX.FORM . T)
    (PR_PREFIX.FORM)
    (PR_OPTIONS)
    (PR_AXIOM.CLAUSES . T)
    (PR_SYMBOLS)
    (PR_DIRECT.PROOF . T)
    (PR_VARIABLE.PRINT.NAMES X Y Z U V W XX YY ZZ UU VV WW XXX YYY ZZZ UUU VVV WWW)
    (PR_PROTOCOL . T)
    (PR_LEFT.MARGIN . 0)
    (PR_RIGHT.MARGIN . 117)
    (PR_LATEX)
    (PR_LINELENGTH . 117)
    (PR_LITERALS)
   )
   (INITIAL   (CLAUSE 13 R.= AXIOM ((11 . ANY)) ((+ 2 (11 11)) ))
(CLAUSE 14 A1 AXIOM ()
   ((+ 4 (5)) (+ 4 (7)) ))
(CLAUSE 16 A2 AXIOM ((3 . ANY))
   ((- 4 (3)) (+ 6 (3 5)) (+ 6 (3 7)) ))
(CLAUSE 20 A3 AXIOM ((8 . ANY))
   ((- 4 (8)) (- 6 (8 5)) (+ 6 (7 8)) ))
(CLAUSE 29 A4 AXIOM ((9 . ANY))
   ((- 4 (9)) (- 6 (9 7)) (+ 6 (5 9)) ))
(CLAUSE 41 A5 AXIOM ((10 . ANY))
   ((- 4 (10)) (- 6 (7 10)) (- 6 (5 10)) ))   )
   (OPERATION (CLAUSE 87 R1 (41 16) ()
   ((- 4 (5)) (+ 6 (5 7)) (- 4 (5)) (- 6 (7 5)) ))
   (RESOLUTION 16 2 41 3 NIL (3 5 10 5) 87))
   (OPERATION (CLAUSE 87 R1 (41 16) ()
   ((+ 6 (5 7)) (- 4 (5)) (- 6 (7 5)) ))
   (DOUBLE.LITERAL 3 1 NIL 87))
   (OPERATION (CLAUSE 93 R2 (41 87) ()
   ((- 4 (5)) (- 6 (7 5)) (- 4 (7)) (- 6 (7 7)) ))
   (RESOLUTION 87 1 41 3 NIL (10 7) 93))
   (OPERATION (CLAUSE 130 R3 (20 29) ()
   ((- 4 (5)) (- 6 (5 7)) (- 4 (5)) (+ 6 (7 5)) ))
   (RESOLUTION 29 3 20 2 NIL (8 5 9 5) 130))
   (OPERATION (CLAUSE 130 R3 (20 29) ()
   ((- 4 (5)) (- 6 (5 7)) (+ 6 (7 5)) ))
   (DOUBLE.LITERAL 1 3 NIL 130))
   (OPERATION (CLAUSE 139 R4 (130 29) ()
   ((- 4 (7)) (- 6 (7 7)) (- 4 (5)) (+ 6 (7 5)) ))
   (RESOLUTION 29 3 130 2 NIL (9 7) 139))
   (OPERATION (CLAUSE 183 R5 (20 139) ()
   ((- 4 (7)) (- 6 (7 7)) (- 4 (5)) (- 4 (7)) (+ 6 (7 7)) ))
   (RESOLUTION 139 4 20 2 NIL (8 7) 183))
   (OPERATION (CLAUSE 202 R6 (41 29) ((213 . ANY))
   ((- 4 (213)) (- 6 (213 7)) (- 4 (213)) (- 6 (7 213)) ))
   (RESOLUTION 29 3 41 3 NIL (10 9) 202))
   (OPERATION (CLAUSE 202 R6 (41 29) ((213 . ANY))
   ((- 6 (213 7)) (- 4 (213)) (- 6 (7 213)) ))
   (DOUBLE.LITERAL 3 1 NIL 202))
   (OPERATION (CLAUSE 242 R7 (202 29) ()
   ((- 4 (7)) (- 6 (7 7)) (- 4 (5)) (- 6 (7 5)) ))
   (RESOLUTION 29 3 202 1 NIL (213 5 9 7) 242))
   (OPERATION (CLAUSE 262 R8 (202 20) ((241 . ANY))
   ((- 4 (241)) (- 6 (241 5)) (- 6 (241 7)) (- 4 (241)) ))
   (RESOLUTION 20 3 202 3 NIL (213 8) 262))
   (OPERATION (CLAUSE 262 R8 (202 20) ((241 . ANY))
   ((- 6 (241 5)) (- 6 (241 7)) (- 4 (241)) ))
   (DOUBLE.LITERAL 4 1 NIL 262))
   (OPERATION (CLAUSE 100 R9 (202 87) ()
   ((- 4 (5)) (- 6 (7 5)) (- 4 (5)) (- 6 (7 5)) ))
   (RESOLUTION 87 1 202 1 NIL (213 5) 100))
   (OPERATION (CLAUSE 100 R9 (202 87) ()
   ((- 4 (5)) (- 6 (7 5)) (- 4 (5)) ))
   (DOUBLE.LITERAL 2 4 NIL 100))
   (OPERATION (CLAUSE 100 R9 (202 87) ()
   ((- 4 (5)) (- 6 (7 5)) ))
   (DOUBLE.LITERAL 1 3 NIL 100))
   (OPERATION (CLAUSE 33 R10 (100 16) ()
   ((- 4 (7)) (+ 6 (7 7)) (- 4 (5)) ))
   (RESOLUTION 16 2 100 2 NIL (3 7) 33))
   (OPERATION (CLAUSE 145 R11 (262 16) ((94 . ANY))
   ((- 4 (94)) (+ 6 (94 7)) (- 6 (94 7)) (- 4 (94)) ))
   (RESOLUTION 16 2 262 1 NIL (241 3) 145))
   (OPERATION (CLAUSE 106 R12 (20 16) ((95 . ANY))
   ((- 4 (95)) (+ 6 (95 7)) (- 4 (95)) (+ 6 (7 95)) ))
   (RESOLUTION 16 2 20 2 NIL (8 3) 106))
   (OPERATION (CLAUSE 106 R12 (20 16) ((95 . ANY))
   ((+ 6 (95 7)) (- 4 (95)) (+ 6 (7 95)) ))
   (DOUBLE.LITERAL 3 1 NIL 106))
   (OPERATION (CLAUSE 325 R13 (130 106) ()
   ((- 4 (5)) (+ 6 (7 5)) (- 4 (5)) (+ 6 (7 5)) ))
   (RESOLUTION 106 1 130 2 NIL (95 5) 325))
   (OPERATION (CLAUSE 325 R13 (130 106) ()
   ((- 4 (5)) (- 4 (5)) (+ 6 (7 5)) ))
   (DOUBLE.LITERAL 4 2 NIL 325))
   (OPERATION (CLAUSE 325 R13 (130 106) ()
   ((- 4 (5)) (+ 6 (7 5)) ))
   (DOUBLE.LITERAL 2 1 NIL 325))
   (OPERATION (CLAUSE 359 R14 (100 325) ()
   ((- 4 (5)) (- 4 (5)) ))
   (RESOLUTION 325 2 100 2 NIL NIL 359))
   (OPERATION (CLAUSE 359 R14 (100 325) () ((- 4 (5)) ))
   (DOUBLE.LITERAL 2 1 NIL 359))
   (OPERATION (CLAUSE 110 R15 (359 14) () ((+ 4 (7)) ))
   (RESOLUTION 14 1 359 1 NIL NIL 110))
   (OPERATION (CLAUSE 147 R16 (41 106) ()
   ((- 4 (5)) (+ 6 (7 5)) (- 4 (7)) (- 6 (7 7)) ))
   (RESOLUTION 106 1 41 3 NIL (95 5 10 7) 147))
   (OPERATION (CLAUSE 91 R17 (202 106) ((195 . ANY))
   ((- 4 (195)) (+ 6 (7 195)) (- 4 (195)) (- 6 (7 195)) ))
   (RESOLUTION 106 1 202 1 NIL (213 95) 91))
   (OPERATION (CLAUSE 336 R6.F1 (202) ()
   ((- 4 (7)) (- 6 (7 7)) ))
   (FACTORIZATION 202 NIL (213 7) 336))
   (OPERATION (CLAUSE 22 R12.F2 (106) ()
   ((- 4 (7)) (+ 6 (7 7)) ))
   (FACTORIZATION 106 NIL (95 7) 22))
   (OPERATION (CLAUSE 165 R18 (202 22) ()
   ((- 4 (7)) (- 4 (7)) (- 6 (7 7)) ))
   (RESOLUTION 22 2 202 1 NIL (213 7) 165))
   (OPERATION (CLAUSE 288 R19 (22 110) () ((+ 6 (7 7)) ))
   (RESOLUTION 110 1 22 1 NIL NIL 288))
   (OPERATION (CLAUSE 328 R20 (336 110) () ((- 6 (7 7)) ))
   (RESOLUTION 110 1 336 1 NIL NIL 328))
   (OPERATION (CLAUSE 345 R21 (16 110) ()
   ((+ 6 (7 5)) (+ 6 (7 7)) ))
   (RESOLUTION 110 1 16 1 NIL (3 7) 345))
   (OPERATION (CLAUSE 369 R22 (20 110) ()
   ((- 6 (7 5)) (+ 6 (7 7)) ))
   (RESOLUTION 110 1 20 1 NIL (8 7) 369))
   (OPERATION (CLAUSE 267 R23 (41 110) ()
   ((- 6 (7 7)) (- 6 (5 7)) ))
   (RESOLUTION 110 1 41 1 NIL (10 7) 267))
   (OPERATION (CLAUSE 30 R24 (202 110) ()
   ((- 6 (7 7)) (- 6 (7 7)) ))
   (RESOLUTION 110 1 202 2 NIL (213 7) 30))
   (OPERATION (CLAUSE 279 R25 (262 110) ()
   ((- 6 (7 5)) (- 6 (7 7)) ))
   (RESOLUTION 110 1 262 3 NIL (241 7) 279))
   (OPERATION (CLAUSE 358 R26 (106 110) ()
   ((+ 6 (7 7)) (+ 6 (7 7)) ))
   (RESOLUTION 110 1 106 2 NIL (95 7) 358))
   (OPERATION (CLAUSE 172 R27 (328 16) ()
   ((- 4 (7)) (+ 6 (7 5)) ))
   (RESOLUTION 16 3 328 1 NIL (3 7) 172))
   (OPERATION (CLAUSE 192 R28 (172 110) () ((+ 6 (7 5)) ))
   (RESOLUTION 110 1 172 1 NIL NIL 192))(OPERATION (CLAUSE 210 R29 (262 110) ()((- 6 (7 5))(- 6 (7 7))))(RESOLUTION 110 1 262 3 NIL (241 7) 210))(OPERATION (CLAUSE 210 R29 (262 110 288 192) () ())(REPLACEMENT.OPERATION NIL (210 288 192 )(((210 . 2)(288 . 1)NIL)((210 . 1)(192 . 1)NIL))( NIL  NIL )NIL))
   (END.TIME 58568392)
   (SYMBOLS 
   (LET (NEW.ADDRESS)
   (LIST (CONS    6 (DT-PREDICATE.CREATE "P" '(ANY ANY)))
   (CONS    4 (DT-PREDICATE.CREATE "Q" '(ANY)))
   (PROG1 (CONS    2 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "=" '(ANY ANY))))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED SYMMETRIC REFLEXIVE SYMMETRIC REFLEXIVE)))
   (PROG1 (CONS    1 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "FALSE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (PROG1 (CONS    0 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "TRUE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (CONS    7 (DT-CONSTANT.CREATE "b" 'ANY))
   (CONS    5 (DT-CONSTANT.CREATE "a" 'ANY)))))
   (SPLITPART.IDENTIFIER 1)
   (RESULT SUCCESS 210)
)