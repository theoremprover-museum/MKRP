(COND ((FMT-LOAD " 3-SEP-84 13:58:31" NIL (((DO (A N) AND DO (B K) AND DO (C M) AND DO (D L)) (AND (+ 23 (15 22)
NIL) (AND (+ 23 (14 19) NIL) (AND (+ 23 (17 21) NIL) (+ 23 (18 20) NIL)))) QUANTIFICATION))) (COND (ST*LOAD.FLAG
(PROGN (PROGN (DT-RESET) (PROG ((ADDRLIST (QUOTE (ATP.MEMORY.NIL 10150 10155 10170 10175 10180 10185 10190 10195
10200 ATP.MEMORY.NIL 10210 10205 ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 10225 10240))) (DATALIST
(QUOTE (15 TRUE NIL NIL NIL (DEFINED) NIL ((- 1 (POSITIVE))) ((+ 1 (NEGATIVE))) ((+ 1 (NIL))) ((- 1 (NIL))) NIL
NIL (DT*ST-KIND NIL) PREDICATE 15 FALSE NIL NIL NIL (DEFINED) NIL ((- 2 (POSITIVE))) ((+ 2 (NEGATIVE))) ((+ 2 (NIL)))
((- 2 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 A P (DT*ST-KIND NIL) CONSTANT 5 B P (DT*ST-KIND NIL) CONSTANT
5 C P (DT*ST-KIND NIL) CONSTANT 5 D P (DT*ST-KIND NIL) CONSTANT 5 K O (DT*ST-KIND NIL) CONSTANT 5 L O (DT*ST-KIND
NIL) CONSTANT 5 M O (DT*ST-KIND NIL) CONSTANT 5 N O (DT*ST-KIND NIL) CONSTANT 15 DO NIL NIL (P O) NIL NIL ((- 23
(POSITIVE))) ((+ 23 (NEGATIVE))) ((+ 23 (NIL))) ((- 23 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 P NIL (ST*DATA
NIL DT*ST-KIND SYS-VAR) VARIABLE 5 O NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE))) (INCREMENT (IDIFFERENCE MEM*SIZE
10240)) COUNTER1) (MEM-RESET) (COND ((IGREATERP (IPLUS (IDIFFERENCE 27 1) (IDIFFERENCE 10240 10145)) MEM*SIZE)
(MEM=SATURATION.ENTERED)) ((EQ MEM*SIZE 10240) (SETQ COUNTER1 27) (MAPC ADDRLIST (FUNCTION (LAMBDA (RADDR) (SETA
MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1)) RADDR)))) (SETQ COUNTER1 (ADD1 MEM*SIZE)) (MAPC DATALIST (FUNCTION (LAMBDA
(DATA) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1)) DATA))))) (T (SETQ COUNTER1 27) (MAPC ADDRLIST (FUNCTION
(LAMBDA (RADDR) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1)) (COND ((EQ RADDR (QUOTE ATP.MEMORY.NIL)) RADDR)
((OR (EQ RADDR 0) (MINUSP RADDR)) RADDR) (T (IPLUS RADDR INCREMENT))))))) (SETQ COUNTER1 (ADD1 MEM*SIZE)) (MAPC
DATALIST (FUNCTION (LAMBDA (DATA) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1)) DATA)))))) (RPAQ MEM*NEXT.RADR
(IPLUS 10145 INCREMENT)) (RPAQ MEM*NEXT.VADR 27) (RPAQ MEM*REST (ADD1 (IDIFFERENCE MEM*NEXT.RADR MEM*NEXT.VADR)))
(RPAQ MEM*FIRST.REUSABLE.VADR NIL) (RPAQ MEM*LAST.REUSABLE.VADR NIL)) (PROGN (RPAQQ DT*SORT.ALL (O P ANY)) (RPAQQ
DT*SORT.NR 1) (RPAQQ DT*SORT.PROPERTIES (DT*MAX.SUBSORTS DT*LEAST.SUPERSORTS DT*TRANSITIVE.CLOSURE 
DT*INVERSE.TRANSITIVE.CLOSURE DT*MINIMAL.SUBSORTS DT*DIRECT.SUBSORTS DT*DIRECT.SUPERSORTS DT*DISJOINT.SORTS 
DT*COMPLETION.SORT)) (RPAQQ DT*VARIABLE.COUNTER 0) (RPAQQ DT*CONSTANT.COUNTER 0) (RPAQQ DT*CONSTANT.ALL (22 21
20 19 18 17 14 15)) (RPAQQ DT*ABBREVIATIONS NIL) (RPAQQ DT*FUNCTION.COUNTER 0) (RPAQQ DT*FUNCTION.ALL NIL) (RPAQQ
DT*FUNCTION.ADMISSIBLE.THEORIES (ASSOCIATIVE)) (RPAQQ DT*FUNCTION.ACTUAL.THEORIES NIL) (RPAQQ 
DT*FUNCTION.WITH.ARGUMENT.SYMMETRIES NIL) (RPAQQ DT*FUNCTION.COMPONENTS (PNAME ATTRIBUTES MAX.RANGE.SORT 
MAX.DOMAIN.SORTS MIN.RANGE.SORTS SORT.LIST SORT.LIST.INVERSE SORT.TREE.CALC ARGUMENT.SYMMETRIES ARITY G.L.B.OF.RANGES))
(RPAQQ DT*PREDICATE.ADMISSABLE.ATTRIBUTES (SYMMETRIC DEFINED REFLEXIVE)) (RPAQQ DT*PREDICATE.COUNTER 0) (RPAQQ
DT*EQUALITY.SYMBOLS (= := =: :=:)) (RPAQQ DT*EQUALITY.PREDICATES NIL) (RPAQQ DT*NONEQUALITY.PREDICATES (23 2 1))
(RPAQQ DT*PREDICATE.ALL (23 2 1)) (RPAQQ DT*PREDICATE.WITH.ATTRIBUTES NIL) (RPAQQ DT*PREDICATE.COMPONENTS (PNAME
POSITIVE.OCCURRENCES NEGATIVE.OCCURRENCES DOMAINSORTS ATTRIBUTES REFL.CLAUSE +ROTHERSIDES -ROTHERSIDES +SOTHERSIDES
-SOTHERSIDES +TOTHERSIDES -TOTHERSIDES)) (RPAQQ DT*TRUE.PREDICATE 1) (RPAQQ DT*FALSE.PREDICATE 2) (RPAQQ 
DT*UNI.CREATES.VARIABLES NIL) (RPAQQ DT*SIGN.MINUS.SYMBOLS (- --)) (RPAQQ DT*SIGN.PLUS.SYMBOLS (+ ++))) (PROGN)
(PROGN (SETPROPLIST (QUOTE DT*PREDICATE.WITH.ATTRIBUTES) (QUOTE NIL))) (PROGN (SETPROPLIST (QUOTE O) (QUOTE (
DT*INVERSE.TRANSITIVE.CLOSURE (O ANY) DT*DIRECT.SUPERSORTS (ANY) DT*MINIMAL.SUBSORTS (O) DT*MAX.SUBSORTS ((O O)
(P) (ANY O)) DT*TRANSITIVE.CLOSURE (O) DT*DIRECT.SUBSORTS NIL NIL NIL))) (SETPROPLIST (QUOTE P) (QUOTE (
DT*INVERSE.TRANSITIVE.CLOSURE (P ANY) DT*DIRECT.SUPERSORTS (ANY) DT*MINIMAL.SUBSORTS (P) DT*MAX.SUBSORTS ((O) (P
P) (ANY P)) DT*TRANSITIVE.CLOSURE (P) DT*DIRECT.SUBSORTS NIL NIL NIL))) (SETPROPLIST (QUOTE ANY) (QUOTE (
DT*LEAST.SUPERSORTS ((ANY ANY)) DT*INVERSE.TRANSITIVE.CLOSURE (ANY) DT*DIRECT.SUPERSORTS NIL DT*MINIMAL.SUBSORTS
(P) DT*MAX.SUBSORTS ((O O) (P P) (ANY ANY)) DT*TRANSITIVE.CLOSURE (O P ANY) DT*DIRECT.SUBSORTS (O P)))))) (RPAQQ
ST*STACK1 (NIL NIL NIL)) (RPAQQ ST*SYMBOL.ADDRESSES (NIL (ANY . T) (TRUE . 1) (FALSE . 2) (X_14 . 14) (X_15 . 15)
(P . T) (A . 15) (B . 14) (C . 17) (D . 18) (O . T) (K . 19) (L . 20) (M . 21) (N . 22) (DO . 23) (X_24 . 24) (X_25
. 25))))))))
STOP
 
