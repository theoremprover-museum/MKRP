(COND ((FMT-LOAD "11-SEP-84 13:10:15" NIL (((* PROPERSUBSETS ARE NOT EQUAL:) COMMENT COMMENT) ((ALL X,Y PROPERSUBSET
(X Y) IMPL NOT X = Y) (ALL 30 (ALL 29 (IMPL (+ 16 (29 30) NIL) (NOT (+ 7 (29 30) NIL))))) QUANTIFICATION))) (COND
(ST*LOAD.FLAG (PROGN (PROGN (DT-RESET) (PROG ((ADDRLIST (QUOTE (10008 10013 10027 10032 10037 10042 10056 10061
10066 10071 10085 10090 10095 10100 10115 10120 10125 10130 10145 10150 10155 10160 10165 10180 10195 10200 10205
10210 10225 10240))) (DATALIST (QUOTE (15 TRUE NIL NIL NIL (DEFINED) NIL ((- 1 (POSITIVE))) ((+ 1 (NEGATIVE)))
((+ 1 (NIL))) ((- 1 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 FALSE NIL NIL NIL (DEFINED) NIL ((- 2 (POSITIVE)))
((+ 2 (NEGATIVE))) ((+ 2 (NIL))) ((- 2 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
VARIABLE 15 MEMBER NIL NIL (ANY ANY) NIL NIL ((- 6 (POSITIVE))) ((+ 6 (NEGATIVE))) ((+ 6 (NIL))) ((- 6 (NIL)))
NIL NIL (DT*ST-KIND NIL) PREDICATE 15 = NIL NIL (ANY ANY) (DEFINED SYMMETRIC REFLEXIVE SYMMETRIC REFLEXIVE) NIL
((- 7 (POSITIVE . SYMMETRIC))) ((+ 7 (NEGATIVE . SYMMETRIC))) ((+ 7 (NIL . SYMMETRIC))) ((- 7 (NIL . SYMMETRIC)))
NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 EMPTYSET ANY (DT*ST-KIND
NIL) CONSTANT 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE
15 SUBSET NIL NIL (ANY ANY) NIL NIL ((- 12 (POSITIVE))) ((+ 12 (NEGATIVE))) ((+ 12 (NIL))) ((- 12 (NIL))) NIL NIL
(DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 15 PROPERSUBSET NIL NIL (ANY ANY) NIL NIL
((- 16 (POSITIVE))) ((+ 16 (NEGATIVE))) ((+ 16 (NIL))) ((- 16 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY
NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA
NIL DT*ST-KIND SYS-VAR) VARIABLE 14 POWERSET NIL ANY (ANY) NIL NIL NIL NIL NIL 1 ANY (DT*ST-KIND NIL) FUNCTION
5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
(ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 14 UNION NIL ANY (ANY ANY) NIL NIL NIL NIL NIL 2 ANY (DT*ST-KIND NIL)
FUNCTION 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE
5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 14 INTERSECTION NIL ANY (ANY ANY) NIL NIL NIL NIL NIL 2 ANY
(DT*ST-KIND NIL) FUNCTION 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE))) (INCREMENT (IDIFFERENCE MEM*SIZE 10240)) COUNTER1) (MEM-RESET) (COND ((IGREATERP (IPLUS (
IDIFFERENCE 31 1) (IDIFFERENCE 10240 10003)) MEM*SIZE) (MEM=SATURATION.ENTERED)) ((EQ MEM*SIZE 10240) (SETQ COUNTER1
31) (MAPC ADDRLIST (FUNCTION (LAMBDA (RADDR) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1)) RADDR)))) (SETQ COUNTER1
(ADD1 MEM*SIZE)) (MAPC DATALIST (FUNCTION (LAMBDA (DATA) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1)) DATA)))))
(T (SETQ COUNTER1 31) (MAPC ADDRLIST (FUNCTION (LAMBDA (RADDR) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1))
(COND ((EQ RADDR (QUOTE ATP.MEMORY.NIL)) RADDR) ((OR (EQ RADDR 0) (MINUSP RADDR)) RADDR) (T (IPLUS RADDR INCREMENT)))))))
(SETQ COUNTER1 (ADD1 MEM*SIZE)) (MAPC DATALIST (FUNCTION (LAMBDA (DATA) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1))
DATA)))))) (RPAQ MEM*NEXT.RADR (IPLUS 10003 INCREMENT)) (RPAQ MEM*NEXT.VADR 31) (RPAQ MEM*REST (ADD1 (IDIFFERENCE
MEM*NEXT.RADR MEM*NEXT.VADR))) (RPAQ MEM*FIRST.REUSABLE.VADR NIL) (RPAQ MEM*LAST.REUSABLE.VADR NIL)) (PROGN (RPAQQ
DT*SORT.ALL (ANY)) (RPAQQ DT*SORT.NR 1) (RPAQQ DT*SORT.PROPERTIES (DT*MAX.SUBSORTS DT*LEAST.SUPERSORTS 
DT*TRANSITIVE.CLOSURE DT*INVERSE.TRANSITIVE.CLOSURE DT*MINIMAL.SUBSORTS DT*DIRECT.SUBSORTS DT*DIRECT.SUPERSORTS
DT*DISJOINT.SORTS DT*COMPLETION.SORT)) (RPAQQ DT*VARIABLE.COUNTER 0) (RPAQQ DT*CONSTANT.COUNTER 0) (RPAQQ 
DT*CONSTANT.ALL (9)) (RPAQQ DT*ABBREVIATIONS NIL) (RPAQQ DT*FUNCTION.COUNTER 0) (RPAQQ DT*FUNCTION.ALL (28 24 20))
(RPAQQ DT*FUNCTION.ADMISSIBLE.THEORIES (ASSOCIATIVE)) (RPAQQ DT*FUNCTION.ACTUAL.THEORIES NIL) (RPAQQ 
DT*FUNCTION.WITH.ARGUMENT.SYMMETRIES NIL) (RPAQQ DT*FUNCTION.COMPONENTS (PNAME ATTRIBUTES MAX.RANGE.SORT 
MAX.DOMAIN.SORTS MIN.RANGE.SORTS SORT.LIST SORT.LIST.INVERSE SORT.TREE.CALC ARGUMENT.SYMMETRIES ARITY G.L.B.OF.RANGES))
(RPAQQ DT*PREDICATE.ADMISSABLE.ATTRIBUTES (SYMMETRIC DEFINED REFLEXIVE)) (RPAQQ DT*PREDICATE.COUNTER 0) (RPAQQ
DT*EQUALITY.SYMBOLS (= := =: :=:)) (RPAQQ DT*EQUALITY.PREDICATES (7)) (RPAQQ DT*NONEQUALITY.PREDICATES (16 12 6
2 1)) (RPAQQ DT*PREDICATE.ALL (16 12 7 6 2 1)) (RPAQQ DT*PREDICATE.WITH.ATTRIBUTES NIL) (RPAQQ DT*PREDICATE.COMPONENTS
(PNAME POSITIVE.OCCURRENCES NEGATIVE.OCCURRENCES DOMAINSORTS ATTRIBUTES REFL.CLAUSE +ROTHERSIDES -ROTHERSIDES 
+SOTHERSIDES -SOTHERSIDES +TOTHERSIDES -TOTHERSIDES)) (RPAQQ DT*TRUE.PREDICATE 1) (RPAQQ DT*FALSE.PREDICATE 2)
(RPAQQ DT*UNI.CREATES.VARIABLES NIL) (RPAQQ DT*SIGN.MINUS.SYMBOLS (- --)) (RPAQQ DT*SIGN.PLUS.SYMBOLS (+ ++)))
(PROGN) (PROGN (SETPROPLIST (QUOTE DT*PREDICATE.WITH.ATTRIBUTES) (QUOTE (REFLEXIVE (7 7) SYMMETRIC (7 7) DEFINED
(7 2 1))))) (PROGN (SETPROPLIST (QUOTE ANY) (QUOTE (DT*INVERSE.TRANSITIVE.CLOSURE (ANY) DT*DIRECT.SUPERSORTS NIL
DT*MINIMAL.SUBSORTS (ANY) DT*MAX.SUBSORTS ((ANY ANY)) DT*TRANSITIVE.CLOSURE (ANY) DT*DIRECT.SUBSORTS NIL))))) (RPAQQ
ST*STACK1 (NIL ((X_30 PROGN (DT-VARIABLE.DELETE 30) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_30) ST*SYMBOL.ADDRESSES)
)) (X_29 PROGN (DT-VARIABLE.DELETE 29) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_29) ST*SYMBOL.ADDRESSES))))
NIL NIL)) (RPAQQ ST*SYMBOL.ADDRESSES (NIL (ANY . T) (TRUE . 1) (FALSE . 2) (X_3 . 3) (X_4 . 4) (X_5 . 5) (MEMBER
. 6) (= . 7) (X_8 . 8) (EMPTYSET . 9) (X_10 . 10) (X_11 . 11) (SUBSET . 12) (X_13 . 13) (X_14 . 14) (X_15 . 15)
(PROPERSUBSET . 16) (X_17 . 17) (X_18 . 18) (X_19 . 19) (POWERSET . 20) (X_21 . 21) (X_22 . 22) (X_23 . 23) (UNION
. 24) (X_25 . 25) (X_26 . 26) (X_27 . 27) (INTERSECTION . 28) (X_29 . 29) (X_30 . 30))))))))
STOP
 
