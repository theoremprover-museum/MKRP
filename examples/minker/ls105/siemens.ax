(COND ((FMT-LOAD " 6-SEP-84 20:37:25" NIL (((ALL X,Y,Z NOT S (X Y) OR NOT M (Z X) OR M (Z Y)) (ALL 5 (ALL 4 (ALL
3 (OR (NOT (+ 6 (3 4) NIL)) (OR (NOT (+ 7 (5 3) NIL)) (+ 7 (5 4) NIL)))))) QUANTIFICATION) ((ALL X,Y M (F (X Y)
X) OR S (X Y)) (ALL 9 (ALL 8 (OR (+ 7 ((10 8 9) 8) NIL) (+ 6 (8 9) NIL)))) QUANTIFICATION) ((ALL X,Y NOT M (F (X
Y) Y) OR S (X Y)) (ALL 12 (ALL 11 (OR (NOT (+ 7 ((10 11 12) 12) NIL)) (+ 6 (11 12) NIL)))) QUANTIFICATION) ((ALL
X,Y NOT E (X Y) OR S (X Y)) (ALL 14 (ALL 13 (OR (NOT (+ 15 (13 14) NIL)) (+ 6 (13 14) NIL)))) QUANTIFICATION) ((ALL
X,Y NOT E (X Y) OR S (Y X)) (ALL 17 (ALL 16 (OR (NOT (+ 15 (16 17) NIL)) (+ 6 (17 16) NIL)))) QUANTIFICATION) ((ALL
X,Y NOT S (X Y) OR NOT S (Y X) OR E (X Y)) (ALL 19 (ALL 18 (OR (NOT (+ 6 (18 19) NIL)) (OR (NOT (+ 6 (19 18) NIL))
(+ 15 (18 19) NIL))))) QUANTIFICATION) ((ALL X,Y,Z,W NOT UN (X Y Z) OR NOT M (W Z) OR M (W X) OR M (W Y)) (ALL
23 (ALL 22 (ALL 21 (ALL 20 (OR (NOT (+ 24 (20 21 22) NIL)) (OR (NOT (+ 7 (23 22) NIL)) (OR (+ 7 (23 20) NIL) (+
7 (23 21) NIL)))))))) QUANTIFICATION) ((ALL X,Y,Z,W NOT UN (X Y Z) OR NOT M (W X) OR M (W Z)) (ALL 28 (ALL 27 (ALL
26 (ALL 25 (OR (NOT (+ 24 (25 26 27) NIL)) (OR (NOT (+ 7 (28 25) NIL)) (+ 7 (28 27) NIL))))))) QUANTIFICATION)
((ALL X,Y,Z,W NOT UN (X Y Z) OR NOT M (W Y) OR M (W Z)) (ALL 32 (ALL 31 (ALL 30 (ALL 29 (OR (NOT (+ 24 (29 30 31)
NIL)) (OR (NOT (+ 7 (32 30) NIL)) (+ 7 (32 31) NIL))))))) QUANTIFICATION) ((ALL X,Y,Z M (G (X Y Z) Z) OR M (G (X
Y Z) X) OR M (G (X Y Z) Y) OR UN (X Y Z)) (ALL 35 (ALL 34 (ALL 33 (OR (+ 7 ((36 33 34 35) 35) NIL) (OR (+ 7 ((36
33 34 35) 33) NIL) (OR (+ 7 ((36 33 34 35) 34) NIL) (+ 24 (33 34 35) NIL))))))) QUANTIFICATION) ((ALL X,Y,Z NOT
M (G (X Y Z) X) OR NOT M (G (X Y Z) Z) OR UN (X Y Z)) (ALL 39 (ALL 38 (ALL 37 (OR (NOT (+ 7 ((36 37 38 39) 37)
NIL)) (OR (NOT (+ 7 ((36 37 38 39) 39) NIL)) (+ 24 (37 38 39) NIL)))))) QUANTIFICATION) ((ALL X,Y,Z NOT M (G (X
Y Z) Y) OR NOT M (G (X Y Z) Z) OR UN (X Y Z)) (ALL 42 (ALL 41 (ALL 40 (OR (NOT (+ 7 ((36 40 41 42) 41) NIL)) (OR
(NOT (+ 7 ((36 40 41 42) 42) NIL)) (+ 24 (40 41 42) NIL)))))) QUANTIFICATION))) (COND (ST*LOAD.FLAG (PROGN (PROGN
(DT-RESET) (PROG ((ADDRLIST (QUOTE (9957 9962 9967 9972 9977 9982 9996 10001 10006 10011 10016 10021 10026 10031
10036 10041 10046 10051 10066 10071 10076 10081 10086 10091 10096 10101 10106 10121 10126 10131 10136 10141 10155
10160 10165 10180 10195 10200 10205 10210 10225 10240))) (DATALIST (QUOTE (15 TRUE NIL NIL NIL (DEFINED) NIL ((-
1 (POSITIVE))) ((+ 1 (NEGATIVE))) ((+ 1 (NIL))) ((- 1 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 FALSE NIL NIL
NIL (DEFINED) NIL ((- 2 (POSITIVE))) ((+ 2 (NEGATIVE))) ((+ 2 (NIL))) ((- 2 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE
5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
(ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 15 S NIL NIL (ANY ANY) NIL NIL ((- 6 (POSITIVE))) ((+ 6 (NEGATIVE)))
((+ 6 (NIL))) ((- 6 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 M NIL NIL (ANY ANY) NIL NIL ((- 7 (POSITIVE)))
((+ 7 (NEGATIVE))) ((+ 7 (NIL))) ((- 7 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 14 F NIL ANY (ANY ANY) NIL NIL NIL NIL NIL
2 ANY (DT*ST-KIND NIL) FUNCTION 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
VARIABLE 15 E NIL NIL (ANY ANY) NIL NIL ((- 15 (POSITIVE))) ((+ 15 (NEGATIVE))) ((+ 15 (NIL))) ((- 15 (NIL))) NIL
NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE
5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 15 UN NIL
NIL (ANY ANY ANY) NIL NIL ((- 24 (POSITIVE))) ((+ 24 (NEGATIVE))) ((+ 24 (NIL))) ((- 24 (NIL))) NIL NIL (DT*ST-KIND
NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE
5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
(ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA
NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
VARIABLE 14 G NIL ANY (ANY ANY ANY) NIL NIL NIL NIL NIL 3 ANY (DT*ST-KIND NIL) FUNCTION 5 ANY NIL (ST*DATA NIL
DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE))) (INCREMENT (IDIFFERENCE MEM*SIZE 10240)) COUNTER1)
(MEM-RESET) (COND ((IGREATERP (IPLUS (IDIFFERENCE 43 1) (IDIFFERENCE 10240 9952)) MEM*SIZE) (MEM=SATURATION.ENTERED))
((EQ MEM*SIZE 10240) (SETQ COUNTER1 43) (MAPC ADDRLIST (FUNCTION (LAMBDA (RADDR) (SETA MEM*MEMORY (SETQ COUNTER1
(SUB1 COUNTER1)) RADDR)))) (SETQ COUNTER1 (ADD1 MEM*SIZE)) (MAPC DATALIST (FUNCTION (LAMBDA (DATA) (SETA MEM*MEMORY
(SETQ COUNTER1 (SUB1 COUNTER1)) DATA))))) (T (SETQ COUNTER1 43) (MAPC ADDRLIST (FUNCTION (LAMBDA (RADDR) (SETA
MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1)) (COND ((EQ RADDR (QUOTE ATP.MEMORY.NIL)) RADDR) ((OR (EQ RADDR 0) (MINUSP
RADDR)) RADDR) (T (IPLUS RADDR INCREMENT))))))) (SETQ COUNTER1 (ADD1 MEM*SIZE)) (MAPC DATALIST (FUNCTION (LAMBDA
(DATA) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1)) DATA)))))) (RPAQ MEM*NEXT.RADR (IPLUS 9952 INCREMENT))
(RPAQ MEM*NEXT.VADR 43) (RPAQ MEM*REST (ADD1 (IDIFFERENCE MEM*NEXT.RADR MEM*NEXT.VADR))) (RPAQ MEM*FIRST.REUSABLE.VADR
NIL) (RPAQ MEM*LAST.REUSABLE.VADR NIL)) (PROGN (RPAQQ DT*SORT.ALL (ANY)) (RPAQQ DT*SORT.NR 1) (RPAQQ DT*SORT.PROPERTIES
(DT*MAX.SUBSORTS DT*LEAST.SUPERSORTS DT*TRANSITIVE.CLOSURE DT*INVERSE.TRANSITIVE.CLOSURE DT*MINIMAL.SUBSORTS 
DT*DIRECT.SUBSORTS DT*DIRECT.SUPERSORTS DT*DISJOINT.SORTS DT*COMPLETION.SORT)) (RPAQQ DT*VARIABLE.COUNTER 0) (RPAQQ
DT*CONSTANT.COUNTER 0) (RPAQQ DT*CONSTANT.ALL NIL) (RPAQQ DT*ABBREVIATIONS NIL) (RPAQQ DT*FUNCTION.COUNTER 0) (RPAQQ
DT*FUNCTION.ALL (36 10)) (RPAQQ DT*FUNCTION.ADMISSIBLE.THEORIES (ASSOCIATIVE)) (RPAQQ DT*FUNCTION.ACTUAL.THEORIES
NIL) (RPAQQ DT*FUNCTION.WITH.ARGUMENT.SYMMETRIES NIL) (RPAQQ DT*FUNCTION.COMPONENTS (PNAME ATTRIBUTES MAX.RANGE.SORT
MAX.DOMAIN.SORTS MIN.RANGE.SORTS SORT.LIST SORT.LIST.INVERSE SORT.TREE.CALC ARGUMENT.SYMMETRIES ARITY G.L.B.OF.RANGES))
(RPAQQ DT*PREDICATE.ADMISSABLE.ATTRIBUTES (SYMMETRIC DEFINED REFLEXIVE)) (RPAQQ DT*PREDICATE.COUNTER 0) (RPAQQ
DT*EQUALITY.SYMBOLS (= := =: :=:)) (RPAQQ DT*EQUALITY.PREDICATES NIL) (RPAQQ DT*NONEQUALITY.PREDICATES (24 15 7
6 2 1)) (RPAQQ DT*PREDICATE.ALL (24 15 7 6 2 1)) (RPAQQ DT*PREDICATE.WITH.ATTRIBUTES NIL) (RPAQQ DT*PREDICATE.COMPONENTS
(PNAME POSITIVE.OCCURRENCES NEGATIVE.OCCURRENCES DOMAINSORTS ATTRIBUTES REFL.CLAUSE +ROTHERSIDES -ROTHERSIDES 
+SOTHERSIDES -SOTHERSIDES +TOTHERSIDES -TOTHERSIDES)) (RPAQQ DT*TRUE.PREDICATE 1) (RPAQQ DT*FALSE.PREDICATE 2)
(RPAQQ DT*UNI.CREATES.VARIABLES NIL) (RPAQQ DT*SIGN.MINUS.SYMBOLS (- --)) (RPAQQ DT*SIGN.PLUS.SYMBOLS (+ ++)))
(PROGN) (PROGN (SETPROPLIST (QUOTE DT*PREDICATE.WITH.ATTRIBUTES) (QUOTE (DEFINED (2 1))))) (PROGN (SETPROPLIST
(QUOTE ANY) (QUOTE (DT*INVERSE.TRANSITIVE.CLOSURE (ANY) DT*DIRECT.SUPERSORTS NIL DT*MINIMAL.SUBSORTS (ANY) 
DT*MAX.SUBSORTS ((ANY ANY)) DT*TRANSITIVE.CLOSURE (ANY) DT*DIRECT.SUBSORTS NIL))))) (RPAQQ ST*STACK1 (NIL ((X_42
PROGN (DT-VARIABLE.DELETE 42) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_42) ST*SYMBOL.ADDRESSES))) (X_41 PROGN
(DT-VARIABLE.DELETE 41) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_41) ST*SYMBOL.ADDRESSES))) (X_40 PROGN (
DT-VARIABLE.DELETE 40) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_40) ST*SYMBOL.ADDRESSES)))) ((X_39 PROGN (
DT-VARIABLE.DELETE 39) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_39) ST*SYMBOL.ADDRESSES))) (X_38 PROGN (
DT-VARIABLE.DELETE 38) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_38) ST*SYMBOL.ADDRESSES))) (X_37 PROGN (
DT-VARIABLE.DELETE 37) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_37) ST*SYMBOL.ADDRESSES)))) ((G PROGN (
DT-FUNCTION.DELETE 36) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE G) ST*SYMBOL.ADDRESSES))) (X_35 PROGN (
DT-VARIABLE.DELETE 35) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_35) ST*SYMBOL.ADDRESSES))) (X_34 PROGN (
DT-VARIABLE.DELETE 34) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_34) ST*SYMBOL.ADDRESSES))) (X_33 PROGN (
DT-VARIABLE.DELETE 33) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_33) ST*SYMBOL.ADDRESSES)))) ((X_32 PROGN (
DT-VARIABLE.DELETE 32) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_32) ST*SYMBOL.ADDRESSES))) (X_31 PROGN (
DT-VARIABLE.DELETE 31) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_31) ST*SYMBOL.ADDRESSES))) (X_30 PROGN (
DT-VARIABLE.DELETE 30) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_30) ST*SYMBOL.ADDRESSES))) (X_29 PROGN (
DT-VARIABLE.DELETE 29) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_29) ST*SYMBOL.ADDRESSES)))) ((X_28 PROGN (
DT-VARIABLE.DELETE 28) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_28) ST*SYMBOL.ADDRESSES))) (X_27 PROGN (
DT-VARIABLE.DELETE 27) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_27) ST*SYMBOL.ADDRESSES))) (X_26 PROGN (
DT-VARIABLE.DELETE 26) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_26) ST*SYMBOL.ADDRESSES))) (X_25 PROGN (
DT-VARIABLE.DELETE 25) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_25) ST*SYMBOL.ADDRESSES)))) ((UN PROGN (
DT-PREDICATE.DELETE 24) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE UN) ST*SYMBOL.ADDRESSES))) (X_23 PROGN (
DT-VARIABLE.DELETE 23) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_23) ST*SYMBOL.ADDRESSES))) (X_22 PROGN (
DT-VARIABLE.DELETE 22) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_22) ST*SYMBOL.ADDRESSES))) (X_21 PROGN (
DT-VARIABLE.DELETE 21) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_21) ST*SYMBOL.ADDRESSES))) (X_20 PROGN (
DT-VARIABLE.DELETE 20) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_20) ST*SYMBOL.ADDRESSES)))) ((X_19 PROGN (
DT-VARIABLE.DELETE 19) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_19) ST*SYMBOL.ADDRESSES))) (X_18 PROGN (
DT-VARIABLE.DELETE 18) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_18) ST*SYMBOL.ADDRESSES)))) ((X_17 PROGN (
DT-VARIABLE.DELETE 17) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_17) ST*SYMBOL.ADDRESSES))) (X_16 PROGN (
DT-VARIABLE.DELETE 16) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_16) ST*SYMBOL.ADDRESSES)))) ((E PROGN (
DT-PREDICATE.DELETE 15) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE E) ST*SYMBOL.ADDRESSES))) (X_14 PROGN (
DT-VARIABLE.DELETE 14) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_14) ST*SYMBOL.ADDRESSES))) (X_13 PROGN (
DT-VARIABLE.DELETE 13) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_13) ST*SYMBOL.ADDRESSES)))) ((X_12 PROGN (
DT-VARIABLE.DELETE 12) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_12) ST*SYMBOL.ADDRESSES))) (X_11 PROGN (
DT-VARIABLE.DELETE 11) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_11) ST*SYMBOL.ADDRESSES)))) ((F PROGN (
DT-FUNCTION.DELETE 10) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE F) ST*SYMBOL.ADDRESSES))) (X_9 PROGN (
DT-VARIABLE.DELETE 9) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_9) ST*SYMBOL.ADDRESSES))) (X_8 PROGN (
DT-VARIABLE.DELETE 8) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_8) ST*SYMBOL.ADDRESSES)))) ((M PROGN (
DT-PREDICATE.DELETE 7) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE M) ST*SYMBOL.ADDRESSES))) (S PROGN (
DT-PREDICATE.DELETE 6) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE S) ST*SYMBOL.ADDRESSES))) (X_5 PROGN (
DT-VARIABLE.DELETE 5) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_5) ST*SYMBOL.ADDRESSES))) (X_4 PROGN (
DT-VARIABLE.DELETE 4) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_4) ST*SYMBOL.ADDRESSES))) (X_3 PROGN (
DT-VARIABLE.DELETE 3) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_3) ST*SYMBOL.ADDRESSES)))) ((FALSE PROGN (
DT-PREDICATE.DELETE 2) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE FALSE) ST*SYMBOL.ADDRESSES))) (TRUE PROGN (
DT-PREDICATE.DELETE 1) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE TRUE) ST*SYMBOL.ADDRESSES))) (ANY PROGN (
DT-SORT.ST.REMOVE (QUOTE ANY)) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE ANY) ST*SYMBOL.ADDRESSES))) (ANY REMPROP
(QUOTE ANY) (QUOTE ST*DATA))))) (RPAQQ ST*SYMBOL.ADDRESSES (NIL (ANY . T) (TRUE . 1) (FALSE . 2) (X_3 . 3) (X_4
. 4) (X_5 . 5) (S . 6) (M . 7) (X_8 . 8) (X_9 . 9) (F . 10) (X_11 . 11) (X_12 . 12) (X_13 . 13) (X_14 . 14) (E
. 15) (X_16 . 16) (X_17 . 17) (X_18 . 18) (X_19 . 19) (X_20 . 20) (X_21 . 21) (X_22 . 22) (X_23 . 23) (UN . 24)
(X_25 . 25) (X_26 . 26) (X_27 . 27) (X_28 . 28) (X_29 . 29) (X_30 . 30) (X_31 . 31) (X_32 . 32) (X_33 . 33) (X_34
. 34) (X_35 . 35) (G . 36) (X_37 . 37) (X_38 . 38) (X_39 . 39) (X_40 . 40) (X_41 . 41) (X_42 . 42))))))))STOP
 
