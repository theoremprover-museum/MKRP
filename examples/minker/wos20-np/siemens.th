(COND ((FMT-LOAD " 6-SEP-84 21:20:36" NIL (((NOT (NOT O (A) AND O (B) AND P (B G (A) C) AND P (A C D) AND NOT O
(D))) (NOT (AND (NOT (+ 56 (82) NIL)) (AND (+ 56 (83) NIL) (AND (+ 5 (83 (7 82) 84) NIL) (AND (+ 5 (82 84 85) NIL)
(NOT (+ 56 (85) NIL))))))) QUANTIFICATION))) (COND (ST*LOAD.FLAG (PROGN (PROGN (DT-RESET) (PROG ((ADDRLIST (QUOTE
(9743 9748 9753 9758 9763 9768 9773 9778 9783 9788 9793 9798 9803 9808 9813 9818 9823 9828 9833 9838 9843 9848
9862 9867 9872 9877 9882 9887 9892 9907 9912 9917 9922 9927 9932 9937 9942 9947 9952 9957 9962 9967 9972 9977 9982
9987 9992 9997 10002 10007 10012 10017 10022 10027 10032 10037 10042 10047 10052 10067 10072 10077 10082 10087
10092 10097 10102 10107 10112 10117 10122 10127 10132 10137 10142 10156 10161 10166 10180 10185 10200 10205 10210
10225 10240))) (DATALIST (QUOTE (15 TRUE NIL NIL NIL (DEFINED) NIL ((- 1 (POSITIVE))) ((+ 1 (NEGATIVE))) ((+ 1
(NIL))) ((- 1 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 FALSE NIL NIL NIL (DEFINED) NIL ((- 2 (POSITIVE)))
((+ 2 (NEGATIVE))) ((+ 2 (NIL))) ((- 2 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 5 E ANY (DT*ST-KIND NIL) CONSTANT 15 P NIL NIL (ANY ANY ANY) NIL NIL ((- 5 (POSITIVE))) ((+ 5
(NEGATIVE))) ((+ 5 (NIL))) ((- 5 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
VARIABLE 14 G NIL ANY (ANY) NIL NIL NIL NIL NIL 1 ANY (DT*ST-KIND NIL) FUNCTION 5 ANY NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 14 F NIL ANY (ANY ANY) NIL NIL NIL NIL NIL
2 ANY (DT*ST-KIND NIL) FUNCTION 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE
5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
(ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA
NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
VARIABLE 15 R NIL NIL (ANY ANY) NIL NIL ((- 26 (POSITIVE))) ((+ 26 (NEGATIVE))) ((+ 26 (NIL))) ((- 26 (NIL))) NIL
NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE
5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
(ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA
NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE
5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
(ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA
NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE
5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 15 O NIL NIL (ANY) NIL NIL ((- 56 (POSITIVE))) ((+ 56 (NEGATIVE)))
((+ 56 (NIL))) ((- 56 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE
5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
(ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA
NIL DT*ST-KIND SYS-VAR) VARIABLE 14 I NIL ANY (ANY ANY) NIL NIL NIL NIL NIL 2 ANY (DT*ST-KIND NIL) FUNCTION 5 ANY
NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA
NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE
5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
(ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA
NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
VARIABLE 5 A ANY (DT*ST-KIND NIL) CONSTANT 5 B ANY (DT*ST-KIND NIL) CONSTANT 5 C ANY (DT*ST-KIND NIL) CONSTANT
5 D ANY (DT*ST-KIND NIL) CONSTANT))) (INCREMENT (IDIFFERENCE MEM*SIZE 10240)) COUNTER1) (MEM-RESET) (COND ((IGREATERP
(IPLUS (IDIFFERENCE 86 1) (IDIFFERENCE 10240 9738)) MEM*SIZE) (MEM=SATURATION.ENTERED)) ((EQ MEM*SIZE 10240) (SETQ
COUNTER1 86) (MAPC ADDRLIST (FUNCTION (LAMBDA (RADDR) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1)) RADDR))))
(SETQ COUNTER1 (ADD1 MEM*SIZE)) (MAPC DATALIST (FUNCTION (LAMBDA (DATA) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1))
DATA))))) (T (SETQ COUNTER1 86) (MAPC ADDRLIST (FUNCTION (LAMBDA (RADDR) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1
COUNTER1)) (COND ((EQ RADDR (QUOTE ATP.MEMORY.NIL)) RADDR) ((OR (EQ RADDR 0) (MINUSP RADDR)) RADDR) (T (IPLUS RADDR
INCREMENT))))))) (SETQ COUNTER1 (ADD1 MEM*SIZE)) (MAPC DATALIST (FUNCTION (LAMBDA (DATA) (SETA MEM*MEMORY (SETQ
COUNTER1 (SUB1 COUNTER1)) DATA)))))) (RPAQ MEM*NEXT.RADR (IPLUS 9738 INCREMENT)) (RPAQ MEM*NEXT.VADR 86) (RPAQ
MEM*REST (ADD1 (IDIFFERENCE MEM*NEXT.RADR MEM*NEXT.VADR))) (RPAQ MEM*FIRST.REUSABLE.VADR NIL) (RPAQ 
MEM*LAST.REUSABLE.VADR NIL)) (PROGN (RPAQQ DT*SORT.ALL (ANY)) (RPAQQ DT*SORT.NR 1) (RPAQQ DT*SORT.PROPERTIES (
DT*MAX.SUBSORTS DT*LEAST.SUPERSORTS DT*TRANSITIVE.CLOSURE DT*INVERSE.TRANSITIVE.CLOSURE DT*MINIMAL.SUBSORTS 
DT*DIRECT.SUBSORTS DT*DIRECT.SUPERSORTS DT*DISJOINT.SORTS DT*COMPLETION.SORT)) (RPAQQ DT*VARIABLE.COUNTER 0) (RPAQQ
DT*CONSTANT.COUNTER 0) (RPAQQ DT*CONSTANT.ALL (85 84 83 82 4)) (RPAQQ DT*ABBREVIATIONS NIL) (RPAQQ DT*FUNCTION.COUNTER
0) (RPAQQ DT*FUNCTION.ALL (63 10 7)) (RPAQQ DT*FUNCTION.ADMISSIBLE.THEORIES (ASSOCIATIVE)) (RPAQQ 
DT*FUNCTION.ACTUAL.THEORIES NIL) (RPAQQ DT*FUNCTION.WITH.ARGUMENT.SYMMETRIES NIL) (RPAQQ DT*FUNCTION.COMPONENTS
(PNAME ATTRIBUTES MAX.RANGE.SORT MAX.DOMAIN.SORTS MIN.RANGE.SORTS SORT.LIST SORT.LIST.INVERSE SORT.TREE.CALC 
ARGUMENT.SYMMETRIES ARITY G.L.B.OF.RANGES)) (RPAQQ DT*PREDICATE.ADMISSABLE.ATTRIBUTES (SYMMETRIC DEFINED REFLEXIVE))
(RPAQQ DT*PREDICATE.COUNTER 0) (RPAQQ DT*EQUALITY.SYMBOLS (= := =: :=:)) (RPAQQ DT*EQUALITY.PREDICATES NIL) (RPAQQ
DT*NONEQUALITY.PREDICATES (56 26 5 2 1)) (RPAQQ DT*PREDICATE.ALL (56 26 5 2 1)) (RPAQQ DT*PREDICATE.WITH.ATTRIBUTES
NIL) (RPAQQ DT*PREDICATE.COMPONENTS (PNAME POSITIVE.OCCURRENCES NEGATIVE.OCCURRENCES DOMAINSORTS ATTRIBUTES REFL.CLAUSE
+ROTHERSIDES -ROTHERSIDES +SOTHERSIDES -SOTHERSIDES +TOTHERSIDES -TOTHERSIDES)) (RPAQQ DT*TRUE.PREDICATE 1) (RPAQQ
DT*FALSE.PREDICATE 2) (RPAQQ DT*UNI.CREATES.VARIABLES NIL) (RPAQQ DT*SIGN.MINUS.SYMBOLS (- --)) (RPAQQ 
DT*SIGN.PLUS.SYMBOLS (+ ++))) (PROGN) (PROGN (SETPROPLIST (QUOTE DT*PREDICATE.WITH.ATTRIBUTES) (QUOTE (DEFINED
(2 1))))) (PROGN (SETPROPLIST (QUOTE ANY) (QUOTE (DT*INVERSE.TRANSITIVE.CLOSURE (ANY) DT*DIRECT.SUPERSORTS NIL
DT*MINIMAL.SUBSORTS (ANY) DT*MAX.SUBSORTS ((ANY ANY)) DT*TRANSITIVE.CLOSURE (ANY) DT*DIRECT.SUBSORTS NIL))))) (RPAQQ
ST*STACK1 (NIL ((D PROGN (DT-CONSTANT.DELETE 85) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE D) ST*SYMBOL.ADDRESSES)))
(C PROGN (DT-CONSTANT.DELETE 84) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE C) ST*SYMBOL.ADDRESSES))) (B PROGN
(DT-CONSTANT.DELETE 83) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE B) ST*SYMBOL.ADDRESSES))) (A PROGN (
DT-CONSTANT.DELETE 82) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE A) ST*SYMBOL.ADDRESSES)))) NIL)) (RPAQQ 
ST*SYMBOL.ADDRESSES (NIL (ANY . T) (TRUE . 1) (FALSE . 2) (X_3 . 3) (E . 4) (P . 5) (X_6 . 6) (G . 7) (X_8 . 8)
(X_9 . 9) (F . 10) (X_11 . 11) (X_12 . 12) (X_13 . 13) (X_14 . 14) (X_15 . 15) (X_16 . 16) (X_17 . 17) (X_18 .
18) (X_19 . 19) (X_20 . 20) (X_21 . 21) (X_22 . 22) (X_23 . 23) (X_24 . 24) (X_25 . 25) (R . 26) (X_27 . 27) (X_28
. 28) (X_29 . 29) (X_30 . 30) (X_31 . 31) (X_32 . 32) (X_33 . 33) (X_34 . 34) (X_35 . 35) (X_36 . 36) (X_37 . 37)
(X_38 . 38) (X_39 . 39) (X_40 . 40) (X_41 . 41) (X_42 . 42) (X_43 . 43) (X_44 . 44) (X_45 . 45) (X_46 . 46) (X_47
. 47) (X_48 . 48) (X_49 . 49) (X_50 . 50) (X_51 . 51) (X_52 . 52) (X_53 . 53) (X_54 . 54) (X_55 . 55) (O . 56)
(X_57 . 57) (X_58 . 58) (X_59 . 59) (X_60 . 60) (X_61 . 61) (X_62 . 62) (I . 63) (X_64 . 64) (X_65 . 65) (X_66
. 66) (X_67 . 67) (X_68 . 68) (X_69 . 69) (X_70 . 70) (X_71 . 71) (X_72 . 72) (X_73 . 73) (X_74 . 74) (X_75 . 75)
(X_76 . 76) (X_77 . 77) (X_78 . 78) (X_79 . 79) (X_80 . 80) (X_81 . 81) (A . 82) (B . 83) (C . 84) (D . 85))))))))STOP
 
