(COND ((FMT-LOAD " 6-SEP-84 20:06:54" NIL (((SUC (P3 P3)) (+ 9 (13 13) NIL) QUANTIFICATION))) (COND (ST*LOAD.FLAG
(PROGN (PROGN (DT-RESET) (PROG ((ADDRLIST (QUOTE (9961 9966 9971 9976 9981 9986 9991 9996 10001 10006 10020 10025
10039 10044 10049 10054 10068 10073 10087 10092 10106 10111 10126 10131 10136 10141 10146 10161 10166 10181 10195
10200 10205 10210 10225 10240))) (DATALIST (QUOTE (15 TRUE NIL NIL NIL (DEFINED) NIL ((- 1 (POSITIVE))) ((+ 1 (NEGATIVE))
) ((+ 1 (NIL))) ((- 1 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 FALSE NIL NIL NIL (DEFINED) NIL ((- 2 (POSITIVE)))
((+ 2 (NEGATIVE))) ((+ 2 (NIL))) ((- 2 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 P1 ANY (DT*ST-KIND NIL) CONSTANT
5 J ANY (DT*ST-KIND NIL) CONSTANT 5 0 ANY (DT*ST-KIND NIL) CONSTANT 14 ASS NIL ANY (ANY ANY) NIL NIL NIL NIL NIL
2 ANY (DT*ST-KIND NIL) FUNCTION 15 HAS NIL NIL (ANY ANY) NIL NIL ((- 7 (POSITIVE))) ((+ 7 (NEGATIVE))) ((+ 7 (NIL)))
((- 7 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 P2 ANY (DT*ST-KIND NIL) CONSTANT 15 SUC NIL NIL (ANY ANY) NIL
NIL ((- 9 (POSITIVE))) ((+ 9 (NEGATIVE))) ((+ 9 (NIL))) ((- 9 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 K ANY
(DT*ST-KIND NIL) CONSTANT 5 1 ANY (DT*ST-KIND NIL) CONSTANT 5 LOO ANY (DT*ST-KIND NIL) CONSTANT 5 P3 ANY (DT*ST-KIND
NIL) CONSTANT 15 LBL NIL NIL (ANY ANY) NIL NIL ((- 14 (POSITIVE))) ((+ 14 (NEGATIVE))) ((+ 14 (NIL))) ((- 14 (NIL)))
NIL NIL (DT*ST-KIND NIL) PREDICATE 5 N ANY (DT*ST-KIND NIL) CONSTANT 14 XEQ NIL ANY (ANY ANY) NIL NIL NIL NIL NIL
2 ANY (DT*ST-KIND NIL) FUNCTION 5 P4 ANY (DT*ST-KIND NIL) CONSTANT 14 IFT NIL ANY (ANY ANY) NIL NIL NIL NIL NIL
2 ANY (DT*ST-KIND NIL) FUNCTION 5 OUT ANY (DT*ST-KIND NIL) CONSTANT 14 GOT NIL ANY (ANY) NIL NIL NIL NIL NIL 1
ANY (DT*ST-KIND NIL) FUNCTION 5 P5 ANY (DT*ST-KIND NIL) CONSTANT 5 P6 ANY (DT*ST-KIND NIL) CONSTANT 5 2 ANY (DT*ST-KIND
NIL) CONSTANT 14 XTM NIL ANY (ANY ANY) NIL NIL NIL NIL NIL 2 ANY (DT*ST-KIND NIL) FUNCTION 5 P7 ANY (DT*ST-KIND
NIL) CONSTANT 14 XPL NIL ANY (ANY ANY) NIL NIL NIL NIL NIL 2 ANY (DT*ST-KIND NIL) FUNCTION 5 P8 ANY (DT*ST-KIND
NIL) CONSTANT 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE
5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
(ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA
NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE))) (INCREMENT (IDIFFERENCE MEM*SIZE 10240)) COUNTER1) (MEM-RESET) (COND ((IGREATERP (IPLUS (
IDIFFERENCE 37 1) (IDIFFERENCE 10240 9956)) MEM*SIZE) (MEM=SATURATION.ENTERED)) ((EQ MEM*SIZE 10240) (SETQ COUNTER1
37) (MAPC ADDRLIST (FUNCTION (LAMBDA (RADDR) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1)) RADDR)))) (SETQ COUNTER1
(ADD1 MEM*SIZE)) (MAPC DATALIST (FUNCTION (LAMBDA (DATA) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1)) DATA)))))
(T (SETQ COUNTER1 37) (MAPC ADDRLIST (FUNCTION (LAMBDA (RADDR) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1))
(COND ((EQ RADDR (QUOTE ATP.MEMORY.NIL)) RADDR) ((OR (EQ RADDR 0) (MINUSP RADDR)) RADDR) (T (IPLUS RADDR INCREMENT)))))))
(SETQ COUNTER1 (ADD1 MEM*SIZE)) (MAPC DATALIST (FUNCTION (LAMBDA (DATA) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1))
DATA)))))) (RPAQ MEM*NEXT.RADR (IPLUS 9956 INCREMENT)) (RPAQ MEM*NEXT.VADR 37) (RPAQ MEM*REST (ADD1 (IDIFFERENCE
MEM*NEXT.RADR MEM*NEXT.VADR))) (RPAQ MEM*FIRST.REUSABLE.VADR NIL) (RPAQ MEM*LAST.REUSABLE.VADR NIL)) (PROGN (RPAQQ
DT*SORT.ALL (ANY)) (RPAQQ DT*SORT.NR 1) (RPAQQ DT*SORT.PROPERTIES (DT*MAX.SUBSORTS DT*LEAST.SUPERSORTS 
DT*TRANSITIVE.CLOSURE DT*INVERSE.TRANSITIVE.CLOSURE DT*MINIMAL.SUBSORTS DT*DIRECT.SUBSORTS DT*DIRECT.SUPERSORTS
DT*DISJOINT.SORTS DT*COMPLETION.SORT)) (RPAQQ DT*VARIABLE.COUNTER 0) (RPAQQ DT*CONSTANT.COUNTER 0) (RPAQQ 
DT*CONSTANT.ALL (27 25 23 22 21 19 17 15 13 12 11 10 8 5 4 3)) (RPAQQ DT*ABBREVIATIONS NIL) (RPAQQ DT*FUNCTION.COUNTER
0) (RPAQQ DT*FUNCTION.ALL (26 24 20 18 16 6)) (RPAQQ DT*FUNCTION.ADMISSIBLE.THEORIES (ASSOCIATIVE)) (RPAQQ 
DT*FUNCTION.ACTUAL.THEORIES NIL) (RPAQQ DT*FUNCTION.WITH.ARGUMENT.SYMMETRIES NIL) (RPAQQ DT*FUNCTION.COMPONENTS
(PNAME ATTRIBUTES MAX.RANGE.SORT MAX.DOMAIN.SORTS MIN.RANGE.SORTS SORT.LIST SORT.LIST.INVERSE SORT.TREE.CALC 
ARGUMENT.SYMMETRIES ARITY G.L.B.OF.RANGES)) (RPAQQ DT*PREDICATE.ADMISSABLE.ATTRIBUTES (SYMMETRIC DEFINED REFLEXIVE))
(RPAQQ DT*PREDICATE.COUNTER 0) (RPAQQ DT*EQUALITY.SYMBOLS (= := =: :=:)) (RPAQQ DT*EQUALITY.PREDICATES NIL) (RPAQQ
DT*NONEQUALITY.PREDICATES (14 9 7 2 1)) (RPAQQ DT*PREDICATE.ALL (14 9 7 2 1)) (RPAQQ DT*PREDICATE.WITH.ATTRIBUTES
NIL) (RPAQQ DT*PREDICATE.COMPONENTS (PNAME POSITIVE.OCCURRENCES NEGATIVE.OCCURRENCES DOMAINSORTS ATTRIBUTES REFL.CLAUSE
+ROTHERSIDES -ROTHERSIDES +SOTHERSIDES -SOTHERSIDES +TOTHERSIDES -TOTHERSIDES)) (RPAQQ DT*TRUE.PREDICATE 1) (RPAQQ
DT*FALSE.PREDICATE 2) (RPAQQ DT*UNI.CREATES.VARIABLES NIL) (RPAQQ DT*SIGN.MINUS.SYMBOLS (- --)) (RPAQQ 
DT*SIGN.PLUS.SYMBOLS (+ ++))) (PROGN) (PROGN (SETPROPLIST (QUOTE DT*PREDICATE.WITH.ATTRIBUTES) (QUOTE (DEFINED
(2 1))))) (PROGN (SETPROPLIST (QUOTE ANY) (QUOTE (DT*INVERSE.TRANSITIVE.CLOSURE (ANY) DT*DIRECT.SUPERSORTS NIL
DT*MINIMAL.SUBSORTS (ANY) DT*MAX.SUBSORTS ((ANY ANY)) DT*TRANSITIVE.CLOSURE (ANY) DT*DIRECT.SUBSORTS NIL))))) (RPAQQ
ST*STACK1 (NIL NIL NIL)) (RPAQQ ST*SYMBOL.ADDRESSES (NIL (ANY . T) (TRUE . 1) (FALSE . 2) (P1 . 3) (J . 4) (0 .
5) (ASS . 6) (HAS . 7) (P2 . 8) (SUC . 9) (K . 10) (1 . 11) (LOO . 12) (P3 . 13) (LBL . 14) (N . 15) (XEQ . 16)
(P4 . 17) (IFT . 18) (OUT . 19) (GOT . 20) (P5 . 21) (P6 . 22) (2 . 23) (XTM . 24) (P7 . 25) (XPL . 26) (P8 . 27)
(X_28 . 28) (X_29 . 29) (X_30 . 30) (X_31 . 31) (X_32 . 32) (X_33 . 33) (X_34 . 34) (X_35 . 35) (X_36 . 36))))))))STOP
 
