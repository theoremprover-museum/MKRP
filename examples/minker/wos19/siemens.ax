(COND ((FMT-LOAD " 6-SEP-84 21:19:16" NIL (((ALL X P (E X X)) (ALL 3 (+ 5 (4 3 3) NIL)) QUANTIFICATION) ((ALL X
P (G (X) X E)) (ALL 6 (+ 5 ((7 6) 6 4) NIL)) QUANTIFICATION) ((ALL X,Y P (X Y F (X Y))) (ALL 9 (ALL 8 (+ 5 (8 9
(10 8 9)) NIL))) QUANTIFICATION) ((ALL X,Y,Z,U,V,W NOT P (X Y U) OR NOT P (Y Z V) OR NOT P (U Z W) OR P (X V W))
(ALL 16 (ALL 15 (ALL 14 (ALL 13 (ALL 12 (ALL 11 (OR (NOT (+ 5 (11 12 14) NIL)) (OR (NOT (+ 5 (12 13 15) NIL)) (OR
(NOT (+ 5 (14 13 16) NIL)) (+ 5 (11 15 16) NIL)))))))))) QUANTIFICATION) ((ALL X,Y,Z,U,V,W NOT P (X Y U) OR NOT
P (Y Z V) OR NOT P (X V W) OR P (U Z W)) (ALL 22 (ALL 21 (ALL 20 (ALL 19 (ALL 18 (ALL 17 (OR (NOT (+ 5 (17 18 20)
NIL)) (OR (NOT (+ 5 (18 19 21) NIL)) (OR (NOT (+ 5 (17 21 22) NIL)) (+ 5 (20 19 22) NIL)))))))))) QUANTIFICATION)
((ALL X,Y,Z NOT R (X Y) OR NOT R (Y Z) OR R (X Z)) (ALL 25 (ALL 24 (ALL 23 (OR (NOT (+ 26 (23 24) NIL)) (OR (NOT
(+ 26 (24 25) NIL)) (+ 26 (23 25) NIL)))))) QUANTIFICATION) ((ALL X,Y,U,V NOT P (X Y U) OR NOT P (X Y V) OR R (U
V)) (ALL 30 (ALL 29 (ALL 28 (ALL 27 (OR (NOT (+ 5 (27 28 29) NIL)) (OR (NOT (+ 5 (27 28 30) NIL)) (+ 26 (29 30)
NIL))))))) QUANTIFICATION) ((ALL X,Y,U,V NOT P (X Y U) OR P (X Y V) OR NOT R (U V)) (ALL 34 (ALL 33 (ALL 32 (ALL
31 (OR (NOT (+ 5 (31 32 33) NIL)) (OR (+ 5 (31 32 34) NIL) (NOT (+ 26 (33 34) NIL)))))))) QUANTIFICATION) ((ALL
X,Y,U,V NOT P (X U Y) OR P (X V Y) OR NOT R (U V)) (ALL 38 (ALL 37 (ALL 36 (ALL 35 (OR (NOT (+ 5 (35 37 36) NIL))
(OR (+ 5 (35 38 36) NIL) (NOT (+ 26 (37 38) NIL)))))))) QUANTIFICATION) ((ALL X,Y,U,V NOT P (U X Y) OR P (V X Y)
OR NOT R (U V)) (ALL 42 (ALL 41 (ALL 40 (ALL 39 (OR (NOT (+ 5 (41 39 40) NIL)) (OR (+ 5 (42 39 40) NIL) (NOT (+
26 (41 42) NIL)))))))) QUANTIFICATION) ((ALL X,U,V NOT R (U V) OR R (F (X U) F (X V))) (ALL 45 (ALL 44 (ALL 43
(OR (NOT (+ 26 (44 45) NIL)) (+ 26 ((10 43 44) (10 43 45)) NIL))))) QUANTIFICATION) ((ALL Y,U,V NOT R (U V) OR
R (F (U Y) F (V Y))) (ALL 48 (ALL 47 (ALL 46 (OR (NOT (+ 26 (47 48) NIL)) (+ 26 ((10 47 46) (10 48 46)) NIL)))))
QUANTIFICATION) ((ALL U,V NOT R (U V) OR R (G (U) G (V))) (ALL 50 (ALL 49 (OR (NOT (+ 26 (49 50) NIL)) (+ 26 ((7
49) (7 50)) NIL)))) QUANTIFICATION) ((ALL X P (X E X)) (ALL 51 (+ 5 (51 4 51) NIL)) QUANTIFICATION) ((ALL X P (X
G (X) E)) (ALL 52 (+ 5 (52 (7 52) 4) NIL)) QUANTIFICATION) ((ALL X,Y,Z NOT O (X) OR NOT O (Y) OR NOT P (X Y Z)
OR O (Z)) (ALL 55 (ALL 54 (ALL 53 (OR (NOT (+ 56 (53) NIL)) (OR (NOT (+ 56 (54) NIL)) (OR (NOT (+ 5 (53 54 55)
NIL)) (+ 56 (55) NIL))))))) QUANTIFICATION) ((ALL X,Y NOT O (X) OR NOT R (X Y) OR O (Y)) (ALL 58 (ALL 57 (OR (NOT
(+ 56 (57) NIL)) (OR (NOT (+ 26 (57 58) NIL)) (+ 56 (58) NIL))))) QUANTIFICATION) ((ALL X NOT O (X) OR O (G (X)))
(ALL 59 (OR (NOT (+ 56 (59) NIL)) (+ 56 ((7 59)) NIL))) QUANTIFICATION) ((O (E)) (+ 56 (4) NIL) QUANTIFICATION)
((ALL X,U,V NOT R (U V) OR R (I (X U) I (X V))) (ALL 62 (ALL 61 (ALL 60 (OR (NOT (+ 26 (61 62) NIL)) (+ 26 ((63
60 61) (63 60 62)) NIL))))) QUANTIFICATION) ((ALL X,U,V NOT R (U V) OR R (I (U X) I (V X))) (ALL 66 (ALL 65 (ALL
64 (OR (NOT (+ 26 (65 66) NIL)) (+ 26 ((63 65 64) (63 66 64)) NIL))))) QUANTIFICATION) ((ALL X,Y O (X) OR O (Y)
OR O (I (X Y))) (ALL 68 (ALL 67 (OR (+ 56 (67) NIL) (OR (+ 56 (68) NIL) (+ 56 ((63 67 68)) NIL))))) QUANTIFICATION)
((ALL X,Y O (X) OR O (Y) OR P (X I (X Y) Y)) (ALL 70 (ALL 69 (OR (+ 56 (69) NIL) (OR (+ 56 (70) NIL) (+ 5 (69 (63
69 70) 70) NIL))))) QUANTIFICATION) ((ALL X,Y,Z,U,V NOT P (X U Z) OR NOT P (X V Z) OR R (U V)) (ALL 75 (ALL 74
(ALL 73 (ALL 72 (ALL 71 (OR (NOT (+ 5 (71 74 73) NIL)) (OR (NOT (+ 5 (71 75 73) NIL)) (+ 26 (74 75) NIL))))))))
QUANTIFICATION) ((ALL X,Y,Z,U,V NOT P (U Y Z) OR NOT P (V Y Z) OR R (U V)) (ALL 80 (ALL 79 (ALL 78 (ALL 77 (ALL
76 (OR (NOT (+ 5 (79 77 78) NIL)) (OR (NOT (+ 5 (80 77 78) NIL)) (+ 26 (79 80) NIL)))))))) QUANTIFICATION) ((ALL
X R (G (G (X)) X)) (ALL 81 (+ 26 ((7 (7 81)) 81) NIL)) QUANTIFICATION))) (COND (ST*LOAD.FLAG (PROGN (PROGN (DT-RESET)
(PROG ((ADDRLIST (QUOTE (9763 9768 9773 9778 9783 9788 9793 9798 9803 9808 9813 9818 9823 9828 9833 9838 9843 9848
9862 9867 9872 9877 9882 9887 9892 9907 9912 9917 9922 9927 9932 9937 9942 9947 9952 9957 9962 9967 9972 9977 9982
9987 9992 9997 10002 10007 10012 10017 10022 10027 10032 10037 10042 10047 10052 10067 10072 10077 10082 10087
10092 10097 10102 10107 10112 10117 10122 10127 10132 10137 10142 10156 10161 10166 10180 10185 10200 10205 10210
10225 10240))) (DATALIST (QUOTE (15 TRUE NIL NIL NIL (DEFINED) NIL ((- 1 (POSITIVE))) ((+ 1 (NEGATIVE))) ((+ 1
(NIL))) ((- 1 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 FALSE NIL NIL NIL (DEFINED) NIL ((- 2 (POSITIVE)))
((+ 2 (NEGATIVE))) ((+ 2 (NIL))) ((- 2 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 5 E ANY (DT*ST-KIND NIL) CONSTANT 15 P NIL NIL (ANY ANY ANY) NIL NIL ((- 5 (POSITIVE))) ((+ 5
(NEGATIVE))) ((+ 5 (NIL))) ((- 5 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
VARIABLE 14 G NIL ANY (ANY) NIL NIL NIL NIL NIL 1 ANY (DT*ST-KIND NIL) FUNCTION 5 ANY NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 14 F NIL ANY (ANY ANY) NIL NIL NIL NIL NIL
2 ANY (DT*ST-KIND NIL) FUNCTION 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE
5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
(ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA
NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
VARIABLE 15 R NIL NIL (ANY ANY) NIL NIL ((- 26 (POSITIVE))) ((+ 26 (NEGATIVE))) ((+ 26 (NIL))) ((- 26 (NIL))) NIL
NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE
5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
(ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA
NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE
5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
(ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA
NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE
5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 15 O NIL NIL (ANY) NIL NIL ((- 56 (POSITIVE))) ((+ 56 (NEGATIVE)))
((+ 56 (NIL))) ((- 56 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE
5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
(ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA
NIL DT*ST-KIND SYS-VAR) VARIABLE 14 I NIL ANY (ANY ANY) NIL NIL NIL NIL NIL 2 ANY (DT*ST-KIND NIL) FUNCTION 5 ANY
NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA
NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE
5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
(ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA
NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
VARIABLE))) (INCREMENT (IDIFFERENCE MEM*SIZE 10240)) COUNTER1) (MEM-RESET) (COND ((IGREATERP (IPLUS (IDIFFERENCE
82 1) (IDIFFERENCE 10240 9758)) MEM*SIZE) (MEM=SATURATION.ENTERED)) ((EQ MEM*SIZE 10240) (SETQ COUNTER1 82) (MAPC
ADDRLIST (FUNCTION (LAMBDA (RADDR) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1)) RADDR)))) (SETQ COUNTER1 (ADD1
MEM*SIZE)) (MAPC DATALIST (FUNCTION (LAMBDA (DATA) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1)) DATA))))) (T
(SETQ COUNTER1 82) (MAPC ADDRLIST (FUNCTION (LAMBDA (RADDR) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1)) (COND
((EQ RADDR (QUOTE ATP.MEMORY.NIL)) RADDR) ((OR (EQ RADDR 0) (MINUSP RADDR)) RADDR) (T (IPLUS RADDR INCREMENT)))))))
(SETQ COUNTER1 (ADD1 MEM*SIZE)) (MAPC DATALIST (FUNCTION (LAMBDA (DATA) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1))
DATA)))))) (RPAQ MEM*NEXT.RADR (IPLUS 9758 INCREMENT)) (RPAQ MEM*NEXT.VADR 82) (RPAQ MEM*REST (ADD1 (IDIFFERENCE
MEM*NEXT.RADR MEM*NEXT.VADR))) (RPAQ MEM*FIRST.REUSABLE.VADR NIL) (RPAQ MEM*LAST.REUSABLE.VADR NIL)) (PROGN (RPAQQ
DT*SORT.ALL (ANY)) (RPAQQ DT*SORT.NR 1) (RPAQQ DT*SORT.PROPERTIES (DT*MAX.SUBSORTS DT*LEAST.SUPERSORTS 
DT*TRANSITIVE.CLOSURE DT*INVERSE.TRANSITIVE.CLOSURE DT*MINIMAL.SUBSORTS DT*DIRECT.SUBSORTS DT*DIRECT.SUPERSORTS
DT*DISJOINT.SORTS DT*COMPLETION.SORT)) (RPAQQ DT*VARIABLE.COUNTER 0) (RPAQQ DT*CONSTANT.COUNTER 0) (RPAQQ 
DT*CONSTANT.ALL (4)) (RPAQQ DT*ABBREVIATIONS NIL) (RPAQQ DT*FUNCTION.COUNTER 0) (RPAQQ DT*FUNCTION.ALL (63 10 7))
(RPAQQ DT*FUNCTION.ADMISSIBLE.THEORIES (ASSOCIATIVE)) (RPAQQ DT*FUNCTION.ACTUAL.THEORIES NIL) (RPAQQ 
DT*FUNCTION.WITH.ARGUMENT.SYMMETRIES NIL) (RPAQQ DT*FUNCTION.COMPONENTS (PNAME ATTRIBUTES MAX.RANGE.SORT 
MAX.DOMAIN.SORTS MIN.RANGE.SORTS SORT.LIST SORT.LIST.INVERSE SORT.TREE.CALC ARGUMENT.SYMMETRIES ARITY G.L.B.OF.RANGES))
(RPAQQ DT*PREDICATE.ADMISSABLE.ATTRIBUTES (SYMMETRIC DEFINED REFLEXIVE)) (RPAQQ DT*PREDICATE.COUNTER 0) (RPAQQ
DT*EQUALITY.SYMBOLS (= := =: :=:)) (RPAQQ DT*EQUALITY.PREDICATES NIL) (RPAQQ DT*NONEQUALITY.PREDICATES (56 26 5
2 1)) (RPAQQ DT*PREDICATE.ALL (56 26 5 2 1)) (RPAQQ DT*PREDICATE.WITH.ATTRIBUTES NIL) (RPAQQ DT*PREDICATE.COMPONENTS
(PNAME POSITIVE.OCCURRENCES NEGATIVE.OCCURRENCES DOMAINSORTS ATTRIBUTES REFL.CLAUSE +ROTHERSIDES -ROTHERSIDES 
+SOTHERSIDES -SOTHERSIDES +TOTHERSIDES -TOTHERSIDES)) (RPAQQ DT*TRUE.PREDICATE 1) (RPAQQ DT*FALSE.PREDICATE 2)
(RPAQQ DT*UNI.CREATES.VARIABLES NIL) (RPAQQ DT*SIGN.MINUS.SYMBOLS (- --)) (RPAQQ DT*SIGN.PLUS.SYMBOLS (+ ++)))
(PROGN) (PROGN (SETPROPLIST (QUOTE DT*PREDICATE.WITH.ATTRIBUTES) (QUOTE (DEFINED (2 1))))) (PROGN (SETPROPLIST
(QUOTE ANY) (QUOTE (DT*INVERSE.TRANSITIVE.CLOSURE (ANY) DT*DIRECT.SUPERSORTS NIL DT*MINIMAL.SUBSORTS (ANY) 
DT*MAX.SUBSORTS ((ANY ANY)) DT*TRANSITIVE.CLOSURE (ANY) DT*DIRECT.SUBSORTS NIL))))) (RPAQQ ST*STACK1 (NIL ((X_81
PROGN (DT-VARIABLE.DELETE 81) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_81) ST*SYMBOL.ADDRESSES)))) ((X_80 PROGN
(DT-VARIABLE.DELETE 80) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_80) ST*SYMBOL.ADDRESSES))) (X_79 PROGN (
DT-VARIABLE.DELETE 79) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_79) ST*SYMBOL.ADDRESSES))) (X_78 PROGN (
DT-VARIABLE.DELETE 78) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_78) ST*SYMBOL.ADDRESSES))) (X_77 PROGN (
DT-VARIABLE.DELETE 77) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_77) ST*SYMBOL.ADDRESSES))) (X_76 PROGN (
DT-VARIABLE.DELETE 76) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_76) ST*SYMBOL.ADDRESSES)))) ((X_75 PROGN (
DT-VARIABLE.DELETE 75) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_75) ST*SYMBOL.ADDRESSES))) (X_74 PROGN (
DT-VARIABLE.DELETE 74) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_74) ST*SYMBOL.ADDRESSES))) (X_73 PROGN (
DT-VARIABLE.DELETE 73) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_73) ST*SYMBOL.ADDRESSES))) (X_72 PROGN (
DT-VARIABLE.DELETE 72) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_72) ST*SYMBOL.ADDRESSES))) (X_71 PROGN (
DT-VARIABLE.DELETE 71) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_71) ST*SYMBOL.ADDRESSES)))) ((X_70 PROGN (
DT-VARIABLE.DELETE 70) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_70) ST*SYMBOL.ADDRESSES))) (X_69 PROGN (
DT-VARIABLE.DELETE 69) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_69) ST*SYMBOL.ADDRESSES)))) ((X_68 PROGN (
DT-VARIABLE.DELETE 68) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_68) ST*SYMBOL.ADDRESSES))) (X_67 PROGN (
DT-VARIABLE.DELETE 67) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_67) ST*SYMBOL.ADDRESSES)))) ((X_66 PROGN (
DT-VARIABLE.DELETE 66) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_66) ST*SYMBOL.ADDRESSES))) (X_65 PROGN (
DT-VARIABLE.DELETE 65) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_65) ST*SYMBOL.ADDRESSES))) (X_64 PROGN (
DT-VARIABLE.DELETE 64) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_64) ST*SYMBOL.ADDRESSES)))) ((I PROGN (
DT-FUNCTION.DELETE 63) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE I) ST*SYMBOL.ADDRESSES))) (X_62 PROGN (
DT-VARIABLE.DELETE 62) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_62) ST*SYMBOL.ADDRESSES))) (X_61 PROGN (
DT-VARIABLE.DELETE 61) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_61) ST*SYMBOL.ADDRESSES))) (X_60 PROGN (
DT-VARIABLE.DELETE 60) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_60) ST*SYMBOL.ADDRESSES)))) NIL ((X_59 PROGN
(DT-VARIABLE.DELETE 59) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_59) ST*SYMBOL.ADDRESSES)))) ((X_58 PROGN (
DT-VARIABLE.DELETE 58) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_58) ST*SYMBOL.ADDRESSES))) (X_57 PROGN (
DT-VARIABLE.DELETE 57) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_57) ST*SYMBOL.ADDRESSES)))) ((O PROGN (
DT-PREDICATE.DELETE 56) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE O) ST*SYMBOL.ADDRESSES))) (X_55 PROGN (
DT-VARIABLE.DELETE 55) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_55) ST*SYMBOL.ADDRESSES))) (X_54 PROGN (
DT-VARIABLE.DELETE 54) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_54) ST*SYMBOL.ADDRESSES))) (X_53 PROGN (
DT-VARIABLE.DELETE 53) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_53) ST*SYMBOL.ADDRESSES)))) ((X_52 PROGN (
DT-VARIABLE.DELETE 52) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_52) ST*SYMBOL.ADDRESSES)))) ((X_51 PROGN (
DT-VARIABLE.DELETE 51) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_51) ST*SYMBOL.ADDRESSES)))) ((X_50 PROGN (
DT-VARIABLE.DELETE 50) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_50) ST*SYMBOL.ADDRESSES))) (X_49 PROGN (
DT-VARIABLE.DELETE 49) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_49) ST*SYMBOL.ADDRESSES)))) ((X_48 PROGN (
DT-VARIABLE.DELETE 48) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_48) ST*SYMBOL.ADDRESSES))) (X_47 PROGN (
DT-VARIABLE.DELETE 47) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_47) ST*SYMBOL.ADDRESSES))) (X_46 PROGN (
DT-VARIABLE.DELETE 46) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_46) ST*SYMBOL.ADDRESSES)))) ((X_45 PROGN (
DT-VARIABLE.DELETE 45) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_45) ST*SYMBOL.ADDRESSES))) (X_44 PROGN (
DT-VARIABLE.DELETE 44) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_44) ST*SYMBOL.ADDRESSES))) (X_43 PROGN (
DT-VARIABLE.DELETE 43) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_43) ST*SYMBOL.ADDRESSES)))) ((X_42 PROGN (
DT-VARIABLE.DELETE 42) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_42) ST*SYMBOL.ADDRESSES))) (X_41 PROGN (
DT-VARIABLE.DELETE 41) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_41) ST*SYMBOL.ADDRESSES))) (X_40 PROGN (
DT-VARIABLE.DELETE 40) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_40) ST*SYMBOL.ADDRESSES))) (X_39 PROGN (
DT-VARIABLE.DELETE 39) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_39) ST*SYMBOL.ADDRESSES)))) ((X_38 PROGN (
DT-VARIABLE.DELETE 38) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_38) ST*SYMBOL.ADDRESSES))) (X_37 PROGN (
DT-VARIABLE.DELETE 37) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_37) ST*SYMBOL.ADDRESSES))) (X_36 PROGN (
DT-VARIABLE.DELETE 36) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_36) ST*SYMBOL.ADDRESSES))) (X_35 PROGN (
DT-VARIABLE.DELETE 35) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_35) ST*SYMBOL.ADDRESSES)))) ((X_34 PROGN (
DT-VARIABLE.DELETE 34) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_34) ST*SYMBOL.ADDRESSES))) (X_33 PROGN (
DT-VARIABLE.DELETE 33) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_33) ST*SYMBOL.ADDRESSES))) (X_32 PROGN (
DT-VARIABLE.DELETE 32) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_32) ST*SYMBOL.ADDRESSES))) (X_31 PROGN (
DT-VARIABLE.DELETE 31) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_31) ST*SYMBOL.ADDRESSES)))) ((X_30 PROGN (
DT-VARIABLE.DELETE 30) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_30) ST*SYMBOL.ADDRESSES))) (X_29 PROGN (
DT-VARIABLE.DELETE 29) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_29) ST*SYMBOL.ADDRESSES))) (X_28 PROGN (
DT-VARIABLE.DELETE 28) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_28) ST*SYMBOL.ADDRESSES))) (X_27 PROGN (
DT-VARIABLE.DELETE 27) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_27) ST*SYMBOL.ADDRESSES)))) ((R PROGN (
DT-PREDICATE.DELETE 26) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE R) ST*SYMBOL.ADDRESSES))) (X_25 PROGN (
DT-VARIABLE.DELETE 25) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_25) ST*SYMBOL.ADDRESSES))) (X_24 PROGN (
DT-VARIABLE.DELETE 24) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_24) ST*SYMBOL.ADDRESSES))) (X_23 PROGN (
DT-VARIABLE.DELETE 23) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_23) ST*SYMBOL.ADDRESSES)))) ((X_22 PROGN (
DT-VARIABLE.DELETE 22) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_22) ST*SYMBOL.ADDRESSES))) (X_21 PROGN (
DT-VARIABLE.DELETE 21) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_21) ST*SYMBOL.ADDRESSES))) (X_20 PROGN (
DT-VARIABLE.DELETE 20) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_20) ST*SYMBOL.ADDRESSES))) (X_19 PROGN (
DT-VARIABLE.DELETE 19) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_19) ST*SYMBOL.ADDRESSES))) (X_18 PROGN (
DT-VARIABLE.DELETE 18) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_18) ST*SYMBOL.ADDRESSES))) (X_17 PROGN (
DT-VARIABLE.DELETE 17) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_17) ST*SYMBOL.ADDRESSES)))) ((X_16 PROGN (
DT-VARIABLE.DELETE 16) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_16) ST*SYMBOL.ADDRESSES))) (X_15 PROGN (
DT-VARIABLE.DELETE 15) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_15) ST*SYMBOL.ADDRESSES))) (X_14 PROGN (
DT-VARIABLE.DELETE 14) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_14) ST*SYMBOL.ADDRESSES))) (X_13 PROGN (
DT-VARIABLE.DELETE 13) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_13) ST*SYMBOL.ADDRESSES))) (X_12 PROGN (
DT-VARIABLE.DELETE 12) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_12) ST*SYMBOL.ADDRESSES))) (X_11 PROGN (
DT-VARIABLE.DELETE 11) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_11) ST*SYMBOL.ADDRESSES)))) ((F PROGN (
DT-FUNCTION.DELETE 10) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE F) ST*SYMBOL.ADDRESSES))) (X_9 PROGN (
DT-VARIABLE.DELETE 9) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_9) ST*SYMBOL.ADDRESSES))) (X_8 PROGN (
DT-VARIABLE.DELETE 8) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_8) ST*SYMBOL.ADDRESSES)))) ((G PROGN (
DT-FUNCTION.DELETE 7) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE G) ST*SYMBOL.ADDRESSES))) (X_6 PROGN (
DT-VARIABLE.DELETE 6) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_6) ST*SYMBOL.ADDRESSES)))) ((P PROGN (
DT-PREDICATE.DELETE 5) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE P) ST*SYMBOL.ADDRESSES))) (E PROGN (DT-CONSTANT.DELETE
4) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE E) ST*SYMBOL.ADDRESSES))) (X_3 PROGN (DT-VARIABLE.DELETE 3) (RPAQ
ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_3) ST*SYMBOL.ADDRESSES)))) ((FALSE PROGN (DT-PREDICATE.DELETE 2) (RPAQ 
ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE FALSE) ST*SYMBOL.ADDRESSES))) (TRUE PROGN (DT-PREDICATE.DELETE 1) (RPAQ 
ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE TRUE) ST*SYMBOL.ADDRESSES))) (ANY PROGN (DT-SORT.ST.REMOVE (QUOTE ANY)) (RPAQ
ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE ANY) ST*SYMBOL.ADDRESSES))) (ANY REMPROP (QUOTE ANY) (QUOTE ST*DATA))))) (RPAQQ
ST*SYMBOL.ADDRESSES (NIL (ANY . T) (TRUE . 1) (FALSE . 2) (X_3 . 3) (E . 4) (P . 5) (X_6 . 6) (G . 7) (X_8 . 8)
(X_9 . 9) (F . 10) (X_11 . 11) (X_12 . 12) (X_13 . 13) (X_14 . 14) (X_15 . 15) (X_16 . 16) (X_17 . 17) (X_18 .
18) (X_19 . 19) (X_20 . 20) (X_21 . 21) (X_22 . 22) (X_23 . 23) (X_24 . 24) (X_25 . 25) (R . 26) (X_27 . 27) (X_28
. 28) (X_29 . 29) (X_30 . 30) (X_31 . 31) (X_32 . 32) (X_33 . 33) (X_34 . 34) (X_35 . 35) (X_36 . 36) (X_37 . 37)
(X_38 . 38) (X_39 . 39) (X_40 . 40) (X_41 . 41) (X_42 . 42) (X_43 . 43) (X_44 . 44) (X_45 . 45) (X_46 . 46) (X_47
. 47) (X_48 . 48) (X_49 . 49) (X_50 . 50) (X_51 . 51) (X_52 . 52) (X_53 . 53) (X_54 . 54) (X_55 . 55) (O . 56)
(X_57 . 57) (X_58 . 58) (X_59 . 59) (X_60 . 60) (X_61 . 61) (X_62 . 62) (I . 63) (X_64 . 64) (X_65 . 65) (X_66
. 66) (X_67 . 67) (X_68 . 68) (X_69 . 69) (X_70 . 70) (X_71 . 71) (X_72 . 72) (X_73 . 73) (X_74 . 74) (X_75 . 75)
(X_76 . 76) (X_77 . 77) (X_78 . 78) (X_79 . 79) (X_80 . 80) (X_81 . 81))))))))STOP
 
