;;; -*- Package: MKRP; Base: 10; Mode: LISP; Syntax: Common-lisp -*-

(CONSTRUCTION  "Genera 8.0.1 Logical Pathnames Translation Files NEWEST IP-TCP 422.2 RPC 415.0 Embedding Support 407.0 UX Support 416.0 Experimental Network RPC 415.0 Experimental NFS Client 415.0 CLX 419.0 C Runtime 416.0 Compiler Tools Package 411.0 Compiler Tools Runtime 411.0 C Packages 413.0 Minimal Lexer Runtime 416.0 Lexer Package 415.0 Syntax Editor Runtime 411.0 Experimental X Server 409.0 X Remote Screen 418.1 KKL 24.0 HADES 19.0 Experimental MKRP 53.11" "03-NOV,1992 13:42" 
   ("Edit:     Axioms and Theorems edited: 03-NOV,1992 13:41 "
   ))

(AXIOMS.INFIX    ((E (A T) OR E (A S))
   (NOT E (A T))
   (E (A R))
   (ALL X |:| S P (X))))

(THEOREMS.INFIX ((EX Y |:| R P (Y))))

(AXIOMS.PREFIX   ((OR (+ 4 (5 6) NIL) (+ 4 (5 7) NIL))
   (NOT (+ 4 (5 6) NIL))
   (+ 4 (5 8) NIL)
   (ALL 9 (+ 10 (9) NIL))))

(THEOREMS.PREFIX ((EX 11 (+ 10 (11) NIL))))

(OPTIONS (TWO_RULES)
    (TWO_RULES.MAXLEVEL . 1)
    (TWO_SUPPRESS.NORULES)
    (RED.I_CLAUSE.MULTIPLE.LITERALS)
    (RED.I_CLAUSE.PURITY)
    (RED.I_CLAUSE.TAUTOLOGY)
    (RED.I_CLAUSE.TAUTOLOGY.RECHECK)
    (RED.I_CLAUSE.SUBSUMPTION)
    (RED.I_CLAUSE.SUBSUMPTION.RECHECK)
    (RED.I_CLAUSE.REPL.FACTORING)
    (RED.I_CLAUSE.REPL.FACTORING.RECHECK)
    (RED.I_CLAUSE.REPL.RESOLUTION)
    (RED.I_CLAUSE.REPL.RESOLUTION.RECHECK)
    (RED.I_CLAUSE.REWRITING)
    (RED.I_LINK.INCOMPATIBILITY)
    (RED.I_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.I_LINK.TAUTOLOGY.RECHECK)
    (RED.I_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.I_LINK.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.MULTIPLE.LITERALS)
    (RED.D_CLAUSE.PURITY . PARTIAL)
    (RED.D_CLAUSE.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_CLAUSE.TAUTOLOGY.RECHECK)
    (RED.D_CLAUSE.SUBSUMPTION.FORWARD . REMOVE-INHIBIT)
    (RED.D_CLAUSE.SUBSUMPTION.BACKWARD . REMOVE)
    (RED.D_CLAUSE.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.REPL.FACTORING . T)
    (RED.D_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.D_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.D_CLAUSE.REPL.RESOLUTION.RECHECK)
    (RED.D_CLAUSE.REWRITING . DEM)
    (RED.D_LINK.INCOMPATIBILITY)
    (RED.D_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_LINK.TAUTOLOGY.RECHECK)
    (RED.D_LINK.SUBSUMPTION)
    (RED.D_LINK.SUBSUMPTION.RECHECK)
    (FAC_INITIAL)
    (FAC_EACH.STEP)
    (STR_RESOLUTION . ALL)
    (STR_R.SELECTION * 10 (+ 2 VARIABLES (* 2 DEPTH) (* 3 NOLIT)))
    (STR_LINK.DEPTH)
    (STR_TERM.DEPTH)
    (STR_FINITE.DOMAIN . T)
    (TERM_UNITS . T)
    (TERM_ITERATIONS . 0)
    (TERM_SET.OF.SUPPORT)
    (TERM_BREADTH.FIRST)
    (SORT_LITERALS . T)
    (SORT_MAX.UNIFICATION.RULE.STEPS . 100)
    (SORT_MAX.UNIFICATION.TREE.DEPTH . 100)
    (SORT_MAX.UNIFICATION.TREE.OPEN.NODES . 20)
    (SORT_UNIFIER.STOP.NUMBER . 100)
    (SORT_SHOW.VARIABLE.SORTS . T)
    (ER_PARAMODULATION . HEURISTIC-COMPLETION)
    (ER_WEIGHT.POLYNOMIALS)
    (ER_P.SELECTION * WEIGHT (IF SUPPORT 1 1.5) (IF EQUATIONAL 1 2))
    (ER_COMPLETION . UNFAILING)
    (ER_CP.REDUCTION . T)
    (ER_ORDERING . LEXICOGRAPHIC-RECURSIVE-PATH)
    (ER_OPERATOR.ORDERING * - + 0 1)
    (ER_KNUTH.BENDIX.WEIGHT (+ 1) (* 1) (- 0) (0 1) (1 1))
    (ER_POLYNOMIAL.WEIGHT (+ (X Y) (+ (* 2 Y) X)) (* (X Y) (+ (* X Y) X)) (- (X) (* X X)) (0 NIL 2) (1 NIL 2))
    (ER_NARROW.DEPTH . 0)
    (ER_NARROW.NEXT . DEPTH)
    (ER_NARROW.TEST NORM C DELTA SL N)
    (ER_COMPILE)
    (GEN_SPLITTING)
    (GEN_PRESIMPLIFICATION . T)
    (GEN_MIN.EXPRESSION.LENGTH.FOR.FILE)
    (GEN_MIN.EXPRESSION.SIZE.FOR.FILE)
    (GEN_MANUAL.CONTROL)
    (GEN_MAXIMUM.STEPS)
    (GEN_GRAPH.SAVING)
    (GEN_SAVE.FILE . SAVEDEFAULT)
    (GEN_LISP.GARBAGE.COLLECTION)
    (GEN_COMMON.LISP)
    (GEN_OTHER.PROVER . MKRP)
    (TR_PREPROCESSING)
    (TR_STEP.MODE . LR)
    (TR_DUMP)
    (TR_CLAUSE.MODE . I)
    (TR_LINK.MODE . I)
    (TR_TRACE.FILE)
    (TR_TERMINAL . T)
    (PR_INFIX.FORM . T)
    (PR_PREFIX.FORM)
    (PR_OPTIONS)
    (PR_AXIOM.CLAUSES . T)
    (PR_SYMBOLS)
    (PR_DIRECT.PROOF)
    (PR_VARIABLE.PRINT.NAMES X Y Z U V W XX YY ZZ UU VV WW XXX YYY ZZZ UUU VVV WWW)
    (PR_PROTOCOL . STANDARD)
    (PR_LEFT.MARGIN . 0)
    (PR_RIGHT.MARGIN . 117)
    (PR_LATEX)
    (PR_LINELENGTH . 117)
    (PR_LITERALS)
   )

(LINK.COLOURS (R RIW RD S SI SIW SID T TI TIW P PIW PD RIWD))

(AXIOMS (START.TIME 3556622872)
   (PARTIAL   (CLAUSE 14 R.= AXIOM ((12 . 3)) ((+ 2 (12 12)) ))(CLAUSE 15 A1 AXIOM () ((- 4 (5 6)) )))
   (PARTIAL   (CLAUSE 16 A2 AXIOM () ((+ 4 (5 8)) )))
   (PARTIAL   (CLAUSE 18 A3 AXIOM ((9 . 7)) ((+ 10 (9)) )))
   (PARTIAL   (CLAUSE 19 A4 AXIOM ()
   ((+ 4 (5 6)) (+ 4 (5 7)) )))
   (END.TIME 3556626100)
   (FINAL 14 15 16 18 19)
   (SYMBOLS 
   (LET (NEW.ADDRESS)
   (LIST (CONS   10 (DT-PREDICATE.CREATE "P" '(ANY)))
   (PROG1 (CONS    4 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "E" '(ANY ANY))))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (PROG1 (CONS    2 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "=" '(ANY ANY))))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED SYMMETRIC REFLEXIVE SYMMETRIC REFLEXIVE)))
   (PROG1 (CONS    1 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "FALSE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (PROG1 (CONS    0 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "TRUE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (CONS    8 (DT-CONSTANT.CREATE "r" 'ANY))
   (CONS    7 (DT-CONSTANT.CREATE "s" 'ANY))
   (CONS    6 (DT-CONSTANT.CREATE "t" 'ANY))
   (CONS    5 (DT-CONSTANT.CREATE "a" 'ANY))
   (CONS    3 (DT-CONSTANT.CREATE "omega" 'ANY)))))
   (RESULT))

(THEOREMS (SPLITPART.IDENTIFIER 1)
   (START.TIME 3556626217)
   (PARTIAL   (CLAUSE 21 T5 THEOREM ((11 . 8)) ((- 10 (11)) )))
   (INITIAL   (CLAUSE 14 R.= AXIOM ((12 . 3)) ((+ 2 (12 12)) ))
(CLAUSE 15 A1 AXIOM () ((- 4 (5 6)) ))
(CLAUSE 16 A2 AXIOM () ((+ 4 (5 8)) ))
(CLAUSE 18 A3 AXIOM ((9 . 7)) ((+ 10 (9)) ))
(CLAUSE 19 A4 AXIOM ()
   ((+ 4 (5 6)) (+ 4 (5 7)) ))
(CLAUSE 21 T5 THEOREM ((11 . 8)) ((- 10 (11)) ))   )
   (END.TIME 3556633278)
   (FINAL 14 15 16 18 19 21)
   (SYMBOLS 
   (LET (NEW.ADDRESS)
   (LIST (CONS   10 (DT-PREDICATE.CREATE "P" '(ANY)))
   (PROG1 (CONS    4 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "E" '(ANY ANY))))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (PROG1 (CONS    2 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "=" '(ANY ANY))))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED SYMMETRIC REFLEXIVE SYMMETRIC REFLEXIVE)))
   (PROG1 (CONS    1 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "FALSE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (PROG1 (CONS    0 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "TRUE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (CONS    8 (DT-CONSTANT.CREATE "r" 'ANY))
   (CONS    7 (DT-CONSTANT.CREATE "s" 'ANY))
   (CONS    6 (DT-CONSTANT.CREATE "t" 'ANY))
   (CONS    5 (DT-CONSTANT.CREATE "a" 'ANY))
   (CONS    3 (DT-CONSTANT.CREATE "omega" 'ANY)))))
   (RESULT))
(indices ((21 6) (19 1 2) (18 5) (16 4) (15 3) (14 NIL)))

(SPLITPARTS "Genera 8.0.1 Logical Pathnames Translation Files NEWEST IP-TCP 422.2 RPC 415.0 Embedding Support 407.0 UX Support 416.0 Experimental Network RPC 415.0 Experimental NFS Client 415.0 CLX 419.0 C Runtime 416.0 Compiler Tools Package 411.0 Compiler Tools Runtime 411.0 C Packages 413.0 Minimal Lexer Runtime 416.0 Lexer Package 415.0 Syntax Editor Runtime 411.0 Experimental X Server 409.0 X Remote Screen 418.1 KKL 24.0 HADES 19.0 Experimental MKRP 53.11" "03-NOV,1992 13:42" NIL)

(OPTIONS (TWO_RULES)
    (TWO_RULES.MAXLEVEL . 1)
    (TWO_SUPPRESS.NORULES)
    (RED.I_CLAUSE.MULTIPLE.LITERALS)
    (RED.I_CLAUSE.PURITY)
    (RED.I_CLAUSE.TAUTOLOGY)
    (RED.I_CLAUSE.TAUTOLOGY.RECHECK)
    (RED.I_CLAUSE.SUBSUMPTION)
    (RED.I_CLAUSE.SUBSUMPTION.RECHECK)
    (RED.I_CLAUSE.REPL.FACTORING)
    (RED.I_CLAUSE.REPL.FACTORING.RECHECK)
    (RED.I_CLAUSE.REPL.RESOLUTION)
    (RED.I_CLAUSE.REPL.RESOLUTION.RECHECK)
    (RED.I_CLAUSE.REWRITING)
    (RED.I_LINK.INCOMPATIBILITY)
    (RED.I_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.I_LINK.TAUTOLOGY.RECHECK)
    (RED.I_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.I_LINK.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.MULTIPLE.LITERALS)
    (RED.D_CLAUSE.PURITY . PARTIAL)
    (RED.D_CLAUSE.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_CLAUSE.TAUTOLOGY.RECHECK)
    (RED.D_CLAUSE.SUBSUMPTION.FORWARD . REMOVE-INHIBIT)
    (RED.D_CLAUSE.SUBSUMPTION.BACKWARD . REMOVE)
    (RED.D_CLAUSE.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.REPL.FACTORING . T)
    (RED.D_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.D_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.D_CLAUSE.REPL.RESOLUTION.RECHECK)
    (RED.D_CLAUSE.REWRITING . DEM)
    (RED.D_LINK.INCOMPATIBILITY)
    (RED.D_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_LINK.TAUTOLOGY.RECHECK)
    (RED.D_LINK.SUBSUMPTION)
    (RED.D_LINK.SUBSUMPTION.RECHECK)
    (FAC_INITIAL)
    (FAC_EACH.STEP)
    (STR_RESOLUTION . ALL)
    (STR_R.SELECTION * 10 (+ 2 VARIABLES (* 2 DEPTH) (* 3 NOLIT)))
    (STR_LINK.DEPTH)
    (STR_TERM.DEPTH)
    (STR_FINITE.DOMAIN . T)
    (TERM_UNITS . T)
    (TERM_ITERATIONS . 0)
    (TERM_SET.OF.SUPPORT)
    (TERM_BREADTH.FIRST)
    (SORT_LITERALS . T)
    (SORT_MAX.UNIFICATION.RULE.STEPS . 100)
    (SORT_MAX.UNIFICATION.TREE.DEPTH . 100)
    (SORT_MAX.UNIFICATION.TREE.OPEN.NODES . 20)
    (SORT_UNIFIER.STOP.NUMBER . 100)
    (SORT_SHOW.VARIABLE.SORTS . T)
    (ER_PARAMODULATION . HEURISTIC-COMPLETION)
    (ER_WEIGHT.POLYNOMIALS)
    (ER_P.SELECTION * WEIGHT (IF SUPPORT 1 1.5) (IF EQUATIONAL 1 2))
    (ER_COMPLETION . UNFAILING)
    (ER_CP.REDUCTION . T)
    (ER_ORDERING . LEXICOGRAPHIC-RECURSIVE-PATH)
    (ER_OPERATOR.ORDERING * - + 0 1)
    (ER_KNUTH.BENDIX.WEIGHT (+ 1) (* 1) (- 0) (0 1) (1 1))
    (ER_POLYNOMIAL.WEIGHT (+ (X Y) (+ (* 2 Y) X)) (* (X Y) (+ (* X Y) X)) (- (X) (* X X)) (0 NIL 2) (1 NIL 2))
    (ER_NARROW.DEPTH . 0)
    (ER_NARROW.NEXT . DEPTH)
    (ER_NARROW.TEST NORM C DELTA SL N)
    (ER_COMPILE)
    (GEN_SPLITTING)
    (GEN_PRESIMPLIFICATION . T)
    (GEN_MIN.EXPRESSION.LENGTH.FOR.FILE)
    (GEN_MIN.EXPRESSION.SIZE.FOR.FILE)
    (GEN_MANUAL.CONTROL)
    (GEN_MAXIMUM.STEPS)
    (GEN_GRAPH.SAVING)
    (GEN_SAVE.FILE . SAVEDEFAULT)
    (GEN_LISP.GARBAGE.COLLECTION)
    (GEN_COMMON.LISP)
    (GEN_OTHER.PROVER . MKRP)
    (TR_PREPROCESSING)
    (TR_STEP.MODE . LR)
    (TR_DUMP)
    (TR_CLAUSE.MODE . I)
    (TR_LINK.MODE . I)
    (TR_TRACE.FILE)
    (TR_TERMINAL . T)
    (PR_INFIX.FORM . T)
    (PR_PREFIX.FORM)
    (PR_OPTIONS)
    (PR_AXIOM.CLAUSES . T)
    (PR_SYMBOLS)
    (PR_DIRECT.PROOF)
    (PR_VARIABLE.PRINT.NAMES X Y Z U V W XX YY ZZ UU VV WW XXX YYY ZZZ UUU VVV WWW)
    (PR_PROTOCOL . STANDARD)
    (PR_LEFT.MARGIN . 0)
    (PR_RIGHT.MARGIN . 117)
    (PR_LATEX)
    (PR_LINELENGTH . 117)
    (PR_LITERALS)
   )

(REFUTATION (START.TIME 3556635446)

(OPTIONS (TWO_RULES)
    (TWO_RULES.MAXLEVEL . 1)
    (TWO_SUPPRESS.NORULES)
    (RED.I_CLAUSE.MULTIPLE.LITERALS)
    (RED.I_CLAUSE.PURITY)
    (RED.I_CLAUSE.TAUTOLOGY)
    (RED.I_CLAUSE.TAUTOLOGY.RECHECK)
    (RED.I_CLAUSE.SUBSUMPTION)
    (RED.I_CLAUSE.SUBSUMPTION.RECHECK)
    (RED.I_CLAUSE.REPL.FACTORING)
    (RED.I_CLAUSE.REPL.FACTORING.RECHECK)
    (RED.I_CLAUSE.REPL.RESOLUTION)
    (RED.I_CLAUSE.REPL.RESOLUTION.RECHECK)
    (RED.I_CLAUSE.REWRITING)
    (RED.I_LINK.INCOMPATIBILITY)
    (RED.I_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.I_LINK.TAUTOLOGY.RECHECK)
    (RED.I_LINK.SUBSUMPTION . REMOVE-INHIBIT)
    (RED.I_LINK.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.MULTIPLE.LITERALS)
    (RED.D_CLAUSE.PURITY . PARTIAL)
    (RED.D_CLAUSE.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_CLAUSE.TAUTOLOGY.RECHECK)
    (RED.D_CLAUSE.SUBSUMPTION.FORWARD . REMOVE-INHIBIT)
    (RED.D_CLAUSE.SUBSUMPTION.BACKWARD . REMOVE)
    (RED.D_CLAUSE.SUBSUMPTION.RECHECK)
    (RED.D_CLAUSE.REPL.FACTORING . T)
    (RED.D_CLAUSE.REPL.FACTORING.RECHECK . T)
    (RED.D_CLAUSE.REPL.RESOLUTION . SIMPLE)
    (RED.D_CLAUSE.REPL.RESOLUTION.RECHECK)
    (RED.D_CLAUSE.REWRITING . DEM)
    (RED.D_LINK.INCOMPATIBILITY)
    (RED.D_LINK.TAUTOLOGY . REMOVE-INHIBIT)
    (RED.D_LINK.TAUTOLOGY.RECHECK)
    (RED.D_LINK.SUBSUMPTION)
    (RED.D_LINK.SUBSUMPTION.RECHECK)
    (FAC_INITIAL)
    (FAC_EACH.STEP)
    (STR_RESOLUTION . ALL)
    (STR_R.SELECTION * 10 (+ 2 VARIABLES (* 2 DEPTH) (* 3 NOLIT)))
    (STR_LINK.DEPTH)
    (STR_TERM.DEPTH)
    (STR_FINITE.DOMAIN . T)
    (TERM_UNITS . T)
    (TERM_ITERATIONS . 0)
    (TERM_SET.OF.SUPPORT)
    (TERM_BREADTH.FIRST)
    (SORT_LITERALS . T)
    (SORT_MAX.UNIFICATION.RULE.STEPS . 100)
    (SORT_MAX.UNIFICATION.TREE.DEPTH . 100)
    (SORT_MAX.UNIFICATION.TREE.OPEN.NODES . 20)
    (SORT_UNIFIER.STOP.NUMBER . 100)
    (SORT_SHOW.VARIABLE.SORTS . T)
    (ER_PARAMODULATION . HEURISTIC-COMPLETION)
    (ER_WEIGHT.POLYNOMIALS)
    (ER_P.SELECTION * WEIGHT (IF SUPPORT 1 1.5) (IF EQUATIONAL 1 2))
    (ER_COMPLETION . UNFAILING)
    (ER_CP.REDUCTION . T)
    (ER_ORDERING . LEXICOGRAPHIC-RECURSIVE-PATH)
    (ER_OPERATOR.ORDERING * - + 0 1)
    (ER_KNUTH.BENDIX.WEIGHT (+ 1) (* 1) (- 0) (0 1) (1 1))
    (ER_POLYNOMIAL.WEIGHT (+ (X Y) (+ (* 2 Y) X)) (* (X Y) (+ (* X Y) X)) (- (X) (* X X)) (0 NIL 2) (1 NIL 2))
    (ER_NARROW.DEPTH . 0)
    (ER_NARROW.NEXT . DEPTH)
    (ER_NARROW.TEST NORM C DELTA SL N)
    (ER_COMPILE)
    (GEN_SPLITTING)
    (GEN_PRESIMPLIFICATION . T)
    (GEN_MIN.EXPRESSION.LENGTH.FOR.FILE)
    (GEN_MIN.EXPRESSION.SIZE.FOR.FILE)
    (GEN_MANUAL.CONTROL)
    (GEN_MAXIMUM.STEPS)
    (GEN_GRAPH.SAVING)
    (GEN_SAVE.FILE . SAVEDEFAULT)
    (GEN_LISP.GARBAGE.COLLECTION)
    (GEN_COMMON.LISP)
    (GEN_OTHER.PROVER . MKRP)
    (TR_PREPROCESSING)
    (TR_STEP.MODE . LR)
    (TR_DUMP)
    (TR_CLAUSE.MODE . I)
    (TR_LINK.MODE . I)
    (TR_TRACE.FILE)
    (TR_TERMINAL . T)
    (PR_INFIX.FORM . T)
    (PR_PREFIX.FORM)
    (PR_OPTIONS)
    (PR_AXIOM.CLAUSES . T)
    (PR_SYMBOLS)
    (PR_DIRECT.PROOF)
    (PR_VARIABLE.PRINT.NAMES X Y Z U V W XX YY ZZ UU VV WW XXX YYY ZZZ UUU VVV WWW)
    (PR_PROTOCOL . STANDARD)
    (PR_LEFT.MARGIN . 0)
    (PR_RIGHT.MARGIN . 117)
    (PR_LATEX)
    (PR_LINELENGTH . 117)
    (PR_LITERALS)
   )
   (INITIAL   (CLAUSE 14 R.= AXIOM ((12 . 3)) ((+ 2 (12 12)) ))
(CLAUSE 15 A1 AXIOM () ((- 4 (5 6)) ))
(CLAUSE 16 A2 AXIOM () ((+ 4 (5 8)) ))
(CLAUSE 18 A3 AXIOM ((9 . 7)) ((+ 10 (9)) ))
(CLAUSE 19 A4 AXIOM ()
   ((+ 4 (5 6)) (+ 4 (5 7)) ))
(CLAUSE 21 T5 THEOREM ((11 . 8)) ((- 10 (11)) ))   )
   (OPERATION (CLAUSE 28 R1 (21 18) () ((+ 4 (5 6)) ))
   (RESOLUTION 18 1 21 1 NIL (9 5 11 5) 28))
   (OPERATION (CLAUSE 28 R1 (21 18) () ((+ 4 (5 6)) ))
   (REPLACEMENT.OPERATION NIL (28 15)
  (((28 . 1) (15 . 1) NIL))
  (NIL)
  NIL))
   (END.TIME 3556638940)
   (SYMBOLS 
   (LET (NEW.ADDRESS)
   (LIST (CONS   10 (DT-PREDICATE.CREATE "P" '(ANY)))
   (PROG1 (CONS    4 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "E" '(ANY ANY))))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (PROG1 (CONS    2 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "=" '(ANY ANY))))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED SYMMETRIC REFLEXIVE SYMMETRIC REFLEXIVE)))
   (PROG1 (CONS    1 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "FALSE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (PROG1 (CONS    0 (SETQ NEW.ADDRESS (DT-PREDICATE.CREATE "TRUE" 'NIL)))
   (DT-PREDICATE.ADD.ATTRIBUTES NEW.ADDRESS '(DEFINED)))
   (CONS    8 (DT-CONSTANT.CREATE "r" 'ANY))
   (CONS    7 (DT-CONSTANT.CREATE "s" 'ANY))
   (CONS    6 (DT-CONSTANT.CREATE "t" 'ANY))
   (CONS    5 (DT-CONSTANT.CREATE "a" 'ANY))
   (CONS    3 (DT-CONSTANT.CREATE "omega" 'ANY)))))
   (SPLITPART.IDENTIFIER 1)
   (RESULT SUCCESS 28)
)