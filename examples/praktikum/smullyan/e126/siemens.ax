(COND ((FMT-LOAD " 2-APR-85 15:57:38"
NIL(((* SMULLYAN, CHAPTER 8, PROBLEM 126) COMMENT COMMENT) ((* SUPPOSE THERE ARE TWO NEIGHBORING ISLANDS EACH 
EXCLUSIVELY) COMMENT COMMENT) ((* INHABITED BY KNIGHTS AND KNAVES (THERE ARE NO NORMALS) .) COMMENT COMMENT) ((ALL
X KNIGHT (X) EQV NOT KNAVE (X)) (ALL 3 (EQV (+ 4 (3) NIL) (NOT (+ 5 (3) NIL)))) QUANTIFICATION) ((ALL X,Y KNIGHT
(X) AND STAT (X Y) IMPL T (Y)) (ALL 7 (ALL 6 (IMPL (AND (+ 4 (6) NIL) (+ 8 (6 7) NIL)) (+ 9 (7) NIL)))) QUANTIFICATION)
((ALL X,Y KNAVE (X) AND STAT (X Y) IMPL NOT T (Y)) (ALL 11 (ALL 10 (IMPL (AND (+ 5 (10) NIL) (+ 8 (10 11) NIL))
(NOT (+ 9 (11) NIL))))) QUANTIFICATION) ((* YOU ARE TOLD THAT ON ONE OF THE TWO ISLANDS THERE IS AN EVEN) COMMENT
COMMENT) ((* NUMBER OF KNIGHTS AND ON THE OTHER ONE THERE IS AN ODD NUMBER) COMMENT COMMENT) ((* OF KNIGHTS.) COMMENT
COMMENT) ((ALL X EVEN (X) EQV NOT ODD (X)) (ALL 12 (EQV (+ 13 (12) NIL) (NOT (+ 14 (12) NIL)))) QUANTIFICATION)
((* YOU ARE ALSO TOLD THAT THERE IS GOLD ON THE ISLAND CONTAINING) COMMENT COMMENT) ((* THE EVEN NUMBER OF KNIGHTS,
BUT THERE IS NO GOLD ON THE OTHER) COMMENT COMMENT) ((* ISLAND.) COMMENT COMMENT) ((EVEN (KNIGHTS) EQV 
THERE-IS-GOLD-ON-THE-ISLAND) (EQV (+ 13 (15) NIL) (+ 16 NIL NIL)) QUANTIFICATION) ((EVEN (KNAVES) AND EVEN (NATIVES)
IMPL EVEN (KNIGHTS)) (IMPL (AND (+ 13 (17) NIL) (+ 13 (18) NIL)) (+ 13 (15) NIL)) QUANTIFICATION) ((ODD (KNAVES)
AND ODD (NATIVES) IMPL EVEN (KNIGHTS)) (IMPL (AND (+ 14 (17) NIL) (+ 14 (18) NIL)) (+ 13 (15) NIL)) QUANTIFICATION)
((* YOU PICK ONE OF THE TWO ISLANDS AT RANDOM AND VISIT IT.) COMMENT COMMENT) ((* ALL THE INHABITANTS KNOW HOW
MANY KNIGHTS AND HOW MANY KNAVES) COMMENT COMMENT) ((* LIVE ON THE ISLAND. YOU ARE INTERVIEWING THREE INHABITANTS,)
COMMENT COMMENT) ((* A, B, C, AND THEY MAKE THE FOLLOWING STATEMENTS:) COMMENT COMMENT) ((* A: THERE IS AN EVEN
NUMBER OF KNAVES ON THIS ISLAND.) COMMENT COMMENT) ((STAT (A EVENNUMBER (KNAVES))) (+ 8 (19 (20 17)) NIL) QUANTIFICATION)
((* B: RIGHT NOW, THERE IS AN ODD NUMBER OF PEOPLE ON THE ISLAND.) COMMENT COMMENT) ((STAT (B ODDNUMBER (PEOPLE)))
(+ 8 (21 (23 22)) NIL) QUANTIFICATION) ((* C: I AM A KNIGHT IF AND ONLY IF A AND B ARE OF THE SAME TYPE.) COMMENT
COMMENT) ((STAT (C KNIGHTIFFEQV)) (+ 8 (24 25) NIL) QUANTIFICATION) ((ALL X T (EVENNUMBER (X)) EQV EVEN (X)) (ALL
26 (EQV (+ 9 ((20 26)) NIL) (+ 13 (26) NIL))) QUANTIFICATION) ((ALL X T (ODDNUMBER (X)) EQV ODD (X)) (ALL 27 (EQV
(+ 9 ((23 27)) NIL) (+ 14 (27) NIL))) QUANTIFICATION) ((T (KNIGHTIFFEQV) EQV KNIGHT (C) EQV (KNIGHT (A) EQV KNIGHT
(B))) (EQV (+ 9 (25) NIL) (EQV (+ 4 (24) NIL) (EQV (+ 4 (19) NIL) (+ 4 (21) NIL)))) QUANTIFICATION) ((* ASSUME
THAT YOU ARE NEITHER A KNIGHT NOR A KNAVE AND THAT AT) COMMENT COMMENT) ((* THE MOMENT YOU ARE THE ONLY VISITOR
ON THE ISLAND.) COMMENT COMMENT) ((ODD (PEOPLE) EQV EVEN (NATIVES)) (EQV (+ 14 (22) NIL) (+ 13 (18) NIL)) QUANTIFICATION)
))(COND (ST*LOAD.FLAG (PROGN (DT-RESET))
(MEM-RESTORE NIL NIL 28 10257 10500 (QUOTE (10262 10267 10272 10277 10291 10296 10301 10315 10320 10325 10330 10345
10350 10365 10380 10385 10390 10395 10410 10425 10430 10435 10450 10465 10470 10485 10500))(QUOTE (15 TRUE NIL
NIL NIL (DEFINED) NIL ((- 1 (POSITIVE))) ((+ 1 (NEGATIVE))) ((+ 1 (NIL))) ((- 1 (NIL))) NIL NIL (DT*ST-KIND NIL)
PREDICATE 15 FALSE NIL NIL NIL (DEFINED) NIL ((- 2 (POSITIVE))) ((+ 2 (NEGATIVE))) ((+ 2 (NIL))) ((- 2 (NIL)))
NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 15 KNIGHT NIL NIL (ANY)
NIL NIL ((- 4 (POSITIVE))) ((+ 4 (NEGATIVE))) ((+ 4 (NIL))) ((- 4 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15
KNAVE NIL NIL (ANY) NIL NIL ((- 5 (POSITIVE))) ((+ 5 (NEGATIVE))) ((+ 5 (NIL))) ((- 5 (NIL))) NIL NIL (DT*ST-KIND
NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE
15 STAT NIL NIL (ANY ANY) NIL NIL ((- 8 (POSITIVE))) ((+ 8 (NEGATIVE))) ((+ 8 (NIL))) ((- 8 (NIL))) NIL NIL (DT*ST-KIND
NIL) PREDICATE 15 T NIL NIL (ANY) NIL NIL ((- 9 (POSITIVE))) ((+ 9 (NEGATIVE))) ((+ 9 (NIL))) ((- 9 (NIL))) NIL
NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 15 EVEN NIL NIL (ANY) NIL NIL ((- 13 (POSITIVE)))
((+ 13 (NEGATIVE))) ((+ 13 (NIL))) ((- 13 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 ODD NIL NIL (ANY) NIL NIL
((- 14 (POSITIVE))) ((+ 14 (NEGATIVE))) ((+ 14 (NIL))) ((- 14 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 KNIGHTS
ANY (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT 15 THERE-IS-GOLD-ON-THE-ISLAND NIL NIL NIL NIL NIL ((- 16 (POSITIVE)))
((+ 16 (NEGATIVE))) ((+ 16 (NIL))) ((- 16 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 KNAVES ANY (ST*ATTRIBUTE
NIL DT*ST-KIND NIL) CONSTANT 5 NATIVES ANY (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT 5 A ANY (ST*ATTRIBUTE NIL
DT*ST-KIND NIL) CONSTANT 14 EVENNUMBER NIL ANY (ANY) NIL NIL NIL NIL NIL 1 ANY (DT*ST-KIND NIL) FUNCTION 5 B ANY
(ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT 5 PEOPLE ANY (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT 14 ODDNUMBER
NIL ANY (ANY) NIL NIL NIL NIL NIL 1 ANY (DT*ST-KIND NIL) FUNCTION 5 C ANY (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT
5 KNIGHTIFFEQV ANY (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE
5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE)))(PROGN (RPAQQ DT*SORT.ALL (ANY)) (RPAQQ DT*SORT.NR 2) (RPAQQ
DT*SORT.PROPERTIES (DT*MAX.SUBSORTS DT*LEAST.SUPERSORTS DT*TRANSITIVE.CLOSURE DT*INVERSE.TRANSITIVE.CLOSURE 
DT*MINIMAL.SUBSORTS DT*DIRECT.SUBSORTS DT*DIRECT.SUPERSORTS DT*DISJOINT.SORTS DT*COMPLETION.SORT)) (RPAQQ 
DT*SORT.COMMON.COMPUTE.FLAG NIL) (RPAQQ DT*VARIABLE.COUNTER 0) (RPAQQ DT*CONSTANT.COUNTER 0) (RPAQQ DT*CONSTANT.ALL
(25 24 22 21 19 18 17 15)) (RPAQQ DT*ABBREVIATIONS NIL) (RPAQQ DT*FUNCTION.COUNTER 0) (RPAQQ DT*FUNCTION.ALL (23
20)) (RPAQQ DT*FUNCTION.ADMISSIBLE.THEORIES (ASSOCIATIVE)) (RPAQQ DT*FUNCTION.ACTUAL.THEORIES NIL) (RPAQQ 
DT*FUNCTION.WITH.ARGUMENT.SYMMETRIES NIL) (RPAQQ DT*FUNCTION.COMPONENTS (PNAME ATTRIBUTES MAX.RANGE.SORT 
MAX.DOMAIN.SORTS MIN.RANGE.SORTS SORT.LIST SORT.LIST.INVERSE SORT.TREE.CALC ARGUMENT.SYMMETRIES ARITY G.L.B.OF.RANGES))
(RPAQQ DT*PREDICATE.ADMISSABLE.ATTRIBUTES (SYMMETRIC DEFINED REFLEXIVE)) (RPAQQ DT*PREDICATE.COUNTER 0) (RPAQQ
DT*EQUALITY.SYMBOLS ("=" ":=" "=:" ":=:")) (RPAQQ DT*EQUALITY.PREDICATES NIL) (RPAQQ DT*NONEQUALITY.PREDICATES
(16 14 13 9 8 5 4 2 1)) (RPAQQ DT*PREDICATE.ALL (16 14 13 9 8 5 4 2 1)) (RPAQQ DT*PREDICATE.WITH.ATTRIBUTES NIL)
(RPAQQ DT*PREDICATE.COMPONENTS (PNAME POSITIVE.OCCURRENCES NEGATIVE.OCCURRENCES DOMAINSORTS ATTRIBUTES REFL.CLAUSE
+ROTHERSIDES -ROTHERSIDES +SOTHERSIDES -SOTHERSIDES +TOTHERSIDES -TOTHERSIDES)) (RPAQQ DT*TRUE.PREDICATE 1) (RPAQQ
DT*FALSE.PREDICATE 2) (RPAQQ DT*UNI.CREATES.VARIABLES NIL) (RPAQQ DT*SIGN.MINUS.SYMBOLS (- --)) (RPAQQ 
DT*SIGN.PLUS.SYMBOLS (+ ++)) (RPAQQ DT*SYMBOL.KINDS (CONSTANT.ALL FUNCTION.ALL PREDICATE.ALL)))
(PROGN)
(PROGN (SETPROPLIST (QUOTE DT*PREDICATE.WITH.ATTRIBUTES) (QUOTE (DEFINED (2 1)))))
(PROGN (SETPROPLIST (QUOTE ANY) (QUOTE (DT*ATTRIBUTE NIL DT*INVERSE.TRANSITIVE.CLOSURE (ANY) DT*DIRECT.SUPERSORTS
NIL DT*MINIMAL.SUBSORTS (ANY) DT*MAX.SUBSORTS ((ANY ANY)) DT*TRANSITIVE.CLOSURE (ANY) DT*SORT.NUMBER 1 
DT*DIRECT.SUBSORTS NIL))))
(PROGN (RPAQQ ST*STACK1 (NIL NIL NIL NIL NIL ((X_27 PROGN (DT-VARIABLE.DELETE 27) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC
(QUOTE X_27) ST*SYMBOL.ADDRESSES)))) ((X_26 PROGN (DT-VARIABLE.DELETE 26) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE
X_26) ST*SYMBOL.ADDRESSES)))) ((KNIGHTIFFEQV PROGN (DT-CONSTANT.DELETE 25) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC
(QUOTE KNIGHTIFFEQV) ST*SYMBOL.ADDRESSES))) (C PROGN (DT-CONSTANT.DELETE 24) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC
(QUOTE C) ST*SYMBOL.ADDRESSES)))) NIL ((ODDNUMBER PROGN (DT-FUNCTION.DELETE 23) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC
(QUOTE ODDNUMBER) ST*SYMBOL.ADDRESSES))) (PEOPLE PROGN (DT-CONSTANT.DELETE 22) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC
(QUOTE PEOPLE) ST*SYMBOL.ADDRESSES))) (B PROGN (DT-CONSTANT.DELETE 21) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE
B) ST*SYMBOL.ADDRESSES)))) NIL ((EVENNUMBER PROGN (DT-FUNCTION.DELETE 20) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE
EVENNUMBER) ST*SYMBOL.ADDRESSES))) (A PROGN (DT-CONSTANT.DELETE 19) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE
A) ST*SYMBOL.ADDRESSES)))) NIL NIL NIL NIL NIL NIL ((NATIVES PROGN (DT-CONSTANT.DELETE 18) (RPAQ ST*SYMBOL.ADDRESSES
(REMASSOC (QUOTE NATIVES) ST*SYMBOL.ADDRESSES))) (KNAVES PROGN (DT-CONSTANT.DELETE 17) (RPAQ ST*SYMBOL.ADDRESSES
(REMASSOC (QUOTE KNAVES) ST*SYMBOL.ADDRESSES)))) ((THERE-IS-GOLD-ON-THE-ISLAND PROGN (DT-PREDICATE.DELETE 16) (RPAQ
ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE THERE-IS-GOLD-ON-THE-ISLAND) ST*SYMBOL.ADDRESSES))) (KNIGHTS PROGN (
DT-CONSTANT.DELETE 15) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE KNIGHTS) ST*SYMBOL.ADDRESSES)))) NIL NIL NIL
((ODD PROGN (DT-PREDICATE.DELETE 14) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE ODD) ST*SYMBOL.ADDRESSES))) (EVEN
PROGN (DT-PREDICATE.DELETE 13) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE EVEN) ST*SYMBOL.ADDRESSES))) (X_12 PROGN
(DT-VARIABLE.DELETE 12) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_12) ST*SYMBOL.ADDRESSES)))) NIL NIL NIL ((X_11
PROGN (DT-VARIABLE.DELETE 11) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_11) ST*SYMBOL.ADDRESSES))) (X_10 PROGN
(DT-VARIABLE.DELETE 10) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_10) ST*SYMBOL.ADDRESSES)))) ((T PROGN (
DT-PREDICATE.DELETE 9) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE T) ST*SYMBOL.ADDRESSES))) (STAT PROGN (
DT-PREDICATE.DELETE 8) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE STAT) ST*SYMBOL.ADDRESSES))) (X_7 PROGN (
DT-VARIABLE.DELETE 7) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_7) ST*SYMBOL.ADDRESSES))) (X_6 PROGN (
DT-VARIABLE.DELETE 6) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_6) ST*SYMBOL.ADDRESSES)))) ((KNAVE PROGN (
DT-PREDICATE.DELETE 5) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE KNAVE) ST*SYMBOL.ADDRESSES))) (KNIGHT PROGN (
DT-PREDICATE.DELETE 4) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE KNIGHT) ST*SYMBOL.ADDRESSES))) (X_3 PROGN (
DT-VARIABLE.DELETE 3) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_3) ST*SYMBOL.ADDRESSES)))) NIL NIL NIL ((FALSE
PROGN (DT-PREDICATE.DELETE 2) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE FALSE) ST*SYMBOL.ADDRESSES))) (TRUE PROGN
(DT-PREDICATE.DELETE 1) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE TRUE) ST*SYMBOL.ADDRESSES))) (ANY PROGN (
DT-SORT.ST.REMOVE (QUOTE ANY)) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE ANY) ST*SYMBOL.ADDRESSES))) (ANY REMPROP
(QUOTE ANY) (QUOTE ST*DATA))))) (RPAQQ ST*SYMBOL.ADDRESSES (NIL (ANY . T) (TRUE . 1) (FALSE . 2) (X_3 . 3) (KNIGHT
. 4) (KNAVE . 5) (X_6 . 6) (X_7 . 7) (STAT . 8) (T . 9) (X_10 . 10) (X_11 . 11) (X_12 . 12) (EVEN . 13) (ODD .
14) (KNIGHTS . 15) (THERE-IS-GOLD-ON-THE-ISLAND . 16) (KNAVES . 17) (NATIVES . 18) (A . 19) (EVENNUMBER . 20) (B
. 21) (PEOPLE . 22) (ODDNUMBER . 23) (C . 24) (KNIGHTIFFEQV . 25) (X_26 . 26) (X_27 . 27))))))))STOP
 
