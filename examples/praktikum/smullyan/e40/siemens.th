(COND ((FMT-LOAD "19-NOV-84 22:35:53" NIL (((TRUTH (A) AND NOT KNIGHT (A) OR TRUTH (B) AND NOT KNIGHT (B)) (OR
(AND (+ 23 (26) NIL) (NOT (+ 7 (26) NIL))) (AND (+ 23 (27) NIL) (NOT (+ 7 (27) NIL)))) QUANTIFICATION))) (COND
(ST*LOAD.FLAG (PROGN (DT-RESET)) (PROG ((ADDRLIST (QUOTE (10295 10300 10315 10320 10335 10340 10345 10350 10365
10370 10375 10380 10385 10400 10405 10410 10415 10420 10435 10450 10465 10470 ATP.MEMORY.NIL ATP.MEMORY.NIL 
ATP.MEMORY.NIL 10485 10500))) (DATALIST (QUOTE (15 "TRUE" NIL NIL NIL (DEFINED) NIL ((- 1 (POSITIVE))) ((+ 1 (NEGATIVE)))
((+ 1 (NIL))) ((- 1 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "FALSE" NIL NIL NIL (DEFINED) NIL ((- 2 (POSITIVE)))
((+ 2 (NEGATIVE))) ((+ 2 (NIL))) ((- 2 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 15 KNIGHT NIL NIL (ANY) NIL NIL ((- 7 (POSITIVE))) ((+ 7 (NEGATIVE))) ((+ 7 (NIL))) ((- 7 (NIL)))
NIL NIL (DT*ST-KIND NIL) PREDICATE 15 NORMAL NIL NIL (ANY) NIL NIL ((- 8 (POSITIVE))) ((+ 8 (NEGATIVE))) ((+ 8
(NIL))) ((- 8 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 KNAVE NIL NIL (ANY) NIL NIL ((- 9 (POSITIVE))) ((+
9 (NEGATIVE))) ((+ 9 (NIL))) ((- 9 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 15 KNIGHT2 NIL NIL (ANY ANY) NIL NIL ((- 14 (POSITIVE)))
((+ 14 (NEGATIVE))) ((+ 14 (NIL))) ((- 14 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 15 NKNIGHT2 NIL NIL (ANY ANY) NIL NIL ((- 19 (POSITIVE)))
((+ 19 (NEGATIVE))) ((+ 19 (NIL))) ((- 19 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
VARIABLE 15 "TRUTH" NIL NIL (ANY) NIL NIL ((- 23 (POSITIVE))) ((+ 23 (NEGATIVE))) ((+ 23 (NIL))) ((- 23 (NIL)))
NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 15 "LIE" NIL NIL (ANY) NIL
NIL ((- 25 (POSITIVE))) ((+ 25 (NEGATIVE))) ((+ 25 (NIL))) ((- 25 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5
"A" ANY (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT 5 "B" ANY (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT))) (INCREMENT
(IDIFFERENCE MEM*SIZE 10500)) COUNTER1) (MEM-RESET) (COND ((IGREATERP MEM*SIZE 10500) (SETQ COUNTER1 28) (MAPC
ADDRLIST (FUNCTION (LAMBDA (RADDR) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1)) (COND ((EQ RADDR (QUOTE 
ATP.MEMORY.NIL)) RADDR) ((OR (EQ RADDR 0) (MINUSP RADDR)) RADDR) (T (IPLUS RADDR INCREMENT))))))) (SETQ COUNTER1
(ADD1 MEM*SIZE)) (MAPC DATALIST (FUNCTION (LAMBDA (DATA) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1)) DATA)))))
(T (COND ((NEQ MEM*SIZE 10500) (MEM-INITIALIZE 10500))) (SETQ COUNTER1 28) (MAPC ADDRLIST (FUNCTION (LAMBDA (RADDR)
(SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1)) RADDR)))) (SETQ COUNTER1 (ADD1 MEM*SIZE)) (MAPC DATALIST (FUNCTION
(LAMBDA (DATA) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1)) DATA)))))) (COND ((IGREATERP MEM*SIZE 10500) (RPAQ
MEM*NEXT.RADR (IPLUS 10290 INCREMENT))) (T (RPAQ MEM*NEXT.RADR 10290))) (RPAQ MEM*NEXT.VADR 28) (RPAQ MEM*REST
(ADD1 (IDIFFERENCE MEM*NEXT.RADR MEM*NEXT.VADR))) (RPAQ MEM*FIRST.REUSABLE.VADR NIL) (RPAQ MEM*LAST.REUSABLE.VADR
NIL)) (PROGN (RPAQQ DT*SORT.ALL (ANY)) (RPAQQ DT*SORT.NR 2) (RPAQQ DT*SORT.PROPERTIES (DT*MAX.SUBSORTS 
DT*LEAST.SUPERSORTS DT*TRANSITIVE.CLOSURE DT*INVERSE.TRANSITIVE.CLOSURE DT*MINIMAL.SUBSORTS DT*DIRECT.SUBSORTS
DT*DIRECT.SUPERSORTS DT*DISJOINT.SORTS DT*COMPLETION.SORT)) (RPAQQ DT*SORT.COMMON.COMPUTE.FLAG NIL) (RPAQQ 
DT*VARIABLE.COUNTER 0) (RPAQQ DT*CONSTANT.COUNTER 0) (RPAQQ DT*CONSTANT.ALL (27 26)) (RPAQQ DT*ABBREVIATIONS NIL)
(RPAQQ DT*FUNCTION.COUNTER 0) (RPAQQ DT*FUNCTION.ALL NIL) (RPAQQ DT*FUNCTION.ADMISSIBLE.THEORIES (ASSOCIATIVE))
(RPAQQ DT*FUNCTION.ACTUAL.THEORIES NIL) (RPAQQ DT*FUNCTION.WITH.ARGUMENT.SYMMETRIES NIL) (RPAQQ DT*FUNCTION.COMPONENTS
(PNAME ATTRIBUTES MAX.RANGE.SORT MAX.DOMAIN.SORTS MIN.RANGE.SORTS SORT.LIST SORT.LIST.INVERSE SORT.TREE.CALC 
ARGUMENT.SYMMETRIES ARITY G.L.B.OF.RANGES)) (RPAQQ DT*PREDICATE.ADMISSABLE.ATTRIBUTES (SYMMETRIC DEFINED REFLEXIVE))
(RPAQQ DT*PREDICATE.COUNTER 0) (RPAQQ DT*EQUALITY.SYMBOLS ("=" ":=" "=:" ":=:")) (RPAQQ DT*EQUALITY.PREDICATES
NIL) (RPAQQ DT*NONEQUALITY.PREDICATES (25 23 19 14 9 8 7 2 1)) (RPAQQ DT*PREDICATE.ALL (25 23 19 14 9 8 7 2 1))
(RPAQQ DT*PREDICATE.WITH.ATTRIBUTES NIL) (RPAQQ DT*PREDICATE.COMPONENTS (PNAME POSITIVE.OCCURRENCES NEGATIVE.OCCURRENCES
DOMAINSORTS ATTRIBUTES REFL.CLAUSE +ROTHERSIDES -ROTHERSIDES +SOTHERSIDES -SOTHERSIDES +TOTHERSIDES -TOTHERSIDES))
(RPAQQ DT*TRUE.PREDICATE 1) (RPAQQ DT*FALSE.PREDICATE 2) (RPAQQ DT*UNI.CREATES.VARIABLES NIL) (RPAQQ 
DT*SIGN.MINUS.SYMBOLS (- --)) (RPAQQ DT*SIGN.PLUS.SYMBOLS (+ ++)) (RPAQQ DT*SYMBOL.KINDS (CONSTANT.ALL FUNCTION.ALL
PREDICATE.ALL))) (PROGN) (PROGN (SETPROPLIST (QUOTE DT*PREDICATE.WITH.ATTRIBUTES) (QUOTE NIL))) (PROGN (SETPROPLIST
(QUOTE ANY) (QUOTE (DT*INVERSE.TRANSITIVE.CLOSURE (ANY) DT*DIRECT.SUPERSORTS NIL DT*MINIMAL.SUBSORTS (ANY) 
DT*MAX.SUBSORTS ((ANY ANY)) DT*TRANSITIVE.CLOSURE (ANY) DT*DIRECT.SUBSORTS NIL DT*ATTRIBUTE NIL DT*SORT.NUMBER
1)))) (PROGN (RPAQQ ST*STACK1 (NIL NIL NIL)) (RPAQQ ST*SYMBOL.ADDRESSES (NIL (ANY . T) (TRUE . 1) (FALSE . 2) (X_6
. 6) (KNIGHT . 7) (NORMAL . 8) (KNAVE . 9) (X_10 . 10) (X_11 . 11) (X_12 . 12) (X_13 . 13) (KNIGHT2 . 14) (X_15
. 15) (X_16 . 16) (X_17 . 17) (X_18 . 18) (NKNIGHT2 . 19) (X_20 . 20) (X_21 . 21) (X_22 . 22) (TRUTH . 23) (X_24
. 24) (LIE . 25) (A . 26) (B . 27))))))))STOP
 
