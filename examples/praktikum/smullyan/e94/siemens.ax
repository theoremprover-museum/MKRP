(COND ((FMT-LOAD "13-FEB-85 15:11:32"
NIL(((* PROBLEM 94) COMMENT COMMENT) ((* HERE IS AN ELEGANTLY SIMPLE ONE INVOLVING JUST TWO INHABITANTS,A AND B.) COMMENT COMMENT) ((* JUST ONE OF THEM IS A WEREWOLF.THEY MAKE THE FOLLOWING STATEMENTS:) COMMENT COMMENT) ((* A:THE WEREWOLF IS A
KNIGHT.) COMMENT COMMENT) ((* B:THE WEREWOLF IS A KNAVE.) COMMENT COMMENT) ((* WHICH ONE WOULD YOU SELECT FOR YOUR TRAVELING COMPANION?) COMMENT COMMENT) ((*) COMMENT COMMENT) ((* THE FUNCTION STATE AND THE PREDICATES KNIGHT,KNAVE,WEREWOLF AND
TRUTH) COMMENT COMMENT) ((* MEAN THE SAME AS DESCRIBED IN THE PROBLEMS 88 - 93) COMMENT COMMENT) ((* WE DEFINE THE FOLLOWING NEW PREDICATES:) COMMENT COMMENT) ((* STATE.W.I.K (X) ...THE STATEMENT X TELLS THAT IF A PERSON IS A WEREWOLF) COMMENT
COMMENT) ((* THEN HE IS A KNIGHT.) COMMENT COMMENT) ((* STATE.W.I.KNAVE (X) ...THE STATEMENT X TELLS THAT IF A PERSON IS A WEREWOLF) COMMENT COMMENT) ((* THEN HE IS A KNAVE.) COMMENT COMMENT) ((*) COMMENT COMMENT) ((* DECLARATIONS) COMMENT COMMENT)
((*) COMMENT COMMENT) ((TYPE A,B : PERSON) (+ 1 NIL) TYPE) ((TYPE STATE (PERSON) :STATEMENT) (+ 1 NIL) TYPE) ((TYPE WEREWOLF (PERSON)) (+ 1 NIL) TYPE) ((TYPE KNIGHT (PERSON)) (+ 1 NIL) TYPE) ((TYPE KNAVE (PERSON)) (+ 1 NIL) TYPE) ((TYPE TRUTH
(STATEMENT)) (+ 1 NIL) TYPE) ((TYPE STATE.W.I.K (STATEMENT)) (+ 1 NIL) TYPE) ((TYPE STATE.W.I.KNAVE (STATEMENT)) (+ 1 NIL) TYPE) ((*) COMMENT COMMENT) ((* ONLY ONE OF THE PERSONS A AND B IS A WEREWOLF) COMMENT COMMENT) ((*) COMMENT COMMENT) ((WEREWOLF
(A) OR WEREWOLF (B)) (OR (+ 28 (31) NIL) (+ 28 (30) NIL)) QUANTIFICATION) ((NOT (WEREWOLF (A) AND WEREWOLF (B))) (NOT (AND (+ 28 (31) NIL) (+ 28 (30) NIL))) QUANTIFICATION) ((*) COMMENT COMMENT) ((* A KNIGHT ALWAYS SAYS THE TRUTH AND A KNAVE ALWAYS
LIES) COMMENT COMMENT) ((*) COMMENT COMMENT) ((ALL X : PERSON TRUTH (STATE (X)) EQV KNIGHT (X)) (ALL 12 (EQV (+ 25 ((29 12)) NIL) (+ 27 (12) NIL))) QUANTIFICATION) ((ALL X : PERSON NOT (TRUTH (STATE (X))) EQV KNAVE (X)) (ALL 32 (EQV (NOT (+ 25
((29 32)) NIL)) (+ 26 (32) NIL))) QUANTIFICATION) ((*) COMMENT COMMENT) ((* IMPLICATIONS ABOUT STATEMENTS:) COMMENT COMMENT) ((*) COMMENT COMMENT) ((ALL X : STATEMENT STATE.W.I.K (X) AND TRUTH (X) IMPL ((WEREWOLF (A) IMPL KNIGHT (A)) AND (WEREWOLF
(B) IMPL KNIGHT (B)))) (ALL 33 (IMPL (AND (+ 24 (33) NIL) (+ 25 (33) NIL)) (AND (IMPL (+ 28 (31) NIL) (+ 27 (31) NIL)) (IMPL (+ 28 (30) NIL) (+ 27 (30) NIL))))) QUANTIFICATION) ((ALL X : STATEMENT STATE.W.I.K (X) AND NOT (TRUTH (X)) IMPL NOT ((WEREWOLF
(A) IMPL KNIGHT (A)) AND (WEREWOLF (B) IMPL KNIGHT (B)))) (ALL 34 (IMPL (AND (+ 24 (34) NIL) (NOT (+ 25 (34) NIL))) (NOT (AND (IMPL (+ 28 (31) NIL) (+ 27 (31) NIL)) (IMPL (+ 28 (30) NIL) (+ 27 (30) NIL)))))) QUANTIFICATION) ((ALL X : STATEMENT
STATE.W.I.KNAVE (X) AND TRUTH (X) IMPL ((WEREWOLF (A) IMPL KNAVE (A)) AND (WEREWOLF (B) IMPL KNAVE (B)))) (ALL 35 (IMPL (AND (+ 23 (35) NIL) (+ 25 (35) NIL)) (AND (IMPL (+ 28 (31) NIL) (+ 26 (31) NIL)) (IMPL (+ 28 (30) NIL) (+ 26 (30) NIL)))))
QUANTIFICATION) ((ALL X : STATEMENT STATE.W.I.KNAVE (X) AND NOT (TRUTH (X)) IMPL NOT ((WEREWOLF (A) IMPL KNAVE (A)) AND (WEREWOLF (B) IMPL KNAVE (B)))) (ALL 36 (IMPL (AND (+ 23 (36) NIL) (NOT (+ 25 (36) NIL))) (NOT (AND (IMPL (+ 28 (31) NIL) (+
26 (31) NIL)) (IMPL (+ 28 (30) NIL) (+ 26 (30) NIL)))))) QUANTIFICATION) ((*) COMMENT COMMENT) ((* ACTUAL STATEMENTS:) COMMENT COMMENT) ((*) COMMENT COMMENT) ((STATE.W.I.K (STATE (A))) (+ 24 ((29 31)) NIL) QUANTIFICATION) ((STATE.W.I.KNAVE (STATE
(B))) (+ 23 ((29 30)) NIL) QUANTIFICATION)))(COND (ST*LOAD.FLAG (PROGN (DT-RESET))
(MEM-RESTORE NIL NIL 37 10326 10500 (QUOTE (10331 10336 10341 10346 10351 10470 10465 10460 10446 10431 10416 10401 10386 10371 ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL 10356 ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 10485 10500))(QUOTE (15 TRUE NIL NIL NIL (DEFINED) NIL ((- 1 (POSITIVE)))
((+ 1 (NEGATIVE))) ((+ 1 (NIL))) ((- 1 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 FALSE NIL NIL NIL (DEFINED) NIL ((- 2 (POSITIVE))) ((+ 2 (NEGATIVE))) ((+ 2 (NIL))) ((- 2 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 A PERSON (ST*ATTRIBUTE
NIL DT*ST-KIND NIL) CONSTANT 5 B PERSON (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT 14 STATE NIL STATEMENT (PERSON) NIL NIL NIL NIL NIL 1 STATEMENT (DT*ST-KIND NIL) FUNCTION 15 WEREWOLF NIL NIL (PERSON) NIL NIL ((- 28 (POSITIVE))) ((+ 28 (NEGATIVE)))
((+ 28 (NIL))) ((- 28 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 KNIGHT NIL NIL (PERSON) NIL NIL ((- 27 (POSITIVE))) ((+ 27 (NEGATIVE))) ((+ 27 (NIL))) ((- 27 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 KNAVE NIL NIL (PERSON) NIL NIL ((-
26 (POSITIVE))) ((+ 26 (NEGATIVE))) ((+ 26 (NIL))) ((- 26 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 TRUTH NIL NIL (STATEMENT) NIL NIL ((- 25 (POSITIVE))) ((+ 25 (NEGATIVE))) ((+ 25 (NIL))) ((- 25 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE
15 STATE.W.I.K NIL NIL (STATEMENT) NIL NIL ((- 24 (POSITIVE))) ((+ 24 (NEGATIVE))) ((+ 24 (NIL))) ((- 24 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 STATE.W.I.KNAVE NIL NIL (STATEMENT) NIL NIL ((- 23 (POSITIVE))) ((+ 23 (NEGATIVE))) ((+ 23 (NIL)))
((- 23 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 STATEMENT NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 STATEMENT NIL (ST*DATA
NIL DT*ST-KIND SYS-VAR) VARIABLE 5 STATEMENT NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 STATEMENT NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE)))(PROGN (RPAQQ DT*SORT.ALL (STATEMENT PERSON ANY)) (RPAQQ DT*SORT.NR 8) (RPAQQ DT*SORT.PROPERTIES
(DT*MAX.SUBSORTS DT*LEAST.SUPERSORTS DT*TRANSITIVE.CLOSURE DT*INVERSE.TRANSITIVE.CLOSURE DT*MINIMAL.SUBSORTS DT*DIRECT.SUBSORTS DT*DIRECT.SUPERSORTS DT*DISJOINT.SORTS DT*COMPLETION.SORT)) (RPAQQ DT*SORT.COMMON.COMPUTE.FLAG NIL) (RPAQQ 
DT*VARIABLE.COUNTER 0) (RPAQQ DT*CONSTANT.COUNTER 0) (RPAQQ DT*CONSTANT.ALL (30 31)) (RPAQQ DT*ABBREVIATIONS NIL) (RPAQQ DT*FUNCTION.COUNTER 0) (RPAQQ DT*FUNCTION.ALL (29)) (RPAQQ DT*FUNCTION.ADMISSIBLE.THEORIES (ASSOCIATIVE)) (RPAQQ 
DT*FUNCTION.ACTUAL.THEORIES NIL) (RPAQQ DT*FUNCTION.WITH.ARGUMENT.SYMMETRIES NIL) (RPAQQ DT*FUNCTION.COMPONENTS (PNAME ATTRIBUTES MAX.RANGE.SORT MAX.DOMAIN.SORTS MIN.RANGE.SORTS SORT.LIST SORT.LIST.INVERSE SORT.TREE.CALC ARGUMENT.SYMMETRIES ARITY
G.L.B.OF.RANGES)) (RPAQQ DT*PREDICATE.ADMISSABLE.ATTRIBUTES (SYMMETRIC DEFINED REFLEXIVE)) (RPAQQ DT*PREDICATE.COUNTER 0) (RPAQQ DT*EQUALITY.SYMBOLS ("=" ":=" "=:" ":=:")) (RPAQQ DT*EQUALITY.PREDICATES NIL) (RPAQQ DT*NONEQUALITY.PREDICATES (23
24 25 26 27 28 2 1)) (RPAQQ DT*PREDICATE.ALL (23 24 25 26 27 28 2 1)) (RPAQQ DT*PREDICATE.WITH.ATTRIBUTES NIL) (RPAQQ DT*PREDICATE.COMPONENTS (PNAME POSITIVE.OCCURRENCES NEGATIVE.OCCURRENCES DOMAINSORTS ATTRIBUTES REFL.CLAUSE +ROTHERSIDES -ROTHERSIDES
+SOTHERSIDES -SOTHERSIDES +TOTHERSIDES -TOTHERSIDES)) (RPAQQ DT*TRUE.PREDICATE 1) (RPAQQ DT*FALSE.PREDICATE 2) (RPAQQ DT*UNI.CREATES.VARIABLES NIL) (RPAQQ DT*SIGN.MINUS.SYMBOLS (- --)) (RPAQQ DT*SIGN.PLUS.SYMBOLS (+ ++)) (RPAQQ DT*SYMBOL.KINDS
(CONSTANT.ALL FUNCTION.ALL PREDICATE.ALL)))
(PROGN)
(PROGN (SETPROPLIST (QUOTE DT*PREDICATE.WITH.ATTRIBUTES) (QUOTE NIL)))
(PROGN (SETPROPLIST (QUOTE STATEMENT) (QUOTE (DT*INVERSE.TRANSITIVE.CLOSURE (STATEMENT ANY) DT*DIRECT.SUPERSORTS (ANY) DT*MINIMAL.SUBSORTS (STATEMENT) DT*MAX.SUBSORTS ((STATEMENT STATEMENT) (PERSON) (ANY STATEMENT)) DT*TRANSITIVE.CLOSURE (STATEMENT)
DT*DIRECT.SUBSORTS NIL DT*ATTRIBUTE NIL DT*SORT.NUMBER 7))) (SETPROPLIST (QUOTE PERSON) (QUOTE (DT*INVERSE.TRANSITIVE.CLOSURE (PERSON ANY) DT*DIRECT.SUPERSORTS (ANY) DT*MINIMAL.SUBSORTS (PERSON) DT*MAX.SUBSORTS ((STATEMENT) (PERSON PERSON) (ANY
PERSON)) DT*TRANSITIVE.CLOSURE (PERSON) DT*DIRECT.SUBSORTS NIL DT*ATTRIBUTE NIL DT*SORT.NUMBER 6))) (SETPROPLIST (QUOTE ANY) (QUOTE (DT*LEAST.SUPERSORTS ((ANY ANY)) DT*ATTRIBUTE NIL DT*INVERSE.TRANSITIVE.CLOSURE (ANY) DT*DIRECT.SUPERSORTS NIL
DT*MINIMAL.SUBSORTS (PERSON) DT*MAX.SUBSORTS ((STATEMENT STATEMENT) (PERSON PERSON) (ANY ANY)) DT*TRANSITIVE.CLOSURE (STATEMENT PERSON ANY) DT*SORT.NUMBER 1 DT*DIRECT.SUBSORTS (STATEMENT PERSON)))))
(PROGN (RPAQQ ST*STACK1 (NIL NIL NIL NIL NIL NIL ((X_36 PROGN (DT-VARIABLE.DELETE 36) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_36) ST*SYMBOL.ADDRESSES)))) ((X_35 PROGN (DT-VARIABLE.DELETE 35) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_35)
ST*SYMBOL.ADDRESSES)))) ((X_34 PROGN (DT-VARIABLE.DELETE 34) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_34) ST*SYMBOL.ADDRESSES)))) ((X_33 PROGN (DT-VARIABLE.DELETE 33) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_33) ST*SYMBOL.ADDRESSES))))
NIL NIL NIL ((X_32 PROGN (DT-VARIABLE.DELETE 32) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_32) ST*SYMBOL.ADDRESSES)))) ((X_12 PROGN (DT-VARIABLE.DELETE 12) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_12) ST*SYMBOL.ADDRESSES)))) NIL NIL NIL
NIL NIL NIL NIL NIL ((STATE.W.I.KNAVE PROGN (DT-PREDICATE.DELETE 23) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE STATE.W.I.KNAVE) ST*SYMBOL.ADDRESSES)))) ((STATE.W.I.K PROGN (DT-PREDICATE.DELETE 24) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE STATE.W.I.K)
ST*SYMBOL.ADDRESSES)))) ((TRUTH PROGN (DT-PREDICATE.DELETE 25) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE TRUTH) ST*SYMBOL.ADDRESSES)))) ((KNAVE PROGN (DT-PREDICATE.DELETE 26) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE KNAVE) ST*SYMBOL.ADDRESSES))))
((KNIGHT PROGN (DT-PREDICATE.DELETE 27) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE KNIGHT) ST*SYMBOL.ADDRESSES)))) ((WEREWOLF PROGN (DT-PREDICATE.DELETE 28) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE WEREWOLF) ST*SYMBOL.ADDRESSES)))) ((STATE PROGN
(DT-FUNCTION.DELETE 29) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE STATE) ST*SYMBOL.ADDRESSES))) (STATEMENT PROGN (DT-SORT.ST.REMOVE (QUOTE STATEMENT)) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE STATEMENT) ST*SYMBOL.ADDRESSES))) (STATEMENT REMPROP
(QUOTE STATEMENT) (QUOTE ST*DATA))) ((B PROGN (DT-CONSTANT.DELETE 30) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE B) ST*SYMBOL.ADDRESSES))) (A PROGN (DT-CONSTANT.DELETE 31) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE A) ST*SYMBOL.ADDRESSES))) (PERSON
PROGN (DT-SORT.ST.REMOVE (QUOTE PERSON)) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE PERSON) ST*SYMBOL.ADDRESSES))) (PERSON REMPROP (QUOTE PERSON) (QUOTE ST*DATA))) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL ((FALSE PROGN
(DT-PREDICATE.DELETE 2) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE FALSE) ST*SYMBOL.ADDRESSES))) (TRUE PROGN (DT-PREDICATE.DELETE 1) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE TRUE) ST*SYMBOL.ADDRESSES))) (ANY PROGN (DT-SORT.ST.REMOVE (QUOTE ANY))
(RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE ANY) ST*SYMBOL.ADDRESSES))) (ANY REMPROP (QUOTE ANY) (QUOTE ST*DATA))))) (RPAQQ ST*SYMBOL.ADDRESSES (NIL (ANY . T) (TRUE . 1) (FALSE . 2) (PERSON . T) (A . 31) (B . 30) (STATEMENT . T) (STATE . 29) (WEREWOLF
. 28) (KNIGHT . 27) (KNAVE . 26) (TRUTH . 25) (STATE.W.I.K . 24) (STATE.W.I.KNAVE . 23) (X_12 . 12) (X_32 . 32) (X_33 . 33) (X_34 . 34) (X_35 . 35) (X_36 . 36))))))))STOP
 
