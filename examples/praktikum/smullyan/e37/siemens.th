(COND ((FMT-LOAD "19-NOV-84 21:37:01" NIL (((YES (A B) IMPL YES (B A)) (IMPL (+ 6 (19 20) NIL) (+ 6 (20 19) NIL))
QUANTIFICATION) ((NO (A B) IMPL NO (B A)) (IMPL (+ 7 (19 20) NIL) (+ 7 (20 19) NIL)) QUANTIFICATION))) (COND (
ST*LOAD.FLAG (PROGN (DT-RESET)) (PROG ((ADDRLIST (QUOTE (10350 10355 10360 10365 10370 10375 10380 10395 10400
10405 10420 10425 10430 10445 10460 10465 10470 ATP.MEMORY.NIL 10485 10500))) (DATALIST (QUOTE (15 "TRUE" NIL NIL
NIL (DEFINED) NIL ((- 1 (POSITIVE))) ((+ 1 (NEGATIVE))) ((+ 1 (NIL))) ((- 1 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE
15 "FALSE" NIL NIL NIL (DEFINED) NIL ((- 2 (POSITIVE))) ((+ 2 (NEGATIVE))) ((+ 2 (NIL))) ((- 2 (NIL))) NIL NIL
(DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 15 "YES" NIL NIL (ANY ANY) NIL NIL ((- 6 (POSITIVE))) ((+ 6 (NEGATIVE))) ((+ 6 (NIL))) ((- 6
(NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "NO" NIL NIL (ANY ANY) NIL NIL ((- 7 (POSITIVE))) ((+ 7 (NEGATIVE)))
((+ 7 (NIL))) ((- 7 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE
5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 15 KNIGHT NIL NIL (ANY) NIL NIL ((- 10 (POSITIVE))) ((+ 10
(NEGATIVE))) ((+ 10 (NIL))) ((- 10 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 15 KNAVE NIL NIL (ANY) NIL NIL ((- 13 (POSITIVE)))
((+ 13 (NEGATIVE))) ((+ 13 (NIL))) ((- 13 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE
5 "A" ANY (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT 5 "B" ANY (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT))) (INCREMENT
(IDIFFERENCE MEM*SIZE 10500)) COUNTER1) (MEM-RESET) (COND ((IGREATERP MEM*SIZE 10500) (SETQ COUNTER1 21) (MAPC
ADDRLIST (FUNCTION (LAMBDA (RADDR) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1)) (COND ((EQ RADDR (QUOTE 
ATP.MEMORY.NIL)) RADDR) ((OR (EQ RADDR 0) (MINUSP RADDR)) RADDR) (T (IPLUS RADDR INCREMENT))))))) (SETQ COUNTER1
(ADD1 MEM*SIZE)) (MAPC DATALIST (FUNCTION (LAMBDA (DATA) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1)) DATA)))))
(T (COND ((NEQ MEM*SIZE 10500) (MEM-INITIALIZE 10500))) (SETQ COUNTER1 21) (MAPC ADDRLIST (FUNCTION (LAMBDA (RADDR)
(SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1)) RADDR)))) (SETQ COUNTER1 (ADD1 MEM*SIZE)) (MAPC DATALIST (FUNCTION
(LAMBDA (DATA) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1)) DATA)))))) (COND ((IGREATERP MEM*SIZE 10500) (RPAQ
MEM*NEXT.RADR (IPLUS 10345 INCREMENT))) (T (RPAQ MEM*NEXT.RADR 10345))) (RPAQ MEM*NEXT.VADR 21) (RPAQ MEM*REST
(ADD1 (IDIFFERENCE MEM*NEXT.RADR MEM*NEXT.VADR))) (RPAQ MEM*FIRST.REUSABLE.VADR NIL) (RPAQ MEM*LAST.REUSABLE.VADR
NIL)) (PROGN (RPAQQ DT*SORT.ALL (ANY)) (RPAQQ DT*SORT.NR 2) (RPAQQ DT*SORT.PROPERTIES (DT*MAX.SUBSORTS 
DT*LEAST.SUPERSORTS DT*TRANSITIVE.CLOSURE DT*INVERSE.TRANSITIVE.CLOSURE DT*MINIMAL.SUBSORTS DT*DIRECT.SUBSORTS
DT*DIRECT.SUPERSORTS DT*DISJOINT.SORTS DT*COMPLETION.SORT)) (RPAQQ DT*SORT.COMMON.COMPUTE.FLAG NIL) (RPAQQ 
DT*VARIABLE.COUNTER 0) (RPAQQ DT*CONSTANT.COUNTER 0) (RPAQQ DT*CONSTANT.ALL (20 19)) (RPAQQ DT*ABBREVIATIONS NIL)
(RPAQQ DT*FUNCTION.COUNTER 0) (RPAQQ DT*FUNCTION.ALL NIL) (RPAQQ DT*FUNCTION.ADMISSIBLE.THEORIES (ASSOCIATIVE))
(RPAQQ DT*FUNCTION.ACTUAL.THEORIES NIL) (RPAQQ DT*FUNCTION.WITH.ARGUMENT.SYMMETRIES NIL) (RPAQQ DT*FUNCTION.COMPONENTS
(PNAME ATTRIBUTES MAX.RANGE.SORT MAX.DOMAIN.SORTS MIN.RANGE.SORTS SORT.LIST SORT.LIST.INVERSE SORT.TREE.CALC 
ARGUMENT.SYMMETRIES ARITY G.L.B.OF.RANGES)) (RPAQQ DT*PREDICATE.ADMISSABLE.ATTRIBUTES (SYMMETRIC DEFINED REFLEXIVE))
(RPAQQ DT*PREDICATE.COUNTER 0) (RPAQQ DT*EQUALITY.SYMBOLS ("=" ":=" "=:" ":=:")) (RPAQQ DT*EQUALITY.PREDICATES
NIL) (RPAQQ DT*NONEQUALITY.PREDICATES (13 10 7 6 2 1)) (RPAQQ DT*PREDICATE.ALL (13 10 7 6 2 1)) (RPAQQ 
DT*PREDICATE.WITH.ATTRIBUTES NIL) (RPAQQ DT*PREDICATE.COMPONENTS (PNAME POSITIVE.OCCURRENCES NEGATIVE.OCCURRENCES
DOMAINSORTS ATTRIBUTES REFL.CLAUSE +ROTHERSIDES -ROTHERSIDES +SOTHERSIDES -SOTHERSIDES +TOTHERSIDES -TOTHERSIDES))
(RPAQQ DT*TRUE.PREDICATE 1) (RPAQQ DT*FALSE.PREDICATE 2) (RPAQQ DT*UNI.CREATES.VARIABLES NIL) (RPAQQ 
DT*SIGN.MINUS.SYMBOLS (- --)) (RPAQQ DT*SIGN.PLUS.SYMBOLS (+ ++)) (RPAQQ DT*SYMBOL.KINDS (CONSTANT.ALL FUNCTION.ALL
PREDICATE.ALL))) (PROGN) (PROGN (SETPROPLIST (QUOTE DT*PREDICATE.WITH.ATTRIBUTES) (QUOTE NIL))) (PROGN (SETPROPLIST
(QUOTE ANY) (QUOTE (DT*INVERSE.TRANSITIVE.CLOSURE (ANY) DT*DIRECT.SUPERSORTS NIL DT*MINIMAL.SUBSORTS (ANY) 
DT*MAX.SUBSORTS ((ANY ANY)) DT*TRANSITIVE.CLOSURE (ANY) DT*DIRECT.SUBSORTS NIL DT*ATTRIBUTE NIL DT*SORT.NUMBER
1)))) (PROGN (RPAQQ ST*STACK1 (NIL NIL ((B PROGN (DT-CONSTANT.DELETE 20) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE
B) ST*SYMBOL.ADDRESSES))) (A PROGN (DT-CONSTANT.DELETE 19) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE A) 
ST*SYMBOL.ADDRESSES)))) NIL)) (RPAQQ ST*SYMBOL.ADDRESSES (NIL (ANY . T) (TRUE . 1) (FALSE . 2) (X_4 . 4) (X_5 .
5) (YES . 6) (NO . 7) (X_8 . 8) (X_9 . 9) (KNIGHT . 10) (X_11 . 11) (X_12 . 12) (KNAVE . 13) (X_14 . 14) (X_15
. 15) (X_16 . 16) (X_17 . 17) (X_18 . 18) (A . 19) (B . 20))))))))STOP
 
