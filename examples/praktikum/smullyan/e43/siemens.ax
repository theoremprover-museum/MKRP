(COND ((FMT-LOAD "21-DEC-84 00:56:56" NIL (((* AXIOMS FOR PROBLEM 43 %.) COMMENT COMMENT) ((* GIVEN THREE PEOPLE
A,B AND C.) COMMENT COMMENT) ((* ONE IS A KNIGHT ,ONE A KNAVE ,ONE A NORMAL.) COMMENT COMMENT) ((* A SAYS : B IS
OF HIGHER RANK THAN C.) COMMENT COMMENT) ((* B SAYS : C IS OF A HIGHER RANK THAN A.) COMMENT COMMENT) ((*) COMMENT
COMMENT) ((* THEN C IS ASKED : WHO HAS A HIGHER RANK ,A OR B. WHAT DOES C ANSWER?) COMMENT COMMENT) ((*) COMMENT
COMMENT) ((*) COMMENT COMMENT) ((* HRANK2 (X Y) MEANS : X IS OF A HIGHER RANK THAN Y.) COMMENT COMMENT) ((* HRANK3
(X Y Z) MEANS : X SAYS : Y IS OF A HIGHER RANK THAN Z.) COMMENT COMMENT) ((*) COMMENT COMMENT) ((*) COMMENT COMMENT)
((ALL X KNIGHT (X) EQV NOT KNAVE (X) AND NOT NORMAL (X)) (ALL 199 (EQV (+ 198 (199) (KIND (EQV T 150))) (AND (NOT
(+ 183 (199) (KIND (EQV NIL 150)))) (NOT (+ 192 (199) (KIND (EQV NIL 150))))))) QUANTIFICATION) ((ALL X KNAVE (X)
EQV NOT KNIGHT (X) AND NOT NORMAL (X)) (ALL 207 (EQV (+ 183 (207) (KIND (EQV T 160))) (AND (NOT (+ 198 (207) (KIND
(EQV NIL 160)))) (NOT (+ 192 (207) (KIND (EQV NIL 160))))))) QUANTIFICATION) ((ALL X NORMAL (X) EQV NOT KNIGHT
(X) AND NOT KNAVE (X)) (ALL 212 (EQV (+ 192 (212) (KIND (EQV T 170))) (AND (NOT (+ 198 (212) (KIND (EQV NIL 170))))
(NOT (+ 183 (212) (KIND (EQV NIL 170))))))) QUANTIFICATION) ((ALL X,Y,Z HRANK3 (X Y Z) AND KNAVE (X) IMPL NOT HRANK2
(Y Z)) (ALL 206 (ALL 211 (ALL 193 (IMPL (AND (+ 216 (193 211 206) NIL) (+ 183 (193) NIL)) (NOT (+ 217 (211 206)
NIL)))))) QUANTIFICATION) ((ALL X,Y,Z HRANK3 (X Y Z) AND KNIGHT (X) IMPL HRANK2 (Y Z)) (ALL 223 (ALL 222 (ALL 221
(IMPL (AND (+ 216 (221 222 223) NIL) (+ 198 (221) NIL)) (+ 217 (222 223) NIL))))) QUANTIFICATION) ((ALL X,Y HRANK2
(X Y) EQV KNIGHT (X) AND NOT KNIGHT (Y) OR NORMAL (X) AND KNAVE (Y)) (ALL 239 (ALL 238 (EQV (+ 217 (238 239) (KIND
(EQV T 200))) (OR (AND (+ 198 (238) (KIND (EQV NIL 200))) (NOT (+ 198 (239) (KIND (EQV NIL 200))))) (AND (+ 192
(238) (KIND (EQV NIL 200))) (+ 183 (239) (KIND (EQV NIL 200)))))))) QUANTIFICATION) ((NORMAL (A) OR NORMAL (B)
OR NORMAL (C)) (OR (+ 192 (240) NIL) (OR (+ 192 (241) NIL) (+ 192 (242) NIL))) QUANTIFICATION) ((KNIGHT (A) OR
KNIGHT (B) OR KNIGHT (C)) (OR (+ 198 (240) NIL) (OR (+ 198 (241) NIL) (+ 198 (242) NIL))) QUANTIFICATION) ((KNAVE
(A) OR KNAVE (B) OR KNAVE (C)) (OR (+ 183 (240) NIL) (OR (+ 183 (241) NIL) (+ 183 (242) NIL))) QUANTIFICATION)
((HRANK3 (A B C)) (+ 216 (240 241 242) NIL) QUANTIFICATION) ((HRANK3 (B C A)) (+ 216 (241 242 240) NIL) QUANTIFICATION)
((HRANK3 (C B A) OR HRANK3 (C A B)) (OR (+ 216 (242 241 240) NIL) (+ 216 (242 240 241) NIL)) QUANTIFICATION)))
(COND (ST*LOAD.FLAG (PROGN (DT-RESET)) (PROG ((ADDRLIST (QUOTE (19830 19835 19840 19845 19850 ATP.MEMORY.NIL 
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 19855 19860 19865 ATP.MEMORY.NIL 
ATP.MEMORY.NIL ATP.MEMORY.NIL 19880 19895 ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 19915 19905 ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL 19920 19900 ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL 19970 19965 ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 19910 19935 ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 19950
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 19985 20000))) (DATALIST (QUOTE (15 "TRUE" NIL NIL
NIL (DEFINED) NIL ((- 1 (POSITIVE))) ((+ 1 (NEGATIVE))) ((+ 1 (NIL))) ((- 1 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE
15 "FALSE" NIL NIL NIL (DEFINED) NIL ((- 2 (POSITIVE))) ((+ 2 (NEGATIVE))) ((+ 2 (NIL))) ((- 2 (NIL))) NIL NIL
(DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 15 "KNIGHT" NIL NIL (ANY) NIL NIL
((- 198 (POSITIVE))) ((+ 198 (NEGATIVE))) ((+ 198 (NIL))) ((- 198 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15
"KNAVE" NIL NIL (ANY) NIL NIL ((- 183 (POSITIVE))) ((+ 183 (NEGATIVE))) ((+ 183 (NIL))) ((- 183 (NIL))) NIL NIL
(DT*ST-KIND NIL) PREDICATE 15 "NORMAL" NIL NIL (ANY) NIL NIL ((- 192 (POSITIVE))) ((+ 192 (NEGATIVE))) ((+ 192
(NIL))) ((- 192 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE
5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
(ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 15 "HRANK3" NIL NIL
(ANY ANY ANY) NIL NIL ((- 216 (POSITIVE))) ((+ 216 (NEGATIVE))) ((+ 216 (NIL))) ((- 216 (NIL))) NIL NIL (DT*ST-KIND
NIL) PREDICATE 15 "HRANK2" NIL NIL (ANY ANY) NIL NIL ((- 217 (POSITIVE))) ((+ 217 (NEGATIVE))) ((+ 217 (NIL)))
((- 217 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
(ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA
NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 "A" ANY (ST*ATTRIBUTE NIL
DT*ST-KIND NIL) CONSTANT 5 "B" ANY (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT 5 "C" ANY (ST*ATTRIBUTE NIL DT*ST-KIND
NIL) CONSTANT))) (INCREMENT (IDIFFERENCE MEM*SIZE 20000)) COUNTER1) (MEM-RESET) (COND ((IGREATERP MEM*SIZE 20000)
(SETQ COUNTER1 243) (MAPC ADDRLIST (FUNCTION (LAMBDA (RADDR) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1)) (COND
((EQ RADDR (QUOTE ATP.MEMORY.NIL)) RADDR) ((OR (EQ RADDR 0) (MINUSP RADDR)) RADDR) (T (IPLUS RADDR INCREMENT)))))))
(SETQ COUNTER1 (ADD1 MEM*SIZE)) (MAPC DATALIST (FUNCTION (LAMBDA (DATA) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1))
DATA))))) (T (COND ((NEQ MEM*SIZE 20000) (MEM-INITIALIZE 20000))) (SETQ COUNTER1 243) (MAPC ADDRLIST (FUNCTION
(LAMBDA (RADDR) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1)) RADDR)))) (SETQ COUNTER1 (ADD1 MEM*SIZE)) (MAPC
DATALIST (FUNCTION (LAMBDA (DATA) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1)) DATA)))))) (COND ((IGREATERP
MEM*SIZE 20000) (RPAQ MEM*NEXT.RADR (IPLUS 19825 INCREMENT))) (T (RPAQ MEM*NEXT.RADR 19825))) (RPAQ MEM*NEXT.VADR
243) (RPAQ MEM*REST (ADD1 (IDIFFERENCE MEM*NEXT.RADR MEM*NEXT.VADR))) (RPAQ MEM*FIRST.REUSABLE.VADR NIL) (RPAQ
MEM*LAST.REUSABLE.VADR NIL)) (PROGN (RPAQQ DT*SORT.ALL (ANY)) (RPAQQ DT*SORT.NR 2) (RPAQQ DT*SORT.PROPERTIES (
DT*MAX.SUBSORTS DT*LEAST.SUPERSORTS DT*TRANSITIVE.CLOSURE DT*INVERSE.TRANSITIVE.CLOSURE DT*MINIMAL.SUBSORTS 
DT*DIRECT.SUBSORTS DT*DIRECT.SUPERSORTS DT*DISJOINT.SORTS DT*COMPLETION.SORT)) (RPAQQ DT*SORT.COMMON.COMPUTE.FLAG
NIL) (RPAQQ DT*VARIABLE.COUNTER 0) (RPAQQ DT*CONSTANT.COUNTER 0) (RPAQQ DT*CONSTANT.ALL (242 241 240)) (RPAQQ 
DT*ABBREVIATIONS NIL) (RPAQQ DT*FUNCTION.COUNTER 0) (RPAQQ DT*FUNCTION.ALL NIL) (RPAQQ DT*FUNCTION.ADMISSIBLE.THEORIES
(ASSOCIATIVE)) (RPAQQ DT*FUNCTION.ACTUAL.THEORIES NIL) (RPAQQ DT*FUNCTION.WITH.ARGUMENT.SYMMETRIES NIL) (RPAQQ
DT*FUNCTION.COMPONENTS (PNAME ATTRIBUTES MAX.RANGE.SORT MAX.DOMAIN.SORTS MIN.RANGE.SORTS SORT.LIST SORT.LIST.INVERSE
SORT.TREE.CALC ARGUMENT.SYMMETRIES ARITY G.L.B.OF.RANGES)) (RPAQQ DT*PREDICATE.ADMISSABLE.ATTRIBUTES (SYMMETRIC
DEFINED REFLEXIVE)) (RPAQQ DT*PREDICATE.COUNTER 0) (RPAQQ DT*EQUALITY.SYMBOLS ("=" ":=" "=:" ":=:")) (RPAQQ 
DT*EQUALITY.PREDICATES NIL) (RPAQQ DT*NONEQUALITY.PREDICATES (217 216 192 183 198 2 1)) (RPAQQ DT*PREDICATE.ALL
(217 216 192 183 198 2 1)) (RPAQQ DT*PREDICATE.WITH.ATTRIBUTES NIL) (RPAQQ DT*PREDICATE.COMPONENTS (PNAME 
POSITIVE.OCCURRENCES NEGATIVE.OCCURRENCES DOMAINSORTS ATTRIBUTES REFL.CLAUSE +ROTHERSIDES -ROTHERSIDES +SOTHERSIDES
-SOTHERSIDES +TOTHERSIDES -TOTHERSIDES)) (RPAQQ DT*TRUE.PREDICATE 1) (RPAQQ DT*FALSE.PREDICATE 2) (RPAQQ 
DT*UNI.CREATES.VARIABLES NIL) (RPAQQ DT*SIGN.MINUS.SYMBOLS (- --)) (RPAQQ DT*SIGN.PLUS.SYMBOLS (+ ++)) (RPAQQ 
DT*SYMBOL.KINDS (CONSTANT.ALL FUNCTION.ALL PREDICATE.ALL))) (PROGN) (PROGN (SETPROPLIST (QUOTE 
DT*PREDICATE.WITH.ATTRIBUTES) (QUOTE NIL))) (PROGN (SETPROPLIST (QUOTE ANY) (QUOTE (DT*ATTRIBUTE NIL 
DT*INVERSE.TRANSITIVE.CLOSURE (ANY) DT*DIRECT.SUPERSORTS NIL DT*MINIMAL.SUBSORTS (ANY) DT*MAX.SUBSORTS ((ANY ANY))
DT*TRANSITIVE.CLOSURE (ANY) DT*DIRECT.SUBSORTS NIL DT*SORT.NUMBER 1)))) (PROGN (RPAQQ ST*STACK1 (NIL NIL NIL NIL
NIL NIL ((C PROGN (DT-CONSTANT.DELETE 242) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE C) ST*SYMBOL.ADDRESSES)))
(B PROGN (DT-CONSTANT.DELETE 241) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE B) ST*SYMBOL.ADDRESSES))) (A PROGN
(DT-CONSTANT.DELETE 240) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE A) ST*SYMBOL.ADDRESSES)))) ((X_239 PROGN (
DT-VARIABLE.DELETE 239) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_239) ST*SYMBOL.ADDRESSES))) (X_238 PROGN (
DT-VARIABLE.DELETE 238) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_238) ST*SYMBOL.ADDRESSES)))) ((X_223 PROGN
(DT-VARIABLE.DELETE 223) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_223) ST*SYMBOL.ADDRESSES))) (X_222 PROGN
(DT-VARIABLE.DELETE 222) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_222) ST*SYMBOL.ADDRESSES))) (X_221 PROGN
(DT-VARIABLE.DELETE 221) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_221) ST*SYMBOL.ADDRESSES)))) ((HRANK2 PROGN
(DT-PREDICATE.DELETE 217) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE HRANK2) ST*SYMBOL.ADDRESSES))) (HRANK3 PROGN
(DT-PREDICATE.DELETE 216) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE HRANK3) ST*SYMBOL.ADDRESSES))) (X_206 PROGN
(DT-VARIABLE.DELETE 206) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_206) ST*SYMBOL.ADDRESSES))) (X_211 PROGN
(DT-VARIABLE.DELETE 211) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_211) ST*SYMBOL.ADDRESSES))) (X_193 PROGN
(DT-VARIABLE.DELETE 193) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_193) ST*SYMBOL.ADDRESSES)))) ((X_212 PROGN
(DT-VARIABLE.DELETE 212) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_212) ST*SYMBOL.ADDRESSES)))) ((X_207 PROGN
(DT-VARIABLE.DELETE 207) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_207) ST*SYMBOL.ADDRESSES)))) ((NORMAL PROGN
(DT-PREDICATE.DELETE 192) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE NORMAL) ST*SYMBOL.ADDRESSES))) (KNAVE PROGN
(DT-PREDICATE.DELETE 183) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE KNAVE) ST*SYMBOL.ADDRESSES))) (KNIGHT PROGN
(DT-PREDICATE.DELETE 198) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE KNIGHT) ST*SYMBOL.ADDRESSES))) (X_199 PROGN
(DT-VARIABLE.DELETE 199) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_199) ST*SYMBOL.ADDRESSES)))) NIL NIL NIL
NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL ((FALSE PROGN (DT-PREDICATE.DELETE 2) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC
(QUOTE FALSE) ST*SYMBOL.ADDRESSES))) (TRUE PROGN (DT-PREDICATE.DELETE 1) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE
TRUE) ST*SYMBOL.ADDRESSES))) (ANY PROGN (DT-SORT.ST.REMOVE (QUOTE ANY)) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE
ANY) ST*SYMBOL.ADDRESSES))) (ANY REMPROP (QUOTE ANY) (QUOTE ST*DATA))))) (RPAQQ ST*SYMBOL.ADDRESSES (NIL (ANY .
T) (TRUE . 1) (FALSE . 2) (X_199 . 199) (KNIGHT . 198) (KNAVE . 183) (NORMAL . 192) (X_207 . 207) (X_212 . 212)
(X_193 . 193) (X_211 . 211) (X_206 . 206) (HRANK3 . 216) (HRANK2 . 217) (X_221 . 221) (X_222 . 222) (X_223 . 223)
(X_238 . 238) (X_239 . 239) (A . 240) (B . 241) (C . 242))))))))STOP
 
