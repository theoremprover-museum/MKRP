;;; -*- Package: MKRP; Base:10.; Syntax: Common-lisp; Mode: LISP -*-

(* PROBLEM 49)
(*)
(* ONE DAY ALICE MET THE LION.)
(* HE MADE TWO FOLLOWING STATEMENTS :)
(*)
(* I LIED YESTERDAY.)
(* I WILL LIE AGAIN TOMORROW.)
(*)
(* ON WHAT DAYS OF THE WEEK IS THIS POSSIBLE?)
(*)
(*)
(* FORMALIZING THE PROBLEM IN FIRST ORDER LOGIC)
(*)
(all x mo(x) impl ll(x))
(all x tu(x) impl ll(x))
(all x we(x) impl ll(x))
(all x th(x) impl not ll(x))
(all x fr(x) impl not ll(x))
(all x sa(x) impl not ll(x))
(all x su(x) impl not ll(x))
(*)
(all x mo(x) impl not lu(x))
(all x tu(x) impl not lu(x))
(all x we(x) impl not lu(x))
(all x th(x) impl lu(x))
(all x fr(x) impl lu(x))
(all x sa(x) impl lu(x))
(all x su(x) impl not lu(x))
(*)
(ALL X TU (X) impl  MO(YESTERDAY (X)))
(ALL X WE (X) impl  TU(YESTERDAY (X)))
(ALL X TH (X) impl  WE(YESTERDAY (X)))
(ALL X FR (X) impl  TH(YESTERDAY (X)))
(ALL X SA (X) impl  FR(YESTERDAY (X)))
(ALL X SU (X) impl  SA(YESTERDAY (X)))
(ALL X MO (X) impl  SU(YESTERDAY (X)))
(*)
(all x lu(x) impl day(x))
(all x ll(x) impl day(x))
(*)
(ALL X MO (X) IMPL day (X))
(ALL X TU (X) IMPL day (X))
(ALL X WE (X) IMPL day (X))
(ALL X TH (X) IMPL day (X))
(ALL X FR (X) IMPL day (X))
(ALL X SA (X) IMPL day (X))
(ALL X SU (X) IMPL day (X))
(* The predicate la has the following meaning:)
(* LA (X Y Z) IS TRUE, IFF X STATES AT DAY Y , THAT HE LIES ON DAY Z)
(*)
(all x,y (day(x) and day(y)) impl ((lu(x) and la(unicorn x y)) impl not lu(y)))
(all x,y (day(x) and day(y)) impl ((not lu(x) and la(unicorn x y)) impl lu(y)))
(all x,y (day(x) and day(y)) impl ((not lu(x) and not la(unicorn x y)) impl not lu(y)))
(all x,y (day(x) and day(y)) impl ((lu(x) and not la(unicorn x y)) impl lu(y)))
(*)
(all x,y (day(x) and day(y)) impl ((ll(x) and la(lion x y)) impl not ll(y)))
(all x,y (day(x) and day(y)) impl ((not ll(x) and la(lion x y)) impl ll(y)))
(all x,y (day(x) and day(y)) impl ((not ll(x) and not la(lion x y)) impl not ll(y)))
(all x,y (day(x) and day(y)) impl ((ll(x) and not la(lion x y)) impl ll(y)))
(*)
(*)
(MO (MONDAY))
(TU (TUESDAY))
(WE (WEDNESDAY))
(TH (THURSDAY))
(FR (FRIDAY))
(SA (SATURDAY))
(SU (SUNDAY))
(*)

(ex x day(x) and la(unicorn x yesterday(x)) and la(lion x yesterday(x)))