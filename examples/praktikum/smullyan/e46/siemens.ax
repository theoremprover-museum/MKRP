(COND ((FMT-LOAD "20-NOV-84 01:13:44" NIL (((* AXIOMS OF PROBLEM 46 %.) COMMENT COMMENT) ((* WE HAVE TWO MARRIED
COUPLES ON THE ISLAND OF BAHAVA.) COMMENT COMMENT) ((* MR AND MRS ABNORMAL AND MR AND MRS BOLD.) COMMENT COMMENT)
((* MR ABNORMAL SAYS : MR BOLD IS A KNIGHT.) COMMENT COMMENT) ((* MRS ABNORMAL SAYS : MY HUSBAND IS RIGHT ;MR BOLD
IS A KNIGHT.) COMMENT COMMENT) ((* MRS BOLD SAYS : THAT IS RIGHT. MY HUSBAND IS INDEED A KNIGHT.) COMMENT COMMENT)
((*) COMMENT COMMENT) ((* WHAT ARE THE 4 PEOPLE AND WHICH STATEMENTS ARE TRUE.) COMMENT COMMENT) ((*) COMMENT COMMENT)
((* KNIGHT2 (X Y) MEANS X SAYS : Y IS A KNIGHT.) COMMENT COMMENT) ((*) COMMENT COMMENT) ((ALL X KNIGHT (X) EQV
NOT KNAVE (X) AND NOT NORMAL (X)) (ALL 3 (EQV (+ 4 (3) (KIND (EQV T 130))) (AND (NOT (+ 5 (3) (KIND (EQV NIL 130))))
(NOT (+ 6 (3) (KIND (EQV NIL 130))))))) QUANTIFICATION) ((ALL X NORMAL (X) EQV NOT KNAVE (X) AND NOT KNIGHT (X))
(ALL 7 (EQV (+ 6 (7) (KIND (EQV T 140))) (AND (NOT (+ 5 (7) (KIND (EQV NIL 140)))) (NOT (+ 4 (7) (KIND (EQV NIL
140))))))) QUANTIFICATION) ((ALL X KNAVE (X) EQV NOT NORMAL (X) AND NOT KNIGHT (X)) (ALL 8 (EQV (+ 5 (8) (KIND
(EQV T 150))) (AND (NOT (+ 6 (8) (KIND (EQV NIL 150)))) (NOT (+ 4 (8) (KIND (EQV NIL 150))))))) QUANTIFICATION)
((ALL X,Y MARRIED (X Y) IMPL KNAVE (X) AND KNIGHT (Y) OR KNIGHT (X) AND KNAVE (Y) OR NORMAL (X) AND NORMAL (Y))
(ALL 10 (ALL 9 (IMPL (+ 11 (9 10) NIL) (OR (AND (+ 5 (9) NIL) (+ 4 (10) NIL)) (OR (AND (+ 4 (9) NIL) (+ 5 (10)
NIL)) (AND (+ 6 (9) NIL) (+ 6 (10) NIL))))))) QUANTIFICATION) ((ALL X,Y KNIGHT2 (X Y) AND KNIGHT (X) IMPL KNIGHT
(Y)) (ALL 13 (ALL 12 (IMPL (AND (+ 14 (12 13) NIL) (+ 4 (12) NIL)) (+ 4 (13) NIL)))) QUANTIFICATION) ((ALL X,Y
KNIGHT2 (X Y) AND KNAVE (X) IMPL NOT KNIGHT (Y)) (ALL 16 (ALL 15 (IMPL (AND (+ 14 (15 16) NIL) (+ 5 (15) NIL))
(NOT (+ 4 (16) NIL))))) QUANTIFICATION) ((MARRIED (MRBOLD MRSBOLD)) (+ 11 (17 18) NIL) QUANTIFICATION) ((MARRIED
(MRABNORMAL MRSABNORMAL)) (+ 11 (19 20) NIL) QUANTIFICATION) ((KNIGHT2 (MRABNORMAL MRBOLD)) (+ 14 (19 17) NIL)
QUANTIFICATION) ((KNIGHT2 (MRSABNORMAL MRBOLD)) (+ 14 (20 17) NIL) QUANTIFICATION) ((KNIGHT2 (MRSBOLD MRBOLD))
(+ 14 (18 17) NIL) QUANTIFICATION))) (COND (ST*LOAD.FLAG (PROGN (DT-RESET)) (PROG ((ADDRLIST (QUOTE (10335 10340
10345 10350 10355 10360 10375 10380 10385 10400 10405 10410 10415 10420 10435 10450 10465 10470 10485 10500)))
(DATALIST (QUOTE (15 "TRUE" NIL NIL NIL (DEFINED) NIL ((- 1 (POSITIVE))) ((+ 1 (NEGATIVE))) ((+ 1 (NIL))) ((- 1
(NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "FALSE" NIL NIL NIL (DEFINED) NIL ((- 2 (POSITIVE))) ((+ 2 (NEGATIVE)))
((+ 2 (NIL))) ((- 2 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE
15 KNIGHT NIL NIL (ANY) NIL NIL ((- 4 (POSITIVE))) ((+ 4 (NEGATIVE))) ((+ 4 (NIL))) ((- 4 (NIL))) NIL NIL (DT*ST-KIND
NIL) PREDICATE 15 KNAVE NIL NIL (ANY) NIL NIL ((- 5 (POSITIVE))) ((+ 5 (NEGATIVE))) ((+ 5 (NIL))) ((- 5 (NIL)))
NIL NIL (DT*ST-KIND NIL) PREDICATE 15 NORMAL NIL NIL (ANY) NIL NIL ((- 6 (POSITIVE))) ((+ 6 (NEGATIVE))) ((+ 6
(NIL))) ((- 6 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5
ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
(ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 15 "MARRIED" NIL NIL (ANY ANY) NIL NIL ((- 11 (POSITIVE))) ((+ 11 (NEGATIVE)))
((+ 11 (NIL))) ((- 11 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE
5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 15 "KNIGHT2" NIL NIL (ANY ANY) NIL NIL ((- 14 (POSITIVE)))
((+ 14 (NEGATIVE))) ((+ 14 (NIL))) ((- 14 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 "MRBOLD" ANY (ST*ATTRIBUTE NIL DT*ST-KIND
NIL) CONSTANT 5 "MRSBOLD" ANY (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT 5 "MRABNORMAL" ANY (ST*ATTRIBUTE NIL DT*ST-KIND
NIL) CONSTANT 5 "MRSABNORMAL" ANY (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT))) (INCREMENT (IDIFFERENCE MEM*SIZE
10500)) COUNTER1) (MEM-RESET) (COND ((IGREATERP MEM*SIZE 10500) (SETQ COUNTER1 21) (MAPC ADDRLIST (FUNCTION (LAMBDA
(RADDR) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1)) (COND ((EQ RADDR (QUOTE ATP.MEMORY.NIL)) RADDR) ((OR (EQ
RADDR 0) (MINUSP RADDR)) RADDR) (T (IPLUS RADDR INCREMENT))))))) (SETQ COUNTER1 (ADD1 MEM*SIZE)) (MAPC DATALIST
(FUNCTION (LAMBDA (DATA) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1)) DATA))))) (T (COND ((NEQ MEM*SIZE 10500)
(MEM-INITIALIZE 10500))) (SETQ COUNTER1 21) (MAPC ADDRLIST (FUNCTION (LAMBDA (RADDR) (SETA MEM*MEMORY (SETQ COUNTER1
(SUB1 COUNTER1)) RADDR)))) (SETQ COUNTER1 (ADD1 MEM*SIZE)) (MAPC DATALIST (FUNCTION (LAMBDA (DATA) (SETA MEM*MEMORY
(SETQ COUNTER1 (SUB1 COUNTER1)) DATA)))))) (COND ((IGREATERP MEM*SIZE 10500) (RPAQ MEM*NEXT.RADR (IPLUS 10330 INCREMENT))
) (T (RPAQ MEM*NEXT.RADR 10330))) (RPAQ MEM*NEXT.VADR 21) (RPAQ MEM*REST (ADD1 (IDIFFERENCE MEM*NEXT.RADR MEM*NEXT.VADR))
) (RPAQ MEM*FIRST.REUSABLE.VADR NIL) (RPAQ MEM*LAST.REUSABLE.VADR NIL)) (PROGN (RPAQQ DT*SORT.ALL (ANY)) (RPAQQ
DT*SORT.NR 2) (RPAQQ DT*SORT.PROPERTIES (DT*MAX.SUBSORTS DT*LEAST.SUPERSORTS DT*TRANSITIVE.CLOSURE 
DT*INVERSE.TRANSITIVE.CLOSURE DT*MINIMAL.SUBSORTS DT*DIRECT.SUBSORTS DT*DIRECT.SUPERSORTS DT*DISJOINT.SORTS 
DT*COMPLETION.SORT)) (RPAQQ DT*SORT.COMMON.COMPUTE.FLAG NIL) (RPAQQ DT*VARIABLE.COUNTER 0) (RPAQQ DT*CONSTANT.COUNTER
0) (RPAQQ DT*CONSTANT.ALL (20 19 18 17)) (RPAQQ DT*ABBREVIATIONS NIL) (RPAQQ DT*FUNCTION.COUNTER 0) (RPAQQ 
DT*FUNCTION.ALL NIL) (RPAQQ DT*FUNCTION.ADMISSIBLE.THEORIES (ASSOCIATIVE)) (RPAQQ DT*FUNCTION.ACTUAL.THEORIES NIL)
(RPAQQ DT*FUNCTION.WITH.ARGUMENT.SYMMETRIES NIL) (RPAQQ DT*FUNCTION.COMPONENTS (PNAME ATTRIBUTES MAX.RANGE.SORT
MAX.DOMAIN.SORTS MIN.RANGE.SORTS SORT.LIST SORT.LIST.INVERSE SORT.TREE.CALC ARGUMENT.SYMMETRIES ARITY G.L.B.OF.RANGES))
(RPAQQ DT*PREDICATE.ADMISSABLE.ATTRIBUTES (SYMMETRIC DEFINED REFLEXIVE)) (RPAQQ DT*PREDICATE.COUNTER 0) (RPAQQ
DT*EQUALITY.SYMBOLS ("=" ":=" "=:" ":=:")) (RPAQQ DT*EQUALITY.PREDICATES NIL) (RPAQQ DT*NONEQUALITY.PREDICATES
(14 11 6 5 4 2 1)) (RPAQQ DT*PREDICATE.ALL (14 11 6 5 4 2 1)) (RPAQQ DT*PREDICATE.WITH.ATTRIBUTES NIL) (RPAQQ 
DT*PREDICATE.COMPONENTS (PNAME POSITIVE.OCCURRENCES NEGATIVE.OCCURRENCES DOMAINSORTS ATTRIBUTES REFL.CLAUSE +ROTHERSIDES
-ROTHERSIDES +SOTHERSIDES -SOTHERSIDES +TOTHERSIDES -TOTHERSIDES)) (RPAQQ DT*TRUE.PREDICATE 1) (RPAQQ DT*FALSE.PREDICATE
2) (RPAQQ DT*UNI.CREATES.VARIABLES NIL) (RPAQQ DT*SIGN.MINUS.SYMBOLS (- --)) (RPAQQ DT*SIGN.PLUS.SYMBOLS (+ ++))
(RPAQQ DT*SYMBOL.KINDS (CONSTANT.ALL FUNCTION.ALL PREDICATE.ALL))) (PROGN) (PROGN (SETPROPLIST (QUOTE 
DT*PREDICATE.WITH.ATTRIBUTES) (QUOTE (DEFINED (2 1))))) (PROGN (SETPROPLIST (QUOTE ANY) (QUOTE (
DT*INVERSE.TRANSITIVE.CLOSURE (ANY) DT*DIRECT.SUPERSORTS NIL DT*MINIMAL.SUBSORTS (ANY) DT*MAX.SUBSORTS ((ANY ANY))
DT*TRANSITIVE.CLOSURE (ANY) DT*DIRECT.SUBSORTS NIL DT*ATTRIBUTE NIL DT*SORT.NUMBER 1)))) (PROGN (RPAQQ ST*STACK1
(NIL NIL NIL NIL ((MRSABNORMAL PROGN (DT-CONSTANT.DELETE 20) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE MRSABNORMAL)
ST*SYMBOL.ADDRESSES))) (MRABNORMAL PROGN (DT-CONSTANT.DELETE 19) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE MRABNORMAL)
ST*SYMBOL.ADDRESSES)))) ((MRSBOLD PROGN (DT-CONSTANT.DELETE 18) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE MRSBOLD)
ST*SYMBOL.ADDRESSES))) (MRBOLD PROGN (DT-CONSTANT.DELETE 17) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE MRBOLD)
ST*SYMBOL.ADDRESSES)))) ((X_16 PROGN (DT-VARIABLE.DELETE 16) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_16) 
ST*SYMBOL.ADDRESSES))) (X_15 PROGN (DT-VARIABLE.DELETE 15) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_15) 
ST*SYMBOL.ADDRESSES)))) ((KNIGHT2 PROGN (DT-PREDICATE.DELETE 14) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE KNIGHT2)
ST*SYMBOL.ADDRESSES))) (X_13 PROGN (DT-VARIABLE.DELETE 13) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_13) 
ST*SYMBOL.ADDRESSES))) (X_12 PROGN (DT-VARIABLE.DELETE 12) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_12) 
ST*SYMBOL.ADDRESSES)))) ((MARRIED PROGN (DT-PREDICATE.DELETE 11) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE MARRIED)
ST*SYMBOL.ADDRESSES))) (X_10 PROGN (DT-VARIABLE.DELETE 10) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_10) 
ST*SYMBOL.ADDRESSES))) (X_9 PROGN (DT-VARIABLE.DELETE 9) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_9) 
ST*SYMBOL.ADDRESSES)))) ((X_8 PROGN (DT-VARIABLE.DELETE 8) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_8) 
ST*SYMBOL.ADDRESSES)))) ((X_7 PROGN (DT-VARIABLE.DELETE 7) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_7) 
ST*SYMBOL.ADDRESSES)))) ((NORMAL PROGN (DT-PREDICATE.DELETE 6) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE NORMAL)
ST*SYMBOL.ADDRESSES))) (KNAVE PROGN (DT-PREDICATE.DELETE 5) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE KNAVE) 
ST*SYMBOL.ADDRESSES))) (KNIGHT PROGN (DT-PREDICATE.DELETE 4) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE KNIGHT)
ST*SYMBOL.ADDRESSES))) (X_3 PROGN (DT-VARIABLE.DELETE 3) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_3) 
ST*SYMBOL.ADDRESSES)))) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL ((FALSE PROGN (DT-PREDICATE.DELETE 2) (RPAQ
ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE FALSE) ST*SYMBOL.ADDRESSES))) (TRUE PROGN (DT-PREDICATE.DELETE 1) (RPAQ 
ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE TRUE) ST*SYMBOL.ADDRESSES))) (ANY PROGN (DT-SORT.ST.REMOVE (QUOTE ANY)) (RPAQ
ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE ANY) ST*SYMBOL.ADDRESSES))) (ANY REMPROP (QUOTE ANY) (QUOTE ST*DATA))))) (RPAQQ
ST*SYMBOL.ADDRESSES (NIL (ANY . T) (TRUE . 1) (FALSE . 2) (X_3 . 3) (KNIGHT . 4) (KNAVE . 5) (NORMAL . 6) (X_7
. 7) (X_8 . 8) (X_9 . 9) (X_10 . 10) (MARRIED . 11) (X_12 . 12) (X_13 . 13) (KNIGHT2 . 14) (X_15 . 15) (X_16 .
16) (MRBOLD . 17) (MRSBOLD . 18) (MRABNORMAL . 19) (MRSABNORMAL . 20))))))))STOP
 
