(COND ((FMT-LOAD " 3-DEC-84 22:07:24" NIL (((NORMAL (MRABNORMAL) AND NORMAL (MRSABNORMAL) AND NORMAL (MRBOLD) AND
NORMAL (MRSBOLD)) (AND (+ 6 (19) NIL) (AND (+ 6 (20) NIL) (AND (+ 6 (17) NIL) (+ 6 (18) NIL)))) QUANTIFICATION)))
(COND (ST*LOAD.FLAG (PROGN (DT-RESET)) (PROG ((ADDRLIST (QUOTE (ATP.MEMORY.NIL 10335 10340 10345 10350 10355 10360
10375 10380 10385 10400 10405 10410 10415 10420 10435 10450 10465 10470 10485 10500))) (DATALIST (QUOTE (15 "TRUE"
NIL NIL NIL (DEFINED) NIL ((- 1 (POSITIVE))) ((+ 1 (NEGATIVE))) ((+ 1 (NIL))) ((- 1 (NIL))) NIL NIL (DT*ST-KIND
NIL) PREDICATE 15 "FALSE" NIL NIL NIL (DEFINED) NIL ((- 2 (POSITIVE))) ((+ 2 (NEGATIVE))) ((+ 2 (NIL))) ((- 2 (NIL)))
NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 15 KNIGHT NIL NIL (ANY)
NIL NIL ((- 4 (POSITIVE))) ((+ 4 (NEGATIVE))) ((+ 4 (NIL))) ((- 4 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15
KNAVE NIL NIL (ANY) NIL NIL ((- 5 (POSITIVE))) ((+ 5 (NEGATIVE))) ((+ 5 (NIL))) ((- 5 (NIL))) NIL NIL (DT*ST-KIND
NIL) PREDICATE 15 NORMAL NIL NIL (ANY) NIL NIL ((- 6 (POSITIVE))) ((+ 6 (NEGATIVE))) ((+ 6 (NIL))) ((- 6 (NIL)))
NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
VARIABLE 15 "MARRIED" NIL NIL (ANY ANY) NIL NIL ((- 11 (POSITIVE))) ((+ 11 (NEGATIVE))) ((+ 11 (NIL))) ((- 11 (NIL)))
NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 15 "KNIGHT2" NIL NIL (ANY ANY) NIL NIL ((- 14 (POSITIVE))) ((+ 14 (NEGATIVE))) ((+ 14 (NIL)))
((- 14 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
(ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 "MRBOLD" ANY (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT 5 "MRSBOLD"
ANY (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT 5 "MRABNORMAL" ANY (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT 5
"MRSABNORMAL" ANY (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT))) (INCREMENT (IDIFFERENCE MEM*SIZE 10500)) COUNTER1)
(MEM-RESET) (COND ((IGREATERP MEM*SIZE 10500) (SETQ COUNTER1 22) (MAPC ADDRLIST (FUNCTION (LAMBDA (RADDR) (SETA
MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1)) (COND ((EQ RADDR (QUOTE ATP.MEMORY.NIL)) RADDR) ((OR (EQ RADDR 0) (MINUSP
RADDR)) RADDR) (T (IPLUS RADDR INCREMENT))))))) (SETQ COUNTER1 (ADD1 MEM*SIZE)) (MAPC DATALIST (FUNCTION (LAMBDA
(DATA) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1)) DATA))))) (T (COND ((NEQ MEM*SIZE 10500) (MEM-INITIALIZE
10500))) (SETQ COUNTER1 22) (MAPC ADDRLIST (FUNCTION (LAMBDA (RADDR) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1))
RADDR)))) (SETQ COUNTER1 (ADD1 MEM*SIZE)) (MAPC DATALIST (FUNCTION (LAMBDA (DATA) (SETA MEM*MEMORY (SETQ COUNTER1
(SUB1 COUNTER1)) DATA)))))) (COND ((IGREATERP MEM*SIZE 10500) (RPAQ MEM*NEXT.RADR (IPLUS 10330 INCREMENT))) (T
(RPAQ MEM*NEXT.RADR 10330))) (RPAQ MEM*NEXT.VADR 22) (RPAQ MEM*REST (ADD1 (IDIFFERENCE MEM*NEXT.RADR MEM*NEXT.VADR)))
(RPAQ MEM*FIRST.REUSABLE.VADR NIL) (RPAQ MEM*LAST.REUSABLE.VADR NIL)) (PROGN (RPAQQ DT*SORT.ALL (ANY)) (RPAQQ DT*SORT.NR
2) (RPAQQ DT*SORT.PROPERTIES (DT*MAX.SUBSORTS DT*LEAST.SUPERSORTS DT*TRANSITIVE.CLOSURE DT*INVERSE.TRANSITIVE.CLOSURE
DT*MINIMAL.SUBSORTS DT*DIRECT.SUBSORTS DT*DIRECT.SUPERSORTS DT*DISJOINT.SORTS DT*COMPLETION.SORT)) (RPAQQ 
DT*SORT.COMMON.COMPUTE.FLAG NIL) (RPAQQ DT*VARIABLE.COUNTER 0) (RPAQQ DT*CONSTANT.COUNTER 0) (RPAQQ DT*CONSTANT.ALL
(20 19 18 17)) (RPAQQ DT*ABBREVIATIONS NIL) (RPAQQ DT*FUNCTION.COUNTER 0) (RPAQQ DT*FUNCTION.ALL NIL) (RPAQQ 
DT*FUNCTION.ADMISSIBLE.THEORIES (ASSOCIATIVE)) (RPAQQ DT*FUNCTION.ACTUAL.THEORIES NIL) (RPAQQ 
DT*FUNCTION.WITH.ARGUMENT.SYMMETRIES NIL) (RPAQQ DT*FUNCTION.COMPONENTS (PNAME ATTRIBUTES MAX.RANGE.SORT 
MAX.DOMAIN.SORTS MIN.RANGE.SORTS SORT.LIST SORT.LIST.INVERSE SORT.TREE.CALC ARGUMENT.SYMMETRIES ARITY G.L.B.OF.RANGES))
(RPAQQ DT*PREDICATE.ADMISSABLE.ATTRIBUTES (SYMMETRIC DEFINED REFLEXIVE)) (RPAQQ DT*PREDICATE.COUNTER 0) (RPAQQ
DT*EQUALITY.SYMBOLS ("=" ":=" "=:" ":=:")) (RPAQQ DT*EQUALITY.PREDICATES NIL) (RPAQQ DT*NONEQUALITY.PREDICATES
(14 11 6 5 4 2 1)) (RPAQQ DT*PREDICATE.ALL (14 11 6 5 4 2 1)) (RPAQQ DT*PREDICATE.WITH.ATTRIBUTES NIL) (RPAQQ 
DT*PREDICATE.COMPONENTS (PNAME POSITIVE.OCCURRENCES NEGATIVE.OCCURRENCES DOMAINSORTS ATTRIBUTES REFL.CLAUSE +ROTHERSIDES
-ROTHERSIDES +SOTHERSIDES -SOTHERSIDES +TOTHERSIDES -TOTHERSIDES)) (RPAQQ DT*TRUE.PREDICATE 1) (RPAQQ DT*FALSE.PREDICATE
2) (RPAQQ DT*UNI.CREATES.VARIABLES NIL) (RPAQQ DT*SIGN.MINUS.SYMBOLS (- --)) (RPAQQ DT*SIGN.PLUS.SYMBOLS (+ ++))
(RPAQQ DT*SYMBOL.KINDS (CONSTANT.ALL FUNCTION.ALL PREDICATE.ALL))) (PROGN) (PROGN (SETPROPLIST (QUOTE 
DT*PREDICATE.WITH.ATTRIBUTES) (QUOTE NIL))) (PROGN (SETPROPLIST (QUOTE ANY) (QUOTE (DT*INVERSE.TRANSITIVE.CLOSURE
(ANY) DT*DIRECT.SUPERSORTS NIL DT*MINIMAL.SUBSORTS (ANY) DT*MAX.SUBSORTS ((ANY ANY)) DT*TRANSITIVE.CLOSURE (ANY)
DT*DIRECT.SUBSORTS NIL DT*ATTRIBUTE NIL DT*SORT.NUMBER 1)))) (PROGN (RPAQQ ST*STACK1 (NIL NIL NIL)) (RPAQQ 
ST*SYMBOL.ADDRESSES (NIL (ANY . T) (TRUE . 1) (FALSE . 2) (X_3 . 3) (KNIGHT . 4) (KNAVE . 5) (NORMAL . 6) (X_7
. 7) (X_8 . 8) (X_9 . 9) (X_10 . 10) (MARRIED . 11) (X_12 . 12) (X_13 . 13) (KNIGHT2 . 14) (X_15 . 15) (X_16 .
16) (MRBOLD . 17) (MRSBOLD . 18) (MRABNORMAL . 19) (MRSABNORMAL . 20))))))))STOP
 
