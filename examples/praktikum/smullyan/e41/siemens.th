(COND ((FMT-LOAD "19-DEC-84 21:43:53" NIL (((TRUTH (B) AND NOT KNIGHT (B) OR TRUTH (A) AND NOT KNIGHT (A) OR LIE
(A) AND NOT KNAVE (A) OR LIE (B) AND NOT KNAVE (B)) (OR (AND (+ 127 (171) NIL) (NOT (+ 158 (171) NIL))) (OR (AND
(+ 127 (170) NIL) (NOT (+ 158 (170) NIL))) (OR (AND (+ 136 (170) NIL) (NOT (+ 156 (170) NIL))) (AND (+ 136 (171)
NIL) (NOT (+ 156 (171) NIL)))))) QUANTIFICATION))) (COND (ST*LOAD.FLAG (PROGN (DT-RESET)) (PROG ((ADDRLIST (QUOTE
(19710 19715 19720 19725 19730 19735 19740 19745 19750 ATP.MEMORY.NIL ATP.MEMORY.NIL 19970 19965 19950 ATP.MEMORY.NIL
19935 19920 19915 19910 ATP.MEMORY.NIL ATP.MEMORY.NIL 19755 ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
19760 19765 19770 ATP.MEMORY.NIL 19775 ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 19805 19790
ATP.MEMORY.NIL 19780 19785 ATP.MEMORY.NIL 19810 ATP.MEMORY.NIL 19815 19830 ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 19835 ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 19885 ATP.MEMORY.NIL
19880 ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 19900 ATP.MEMORY.NIL 19840 19845 ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 19905 ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL 19875 ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 19870 ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
19850 ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 19865 ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 19985 20000))) (DATALIST (QUOTE (15
"TRUE" NIL NIL NIL (DEFINED) NIL ((- 1 (POSITIVE))) ((+ 1 (NEGATIVE))) ((+ 1 (NIL))) ((- 1 (NIL))) NIL NIL (DT*ST-KIND
NIL) PREDICATE 15 "FALSE" NIL NIL NIL (DEFINED) NIL ((- 2 (POSITIVE))) ((+ 2 (NEGATIVE))) ((+ 2 (NIL))) ((- 2 (NIL)))
NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 15 "NORMAL" NIL NIL (ANY)
NIL NIL ((- 159 (POSITIVE))) ((+ 159 (NEGATIVE))) ((+ 159 (NIL))) ((- 159 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE
15 "KNIGHT" NIL NIL (ANY) NIL NIL ((- 158 (POSITIVE))) ((+ 158 (NEGATIVE))) ((+ 158 (NIL))) ((- 158 (NIL))) NIL
NIL (DT*ST-KIND NIL) PREDICATE 15 "KNAVE" NIL NIL (ANY) NIL NIL ((- 156 (POSITIVE))) ((+ 156 (NEGATIVE))) ((+ 156
(NIL))) ((- 156 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE
5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
(ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 15 "KNIGHT2" NIL NIL (ANY ANY) NIL NIL ((- 110 (POSITIVE))) ((+ 110 (NEGATIVE))
) ((+ 110 (NIL))) ((- 110 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE
5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 15 "KNAVE2" NIL NIL (ANY ANY) NIL NIL ((- 25 (POSITIVE))) ((+
25 (NEGATIVE))) ((+ 25 (NIL))) ((- 25 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 15 "TRUTH" NIL NIL (ANY) NIL NIL ((- 127 (POSITIVE)))
((+ 127 (NEGATIVE))) ((+ 127 (NIL))) ((- 127 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL
DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 15 "LIE" NIL NIL (ANY) NIL NIL
((- 136 (POSITIVE))) ((+ 136 (NEGATIVE))) ((+ 136 (NIL))) ((- 136 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5
ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
(ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA
NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE
5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
(ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 "A" ANY (ST*ATTRIBUTE
NIL DT*ST-KIND NIL) CONSTANT 5 "B" ANY (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT))) (INCREMENT (IDIFFERENCE MEM*SIZE
20000)) COUNTER1) (MEM-RESET) (COND ((IGREATERP MEM*SIZE 20000) (SETQ COUNTER1 172) (MAPC ADDRLIST (FUNCTION (LAMBDA
(RADDR) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1)) (COND ((EQ RADDR (QUOTE ATP.MEMORY.NIL)) RADDR) ((OR (EQ
RADDR 0) (MINUSP RADDR)) RADDR) (T (IPLUS RADDR INCREMENT))))))) (SETQ COUNTER1 (ADD1 MEM*SIZE)) (MAPC DATALIST
(FUNCTION (LAMBDA (DATA) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1)) DATA))))) (T (COND ((NEQ MEM*SIZE 20000)
(MEM-INITIALIZE 20000))) (SETQ COUNTER1 172) (MAPC ADDRLIST (FUNCTION (LAMBDA (RADDR) (SETA MEM*MEMORY (SETQ COUNTER1
(SUB1 COUNTER1)) RADDR)))) (SETQ COUNTER1 (ADD1 MEM*SIZE)) (MAPC DATALIST (FUNCTION (LAMBDA (DATA) (SETA MEM*MEMORY
(SETQ COUNTER1 (SUB1 COUNTER1)) DATA)))))) (COND ((IGREATERP MEM*SIZE 20000) (RPAQ MEM*NEXT.RADR (IPLUS 19705 INCREMENT))
) (T (RPAQ MEM*NEXT.RADR 19705))) (RPAQ MEM*NEXT.VADR 172) (RPAQ MEM*REST (ADD1 (IDIFFERENCE MEM*NEXT.RADR MEM*NEXT.VADR)
)) (RPAQ MEM*FIRST.REUSABLE.VADR NIL) (RPAQ MEM*LAST.REUSABLE.VADR NIL)) (PROGN (RPAQQ DT*SORT.ALL (ANY)) (RPAQQ
DT*SORT.NR 2) (RPAQQ DT*SORT.PROPERTIES (DT*MAX.SUBSORTS DT*LEAST.SUPERSORTS DT*TRANSITIVE.CLOSURE 
DT*INVERSE.TRANSITIVE.CLOSURE DT*MINIMAL.SUBSORTS DT*DIRECT.SUBSORTS DT*DIRECT.SUPERSORTS DT*DISJOINT.SORTS 
DT*COMPLETION.SORT)) (RPAQQ DT*SORT.COMMON.COMPUTE.FLAG NIL) (RPAQQ DT*VARIABLE.COUNTER 0) (RPAQQ DT*CONSTANT.COUNTER
0) (RPAQQ DT*CONSTANT.ALL (171 170)) (RPAQQ DT*ABBREVIATIONS NIL) (RPAQQ DT*FUNCTION.COUNTER 0) (RPAQQ DT*FUNCTION.ALL
NIL) (RPAQQ DT*FUNCTION.ADMISSIBLE.THEORIES (ASSOCIATIVE)) (RPAQQ DT*FUNCTION.ACTUAL.THEORIES NIL) (RPAQQ 
DT*FUNCTION.WITH.ARGUMENT.SYMMETRIES NIL) (RPAQQ DT*FUNCTION.COMPONENTS (PNAME ATTRIBUTES MAX.RANGE.SORT 
MAX.DOMAIN.SORTS MIN.RANGE.SORTS SORT.LIST SORT.LIST.INVERSE SORT.TREE.CALC ARGUMENT.SYMMETRIES ARITY G.L.B.OF.RANGES))
(RPAQQ DT*PREDICATE.ADMISSABLE.ATTRIBUTES (SYMMETRIC DEFINED REFLEXIVE)) (RPAQQ DT*PREDICATE.COUNTER 0) (RPAQQ
DT*EQUALITY.SYMBOLS ("=" ":=" "=:" ":=:")) (RPAQQ DT*EQUALITY.PREDICATES NIL) (RPAQQ DT*NONEQUALITY.PREDICATES
(136 127 25 110 156 158 159 2 1)) (RPAQQ DT*PREDICATE.ALL (136 127 25 110 156 158 159 2 1)) (RPAQQ 
DT*PREDICATE.WITH.ATTRIBUTES NIL) (RPAQQ DT*PREDICATE.COMPONENTS (PNAME POSITIVE.OCCURRENCES NEGATIVE.OCCURRENCES
DOMAINSORTS ATTRIBUTES REFL.CLAUSE +ROTHERSIDES -ROTHERSIDES +SOTHERSIDES -SOTHERSIDES +TOTHERSIDES -TOTHERSIDES))
(RPAQQ DT*TRUE.PREDICATE 1) (RPAQQ DT*FALSE.PREDICATE 2) (RPAQQ DT*UNI.CREATES.VARIABLES NIL) (RPAQQ 
DT*SIGN.MINUS.SYMBOLS (- --)) (RPAQQ DT*SIGN.PLUS.SYMBOLS (+ ++)) (RPAQQ DT*SYMBOL.KINDS (CONSTANT.ALL FUNCTION.ALL
PREDICATE.ALL))) (PROGN) (PROGN (SETPROPLIST (QUOTE DT*PREDICATE.WITH.ATTRIBUTES) (QUOTE NIL))) (PROGN (SETPROPLIST
(QUOTE ANY) (QUOTE (DT*ATTRIBUTE NIL DT*INVERSE.TRANSITIVE.CLOSURE (ANY) DT*DIRECT.SUPERSORTS NIL DT*MINIMAL.SUBSORTS
(ANY) DT*MAX.SUBSORTS ((ANY ANY)) DT*TRANSITIVE.CLOSURE (ANY) DT*DIRECT.SUBSORTS NIL DT*SORT.NUMBER 1)))) (PROGN
(RPAQQ ST*STACK1 (NIL NIL NIL)) (RPAQQ ST*SYMBOL.ADDRESSES (NIL (ANY . T) (TRUE . 1) (FALSE . 2) (X_160 . 160)
(NORMAL . 159) (KNIGHT . 158) (KNAVE . 156) (X_155 . 155) (X_154 . 154) (X_153 . 153) (X_101 . 101) (KNIGHT2 .
110) (X_116 . 116) (X_114 . 114) (X_95 . 95) (X_66 . 66) (KNAVE2 . 25) (X_32 . 32) (X_107 . 107) (X_108 . 108)
(X_120 . 120) (TRUTH . 127) (X_128 . 128) (X_130 . 130) (LIE . 136) (X_135 . 135) (X_132 . 132) (X_133 . 133) (X_141
. 141) (X_143 . 143) (X_144 . 144) (X_145 . 145) (X_150 . 150) (X_163 . 163) (X_164 . 164) (X_165 . 165) (X_166
. 166) (X_167 . 167) (X_168 . 168) (X_169 . 169) (A . 170) (B . 171))))))))STOP
 
[06;62H