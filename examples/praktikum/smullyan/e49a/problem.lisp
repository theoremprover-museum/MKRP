;;; -*- Package: MKRP; Base: 10; Mode: LISP; Syntax: Common-lisp -*-
(PREP-PROBLEM.SPECIFICATION (QUOTE ((* PROBLEM 49) (*) (* ONE DAY ALICE MET THE LION.) (* HE MADE TWO FOLLOWING STATEMENTS :) (*) (* I LIED YESTERDAY.) (* I WILL LIE AGAIN TOMORROW.) (*) (* ON WHAT DAYS OF THE WEEK IS THIS POSSIBLE?) (*) (*) (* FORMALIZING THE PROBLEM IN FIRST ORDER LOGIC) (*) (ALL X MO (X) IMPL LL (X)) (ALL X TU (X) IMPL LL (X)) (ALL X WE (X) IMPL LL (X)) (ALL X TH (X) IMPL NOT LL (X)) (ALL X FR (X) IMPL NOT LL (X)) (ALL X SA (X) IMPL NOT LL (X)) (ALL X SU (X) IMPL NOT LL (X)) (*) (ALL X MO (X) IMPL NOT LU (X)) (ALL X TU (X) IMPL NOT LU (X)) (ALL X WE (X) IMPL NOT LU (X)) (ALL X TH (X) IMPL LU (X)) (ALL X FR (X) IMPL LU (X)) (ALL X SA (X) IMPL LU (X)) (ALL X SU (X) IMPL NOT LU (X)) (*) (ALL X MO (YESTERDAY (X)) EQV TU (X)) (ALL X TU (YESTERDAY (X)) EQV WE (X)) (ALL X WE (YESTERDAY (X)) EQV TH (X)) (ALL X TH (YESTERDAY (X)) EQV FR (X)) (ALL X FR (YESTERDAY (X)) EQV SA (X)) (ALL X SA (YESTERDAY (X)) EQV SU (X)) (ALL X SU (YESTERDAY (X)) EQV MO (X)) (*) (ALL X LU (X) IMPL DAY (X)) (ALL X LL (X) IMPL DAY (X)) (*) (ALL X MO (X) IMPL DAY (X)) (ALL X TU (X) IMPL DAY (X)) (ALL X WE (X) IMPL DAY (X)) (ALL X TH (X) IMPL DAY (X)) (ALL X FR (X) IMPL DAY (X)) (ALL X SA (X) IMPL DAY (X)) (ALL X SU (X) IMPL DAY (X)) (* THE PREDICATE LA HAS THE FOLLOWING MEANING :) (* LA (X Y Z) IS TRUE, IFF X STATES AT DAY Y , THAT HE LIES ON DAY Z) (*) (ALL X,Y (DAY (X) AND DAY (Y)) IMPL ((LU (X) AND LA (UNICORN X Y)) IMPL NOT LU (Y))) (ALL X,Y (DAY (X) AND DAY (Y)) IMPL ((NOT LU (X) AND LA (UNICORN X Y)) IMPL LU (Y))) (ALL X,Y (DAY (X) AND DAY (Y)) IMPL ((NOT LU (X) AND NOT LA (UNICORN X Y)) IMPL NOT LU (Y))) (ALL X,Y (DAY (X) AND DAY (Y)) IMPL ((LU (X) AND NOT LA (UNICORN X Y)) IMPL LU (Y))) (*) (ALL X,Y (DAY (X) AND DAY (Y)) IMPL ((LL (X) AND LA (LION X Y)) IMPL NOT LL (Y))) (ALL X,Y (DAY (X) AND DAY (Y)) IMPL ((NOT LL (X) AND LA (LION X Y)) IMPL LL (Y))) (ALL X,Y (DAY (X) AND DAY (Y)) IMPL ((NOT LL (X) AND NOT LA (LION X Y)) IMPL NOT LL (Y))) (ALL X,Y (DAY (X) AND DAY (Y)) IMPL ((LL (X) AND NOT LA (LION X Y)) IMPL LL (Y))) (*) (*) (MO (MONDAY)) (TU (TUESDAY)) (WE (WEDNESDAY)) (TH (THURSDAY)) (FR (FRIDAY)) (SA (SATURDAY)) (SU (SUNDAY)) (*))) (QUOTE (COMMENT COMMENT COMMENT COMMENT COMMENT COMMENT COMMENT COMMENT COMMENT COMMENT COMMENT COMMENT COMMENT (ALL 3 (IMPL (+ 4 (3) NIL) (+ 5 (3) NIL))) (ALL 6 (IMPL (+ 7 (6) NIL) (+ 5 (6) NIL))) (ALL 8 (IMPL (+ 9 (8) NIL) (+ 5 (8) NIL))) (ALL 10 (IMPL (+ 11 (10) NIL) (NOT (+ 5 (10) NIL)))) (ALL 12 (IMPL (+ 13 (12) NIL) (NOT (+ 5 (12) NIL)))) (ALL 14 (IMPL (+ 15 (14) NIL) (NOT (+ 5 (14) NIL)))) (ALL 16 (IMPL (+ 17 (16) NIL) (NOT (+ 5 (16) NIL)))) COMMENT (ALL 18 (IMPL (+ 4 (18) NIL) (NOT (+ 19 (18) NIL)))) (ALL 20 (IMPL (+ 7 (20) NIL) (NOT (+ 19 (20) NIL)))) (ALL 21 (IMPL (+ 9 (21) NIL) (NOT (+ 19 (21) NIL)))) (ALL 22 (IMPL (+ 11 (22) NIL) (+ 19 (22) NIL))) (ALL 23 (IMPL (+ 13 (23) NIL) (+ 19 (23) NIL))) (ALL 24 (IMPL (+ 15 (24) NIL) (+ 19 (24) NIL))) (ALL 25 (IMPL (+ 17 (25) NIL) (NOT (+ 19 (25) NIL)))) COMMENT (ALL 26 (EQV (+ 4 ((27 26)) (KIND (EQV T 310))) (+ 7 (26) (KIND (EQV NIL 310))))) (ALL 28 (EQV (+ 7 ((27 28)) (KIND (EQV T 320))) (+ 9 (28) (KIND (EQV NIL 320))))) (ALL 29 (EQV (+ 9 ((27 29)) (KIND (EQV T 330))) (+ 11 (29) (KIND (EQV NIL 330))))) (ALL 30 (EQV (+ 11 ((27 30)) (KIND (EQV T 340))) (+ 13 (30) (KIND (EQV NIL 340))))) (ALL 31 (EQV (+ 13 ((27 31)) (KIND (EQV T 350))) (+ 15 (31) (KIND (EQV NIL 350))))) (ALL 32 (EQV (+ 15 ((27 32)) (KIND (EQV T 360))) (+ 17 (32) (KIND (EQV NIL 360))))) (ALL 33 (EQV (+ 17 ((27 33)) (KIND (EQV T 370))) (+ 4 (33) (KIND (EQV NIL 370))))) COMMENT (ALL 34 (IMPL (+ 19 (34) NIL) (+ 35 (34) NIL))) (ALL 36 (IMPL (+ 5 (36) NIL) (+ 35 (36) NIL))) COMMENT (ALL 37 (IMPL (+ 4 (37) NIL) (+ 35 (37) NIL))) (ALL 38 (IMPL (+ 7 (38) NIL) (+ 35 (38) NIL))) (ALL 39 (IMPL (+ 9 (39) NIL) (+ 35 (39) NIL))) (ALL 40 (IMPL (+ 11 (40) NIL) (+ 35 (40) NIL))) (ALL 41 (IMPL (+ 13 (41) NIL) (+ 35 (41) NIL))) (ALL 42 (IMPL (+ 15 (42) NIL) (+ 35 (42) NIL))) (ALL 43 (IMPL (+ 17 (43) NIL) (+ 35 (43) NIL))) COMMENT COMMENT COMMENT (ALL 45 (ALL 44 (IMPL (AND (+ 35 (44) NIL) (+ 35 (45) NIL)) (IMPL (AND (+ 19 (44) NIL) (+ 47 (46 44 45) NIL)) (NOT (+ 19 (45) NIL)))))) (ALL 49 (ALL 48 (IMPL (AND (+ 35 (48) NIL) (+ 35 (49) NIL)) (IMPL (AND (NOT (+ 19 (48) NIL)) (+ 47 (46 48 49) NIL)) (+ 19 (49) NIL))))) (ALL 51 (ALL 50 (IMPL (AND (+ 35 (50) NIL) (+ 35 (51) NIL)) (IMPL (AND (NOT (+ 19 (50) NIL)) (NOT (+ 47 (46 50 51) NIL))) (NOT (+ 19 (51) NIL)))))) (ALL 53 (ALL 52 (IMPL (AND (+ 35 (52) NIL) (+ 35 (53) NIL)) (IMPL (AND (+ 19 (52) NIL) (NOT (+ 47 (46 52 53) NIL))) (+ 19 (53) NIL))))) COMMENT (ALL 55 (ALL 54 (IMPL (AND (+ 35 (54) NIL) (+ 35 (55) NIL)) (IMPL (AND (+ 5 (54) NIL) (+ 47 (56 54 55) NIL)) (NOT (+ 5 (55) NIL)))))) (ALL 58 (ALL 57 (IMPL (AND (+ 35 (57) NIL) (+ 35 (58) NIL)) (IMPL (AND (NOT (+ 5 (57) NIL)) (+ 47 (56 57 58) NIL)) (+ 5 (58) NIL))))) (ALL 60 (ALL 59 (IMPL (AND (+ 35 (59) NIL) (+ 35 (60) NIL)) (IMPL (AND (NOT (+ 5 (59) NIL)) (NOT (+ 47 (56 59 60) NIL))) (NOT (+ 5 (60) NIL)))))) (ALL 62 (ALL 61 (IMPL (AND (+ 35 (61) NIL) (+ 35 (62) NIL)) (IMPL (AND (+ 5 (61) NIL) (NOT (+ 47 (56 61 62) NIL))) (+ 5 (62) NIL))))) COMMENT COMMENT (+ 4 (63) NIL) (+ 7 (64) NIL) (+ 9 (65) NIL) (+ 11 (66) NIL) (+ 13 (67) NIL) (+ 15 (68) NIL) (+ 17 (69) NIL) COMMENT)) (QUOTE ((EX X DAY (X) AND LA (UNICORN X YESTERDAY (X)) AND LA (LION X YESTERDAY (X))))) (QUOTE ((EX 70 (AND (+ 35 (70) NIL) (AND (+ 47 (46 70 (27 70)) NIL) (+ 47 (56 70 (27 70)) NIL)))))) (QUOTE ("Edit:     Axioms and Theorems edited: 19-OCT,1990 13:46 ")) (PROGN(PROGN (DT-RESET))

(PROG ((ADDRLIST
        '(11500 11505 11510 11515 11520 11525 11530 11535 11540 11545 11550 11555 11560 11565
          11570 11575 11580 11585 11590 11595 11600 11605 11610 11625 11630 11635 11640 11645
          11650 11655 11660 11665 11670 11675 11680 11695 11700 11705 11710 11715 11720 11725
          11730 11744 11749 11754 11759 11764 11769 11774 11779 11794 11799 11814 11819 11834
          11839 11854 11859 11874 11879 11894 11899 11914 11919 11934 11949 11954 11969 11984
          11999))
       (DATALIST
        '(15 "TRUE" NIL NIL NIL (DEFINED) NIL ((- 0 (POSITIVE))) ((+ 0 (NEGATIVE)))
          ((+ 0 (NIL))) ((- 0 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "FALSE" NIL NIL
          NIL (DEFINED) NIL ((- 1 (POSITIVE))) ((+ 1 (NEGATIVE))) ((+ 1 (NIL))) ((- 1 (NIL)))
          NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "=" NIL NIL (ANY ANY)
          (DEFINED SYMMETRIC REFLEXIVE SYMMETRIC REFLEXIVE) NIL ((- 2 (POSITIVE . SYMMETRIC)))
          ((+ 2 (NEGATIVE . SYMMETRIC))) ((+ 2 (NIL . SYMMETRIC))) ((- 2 (NIL . SYMMETRIC)))
          NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
          VARIABLE 15 "MO" NIL NIL (ANY) NIL NIL ((- 4 (POSITIVE))) ((+ 4 (NEGATIVE)))
          ((+ 4 (NIL))) ((- 4 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "LL" NIL NIL (ANY)
          NIL NIL ((- 5 (POSITIVE))) ((+ 5 (NEGATIVE))) ((+ 5 (NIL))) ((- 5 (NIL))) NIL NIL
          (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 15
          "TU" NIL NIL (ANY) NIL NIL ((- 7 (POSITIVE))) ((+ 7 (NEGATIVE))) ((+ 7 (NIL)))
          ((- 7 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 15 "WE" NIL NIL (ANY) NIL NIL
          ((- 9 (POSITIVE))) ((+ 9 (NEGATIVE))) ((+ 9 (NIL))) ((- 9 (NIL))) NIL NIL
          (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 15
          "TH" NIL NIL (ANY) NIL NIL ((- 11 (POSITIVE))) ((+ 11 (NEGATIVE))) ((+ 11 (NIL)))
          ((- 11 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 15 "FR" NIL NIL (ANY) NIL NIL
          ((- 13 (POSITIVE))) ((+ 13 (NEGATIVE))) ((+ 13 (NIL))) ((- 13 (NIL))) NIL NIL
          (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 15
          "SA" NIL NIL (ANY) NIL NIL ((- 15 (POSITIVE))) ((+ 15 (NEGATIVE))) ((+ 15 (NIL)))
          ((- 15 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 15 "SU" NIL NIL (ANY) NIL NIL
          ((- 17 (POSITIVE))) ((+ 17 (NEGATIVE))) ((+ 17 (NIL))) ((- 17 (NIL))) NIL NIL
          (DT*ST-KIND NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 15
          "LU" NIL NIL (ANY) NIL NIL ((- 19 (POSITIVE))) ((+ 19 (NEGATIVE))) ((+ 19 (NIL)))
          ((- 19 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
          VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
          VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 14 "YESTERDAY" NIL ANY (ANY) NIL NIL NIL
          NIL NIL 1 ANY (DT*ST-KIND NIL) FUNCTION 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
          VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
          VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
          VARIABLE 15 "DAY" NIL NIL (ANY) NIL NIL ((- 35 (POSITIVE))) ((+ 35 (NEGATIVE)))
          ((+ 35 (NIL))) ((- 35 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
          VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
          VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
          VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY "UNICORN" (DT*ST-KIND NIL) CONSTANT
          15 "LA" NIL NIL (ANY ANY ANY) NIL NIL ((- 47 (POSITIVE))) ((+ 47 (NEGATIVE)))
          ((+ 47 (NIL))) ((- 47 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
          VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
          VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
          VARIABLE 5 ANY "LION" (DT*ST-KIND NIL) CONSTANT 5 ANY NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
          VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
          VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY "MONDAY"
          (DT*ST-KIND NIL) CONSTANT 5 ANY "TUESDAY" (DT*ST-KIND NIL) CONSTANT 5 ANY
          "WEDNESDAY" (DT*ST-KIND NIL) CONSTANT 5 ANY "THURSDAY" (DT*ST-KIND NIL) CONSTANT 5
          ANY "FRIDAY" (DT*ST-KIND NIL) CONSTANT 5 ANY "SATURDAY" (DT*ST-KIND NIL) CONSTANT 5
          ANY "SUNDAY" (DT*ST-KIND NIL) CONSTANT 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
          VARIABLE))
       (INCREMENT (- MEM*SIZE 12000))
       COUNTER1)
      (MEM-RESET)
      (COND ((> MEM*SIZE 12000)
             (SETQ COUNTER1 71)
             (MAPC #'(LAMBDA (RADDR)
                       (SETF (AREF MEM*MEMORY (DECF COUNTER1))
                              (COND ((EQL RADDR 'ATP.MEMORY.NIL) RADDR)
                                    ((EQL 'END RADDR) RADDR)
                                    ((OR (EQL RADDR 0)
                                         (MINUSP RADDR))
                                     RADDR)
                                    (T (+ RADDR INCREMENT)))))
                   ADDRLIST)
             (SETQ COUNTER1 MEM*SIZE)
             (MAPC #'(LAMBDA (DATA) (SETF (AREF MEM*MEMORY (DECF COUNTER1)) DATA)) DATALIST))
            (T (UNLESS (= MEM*SIZE 12000)
                 (MEM-INITIALIZE 12000))
               (SETQ COUNTER1 71)
               (MAPC #'(LAMBDA (RADDR) (SETF (AREF MEM*MEMORY (DECF COUNTER1)) RADDR))
                     ADDRLIST)
               (SETQ COUNTER1 MEM*SIZE)
               (MAPC #'(LAMBDA (DATA) (SETF (AREF MEM*MEMORY (DECF COUNTER1)) DATA)) DATALIST))
            )
      (SETQ MEM*NEXT.RADR (IF (> MEM*SIZE 12000) (+ 11495 INCREMENT) 11495))
      (SETQ MEM*NEXT.VADR 71
            MEM*REST (- MEM*NEXT.RADR MEM*NEXT.VADR -1)
            MEM*FIRST.REUSABLE.VADR NIL
            MEM*LAST.REUSABLE.VADR NIL))

(PROGN (SETQ DT*SORT.ALL (QUOTE (ANY))) (SETQ DT*SORT.NR (QUOTE 2)) (SETQ DT*SORT.PROPERTIES (QUOTE (DT*MAX.SUBSORTS DT*LEAST.SUPERSORTS DT*TRANSITIVE.CLOSURE DT*INVERSE.TRANSITIVE.CLOSURE DT*MINIMAL.SUBSORTS DT*DIRECT.SUBSORTS DT*DIRECT.SUPERSORTS DT*DISJOINT.SORTS DT*COMPLETION.SORT))) (SETQ DT*SORT.COMMON.COMPUTE.FLAG (QUOTE NIL)) (SETQ DT*VARIABLE.COUNTER (QUOTE 0)) (SETQ DT*CONSTANT.COUNTER (QUOTE 0)) (SETQ DT*CONSTANT.ALL (QUOTE (69 68 67 66 65 64 63 56 46))) (SETQ DT*ABBREVIATIONS (QUOTE NIL)) (SETQ DT*FUNCTION.COUNTER (QUOTE 0)) (SETQ DT*FUNCTION.ALL (QUOTE (27))) (SETQ DT*FUNCTION.ADMISSIBLE.THEORIES (QUOTE (ASSOCIATIVE))) (SETQ DT*FUNCTION.ACTUAL.THEORIES (QUOTE NIL)) (SETQ DT*FUNCTION.WITH.ARGUMENT.SYMMETRIES (QUOTE NIL)) (SETQ DT*FUNCTION.COMPONENTS (QUOTE (PNAME ATTRIBUTES MAX.RANGE.SORT MAX.DOMAIN.SORTS MIN.RANGE.SORTS SORT.LIST SORT.LIST.INVERSE SORT.TREE.CALC ARGUMENT.SYMMETRIES ARITY G.L.B.OF.RANGES))) (SETQ DT*PREDICATE.ADMISSABLE.ATTRIBUTES (QUOTE (SYMMETRIC DEFINED REFLEXIVE))) (SETQ DT*PREDICATE.COUNTER (QUOTE 0)) (SETQ DT*EQUALITY.SYMBOLS (QUOTE ("=" ":=" "=:" ":=:"))) (SETQ DT*EQUALITY.PREDICATES (QUOTE (2))) (SETQ DT*NONEQUALITY.PREDICATES (QUOTE (47 35 19 17 15 13 11 9 7 5 4 1 0))) (SETQ DT*PREDICATE.ALL (QUOTE (47 35 19 17 15 13 11 9 7 5 4 2 1 0))) (SETQ DT*PREDICATE.WITH.ATTRIBUTES (QUOTE NIL)) (SETQ DT*PREDICATE.COMPONENTS (QUOTE (PNAME POSITIVE.OCCURRENCES NEGATIVE.OCCURRENCES DOMAINSORTS ATTRIBUTES REFL.CLAUSE +ROTHERSIDES -ROTHERSIDES +SOTHERSIDES -SOTHERSIDES +TOTHERSIDES -TOTHERSIDES))) (SETQ DT*TRUE.PREDICATE (QUOTE 0)) (SETQ DT*FALSE.PREDICATE (QUOTE 1)) (SETQ DT*UNI.CREATES.VARIABLES (QUOTE NIL)) (SETQ DT*SIGN.MINUS.SYMBOLS (QUOTE (- --))) (SETQ DT*SIGN.PLUS.SYMBOLS (QUOTE (+ ++))) (SETQ DT*SYMBOL.KINDS (QUOTE (CONSTANT.ALL FUNCTION.ALL PREDICATE.ALL)))) 
(PROGN) 
(PROGN (PROGN)) 
(PROGN (PROGN (SETF (GET (QUOTE ANY) (QUOTE DT*SORT.NUMBER)) (QUOTE 1)) (SETF (GET (QUOTE ANY) (QUOTE DT*DIRECT.SUBSORTS)) (QUOTE NIL)) (SETF (GET (QUOTE ANY) (QUOTE DT*TRANSITIVE.CLOSURE)) (QUOTE (ANY))) (SETF (GET (QUOTE ANY) (QUOTE DT*MAX.SUBSORTS)) (QUOTE ((ANY ANY)))) (SETF (GET (QUOTE ANY) (QUOTE DT*MINIMAL.SUBSORTS)) (QUOTE (ANY))) (SETF (GET (QUOTE ANY) (QUOTE DT*DIRECT.SUPERSORTS)) (QUOTE NIL)) (SETF (GET (QUOTE ANY) (QUOTE DT*INVERSE.TRANSITIVE.CLOSURE)) (QUOTE (ANY))))) ))