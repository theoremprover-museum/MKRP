(COND ((FMT-LOAD "14-DEC-84 14:17:31"
NIL(((* THE THIRD TEST (E69C) .) COMMENT COMMENT) ((*) COMMENT COMMENT) ((* IF THE SUITOR PASSED THESE TWO TESTS, HE WAS LED INTO ANOTHER) COMMENT COMMENT) ((* ROOM CONTAINING A GOLD,SILVER,AND LEAD CASKET. AGAIN EACH CASKET) COMMENT COMMENT)
((* WAS FASHIONED BY EITHER CELLINI OR BELLINI. NOW IN THIS TEST, THE) COMMENT COMMENT) ((* SUITOR^S CHANCES WERE ONE OUT OF THREE (IF HE GUESSED BLINDLY) ; PORTIA) COMMENT COMMENT) ((* USED A PORTRAIT OF HERSELF, AND THE PORTRAIT WAS IN ONE OF
THE CASKETS.) COMMENT COMMENT) ((* TO PASS THE TEST,THE SUITOR HAD TO (1) SELECT THE CASKET CONTAINING THE) COMMENT COMMENT) ((* PORTRAIT; (2) TELL THE MAKER OF EACH CASKET. THE THREE INSCRIPTIONS READ:) COMMENT COMMENT) ((* GOLD:THE PORTRAIT
IS IN HERE) COMMENT COMMENT) ((* SILVER:THE PORTRAIT IS IN HERE) COMMENT COMMENT) ((* LEAD:AT LEAST TWO OF THESE CASKETS WERE FASHIONED BY CELLINI) COMMENT COMMENT) ((* WHAT IS THE SOLUTION ?) COMMENT COMMENT) ((*) COMMENT COMMENT) ((* WE DEFINE
THE FOLLOWING PREDICATES:) COMMENT COMMENT) ((* PORTRAIT,BELLINI,CELLINI,INSCR.PORTRAIT AND TRUTH MEAN THE SAME AS) COMMENT COMMENT) ((* DESCRIBED IN SM69A AND SM69B.) COMMENT COMMENT) ((TYPE PORTRAIT (CASKET)) (+ 1 NIL) TYPE) ((TYPE BELLINI (CASKET))
(+ 1 NIL) TYPE) ((TYPE CELLINI (CASKET)) (+ 1 NIL) TYPE) ((TYPE INSCR.PORTRAIT (INSCRIPT CASKET)) (+ 1 NIL) TYPE) ((TYPE TRUTH (INSCRIPT)) (+ 1 NIL) TYPE) ((* MIN2C (U V TRUTH) ...AT LEAST TWO OF THE CASKETS U,V,W WERE FASHIONED BY CELLINI.) COMMENT
COMMENT) ((* IMIN2C (X U V TRUTH) ...THE INSCRIPTION X TELLS THAT AT LEAST TWO OF THE CASKETS) COMMENT COMMENT) ((* WERE FASHIONED BY CELLINI.) COMMENT COMMENT) ((TYPE MIN2C (CASKET CASKET CASKET)) (+ 1 NIL) TYPE) ((TYPE IMIN2C (INSCRIPT CASKET
CASKET CASKET)) (+ 1 NIL) TYPE) ((*) COMMENT COMMENT) ((* WE DEFINE THE FOLLOWING FUNCTION:) COMMENT COMMENT) ((* INSCRIPTION (X) ...ASSIGNS EACH CASKET AN INSCRIPTION) COMMENT COMMENT) ((TYPE GOLD,SILVER,LEAD : CASKET) (+ 1 NIL) TYPE) ((TYPE
INSCRIPTION (CASKET) :INSCRIPT) (+ 1 NIL) TYPE) ((*) COMMENT COMMENT) ((* THEN THE FOLLOWING PROPOSITIONS HOLD:) COMMENT COMMENT) ((*) COMMENT COMMENT) ((* THERE IS EXACTLY ONE PORTRAIT:) COMMENT COMMENT) ((PORTRAIT (GOLD) OR PORTRAIT (SILVER)
OR PORTRAIT (LEAD)) (OR (+ 148 (149) NIL) (OR (+ 148 (150) NIL) (+ 148 (151) NIL))) QUANTIFICATION) ((NOT (PORTRAIT (GOLD) AND PORTRAIT (SILVER) OR PORTRAIT (GOLD) AND PORTRAIT (LEAD) OR PORTRAIT (SILVER) AND PORTRAIT (LEAD))) (NOT (OR (AND (+
148 (149) NIL) (+ 148 (150) NIL)) (OR (AND (+ 148 (149) NIL) (+ 148 (151) NIL)) (AND (+ 148 (150) NIL) (+ 148 (151) NIL))))) QUANTIFICATION) ((*) COMMENT COMMENT) ((* EQUIVALENCES TO BE DRAWN FROM KNOWLEDGE:) COMMENT COMMENT) ((*) COMMENT COMMENT)
((* EACH CASKET WAS FASHIONED BY EITHER CELLINI OR BELLINI:) COMMENT COMMENT) ((ALL X:CASKET CELLINI (X) EQV NOT TRUTH (INSCRIPTION (X))) (ALL 153 (EQV (+ 146 (153) (KIND (EQV T 440))) (NOT (+ 82 ((152 153)) (KIND (EQV NIL 440)))))) QUANTIFICATION)
((ALL X:CASKET BELLINI (X) EQV TRUTH (INSCRIPTION (X))) (ALL 154 (EQV (+ 147 (154) (KIND (EQV T 450))) (+ 82 ((152 154)) (KIND (EQV NIL 450))))) QUANTIFICATION) ((*) COMMENT COMMENT) ((* MEANING OF THE PREDICAT MIN2C:) COMMENT COMMENT) ((ALL 
U,V,W:CASKET MIN2C (U V W) EQV (CELLINI (U) AND CELLINI (V) OR CELLINI (V) AND CELLINI (W) OR CELLINI (W) AND CELLINI (U))) (ALL 157 (ALL 156 (ALL 155 (EQV (+ 80 (155 156 157) (KIND (EQV T 480))) (OR (AND (+ 146 (155) (KIND (EQV NIL 480))) (+
146 (156) (KIND (EQV NIL 480)))) (OR (AND (+ 146 (156) (KIND (EQV NIL 480))) (+ 146 (157) (KIND (EQV NIL 480)))) (AND (+ 146 (157) (KIND (EQV NIL 480))) (+ 146 (155) (KIND (EQV NIL 480)))))))))) QUANTIFICATION) ((*) COMMENT COMMENT) ((* IMPLICATIONS
TO BE DRAWN FROM INSCRIPTION:) COMMENT COMMENT) ((ALL X:INSCRIPT ALL Y:CASKET INSCR.PORTRAIT (X Y) AND TRUTH (X) IMPL PORTRAIT (Y)) (ALL 158 (ALL 159 (IMPL (AND (+ 83 (158 159) NIL) (+ 82 (158) NIL)) (+ 148 (159) NIL)))) QUANTIFICATION) ((ALL
X:INSCRIPT ALL Y:CASKET INSCR.PORTRAIT (X Y) AND NOT TRUTH (X) IMPL NOT PORTRAIT (Y)) (ALL 160 (ALL 161 (IMPL (AND (+ 83 (160 161) NIL) (NOT (+ 82 (160) NIL))) (NOT (+ 148 (161) NIL))))) QUANTIFICATION) ((ALL X:INSCRIPT ALL U,V,W:CASKET IMIN2C
(X U V W) AND TRUTH (X) IMPL MIN2C (U V W)) (ALL 162 (ALL 165 (ALL 164 (ALL 163 (IMPL (AND (+ 73 (162 163 164 165) NIL) (+ 82 (162) NIL)) (+ 80 (163 164 165) NIL)))))) QUANTIFICATION) ((ALL X:INSCRIPT ALL U,V,W:CASKET IMIN2C (X U V W) AND NOT
TRUTH (X) IMPL NOT MIN2C (U V W)) (ALL 166 (ALL 169 (ALL 168 (ALL 167 (IMPL (AND (+ 73 (166 167 168 169) NIL) (NOT (+ 82 (166) NIL))) (NOT (+ 80 (167 168 169) NIL))))))) QUANTIFICATION) ((* ACTUAL INSCRIPTIONS:) COMMENT COMMENT) ((INSCR.PORTRAIT
(INSCRIPTION (GOLD) GOLD)) (+ 83 ((152 149) 149) NIL) QUANTIFICATION) ((INSCR.PORTRAIT (INSCRIPTION (SILVER) SILVER)) (+ 83 ((152 150) 150) NIL) QUANTIFICATION) ((IMIN2C (INSCRIPTION (LEAD) GOLD SILVER LEAD)) (+ 73 ((152 151) 149 150 151) NIL)
QUANTIFICATION)))(COND (ST*LOAD.FLAG (PROGN (DT-RESET))
(PROG ((ADDRLIST (QUOTE (10256 10261 10266 10271 10276 10281 10286 10291 10296 10301 10306 10311 10316 10321 10326 10331 10336 10350 10355 10360 10365 10470 10455 10440 ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 10425 10410 ATP.MEMORY.NIL 10395 ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL 10380 ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 10485 10500))) (DATALIST (QUOTE (15 "TRUE" NIL NIL NIL (DEFINED) NIL ((- 1 (POSITIVE))) ((+ 1 (NEGATIVE))) ((+ 1 (NIL))) ((- 1 (NIL))) NIL
NIL (DT*ST-KIND NIL) PREDICATE 15 "FALSE" NIL NIL NIL (DEFINED) NIL ((- 2 (POSITIVE))) ((+ 2 (NEGATIVE))) ((+ 2 (NIL))) ((- 2 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "PORTRAIT" NIL NIL (CASKET) NIL NIL ((- 148 (POSITIVE))) ((+ 148 (NEGATIVE)))
((+ 148 (NIL))) ((- 148 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "BELLINI" NIL NIL (CASKET) NIL NIL ((- 147 (POSITIVE))) ((+ 147 (NEGATIVE))) ((+ 147 (NIL))) ((- 147 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "CELLINI" NIL NIL (CASKET)
NIL NIL ((- 146 (POSITIVE))) ((+ 146 (NEGATIVE))) ((+ 146 (NIL))) ((- 146 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "INSCR.PORTRAIT" NIL NIL (INSCRIPT CASKET) NIL NIL ((- 83 (POSITIVE))) ((+ 83 (NEGATIVE))) ((+ 83 (NIL))) ((- 83 (NIL))) NIL
NIL (DT*ST-KIND NIL) PREDICATE 15 "TRUTH" NIL NIL (INSCRIPT) NIL NIL ((- 82 (POSITIVE))) ((+ 82 (NEGATIVE))) ((+ 82 (NIL))) ((- 82 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "MIN2C" NIL NIL (CASKET CASKET CASKET) NIL NIL ((- 80 (POSITIVE)))
((+ 80 (NEGATIVE))) ((+ 80 (NIL))) ((- 80 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "IMIN2C" NIL NIL (INSCRIPT CASKET CASKET CASKET) NIL NIL ((- 73 (POSITIVE))) ((+ 73 (NEGATIVE))) ((+ 73 (NIL))) ((- 73 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE
5 "GOLD" CASKET (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT 5 "SILVER" CASKET (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT 5 "LEAD" CASKET (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT 14 "INSCRIPTION" NIL INSCRIPT (CASKET) NIL NIL NIL NIL NIL 1 INSCRIPT
(DT*ST-KIND NIL) FUNCTION 5 CASKET NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 CASKET NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 CASKET NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 CASKET NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE
5 CASKET NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 INSCRIPT NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 CASKET NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 INSCRIPT NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 CASKET NIL (ST*DATA
NIL DT*ST-KIND SYS-VAR) VARIABLE 5 INSCRIPT NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 CASKET NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 CASKET NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 CASKET NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
VARIABLE 5 INSCRIPT NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 CASKET NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 CASKET NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 CASKET NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE))) (INCREMENT
(IDIFFERENCE MEM*SIZE 10500)) COUNTER1) (MEM-RESET) (COND ((IGREATERP MEM*SIZE 10500) (SETQ COUNTER1 170) (MAPC ADDRLIST (FUNCTION (LAMBDA (RADDR) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1)) (COND ((EQ RADDR (QUOTE ATP.MEMORY.NIL)) RADDR)
((OR (EQ RADDR 0) (MINUSP RADDR)) RADDR) (T (IPLUS RADDR INCREMENT))))))) (SETQ COUNTER1 (ADD1 MEM*SIZE)) (MAPC DATALIST (FUNCTION (LAMBDA (DATA) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1)) DATA))))) (T (COND ((NEQ MEM*SIZE 10500) (MEM-INITIALIZE
10500))) (SETQ COUNTER1 170) (MAPC ADDRLIST (FUNCTION (LAMBDA (RADDR) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1)) RADDR)))) (SETQ COUNTER1 (ADD1 MEM*SIZE)) (MAPC DATALIST (FUNCTION (LAMBDA (DATA) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1))
DATA)))))) (COND ((IGREATERP MEM*SIZE 10500) (RPAQ MEM*NEXT.RADR (IPLUS 10251 INCREMENT))) (T (RPAQ MEM*NEXT.RADR 10251))) (RPAQ MEM*NEXT.VADR 170) (RPAQ MEM*REST (ADD1 (IDIFFERENCE MEM*NEXT.RADR MEM*NEXT.VADR))) (RPAQ MEM*FIRST.REUSABLE.VADR
NIL) (RPAQ MEM*LAST.REUSABLE.VADR NIL))
(PROGN (RPAQQ DT*SORT.ALL (INSCRIPT CASKET ANY)) (RPAQQ DT*SORT.NR 23) (RPAQQ DT*SORT.PROPERTIES (DT*MAX.SUBSORTS DT*LEAST.SUPERSORTS DT*TRANSITIVE.CLOSURE DT*INVERSE.TRANSITIVE.CLOSURE DT*MINIMAL.SUBSORTS DT*DIRECT.SUBSORTS DT*DIRECT.SUPERSORTS
DT*DISJOINT.SORTS DT*COMPLETION.SORT)) (RPAQQ DT*SORT.COMMON.COMPUTE.FLAG NIL) (RPAQQ DT*VARIABLE.COUNTER 0) (RPAQQ DT*CONSTANT.COUNTER 0) (RPAQQ DT*CONSTANT.ALL (151 150 149)) (RPAQQ DT*ABBREVIATIONS NIL) (RPAQQ DT*FUNCTION.COUNTER 0) (RPAQQ
DT*FUNCTION.ALL (152)) (RPAQQ DT*FUNCTION.ADMISSIBLE.THEORIES (ASSOCIATIVE)) (RPAQQ DT*FUNCTION.ACTUAL.THEORIES NIL) (RPAQQ DT*FUNCTION.WITH.ARGUMENT.SYMMETRIES NIL) (RPAQQ DT*FUNCTION.COMPONENTS (PNAME ATTRIBUTES MAX.RANGE.SORT MAX.DOMAIN.SORTS
MIN.RANGE.SORTS SORT.LIST SORT.LIST.INVERSE SORT.TREE.CALC ARGUMENT.SYMMETRIES ARITY G.L.B.OF.RANGES)) (RPAQQ DT*PREDICATE.ADMISSABLE.ATTRIBUTES (SYMMETRIC DEFINED REFLEXIVE)) (RPAQQ DT*PREDICATE.COUNTER 0) (RPAQQ DT*EQUALITY.SYMBOLS ("=" ":="
"=:" ":=:")) (RPAQQ DT*EQUALITY.PREDICATES NIL) (RPAQQ DT*NONEQUALITY.PREDICATES (73 80 82 83 146 147 148 2 1)) (RPAQQ DT*PREDICATE.ALL (73 80 82 83 146 147 148 2 1)) (RPAQQ DT*PREDICATE.WITH.ATTRIBUTES NIL) (RPAQQ DT*PREDICATE.COMPONENTS (PNAME
POSITIVE.OCCURRENCES NEGATIVE.OCCURRENCES DOMAINSORTS ATTRIBUTES REFL.CLAUSE +ROTHERSIDES -ROTHERSIDES +SOTHERSIDES -SOTHERSIDES +TOTHERSIDES -TOTHERSIDES)) (RPAQQ DT*TRUE.PREDICATE 1) (RPAQQ DT*FALSE.PREDICATE 2) (RPAQQ DT*UNI.CREATES.VARIABLES
NIL) (RPAQQ DT*SIGN.MINUS.SYMBOLS (- --)) (RPAQQ DT*SIGN.PLUS.SYMBOLS (+ ++)) (RPAQQ DT*SYMBOL.KINDS (CONSTANT.ALL FUNCTION.ALL PREDICATE.ALL)))
(PROGN)
(PROGN (SETPROPLIST (QUOTE DT*PREDICATE.WITH.ATTRIBUTES) (QUOTE NIL)))
(PROGN (SETPROPLIST (QUOTE INSCRIPT) (QUOTE (DT*INVERSE.TRANSITIVE.CLOSURE (INSCRIPT ANY) DT*DIRECT.SUPERSORTS (ANY) DT*MINIMAL.SUBSORTS (INSCRIPT) DT*MAX.SUBSORTS ((INSCRIPT INSCRIPT) (CASKET) (ANY INSCRIPT)) DT*TRANSITIVE.CLOSURE (INSCRIPT)
DT*DIRECT.SUBSORTS NIL DT*ATTRIBUTE NIL DT*SORT.NUMBER 22))) (SETPROPLIST (QUOTE CASKET) (QUOTE (DT*INVERSE.TRANSITIVE.CLOSURE (CASKET ANY) DT*DIRECT.SUPERSORTS (ANY) DT*MINIMAL.SUBSORTS (CASKET) DT*MAX.SUBSORTS ((INSCRIPT) (CASKET CASKET) (ANY
CASKET)) DT*TRANSITIVE.CLOSURE (CASKET) DT*DIRECT.SUBSORTS NIL DT*ATTRIBUTE NIL DT*SORT.NUMBER 21))) (SETPROPLIST (QUOTE ANY) (QUOTE (DT*LEAST.SUPERSORTS ((ANY ANY)) DT*INVERSE.TRANSITIVE.CLOSURE (ANY) DT*DIRECT.SUPERSORTS NIL DT*MINIMAL.SUBSORTS
(CASKET) DT*MAX.SUBSORTS ((INSCRIPT INSCRIPT) (CASKET CASKET) (ANY ANY)) DT*TRANSITIVE.CLOSURE (INSCRIPT CASKET ANY) DT*DIRECT.SUBSORTS (INSCRIPT CASKET) DT*ATTRIBUTE NIL DT*SORT.NUMBER 1))))
(PROGN (RPAQQ ST*STACK1 (NIL NIL NIL NIL NIL ((X_169 PROGN (DT-VARIABLE.DELETE 169) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_169) ST*SYMBOL.ADDRESSES))) (X_168 PROGN (DT-VARIABLE.DELETE 168) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_168)
ST*SYMBOL.ADDRESSES))) (X_167 PROGN (DT-VARIABLE.DELETE 167) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_167) ST*SYMBOL.ADDRESSES))) (X_166 PROGN (DT-VARIABLE.DELETE 166) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_166) ST*SYMBOL.ADDRESSES))))
((X_165 PROGN (DT-VARIABLE.DELETE 165) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_165) ST*SYMBOL.ADDRESSES))) (X_164 PROGN (DT-VARIABLE.DELETE 164) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_164) ST*SYMBOL.ADDRESSES))) (X_163 PROGN (
DT-VARIABLE.DELETE 163) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_163) ST*SYMBOL.ADDRESSES))) (X_162 PROGN (DT-VARIABLE.DELETE 162) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_162) ST*SYMBOL.ADDRESSES)))) ((X_161 PROGN (DT-VARIABLE.DELETE
161) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_161) ST*SYMBOL.ADDRESSES))) (X_160 PROGN (DT-VARIABLE.DELETE 160) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_160) ST*SYMBOL.ADDRESSES)))) ((X_159 PROGN (DT-VARIABLE.DELETE 159) (RPAQ 
ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_159) ST*SYMBOL.ADDRESSES))) (X_158 PROGN (DT-VARIABLE.DELETE 158) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_158) ST*SYMBOL.ADDRESSES)))) NIL NIL ((X_157 PROGN (DT-VARIABLE.DELETE 157) (RPAQ ST*SYMBOL.ADDRESSES
(REMASSOC (QUOTE X_157) ST*SYMBOL.ADDRESSES))) (X_156 PROGN (DT-VARIABLE.DELETE 156) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_156) ST*SYMBOL.ADDRESSES))) (X_155 PROGN (DT-VARIABLE.DELETE 155) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_155)
ST*SYMBOL.ADDRESSES)))) NIL NIL ((X_154 PROGN (DT-VARIABLE.DELETE 154) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_154) ST*SYMBOL.ADDRESSES)))) ((X_153 PROGN (DT-VARIABLE.DELETE 153) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_153) 
ST*SYMBOL.ADDRESSES)))) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL ((INSCRIPTION PROGN (DT-FUNCTION.DELETE 152) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE INSCRIPTION) ST*SYMBOL.ADDRESSES)))) ((LEAD PROGN (DT-CONSTANT.DELETE 151) (RPAQ ST*SYMBOL.ADDRESSES
(REMASSOC (QUOTE LEAD) ST*SYMBOL.ADDRESSES))) (SILVER PROGN (DT-CONSTANT.DELETE 150) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE SILVER) ST*SYMBOL.ADDRESSES))) (GOLD PROGN (DT-CONSTANT.DELETE 149) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE GOLD)
ST*SYMBOL.ADDRESSES)))) NIL NIL NIL ((IMIN2C PROGN (DT-PREDICATE.DELETE 73) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE IMIN2C) ST*SYMBOL.ADDRESSES)))) ((MIN2C PROGN (DT-PREDICATE.DELETE 80) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE MIN2C) 
ST*SYMBOL.ADDRESSES)))) NIL NIL NIL ((TRUTH PROGN (DT-PREDICATE.DELETE 82) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE TRUTH) ST*SYMBOL.ADDRESSES)))) ((INSCR.PORTRAIT PROGN (DT-PREDICATE.DELETE 83) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE 
INSCR.PORTRAIT) ST*SYMBOL.ADDRESSES))) (INSCRIPT PROGN (DT-SORT.ST.REMOVE (QUOTE INSCRIPT)) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE INSCRIPT) ST*SYMBOL.ADDRESSES))) (INSCRIPT REMPROP (QUOTE INSCRIPT) (QUOTE ST*DATA))) ((CELLINI PROGN (
DT-PREDICATE.DELETE 146) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE CELLINI) ST*SYMBOL.ADDRESSES)))) ((BELLINI PROGN (DT-PREDICATE.DELETE 147) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE BELLINI) ST*SYMBOL.ADDRESSES)))) ((PORTRAIT PROGN (
DT-PREDICATE.DELETE 148) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE PORTRAIT) ST*SYMBOL.ADDRESSES))) (CASKET PROGN (DT-SORT.ST.REMOVE (QUOTE CASKET)) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE CASKET) ST*SYMBOL.ADDRESSES))) (CASKET REMPROP (QUOTE
CASKET) (QUOTE ST*DATA))) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL ((FALSE PROGN (DT-PREDICATE.DELETE 2) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE FALSE) ST*SYMBOL.ADDRESSES))) (TRUE PROGN (DT-PREDICATE.DELETE 1) (RPAQ
ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE TRUE) ST*SYMBOL.ADDRESSES))) (ANY PROGN (DT-SORT.ST.REMOVE (QUOTE ANY)) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE ANY) ST*SYMBOL.ADDRESSES))) (ANY REMPROP (QUOTE ANY) (QUOTE ST*DATA))))) (RPAQQ ST*SYMBOL.ADDRESSES
(NIL (ANY . T) (TRUE . 1) (FALSE . 2) (CASKET . T) (PORTRAIT . 148) (BELLINI . 147) (CELLINI . 146) (INSCRIPT . T) (INSCR.PORTRAIT . 83) (TRUTH . 82) (MIN2C . 80) (IMIN2C . 73) (GOLD . 149) (SILVER . 150) (LEAD . 151) (INSCRIPTION . 152) (X_153
. 153) (X_154 . 154) (X_155 . 155) (X_156 . 156) (X_157 . 157) (X_158 . 158) (X_159 . 159) (X_160 . 160) (X_161 . 161) (X_162 . 162) (X_163 . 163) (X_164 . 164) (X_165 . 165) (X_166 . 166) (X_167 . 167) (X_168 . 168) (X_169 . 169))))))))STOP
 
