(COND ((FMT-LOAD " 8-FEB-85 13:52:54"
NIL(((* PROBLEM E90.) COMMENT COMMENT) ((*) COMMENT COMMENT) ((* IN THIS AND THE NEXT TWO PROBLEMS THERE ARE AGAIN THREE INHABITANTS) COMMENT COMMENT) ((* A,B,C, EACH OF WHOM IS EITHER A KNIGHT OR A KNAVE. HOWEVER ONLY TWO) COMMENT COMMENT) ((*
OF THEM, A, B, MAKE STATEMENTS. BUT IN THESE STATEMENTS, THE WORD US) COMMENT COMMENT) ((* REFERS TO THE THREE PEOPLE A,B,C - NOT TO JUST A AND B. SUPPOSE A,B MAKE) COMMENT COMMENT) ((* THE FOLLOWING STATEMENTS:) COMMENT COMMENT) ((* A: AT LEAST
ONE OF THE THREE OF US IS A KNIGHT.) COMMENT COMMENT) ((* B: AT LEAST ONE OF THE THREE OF US IS A KNAVE.) COMMENT COMMENT) ((* GIVEN THAT AT LEAST ONE OF THEM IS A WEREWOLF, AND THAT NONE OF THEM) COMMENT COMMENT) ((* IS BOTH A KNIGHT AND A WEREWOLF,
WHICH ONE ARE WEREWOLVES?) COMMENT COMMENT) ((*) COMMENT COMMENT) ((* WE DEFINE THE FOLLOWING PREDICATES:) COMMENT COMMENT) ((*) COMMENT COMMENT) ((* KNIGHT (X) ...MEANS THAT X IS A KNIGHT.) COMMENT COMMENT) ((* KNAVE (X) ...MEANS THAT X IS A
KNAVE.) COMMENT COMMENT) ((* WEREWOLF (X) ...MEANS THAT X IS A WEREWOLF.) COMMENT COMMENT) ((* TRUTH (X) ... MEANS THAT THE STATEMENT X IS TRUE.) COMMENT COMMENT) ((* AT.LEAST.ONE.KNIGHT (X Y Z) ...MEANS THAT AT LEAST ONE OF X,Y,Z IS A KNIGHT.)
COMMENT COMMENT) ((* AT.LEAST.ONE.KNAVE (X Y Z) ...MEANS THAT AT LEAST ONE OF X,Y,Z IS A KNAVE.) COMMENT COMMENT) ((* STATE.AT.LEAST.ONE.KNIGHT (U V W X) ...THE STATEMENT U MEANS THAT AT LEAST ONE OF V,W,X IS A KNIGHT.) COMMENT COMMENT) ((*) COMMENT
COMMENT) ((* STATE.AT.LEAST.ONE.KNAVE (U V W X) ...THE STATEMENT U MEANS THAT AT LEAST) COMMENT COMMENT) ((* ONE OF V,W,X IS A KNAVE.) COMMENT COMMENT) ((*) COMMENT COMMENT) ((* WE DEFINE THE FOLLOWING FUNCTION:) COMMENT COMMENT) ((*) COMMENT
COMMENT) ((* STATE (X) ...ASSIGNS EACH PERSON A STATEMENT.) COMMENT COMMENT) ((*) COMMENT COMMENT) ((TYPE A,B,C:PERSON) (+ 1 NIL) TYPE) ((TYPE KNAVE (PERSON)) (+ 1 NIL) TYPE) ((TYPE KNIGHT (PERSON)) (+ 1 NIL) TYPE) ((TYPE WEREWOLF (PERSON)) (+
1 NIL) TYPE) ((TYPE TRUTH (STATEMENT)) (+ 1 NIL) TYPE) ((TYPE AT.LEAST.ONE.KNIGHT (PERSON PERSON PERSON)) (+ 1 NIL) TYPE) ((TYPE AT.LEAST.ONE.KNAVE (PERSON PERSON PERSON)) (+ 1 NIL) TYPE) ((TYPE STATE.AT.LEAST.ONE.KNIGHT (STATEMENT PERSON PERSON
PERSON)) (+ 1 NIL) TYPE) ((TYPE STATE.AT.LEAST.ONE.KNAVE (STATEMENT PERSON PERSON PERSON)) (+ 1 NIL) TYPE) ((TYPE STATE (PERSON) :STATEMENT) (+ 1 NIL) TYPE) ((*) COMMENT COMMENT) ((* EVERY INHABITANT IS EITHER A KNIGHT OR A KNAVE:) COMMENT COMMENT)
((ALL X:PERSON KNIGHT (X) OR KNAVE (X)) (ALL 103 (OR (+ 111 (103) NIL) (+ 112 (103) NIL))) QUANTIFICATION) ((ALL X:PERSON NOT (KNIGHT (X) AND KNAVE (X))) (ALL 102 (NOT (AND (+ 111 (102) NIL) (+ 112 (102) NIL)))) QUANTIFICATION) ((*) COMMENT COMMENT)
((* KNIGHTS ALWAYS TELL THE TRUTH AND KNAVES ALWAYS LIE:) COMMENT COMMENT) ((ALL X:PERSON KNIGHT (X) EQV TRUTH (STATE (X))) (ALL 101 (EQV (+ 111 (101) NIL) (+ 109 ((104 101)) NIL))) QUANTIFICATION) ((ALL X:PERSON KNAVE (X) EQV NOT TRUTH (STATE
(X))) (ALL 100 (EQV (+ 112 (100) NIL) (NOT (+ 109 ((104 100)) NIL)))) QUANTIFICATION) ((*) COMMENT COMMENT) ((* AT LEAST ONE OF THEM IS A WEREWOLF:) COMMENT COMMENT) ((WEREWOLF (A) OR WEREWOLF (B) OR WEREWOLF (C)) (OR (+ 110 (115) NIL) (OR (+
110 (114) NIL) (+ 110 (113) NIL))) QUANTIFICATION) ((*) COMMENT COMMENT) ((* NONE OF THEM IS BOTH A KNIGHT AND A WEREWOLF:) COMMENT COMMENT) ((ALL X:PERSON NOT (KNIGHT (X) AND WEREWOLF (X))) (ALL 99 (NOT (AND (+ 111 (99) NIL) (+ 110 (99) NIL))))
QUANTIFICATION) ((*) COMMENT COMMENT) ((* EQUIVALENCES:) COMMENT COMMENT) ((ALL X,Y,Z:PERSON AT.LEAST.ONE.KNIGHT (X Y Z) EQV KNIGHT (X) OR KNIGHT (Y) OR KNIGHT (Z)) (ALL 96 (ALL 97 (ALL 98 (EQV (+ 108 (98 97 96) NIL) (OR (+ 111 (98) NIL) (OR (+
111 (97) NIL) (+ 111 (96) NIL))))))) QUANTIFICATION) ((ALL X,Y,Z:PERSON AT.LEAST.ONE.KNAVE (X Y Z) EQV KNAVE (X) OR KNAVE (Y) OR KNAVE (Z)) (ALL 93 (ALL 94 (ALL 95 (EQV (+ 107 (95 94 93) NIL) (OR (+ 112 (95) NIL) (OR (+ 112 (94) NIL) (+ 112 (93)
NIL))))))) QUANTIFICATION) ((*) COMMENT COMMENT) ((* IMPLICATIONS ABOUT STATEMENTS:) COMMENT COMMENT) ((ALL U:STATEMENT ALL V,W,X:PERSON STATE.AT.LEAST.ONE.KNIGHT (U V W X) AND TRUTH (U) IMPL AT.LEAST.ONE.KNIGHT (V W X)) (ALL 92 (ALL 89 (ALL 90
(ALL 91 (IMPL (AND (+ 106 (92 91 90 89) NIL) (+ 109 (92) NIL)) (+ 108 (91 90 89) NIL)))))) QUANTIFICATION) ((ALL U:STATEMENT ALL V,W,X:PERSON STATE.AT.LEAST.ONE.KNIGHT (U V W X) AND NOT TRUTH (U) IMPL NOT AT.LEAST.ONE.KNIGHT (V W X)) (ALL 88 (ALL
118 (ALL 117 (ALL 116 (IMPL (AND (+ 106 (88 116 117 118) NIL) (NOT (+ 109 (88) NIL))) (NOT (+ 108 (116 117 118) NIL))))))) QUANTIFICATION) ((ALL U:STATEMENT ALL V,W,X:PERSON STATE.AT.LEAST.ONE.KNAVE (U V W X) AND TRUTH (U) IMPL AT.LEAST.ONE.KNAVE
(V W X)) (ALL 119 (ALL 122 (ALL 121 (ALL 120 (IMPL (AND (+ 105 (119 120 121 122) NIL) (+ 109 (119) NIL)) (+ 107 (120 121 122) NIL)))))) QUANTIFICATION) ((ALL U:STATEMENT ALL V,W,X:PERSON STATE.AT.LEAST.ONE.KNAVE (U V W X) AND NOT TRUTH (U) IMPL
NOT AT.LEAST.ONE.KNAVE (V W X)) (ALL 123 (ALL 126 (ALL 125 (ALL 124 (IMPL (AND (+ 105 (123 124 125 126) NIL) (NOT (+ 109 (123) NIL))) (NOT (+ 107 (124 125 126) NIL))))))) QUANTIFICATION) ((*) COMMENT COMMENT) ((* ACTUAL STATEMENTS:) COMMENT COMMENT)
((STATE.AT.LEAST.ONE.KNIGHT (STATE (A) A B C)) (+ 106 ((104 115) 115 114 113) NIL) QUANTIFICATION) ((STATE.AT.LEAST.ONE.KNAVE (STATE (B) A B C)) (+ 105 ((104 114) 115 114 113) NIL) QUANTIFICATION)))(COND (ST*LOAD.FLAG (PROGN (DT-RESET))
(MEM-RESTORE NIL NIL 127 10186 10500 (QUOTE (10191 10196 10201 10206 10211 10216 10221 10226 10231 10236 10241 10470 10465 10460 10455 10440 10425 10410 10395 10380 10365 10350 10335 10321 10316 10311 10306 10301 10296 10291 10286 10281 10276
10271 10266 10261 10256 10251 10246 ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 10485 10500))(QUOTE (15 TRUE NIL NIL NIL (DEFINED) NIL ((- 1 (POSITIVE))) ((+ 1 (NEGATIVE))) ((+ 1 (NIL))) ((- 1 (NIL))) NIL NIL (DT*ST-KIND
NIL) PREDICATE 15 FALSE NIL NIL NIL (DEFINED) NIL ((- 2 (POSITIVE))) ((+ 2 (NEGATIVE))) ((+ 2 (NIL))) ((- 2 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 A PERSON (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT 5 B PERSON (ST*ATTRIBUTE NIL DT*ST-KIND
NIL) CONSTANT 5 C PERSON (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT 15 KNAVE NIL NIL (PERSON) NIL NIL ((- 112 (POSITIVE))) ((+ 112 (NEGATIVE))) ((+ 112 (NIL))) ((- 112 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 KNIGHT NIL NIL (PERSON) NIL NIL
((- 111 (POSITIVE))) ((+ 111 (NEGATIVE))) ((+ 111 (NIL))) ((- 111 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 WEREWOLF NIL NIL (PERSON) NIL NIL ((- 110 (POSITIVE))) ((+ 110 (NEGATIVE))) ((+ 110 (NIL))) ((- 110 (NIL))) NIL NIL (DT*ST-KIND NIL)
PREDICATE 15 TRUTH NIL NIL (STATEMENT) NIL NIL ((- 109 (POSITIVE))) ((+ 109 (NEGATIVE))) ((+ 109 (NIL))) ((- 109 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 AT.LEAST.ONE.KNIGHT NIL NIL (PERSON PERSON PERSON) NIL NIL ((- 108 (POSITIVE))) ((+
108 (NEGATIVE))) ((+ 108 (NIL))) ((- 108 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 AT.LEAST.ONE.KNAVE NIL NIL (PERSON PERSON PERSON) NIL NIL ((- 107 (POSITIVE))) ((+ 107 (NEGATIVE))) ((+ 107 (NIL))) ((- 107 (NIL))) NIL NIL (DT*ST-KIND NIL)
PREDICATE 15 STATE.AT.LEAST.ONE.KNIGHT NIL NIL (STATEMENT PERSON PERSON PERSON) NIL NIL ((- 106 (POSITIVE))) ((+ 106 (NEGATIVE))) ((+ 106 (NIL))) ((- 106 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 STATE.AT.LEAST.ONE.KNAVE NIL NIL (STATEMENT
PERSON PERSON PERSON) NIL NIL ((- 105 (POSITIVE))) ((+ 105 (NEGATIVE))) ((+ 105 (NIL))) ((- 105 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 14 STATE NIL STATEMENT (PERSON) NIL NIL NIL NIL NIL 1 STATEMENT (DT*ST-KIND NIL) FUNCTION 5 PERSON NIL (ST*DATA
NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA
NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 STATEMENT NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 STATEMENT NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL
(ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 STATEMENT NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 5 STATEMENT NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE)))(PROGN
(RPAQQ DT*SORT.ALL (STATEMENT PERSON ANY)) (RPAQQ DT*SORT.NR 17) (RPAQQ DT*SORT.PROPERTIES (DT*MAX.SUBSORTS DT*LEAST.SUPERSORTS DT*TRANSITIVE.CLOSURE DT*INVERSE.TRANSITIVE.CLOSURE DT*MINIMAL.SUBSORTS DT*DIRECT.SUBSORTS DT*DIRECT.SUPERSORTS 
DT*DISJOINT.SORTS DT*COMPLETION.SORT)) (RPAQQ DT*SORT.COMMON.COMPUTE.FLAG NIL) (RPAQQ DT*VARIABLE.COUNTER 0) (RPAQQ DT*CONSTANT.COUNTER 0) (RPAQQ DT*CONSTANT.ALL (113 114 115)) (RPAQQ DT*ABBREVIATIONS NIL) (RPAQQ DT*FUNCTION.COUNTER 0) (RPAQQ
DT*FUNCTION.ALL (104)) (RPAQQ DT*FUNCTION.ADMISSIBLE.THEORIES (ASSOCIATIVE)) (RPAQQ DT*FUNCTION.ACTUAL.THEORIES NIL) (RPAQQ DT*FUNCTION.WITH.ARGUMENT.SYMMETRIES NIL) (RPAQQ DT*FUNCTION.COMPONENTS (PNAME ATTRIBUTES MAX.RANGE.SORT MAX.DOMAIN.SORTS
MIN.RANGE.SORTS SORT.LIST SORT.LIST.INVERSE SORT.TREE.CALC ARGUMENT.SYMMETRIES ARITY G.L.B.OF.RANGES)) (RPAQQ DT*PREDICATE.ADMISSABLE.ATTRIBUTES (SYMMETRIC DEFINED REFLEXIVE)) (RPAQQ DT*PREDICATE.COUNTER 0) (RPAQQ DT*EQUALITY.SYMBOLS ("=" ":="
"=:" ":=:")) (RPAQQ DT*EQUALITY.PREDICATES NIL) (RPAQQ DT*NONEQUALITY.PREDICATES (105 106 107 108 109 110 111 112 2 1)) (RPAQQ DT*PREDICATE.ALL (105 106 107 108 109 110 111 112 2 1)) (RPAQQ DT*PREDICATE.WITH.ATTRIBUTES NIL) (RPAQQ 
DT*PREDICATE.COMPONENTS (PNAME POSITIVE.OCCURRENCES NEGATIVE.OCCURRENCES DOMAINSORTS ATTRIBUTES REFL.CLAUSE +ROTHERSIDES -ROTHERSIDES +SOTHERSIDES -SOTHERSIDES +TOTHERSIDES -TOTHERSIDES)) (RPAQQ DT*TRUE.PREDICATE 1) (RPAQQ DT*FALSE.PREDICATE 2)
(RPAQQ DT*UNI.CREATES.VARIABLES NIL) (RPAQQ DT*SIGN.MINUS.SYMBOLS (- --)) (RPAQQ DT*SIGN.PLUS.SYMBOLS (+ ++)) (RPAQQ DT*SYMBOL.KINDS (CONSTANT.ALL FUNCTION.ALL PREDICATE.ALL)))
(PROGN)
(PROGN (SETPROPLIST (QUOTE DT*PREDICATE.WITH.ATTRIBUTES) (QUOTE NIL)))
(PROGN (SETPROPLIST (QUOTE STATEMENT) (QUOTE (DT*INVERSE.TRANSITIVE.CLOSURE (STATEMENT ANY) DT*DIRECT.SUPERSORTS (ANY) DT*MINIMAL.SUBSORTS (STATEMENT) DT*MAX.SUBSORTS ((STATEMENT STATEMENT) (PERSON) (ANY STATEMENT)) DT*TRANSITIVE.CLOSURE (STATEMENT)
DT*DIRECT.SUBSORTS NIL DT*ATTRIBUTE NIL DT*SORT.NUMBER 16))) (SETPROPLIST (QUOTE PERSON) (QUOTE (DT*INVERSE.TRANSITIVE.CLOSURE (PERSON ANY) DT*DIRECT.SUPERSORTS (ANY) DT*MINIMAL.SUBSORTS (PERSON) DT*MAX.SUBSORTS ((STATEMENT) (PERSON PERSON) (ANY
PERSON)) DT*TRANSITIVE.CLOSURE (PERSON) DT*DIRECT.SUBSORTS NIL DT*ATTRIBUTE NIL DT*SORT.NUMBER 15))) (SETPROPLIST (QUOTE ANY) (QUOTE (DT*LEAST.SUPERSORTS ((ANY ANY)) DT*ATTRIBUTE NIL DT*INVERSE.TRANSITIVE.CLOSURE (ANY) DT*DIRECT.SUPERSORTS NIL
DT*MINIMAL.SUBSORTS (PERSON) DT*MAX.SUBSORTS ((STATEMENT STATEMENT) (PERSON PERSON) (ANY ANY)) DT*TRANSITIVE.CLOSURE (STATEMENT PERSON ANY) DT*SORT.NUMBER 1 DT*DIRECT.SUBSORTS (STATEMENT PERSON)))))
(PROGN (RPAQQ ST*STACK1 (NIL NIL NIL NIL NIL ((X_126 PROGN (DT-VARIABLE.DELETE 126) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_126) ST*SYMBOL.ADDRESSES))) (X_125 PROGN (DT-VARIABLE.DELETE 125) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_125)
ST*SYMBOL.ADDRESSES))) (X_124 PROGN (DT-VARIABLE.DELETE 124) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_124) ST*SYMBOL.ADDRESSES))) (X_123 PROGN (DT-VARIABLE.DELETE 123) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_123) ST*SYMBOL.ADDRESSES))))
((X_122 PROGN (DT-VARIABLE.DELETE 122) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_122) ST*SYMBOL.ADDRESSES))) (X_121 PROGN (DT-VARIABLE.DELETE 121) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_121) ST*SYMBOL.ADDRESSES))) (X_120 PROGN (
DT-VARIABLE.DELETE 120) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_120) ST*SYMBOL.ADDRESSES))) (X_119 PROGN (DT-VARIABLE.DELETE 119) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_119) ST*SYMBOL.ADDRESSES)))) ((X_118 PROGN (DT-VARIABLE.DELETE
118) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_118) ST*SYMBOL.ADDRESSES))) (X_117 PROGN (DT-VARIABLE.DELETE 117) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_117) ST*SYMBOL.ADDRESSES))) (X_116 PROGN (DT-VARIABLE.DELETE 116) (RPAQ ST*SYMBOL.ADDRESSES
(REMASSOC (QUOTE X_116) ST*SYMBOL.ADDRESSES))) (X_88 PROGN (DT-VARIABLE.DELETE 88) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_88) ST*SYMBOL.ADDRESSES)))) ((X_89 PROGN (DT-VARIABLE.DELETE 89) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_89) 
ST*SYMBOL.ADDRESSES))) (X_90 PROGN (DT-VARIABLE.DELETE 90) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_90) ST*SYMBOL.ADDRESSES))) (X_91 PROGN (DT-VARIABLE.DELETE 91) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_91) ST*SYMBOL.ADDRESSES))) (X_92
PROGN (DT-VARIABLE.DELETE 92) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_92) ST*SYMBOL.ADDRESSES)))) NIL NIL ((X_93 PROGN (DT-VARIABLE.DELETE 93) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_93) ST*SYMBOL.ADDRESSES))) (X_94 PROGN (DT-VARIABLE.DELETE
94) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_94) ST*SYMBOL.ADDRESSES))) (X_95 PROGN (DT-VARIABLE.DELETE 95) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_95) ST*SYMBOL.ADDRESSES)))) ((X_96 PROGN (DT-VARIABLE.DELETE 96) (RPAQ ST*SYMBOL.ADDRESSES
(REMASSOC (QUOTE X_96) ST*SYMBOL.ADDRESSES))) (X_97 PROGN (DT-VARIABLE.DELETE 97) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_97) ST*SYMBOL.ADDRESSES))) (X_98 PROGN (DT-VARIABLE.DELETE 98) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_98) 
ST*SYMBOL.ADDRESSES)))) NIL NIL ((X_99 PROGN (DT-VARIABLE.DELETE 99) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_99) ST*SYMBOL.ADDRESSES)))) NIL NIL NIL NIL NIL ((X_100 PROGN (DT-VARIABLE.DELETE 100) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE
X_100) ST*SYMBOL.ADDRESSES)))) ((X_101 PROGN (DT-VARIABLE.DELETE 101) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_101) ST*SYMBOL.ADDRESSES)))) NIL NIL ((X_102 PROGN (DT-VARIABLE.DELETE 102) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_102) 
ST*SYMBOL.ADDRESSES)))) ((X_103 PROGN (DT-VARIABLE.DELETE 103) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_103) ST*SYMBOL.ADDRESSES)))) NIL NIL ((STATE PROGN (DT-FUNCTION.DELETE 104) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE STATE) 
ST*SYMBOL.ADDRESSES)))) ((STATE.AT.LEAST.ONE.KNAVE PROGN (DT-PREDICATE.DELETE 105) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE STATE.AT.LEAST.ONE.KNAVE) ST*SYMBOL.ADDRESSES)))) ((STATE.AT.LEAST.ONE.KNIGHT PROGN (DT-PREDICATE.DELETE 106) (RPAQ 
ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE STATE.AT.LEAST.ONE.KNIGHT) ST*SYMBOL.ADDRESSES)))) ((AT.LEAST.ONE.KNAVE PROGN (DT-PREDICATE.DELETE 107) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE AT.LEAST.ONE.KNAVE) ST*SYMBOL.ADDRESSES)))) ((AT.LEAST.ONE.KNIGHT
PROGN (DT-PREDICATE.DELETE 108) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE AT.LEAST.ONE.KNIGHT) ST*SYMBOL.ADDRESSES)))) ((TRUTH PROGN (DT-PREDICATE.DELETE 109) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE TRUTH) ST*SYMBOL.ADDRESSES))) (STATEMENT
PROGN (DT-SORT.ST.REMOVE (QUOTE STATEMENT)) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE STATEMENT) ST*SYMBOL.ADDRESSES))) (STATEMENT REMPROP (QUOTE STATEMENT) (QUOTE ST*DATA))) ((WEREWOLF PROGN (DT-PREDICATE.DELETE 110) (RPAQ ST*SYMBOL.ADDRESSES
(REMASSOC (QUOTE WEREWOLF) ST*SYMBOL.ADDRESSES)))) ((KNIGHT PROGN (DT-PREDICATE.DELETE 111) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE KNIGHT) ST*SYMBOL.ADDRESSES)))) ((KNAVE PROGN (DT-PREDICATE.DELETE 112) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC
(QUOTE KNAVE) ST*SYMBOL.ADDRESSES)))) ((C PROGN (DT-CONSTANT.DELETE 113) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE C) ST*SYMBOL.ADDRESSES))) (B PROGN (DT-CONSTANT.DELETE 114) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE B) ST*SYMBOL.ADDRESSES)))
(A PROGN (DT-CONSTANT.DELETE 115) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE A) ST*SYMBOL.ADDRESSES))) (PERSON PROGN (DT-SORT.ST.REMOVE (QUOTE PERSON)) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE PERSON) ST*SYMBOL.ADDRESSES))) (PERSON REMPROP (QUOTE
PERSON) (QUOTE ST*DATA))) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL ((FALSE PROGN (DT-PREDICATE.DELETE 2) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE FALSE) ST*SYMBOL.ADDRESSES)))
(TRUE PROGN (DT-PREDICATE.DELETE 1) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE TRUE) ST*SYMBOL.ADDRESSES))) (ANY PROGN (DT-SORT.ST.REMOVE (QUOTE ANY)) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE ANY) ST*SYMBOL.ADDRESSES))) (ANY REMPROP (QUOTE ANY)
(QUOTE ST*DATA))))) (RPAQQ ST*SYMBOL.ADDRESSES (NIL (ANY . T) (TRUE . 1) (FALSE . 2) (PERSON . T) (A . 115) (B . 114) (C . 113) (KNAVE . 112) (KNIGHT . 111) (WEREWOLF . 110) (STATEMENT . T) (TRUTH . 109) (AT.LEAST.ONE.KNIGHT . 108) (AT.LEAST.ONE.KNAVE
. 107) (STATE.AT.LEAST.ONE.KNIGHT . 106) (STATE.AT.LEAST.ONE.KNAVE . 105) (STATE . 104) (X_103 . 103) (X_102 . 102) (X_101 . 101) (X_100 . 100) (X_99 . 99) (X_98 . 98) (X_97 . 97) (X_96 . 96) (X_95 . 95) (X_94 . 94) (X_93 . 93) (X_92 . 92) (X_91
. 91) (X_90 . 90) (X_89 . 89) (X_88 . 88) (X_116 . 116) (X_117 . 117) (X_118 . 118) (X_119 . 119) (X_120 . 120) (X_121 . 121) (X_122 . 122) (X_123 . 123) (X_124 . 124) (X_125 . 125) (X_126 . 126))))))))STOP
 
