;;; -*- Package: MKRP; Base: 10; Mode: LISP; Syntax: Common-lisp -*-
(PREP-PROBLEM.SPECIFICATION (QUOTE ((* PROBLEM 51) (*) (* IN THE FOREST THERE ARE OFTEN TWO VISITORS : TWEEDLEDUM AND TWEEDLEDEE.) (* ONE OF THE TWO IS LIKE THE LION ,THE OTHER ONE IS LIKE THE UNICORN.) (* ALICE DID NOT KNOW WHICH ONE WAS LIKE THE LION AND WHICH ONE WAS LIKE) (* THE UNICORN.THEY LOOKED LIKE TWINS AND SO ALICE COULD NOT DETERMINE) (* WHO WAS WHO.) (*) (* ONE DAY ALICE MET THE BROTHERS.) (* THEY MADE THE FOLLOWING STATEMENTS :) (*) (* FIRST ONE / I AM TWEEDLEDUM.) (* SECOND ONE / I AM TWEEDLEDEE.) (*) (* WHICH ONE WAS TWEEDLEDEE AND WHICH ONE TWEEDLEDUM.) (*) (*) (* FORMALIZING THE PROBLEM IN FIRST ORDER LOGIC) (*) (TYPE TWEEDLEDEE,TWEEDLEDUM : PERSONS) (TYPE LION,UNICORN : ANIMAL) (*) (ALL X : DAYS MO (X) EQV (NOT TU (X) AND NOT WE (X) AND NOT TH (X) AND NOT FR (X) AND NOT SA (X) AND NOT SU (X))) (ALL X : DAYS TU (X) EQV (NOT MO (X) AND NOT WE (X) AND NOT TH (X) AND NOT FR (X) AND NOT SA (X) AND NOT SU (X))) (ALL X : DAYS WE (X) EQV (NOT MO (X) AND NOT TU (X) AND NOT TH (X) AND NOT FR (X) AND NOT SA (X) AND NOT SU (X))) (ALL X : DAYS TH (X) EQV (NOT MO (X) AND NOT TU (X) AND NOT WE (X) AND NOT FR (X) AND NOT SA (X) AND NOT SU (X))) (ALL X : DAYS FR (X) EQV (NOT MO (X) AND NOT TU (X) AND NOT WE (X) AND NOT TH (X) AND NOT SA (X) AND NOT SU (X))) (ALL X : DAYS SA (X) EQV (NOT MO (X) AND NOT TU (X) AND NOT WE (X) AND NOT TH (X) AND NOT FR (X) AND NOT SU (X))) (ALL X : DAYS SU (X) EQV (NOT MO (X) AND NOT TU (X) AND NOT WE (X) AND NOT TH (X) AND NOT FR (X) AND NOT SA (X))) (*) (ALL X : DAYS MEMBER (X LYING-DAYS (LION)) EQV (MO (X) OR TU (X) OR WE (X))) (ALL X : DAYS MEMBER (X LYING-DAYS (UNICORN)) EQV (TH (X) OR FR (X) OR SA (X))) (*) (TYPE MONDAY,TUESDAY,WEDNESDAY,THURSDAY,FRIDAY,SATURDAY,SUNDAY : DAYS) (MO (MONDAY)) (TU (TUESDAY)) (WE (WEDNESDAY)) (TH (THURSDAY)) (FR (FRIDAY)) (SA (SATURDAY)) (SU (SUNDAY)) (*) (DEE (TWEEDLEDEE)) (DUM (TWEEDLEDUM)) (ALL P : PERSONS DEE (P) EQV NOT DUM (P)) (*) (* TRANS (X Y) IS TRUE, IF PERSON X ACTS LIKE ANIMAL Y) (ALL P : PERSONS TRANS (P LION) EQV NOT TRANS (P UNICORN)) (ALL P : PERSONS TRANS (P LION) OR TRANS (P UNICORN)) (ALL A : ANIMAL TRANS (TWEEDLEDEE A) EQV NOT TRANS (TWEEDLEDUM A)) (*) (ALL X : DAYS ALL A : ANIMAL ALL P,Q : PERSONS NOT MEMBER (X LYING-DAYS (A)) AND TRANS (P A) AND DEE (Q) IMPL YOUDEE (X P Q)) (ALL X : DAYS ALL A : ANIMAL ALL P,Q : PERSONS NOT MEMBER (X LYING-DAYS (A)) AND TRANS (P A) AND DUM (Q) IMPL NOT YOUDEE (X P Q)) (ALL X : DAYS ALL A : ANIMAL ALL P,Q : PERSONS MEMBER (X LYING-DAYS (A)) AND TRANS (P A) AND DEE (Q) IMPL NOT YOUDEE (X P Q)) (ALL X : DAYS ALL A : ANIMAL ALL P,Q : PERSONS MEMBER (X LYING-DAYS (A)) AND TRANS (P A) AND DUM (Q) IMPL YOUDEE (X P Q)) (ALL X : DAYS ALL A : ANIMAL ALL P,Q : PERSONS MEMBER (X LYING-DAYS (A)) AND TRANS (P A) AND DUM (Q) IMPL YOUDUM (X P Q)) (ALL X : DAYS ALL A : ANIMAL ALL P,Q : PERSONS MEMBER (X LYING-DAYS (A)) AND TRANS (P A) AND DEE (Q) IMPL NOT YOUDUM (X P Q)) (ALL X : DAYS ALL A : ANIMAL ALL P,Q : PERSONS NOT MEMBER (X LYING-DAYS (A)) AND TRANS (P A) AND DEE (Q) IMPL NOT YOUDUM (X P Q)) (ALL X : DAYS ALL A : ANIMAL ALL P,Q : PERSONS NOT MEMBER (X LYING-DAYS (A)) AND TRANS (P A) AND DUM (Q) IMPL YOUDUM (X P Q)))) (QUOTE (COMMENT COMMENT COMMENT COMMENT COMMENT COMMENT COMMENT COMMENT COMMENT COMMENT COMMENT COMMENT COMMENT COMMENT COMMENT COMMENT COMMENT COMMENT COMMENT (+ 0 NIL) (+ 0 NIL) COMMENT (ALL 6 (EQV (+ 7 (6) (KIND (EQV T 240))) (AND (NOT (+ 8 (6) (KIND (EQV NIL 240)))) (AND (NOT (+ 9 (6) (KIND (EQV NIL 240)))) (AND (NOT (+ 10 (6) (KIND (EQV NIL 240)))) (AND (NOT (+ 11 (6) (KIND (EQV NIL 240)))) (AND (NOT (+ 12 (6) (KIND (EQV NIL 240)))) (NOT (+ 13 (6) (KIND (EQV NIL 240))))))))))) (ALL 14 (EQV (+ 8 (14) (KIND (EQV T 250))) (AND (NOT (+ 7 (14) (KIND (EQV NIL 250)))) (AND (NOT (+ 9 (14) (KIND (EQV NIL 250)))) (AND (NOT (+ 10 (14) (KIND (EQV NIL 250)))) (AND (NOT (+ 11 (14) (KIND (EQV NIL 250)))) (AND (NOT (+ 12 (14) (KIND (EQV NIL 250)))) (NOT (+ 13 (14) (KIND (EQV NIL 250))))))))))) (ALL 15 (EQV (+ 9 (15) (KIND (EQV T 260))) (AND (NOT (+ 7 (15) (KIND (EQV NIL 260)))) (AND (NOT (+ 8 (15) (KIND (EQV NIL 260)))) (AND (NOT (+ 10 (15) (KIND (EQV NIL 260)))) (AND (NOT (+ 11 (15) (KIND (EQV NIL 260)))) (AND (NOT (+ 12 (15) (KIND (EQV NIL 260)))) (NOT (+ 13 (15) (KIND (EQV NIL 260))))))))))) (ALL 16 (EQV (+ 10 (16) (KIND (EQV T 270))) (AND (NOT (+ 7 (16) (KIND (EQV NIL 270)))) (AND (NOT (+ 8 (16) (KIND (EQV NIL 270)))) (AND (NOT (+ 9 (16) (KIND (EQV NIL 270)))) (AND (NOT (+ 11 (16) (KIND (EQV NIL 270)))) (AND (NOT (+ 12 (16) (KIND (EQV NIL 270)))) (NOT (+ 13 (16) (KIND (EQV NIL 270))))))))))) (ALL 17 (EQV (+ 11 (17) (KIND (EQV T 280))) (AND (NOT (+ 7 (17) (KIND (EQV NIL 280)))) (AND (NOT (+ 8 (17) (KIND (EQV NIL 280)))) (AND (NOT (+ 9 (17) (KIND (EQV NIL 280)))) (AND (NOT (+ 10 (17) (KIND (EQV NIL 280)))) (AND (NOT (+ 12 (17) (KIND (EQV NIL 280)))) (NOT (+ 13 (17) (KIND (EQV NIL 280))))))))))) (ALL 18 (EQV (+ 12 (18) (KIND (EQV T 290))) (AND (NOT (+ 7 (18) (KIND (EQV NIL 290)))) (AND (NOT (+ 8 (18) (KIND (EQV NIL 290)))) (AND (NOT (+ 9 (18) (KIND (EQV NIL 290)))) (AND (NOT (+ 10 (18) (KIND (EQV NIL 290)))) (AND (NOT (+ 11 (18) (KIND (EQV NIL 290)))) (NOT (+ 13 (18) (KIND (EQV NIL 290))))))))))) (ALL 19 (EQV (+ 13 (19) (KIND (EQV T 300))) (AND (NOT (+ 7 (19) (KIND (EQV NIL 300)))) (AND (NOT (+ 8 (19) (KIND (EQV NIL 300)))) (AND (NOT (+ 9 (19) (KIND (EQV NIL 300)))) (AND (NOT (+ 10 (19) (KIND (EQV NIL 300)))) (AND (NOT (+ 11 (19) (KIND (EQV NIL 300)))) (NOT (+ 12 (19) (KIND (EQV NIL 300))))))))))) COMMENT (ALL 20 (EQV (+ 22 (20 (21 4)) (KIND (EQV T 320))) (OR (+ 7 (20) (KIND (EQV NIL 320))) (OR (+ 8 (20) (KIND (EQV NIL 320))) (+ 9 (20) (KIND (EQV NIL 320))))))) (ALL 23 (EQV (+ 22 (23 (21 5)) (KIND (EQV T 330))) (OR (+ 10 (23) (KIND (EQV NIL 330))) (OR (+ 11 (23) (KIND (EQV NIL 330))) (+ 12 (23) (KIND (EQV NIL 330))))))) COMMENT (+ 0 NIL) (+ 7 (24) NIL) (+ 8 (25) NIL) (+ 9 (26) NIL) (+ 10 (27) NIL) (+ 11 (28) NIL) (+ 12 (29) NIL) (+ 13 (30) NIL) COMMENT (+ 31 (2) NIL) (+ 32 (3) NIL) (ALL 33 (EQV (+ 31 (33) (KIND (EQV T 460))) (NOT (+ 32 (33) (KIND (EQV NIL 460)))))) COMMENT COMMENT (ALL 34 (EQV (+ 35 (34 4) (KIND (EQV T 490))) (NOT (+ 35 (34 5) (KIND (EQV NIL 490)))))) (ALL 36 (OR (+ 35 (36 4) NIL) (+ 35 (36 5) NIL))) (ALL 37 (EQV (+ 35 (2 37) (KIND (EQV T 510))) (NOT (+ 35 (3 37) (KIND (EQV NIL 510)))))) COMMENT (ALL 38 (ALL 39 (ALL 41 (ALL 40 (IMPL (AND (NOT (+ 22 (38 (21 39)) NIL)) (AND (+ 35 (40 39) NIL) (+ 31 (41) NIL))) (+ 42 (38 40 41) NIL)))))) (ALL 43 (ALL 44 (ALL 46 (ALL 45 (IMPL (AND (NOT (+ 22 (43 (21 44)) NIL)) (AND (+ 35 (45 44) NIL) (+ 32 (46) NIL))) (NOT (+ 42 (43 45 46) NIL))))))) (ALL 47 (ALL 48 (ALL 50 (ALL 49 (IMPL (AND (+ 22 (47 (21 48)) NIL) (AND (+ 35 (49 48) NIL) (+ 31 (50) NIL))) (NOT (+ 42 (47 49 50) NIL))))))) (ALL 51 (ALL 52 (ALL 54 (ALL 53 (IMPL (AND (+ 22 (51 (21 52)) NIL) (AND (+ 35 (53 52) NIL) (+ 32 (54) NIL))) (+ 42 (51 53 54) NIL)))))) (ALL 55 (ALL 56 (ALL 58 (ALL 57 (IMPL (AND (+ 22 (55 (21 56)) NIL) (AND (+ 35 (57 56) NIL) (+ 32 (58) NIL))) (+ 59 (55 57 58) NIL)))))) (ALL 60 (ALL 61 (ALL 63 (ALL 62 (IMPL (AND (+ 22 (60 (21 61)) NIL) (AND (+ 35 (62 61) NIL) (+ 31 (63) NIL))) (NOT (+ 59 (60 62 63) NIL))))))) (ALL 64 (ALL 65 (ALL 67 (ALL 66 (IMPL (AND (NOT (+ 22 (64 (21 65)) NIL)) (AND (+ 35 (66 65) NIL) (+ 31 (67) NIL))) (NOT (+ 59 (64 66 67) NIL))))))) (ALL 68 (ALL 69 (ALL 71 (ALL 70 (IMPL (AND (NOT (+ 22 (68 (21 69)) NIL)) (AND (+ 35 (70 69) NIL) (+ 32 (71) NIL))) (+ 59 (68 70 71) NIL)))))))) (QUOTE ((EX X : DAYS EX FIRST,SECOND : PERSONS YOUDEE (X FIRST FIRST) AND YOUDUM (X SECOND SECOND) AND DUM (FIRST) AND DEE (SECOND)))) (QUOTE ((EX 72 (EX 74 (EX 73 (AND (+ 42 (72 73 73) NIL) (AND (+ 59 (72 74 74) NIL) (AND (+ 32 (73) NIL) (+ 31 (74) NIL))))))))) (QUOTE ("Edit:     Axioms and Theorems edited: 21-DEC,1989 10:50 ")) (PROGN(PROGN (DT-RESET))

(PROG ((ADDRLIST
        '(9470 9475 9480 9485 9490 9495 9500 9505 9510 9515 9520 9525 9530 9535 9540 9555 9560
          9565 9570 9575 9580 9585 9590 9595 9600 9605 9610 9615 9620 9625 9630 9635 9650 9655
          9660 9665 9670 9675 9680 9695 9700 9705 9720 9735 9740 9745 9750 9755 9760 9765 9770
          9775 9790 9804 9809 9814 9819 9824 9829 9834 9839 9854 9869 9884 9899 9914 9929 9944
          9949 9954 9959 9964 9969 9984 9999))
       (DATALIST
        '(15 "TRUE" NIL NIL NIL (DEFINED) NIL ((- 0 (POSITIVE))) ((+ 0 (NEGATIVE)))
          ((+ 0 (NIL))) ((- 0 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "FALSE" NIL NIL
          NIL (DEFINED) NIL ((- 1 (POSITIVE))) ((+ 1 (NEGATIVE))) ((+ 1 (NIL))) ((- 1 (NIL)))
          NIL NIL (DT*ST-KIND NIL) PREDICATE 5 PERSONS "TWEEDLEDEE" (DT*ST-KIND NIL) CONSTANT
          5 PERSONS "TWEEDLEDUM" (DT*ST-KIND NIL) CONSTANT 5 ANIMAL "LION" (DT*ST-KIND NIL)
          CONSTANT 5 ANIMAL "UNICORN" (DT*ST-KIND NIL) CONSTANT 5 DAYS NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 15 "MO" NIL NIL (ANY) NIL NIL
          ((- 7 (POSITIVE))) ((+ 7 (NEGATIVE))) ((+ 7 (NIL))) ((- 7 (NIL))) NIL NIL
          (DT*ST-KIND NIL) PREDICATE 15 "TU" NIL NIL (ANY) NIL NIL ((- 8 (POSITIVE)))
          ((+ 8 (NEGATIVE))) ((+ 8 (NIL))) ((- 8 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15
          "WE" NIL NIL (ANY) NIL NIL ((- 9 (POSITIVE))) ((+ 9 (NEGATIVE))) ((+ 9 (NIL)))
          ((- 9 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "TH" NIL NIL (ANY) NIL NIL
          ((- 10 (POSITIVE))) ((+ 10 (NEGATIVE))) ((+ 10 (NIL))) ((- 10 (NIL))) NIL NIL
          (DT*ST-KIND NIL) PREDICATE 15 "FR" NIL NIL (ANY) NIL NIL ((- 11 (POSITIVE)))
          ((+ 11 (NEGATIVE))) ((+ 11 (NIL))) ((- 11 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE
          15 "SA" NIL NIL (ANY) NIL NIL ((- 12 (POSITIVE))) ((+ 12 (NEGATIVE))) ((+ 12 (NIL)))
          ((- 12 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "SU" NIL NIL (ANY) NIL NIL
          ((- 13 (POSITIVE))) ((+ 13 (NEGATIVE))) ((+ 13 (NIL))) ((- 13 (NIL))) NIL NIL
          (DT*ST-KIND NIL) PREDICATE 5 DAYS NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5
          DAYS NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 DAYS NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 DAYS NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
          VARIABLE 5 DAYS NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 DAYS NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 DAYS NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
          VARIABLE 14 "LYING-DAYS" NIL ANY (ANY) NIL NIL NIL NIL NIL 1 ANY (DT*ST-KIND NIL)
          FUNCTION 15 "MEMBER" NIL NIL (ANY ANY) NIL NIL ((- 22 (POSITIVE)))
          ((+ 22 (NEGATIVE))) ((+ 22 (NIL))) ((- 22 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE
          5 DAYS NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 DAYS "MONDAY" (DT*ST-KIND NIL)
          CONSTANT 5 DAYS "TUESDAY" (DT*ST-KIND NIL) CONSTANT 5 DAYS "WEDNESDAY"
          (DT*ST-KIND NIL) CONSTANT 5 DAYS "THURSDAY" (DT*ST-KIND NIL) CONSTANT 5 DAYS
          "FRIDAY" (DT*ST-KIND NIL) CONSTANT 5 DAYS "SATURDAY" (DT*ST-KIND NIL) CONSTANT 5
          DAYS "SUNDAY" (DT*ST-KIND NIL) CONSTANT 15 "DEE" NIL NIL (ANY) NIL NIL
          ((- 31 (POSITIVE))) ((+ 31 (NEGATIVE))) ((+ 31 (NIL))) ((- 31 (NIL))) NIL NIL
          (DT*ST-KIND NIL) PREDICATE 15 "DUM" NIL NIL (ANY) NIL NIL ((- 32 (POSITIVE)))
          ((+ 32 (NEGATIVE))) ((+ 32 (NIL))) ((- 32 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE
          5 PERSONS NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSONS NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 15 "TRANS" NIL NIL (ANY ANY) NIL NIL
          ((- 35 (POSITIVE))) ((+ 35 (NEGATIVE))) ((+ 35 (NIL))) ((- 35 (NIL))) NIL NIL
          (DT*ST-KIND NIL) PREDICATE 5 PERSONS NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5
          ANIMAL NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 DAYS NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANIMAL NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSONS NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSONS NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 15 "YOUDEE" NIL NIL (ANY ANY ANY) NIL NIL
          ((- 42 (POSITIVE))) ((+ 42 (NEGATIVE))) ((+ 42 (NIL))) ((- 42 (NIL))) NIL NIL
          (DT*ST-KIND NIL) PREDICATE 5 DAYS NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5
          ANIMAL NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSONS NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSONS NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 DAYS NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
          VARIABLE 5 ANIMAL NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSONS NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSONS NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 DAYS NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
          VARIABLE 5 ANIMAL NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSONS NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSONS NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 DAYS NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
          VARIABLE 5 ANIMAL NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSONS NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSONS NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 15 "YOUDUM" NIL NIL (ANY ANY ANY) NIL NIL
          ((- 59 (POSITIVE))) ((+ 59 (NEGATIVE))) ((+ 59 (NIL))) ((- 59 (NIL))) NIL NIL
          (DT*ST-KIND NIL) PREDICATE 5 DAYS NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5
          ANIMAL NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSONS NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSONS NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 DAYS NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
          VARIABLE 5 ANIMAL NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSONS NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSONS NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 DAYS NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
          VARIABLE 5 ANIMAL NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSONS NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSONS NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 DAYS NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
          VARIABLE 5 PERSONS NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSONS NIL
          (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE))
       (INCREMENT (- MEM*SIZE 10000))
       COUNTER1)
      (MEM-RESET)
      (COND ((> MEM*SIZE 10000)
             (SETQ COUNTER1 75)
             (MAPC #'(LAMBDA (RADDR)
                       (SETF (AREF MEM*MEMORY (DECF COUNTER1))
                              (COND ((EQL RADDR 'ATP.MEMORY.NIL) RADDR)
                                    ((EQL 'END RADDR) RADDR)
                                    ((OR (EQL RADDR 0)
                                         (MINUSP RADDR))
                                     RADDR)
                                    (T (+ RADDR INCREMENT)))))
                   ADDRLIST)
             (SETQ COUNTER1 MEM*SIZE)
             (MAPC #'(LAMBDA (DATA) (SETF (AREF MEM*MEMORY (DECF COUNTER1)) DATA)) DATALIST))
            (T (UNLESS (= MEM*SIZE 10000)
                 (MEM-INITIALIZE 10000))
               (SETQ COUNTER1 75)
               (MAPC #'(LAMBDA (RADDR) (SETF (AREF MEM*MEMORY (DECF COUNTER1)) RADDR))
                     ADDRLIST)
               (SETQ COUNTER1 MEM*SIZE)
               (MAPC #'(LAMBDA (DATA) (SETF (AREF MEM*MEMORY (DECF COUNTER1)) DATA)) DATALIST))
            )
      (SETQ MEM*NEXT.RADR (IF (> MEM*SIZE 10000) (+ 9465 INCREMENT) 9465))
      (SETQ MEM*NEXT.VADR 75
            MEM*REST (- MEM*NEXT.RADR MEM*NEXT.VADR -1)
            MEM*FIRST.REUSABLE.VADR NIL
            MEM*LAST.REUSABLE.VADR NIL))

(PROGN (SETQ DT*SORT.ALL (QUOTE (DAYS ANIMAL PERSONS ANY))) (SETQ DT*SORT.NR (QUOTE 5)) (SETQ DT*SORT.PROPERTIES (QUOTE (DT*MAX.SUBSORTS DT*LEAST.SUPERSORTS DT*TRANSITIVE.CLOSURE DT*INVERSE.TRANSITIVE.CLOSURE DT*MINIMAL.SUBSORTS DT*DIRECT.SUBSORTS DT*DIRECT.SUPERSORTS DT*DISJOINT.SORTS DT*COMPLETION.SORT))) (SETQ DT*SORT.COMMON.COMPUTE.FLAG (QUOTE NIL)) (SETQ DT*VARIABLE.COUNTER (QUOTE 0)) (SETQ DT*CONSTANT.COUNTER (QUOTE 0)) (SETQ DT*CONSTANT.ALL (QUOTE (30 29 28 27 26 25 24 5 4 3 2))) (SETQ DT*ABBREVIATIONS (QUOTE NIL)) (SETQ DT*FUNCTION.COUNTER (QUOTE 0)) (SETQ DT*FUNCTION.ALL (QUOTE (21))) (SETQ DT*FUNCTION.ADMISSIBLE.THEORIES (QUOTE (ASSOCIATIVE))) (SETQ DT*FUNCTION.ACTUAL.THEORIES (QUOTE NIL)) (SETQ DT*FUNCTION.WITH.ARGUMENT.SYMMETRIES (QUOTE NIL)) (SETQ DT*FUNCTION.COMPONENTS (QUOTE (PNAME ATTRIBUTES MAX.RANGE.SORT MAX.DOMAIN.SORTS MIN.RANGE.SORTS SORT.LIST SORT.LIST.INVERSE SORT.TREE.CALC ARGUMENT.SYMMETRIES ARITY G.L.B.OF.RANGES))) (SETQ DT*PREDICATE.ADMISSABLE.ATTRIBUTES (QUOTE (SYMMETRIC DEFINED REFLEXIVE))) (SETQ DT*PREDICATE.COUNTER (QUOTE 0)) (SETQ DT*EQUALITY.SYMBOLS (QUOTE ("=" ":=" "=:" ":=:"))) (SETQ DT*EQUALITY.PREDICATES (QUOTE NIL)) (SETQ DT*NONEQUALITY.PREDICATES (QUOTE (59 42 35 32 31 22 13 12 11 10 9 8 7 1 0))) (SETQ DT*PREDICATE.ALL (QUOTE (59 42 35 32 31 22 13 12 11 10 9 8 7 1 0))) (SETQ DT*PREDICATE.WITH.ATTRIBUTES (QUOTE NIL)) (SETQ DT*PREDICATE.COMPONENTS (QUOTE (PNAME POSITIVE.OCCURRENCES NEGATIVE.OCCURRENCES DOMAINSORTS ATTRIBUTES REFL.CLAUSE +ROTHERSIDES -ROTHERSIDES +SOTHERSIDES -SOTHERSIDES +TOTHERSIDES -TOTHERSIDES))) (SETQ DT*TRUE.PREDICATE (QUOTE 0)) (SETQ DT*FALSE.PREDICATE (QUOTE 1)) (SETQ DT*UNI.CREATES.VARIABLES (QUOTE NIL)) (SETQ DT*SIGN.MINUS.SYMBOLS (QUOTE (- --))) (SETQ DT*SIGN.PLUS.SYMBOLS (QUOTE (+ ++))) (SETQ DT*SYMBOL.KINDS (QUOTE (CONSTANT.ALL FUNCTION.ALL PREDICATE.ALL)))) 
(PROGN) 
(PROGN (PROGN)) 
(PROGN (PROGN (SETF (GET (QUOTE DAYS) (QUOTE DT*SORT.NUMBER)) (QUOTE 4)) (SETF (GET (QUOTE DAYS) (QUOTE DT*DIRECT.SUBSORTS)) (QUOTE NIL)) (SETF (GET (QUOTE DAYS) (QUOTE DT*TRANSITIVE.CLOSURE)) (QUOTE (DAYS))) (SETF (GET (QUOTE DAYS) (QUOTE DT*MAX.SUBSORTS)) (QUOTE ((DAYS DAYS) (ANIMAL) (PERSONS) (ANY DAYS)))) (SETF (GET (QUOTE DAYS) (QUOTE DT*MINIMAL.SUBSORTS)) (QUOTE (DAYS))) (SETF (GET (QUOTE DAYS) (QUOTE DT*DIRECT.SUPERSORTS)) (QUOTE (ANY))) (SETF (GET (QUOTE DAYS) (QUOTE DT*INVERSE.TRANSITIVE.CLOSURE)) (QUOTE (ANY DAYS)))) (PROGN (SETF (GET (QUOTE ANIMAL) (QUOTE DT*SORT.NUMBER)) (QUOTE 3)) (SETF (GET (QUOTE ANIMAL) (QUOTE DT*DIRECT.SUBSORTS)) (QUOTE NIL)) (SETF (GET (QUOTE ANIMAL) (QUOTE DT*TRANSITIVE.CLOSURE)) (QUOTE (ANIMAL))) (SETF (GET (QUOTE ANIMAL) (QUOTE DT*MAX.SUBSORTS)) (QUOTE ((DAYS) (ANIMAL ANIMAL) (PERSONS) (ANY ANIMAL)))) (SETF (GET (QUOTE ANIMAL) (QUOTE DT*MINIMAL.SUBSORTS)) (QUOTE (ANIMAL))) (SETF (GET (QUOTE ANIMAL) (QUOTE DT*DIRECT.SUPERSORTS)) (QUOTE (ANY))) (SETF (GET (QUOTE ANIMAL) (QUOTE DT*INVERSE.TRANSITIVE.CLOSURE)) (QUOTE (ANY ANIMAL)))) (PROGN (SETF (GET (QUOTE PERSONS) (QUOTE DT*DIRECT.SUBSORTS)) (QUOTE NIL)) (SETF (GET (QUOTE PERSONS) (QUOTE DT*SORT.NUMBER)) (QUOTE 2)) (SETF (GET (QUOTE PERSONS) (QUOTE DT*TRANSITIVE.CLOSURE)) (QUOTE (PERSONS))) (SETF (GET (QUOTE PERSONS) (QUOTE DT*MAX.SUBSORTS)) (QUOTE ((DAYS) (ANIMAL) (PERSONS PERSONS) (ANY PERSONS)))) (SETF (GET (QUOTE PERSONS) (QUOTE DT*MINIMAL.SUBSORTS)) (QUOTE (PERSONS))) (SETF (GET (QUOTE PERSONS) (QUOTE DT*DIRECT.SUPERSORTS)) (QUOTE (ANY))) (SETF (GET (QUOTE PERSONS) (QUOTE DT*INVERSE.TRANSITIVE.CLOSURE)) (QUOTE (ANY PERSONS)))) (PROGN (SETF (GET (QUOTE ANY) (QUOTE DT*SORT.NUMBER)) (QUOTE 1)) (SETF (GET (QUOTE ANY) (QUOTE DT*DIRECT.SUBSORTS)) (QUOTE (DAYS ANIMAL PERSONS))) (SETF (GET (QUOTE ANY) (QUOTE DT*TRANSITIVE.CLOSURE)) (QUOTE (ANY DAYS ANIMAL PERSONS))) (SETF (GET (QUOTE ANY) (QUOTE DT*MAX.SUBSORTS)) (QUOTE ((DAYS DAYS) (ANIMAL ANIMAL) (PERSONS PERSONS) (ANY ANY)))) (SETF (GET (QUOTE ANY) (QUOTE DT*MINIMAL.SUBSORTS)) (QUOTE (ANIMAL PERSONS))) (SETF (GET (QUOTE ANY) (QUOTE DT*DIRECT.SUPERSORTS)) (QUOTE NIL)) (SETF (GET (QUOTE ANY) (QUOTE DT*INVERSE.TRANSITIVE.CLOSURE)) (QUOTE (ANY))))) ))