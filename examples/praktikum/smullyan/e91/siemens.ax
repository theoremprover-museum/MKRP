(COND ((FMT-LOAD "29-JAN-85 21:04:39"
NIL(((* PROBLEM E91) COMMENT COMMENT) ((*) COMMENT COMMENT) ((* THIS TIME WE GET THE FOLLOWING STATEMENTS:) COMMENT COMMENT) ((* A: AT LEAST ONE OF THE THREE OF US IS A KNAVE.) COMMENT COMMENT) ((* B: C IS A KNIGHT.) COMMENT COMMENT) ((* GIVEN
THAT THERE IS EXACTLY ONE WEREWOLF AND THAT HE IS A KNIGHT,) COMMENT COMMENT) ((* WHO IS THE WEREWOLF?) COMMENT COMMENT) ((*) COMMENT COMMENT) ((*) COMMENT COMMENT) ((* THE FUNCTION STATE (X) AND THE PREDICATES TRUTH (X) , KNIGHT (X) , KNAVE (X)
,) COMMENT COMMENT) ((* AND WEREWOLF (X) MEAN THE SAME AS IN E89.) COMMENT COMMENT) ((* THE FOLLOWING PREDICATES ARE NEW:) COMMENT COMMENT) ((* STATE.KNIGHT (X Y) - STATEMENT X TELLS THAT PERSON Y IS A KNIGHT) COMMENT COMMENT) ((* AT-LEAST-ONE-KNAVE
(X Y Z) - AT LEAST ONE PERSON X,Y,OR Z IS A KNAVE) COMMENT COMMENT) ((* STATE.AT-LEAST-ONE-KNAVE (S X Y Z) - STATEMENT S TELLS THAT AT LEAST ONE) COMMENT COMMENT) ((* PERSON X,Y, OR Z IS A KNAVE) COMMENT COMMENT) ((*) COMMENT COMMENT) ((* DECLARATIONS:)
COMMENT COMMENT) ((TYPE A,B,C : PERSON) (+ 1 NIL) TYPE) ((TYPE STATE (PERSON) :STATEMENT) (+ 1 NIL) TYPE) ((TYPE TRUTH (STATEMENT)) (+ 1 NIL) TYPE) ((TYPE KNIGHT (PERSON)) (+ 1 NIL) TYPE) ((TYPE KNAVE (PERSON)) (+ 1 NIL) TYPE) ((TYPE WEREWOLF
(PERSON)) (+ 1 NIL) TYPE) ((TYPE STATE.KNIGHT (STATEMENT PERSON)) (+ 1 NIL) TYPE) ((TYPE AT-LEAST-ONE-KNAVE (PERSON PERSON PERSON)) (+ 1 NIL) TYPE) ((TYPE STATE.AT-LEAST-ONE-KNAVE (STATEMENT PERSON PERSON PERSON)) (+ 1 NIL) TYPE) ((*) COMMENT
COMMENT) ((* EVERY INHABITANT IS EITHER A KNIGHT OR A KNAVE:) COMMENT COMMENT) ((ALL X:PERSON KNIGHT (X) OR KNAVE (X)) (ALL 41 (OR (+ 32 (41) NIL) (+ 31 (41) NIL))) QUANTIFICATION) ((ALL X:PERSON NOT (KNIGHT (X) AND KNAVE (X))) (ALL 42 (NOT (AND
(+ 32 (42) NIL) (+ 31 (42) NIL)))) QUANTIFICATION) ((*) COMMENT COMMENT) ((* KNIGHT ALWAYS TELL THE TRUTH AND KNAVE ALWAYS LIE:) COMMENT COMMENT) ((ALL X:PERSON KNIGHT (X) EQV TRUTH (STATE (X))) (ALL 43 (EQV (+ 32 (43) NIL) (+ 33 ((34 43)) NIL)))
QUANTIFICATION) ((ALL X:PERSON KNAVE (X) EQV NOT (TRUTH (STATE (X)))) (ALL 44 (EQV (+ 31 (44) NIL) (NOT (+ 33 ((34 44)) NIL)))) QUANTIFICATION) ((*) COMMENT COMMENT) ((* A WEREWOLF CAN BE A KNIGHT OR A KNAVE:) COMMENT COMMENT) ((ALL X:PERSON WEREWOLF
(X) IMPL KNIGHT (X) OR KNAVE (X)) (ALL 45 (IMPL (+ 30 (45) NIL) (OR (+ 32 (45) NIL) (+ 31 (45) NIL)))) QUANTIFICATION) ((*) COMMENT COMMENT) ((* THERE IS EXACTLY ONE WEREWOLF:) COMMENT COMMENT) ((WEREWOLF (A) OR WEREWOLF (B) OR WEREWOLF (C)) (OR
(+ 30 (37) NIL) (OR (+ 30 (36) NIL) (+ 30 (35) NIL))) QUANTIFICATION) ((NOT (WEREWOLF (A) AND WEREWOLF (B) OR WEREWOLF (B) AND WEREWOLF (C) OR WEREWOLF (C) AND WEREWOLF (A))) (NOT (OR (AND (+ 30 (37) NIL) (+ 30 (36) NIL)) (OR (AND (+ 30 (36) NIL)
(+ 30 (35) NIL)) (AND (+ 30 (35) NIL) (+ 30 (37) NIL))))) QUANTIFICATION) ((*) COMMENT COMMENT) ((* EXPLANATION OF AT-LEAST-ONE-KNAVE:) COMMENT COMMENT) ((ALL X,Y,Z:PERSON AT-LEAST-ONE-KNAVE (X Y Z) EQV KNAVE (X) OR KNAVE (Y) OR KNAVE (Z)) (ALL
48 (ALL 47 (ALL 46 (EQV (+ 39 (46 47 48) NIL) (OR (+ 31 (46) NIL) (OR (+ 31 (47) NIL) (+ 31 (48) NIL))))))) QUANTIFICATION) ((*) COMMENT COMMENT) ((* IMPLICATIONS ABOUT STATEMENTS:) COMMENT COMMENT) ((ALL X:STATEMENT ALL Y:PERSON STATE.KNIGHT
(X Y) AND TRUTH (X) IMPL KNIGHT (Y)) (ALL 49 (ALL 50 (IMPL (AND (+ 38 (49 50) NIL) (+ 33 (49) NIL)) (+ 32 (50) NIL)))) QUANTIFICATION) ((ALL X:STATEMENT ALL Y:PERSON STATE.KNIGHT (X Y) AND NOT (TRUTH (X)) IMPL NOT (KNIGHT (Y))) (ALL 51 (ALL 52
(IMPL (AND (+ 38 (51 52) NIL) (NOT (+ 33 (51) NIL))) (NOT (+ 32 (52) NIL))))) QUANTIFICATION) ((ALL S:STATEMENT ALL X,Y,Z:PERSON STATE.AT-LEAST-ONE-KNAVE (S X Y Z) AND TRUTH (S) IMPL AT-LEAST-ONE-KNAVE (X Y Z)) (ALL 53 (ALL 56 (ALL 55 (ALL 54
(IMPL (AND (+ 40 (53 54 55 56) NIL) (+ 33 (53) NIL)) (+ 39 (54 55 56) NIL)))))) QUANTIFICATION) ((ALL S:STATEMENT ALL X,Y,Z:PERSON STATE.AT-LEAST-ONE-KNAVE (S X Y Z) AND NOT (TRUTH (S)) IMPL NOT (AT-LEAST-ONE-KNAVE (X Y Z))) (ALL 57 (ALL 60 (ALL
59 (ALL 58 (IMPL (AND (+ 40 (57 58 59 60) NIL) (NOT (+ 33 (57) NIL))) (NOT (+ 39 (58 59 60) NIL))))))) QUANTIFICATION) ((*) COMMENT COMMENT) ((* THE WEREWOLF IS A KNIGHT:) COMMENT COMMENT) ((ALL X:PERSON WEREWOLF (X) IMPL KNIGHT (X)) (ALL 61 (IMPL
(+ 30 (61) NIL) (+ 32 (61) NIL))) QUANTIFICATION) ((*) COMMENT COMMENT) ((* ACTUAL STATEMENTS:) COMMENT COMMENT) ((STATE.AT-LEAST-ONE-KNAVE (STATE (A) A B C)) (+ 40 ((34 37) 37 36 35) NIL) QUANTIFICATION) ((STATE.KNIGHT (STATE (B) C)) (+ 38 ((34
36) 35) NIL) QUANTIFICATION)))(COND (ST*LOAD.FLAG (PROGN (DT-RESET))
(MEM-RESTORE NIL NIL 62 10231 10500 (QUOTE (10236 10241 10246 10251 10256 10261 10266 10271 10276 10281 10286 10291 10296 10301 10306 10311 10316 10321 10326 10331 10336 10351 10366 10381 10470 10465 10460 10455 10441 10426 10411 10396 ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 10485 10500))(QUOTE (15 TRUE NIL NIL NIL (DEFINED) NIL ((- 1 (POSITIVE))) ((+ 1 (NEGATIVE)))
((+ 1 (NIL))) ((- 1 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 FALSE NIL NIL NIL (DEFINED) NIL ((- 2 (POSITIVE))) ((+ 2 (NEGATIVE))) ((+ 2 (NIL))) ((- 2 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 A PERSON (ST*ATTRIBUTE NIL DT*ST-KIND NIL)
CONSTANT 5 B PERSON (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT 5 C PERSON (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT 14 STATE NIL STATEMENT (PERSON) NIL NIL NIL NIL NIL 1 STATEMENT (DT*ST-KIND NIL) FUNCTION 15 TRUTH NIL NIL (STATEMENT) NIL NIL
((- 33 (POSITIVE))) ((+ 33 (NEGATIVE))) ((+ 33 (NIL))) ((- 33 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 KNIGHT NIL NIL (PERSON) NIL NIL ((- 32 (POSITIVE))) ((+ 32 (NEGATIVE))) ((+ 32 (NIL))) ((- 32 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE
15 KNAVE NIL NIL (PERSON) NIL NIL ((- 31 (POSITIVE))) ((+ 31 (NEGATIVE))) ((+ 31 (NIL))) ((- 31 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 WEREWOLF NIL NIL (PERSON) NIL NIL ((- 30 (POSITIVE))) ((+ 30 (NEGATIVE))) ((+ 30 (NIL))) ((- 30 (NIL)))
NIL NIL (DT*ST-KIND NIL) PREDICATE 15 STATE.KNIGHT NIL NIL (STATEMENT PERSON) NIL NIL ((- 38 (POSITIVE))) ((+ 38 (NEGATIVE))) ((+ 38 (NIL))) ((- 38 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 AT-LEAST-ONE-KNAVE NIL NIL (PERSON PERSON PERSON)
NIL NIL ((- 39 (POSITIVE))) ((+ 39 (NEGATIVE))) ((+ 39 (NIL))) ((- 39 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 STATE.AT-LEAST-ONE-KNAVE NIL NIL (STATEMENT PERSON PERSON PERSON) NIL NIL ((- 40 (POSITIVE))) ((+ 40 (NEGATIVE))) ((+ 40 (NIL)))
((- 40 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 STATEMENT
NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 STATEMENT NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 STATEMENT NIL (ST*DATA NIL
DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 STATEMENT NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE)))(PROGN (RPAQQ
DT*SORT.ALL (STATEMENT PERSON ANY)) (RPAQQ DT*SORT.NR 8) (RPAQQ DT*SORT.PROPERTIES (DT*MAX.SUBSORTS DT*LEAST.SUPERSORTS DT*TRANSITIVE.CLOSURE DT*INVERSE.TRANSITIVE.CLOSURE DT*MINIMAL.SUBSORTS DT*DIRECT.SUBSORTS DT*DIRECT.SUPERSORTS DT*DISJOINT.SORTS
DT*COMPLETION.SORT)) (RPAQQ DT*SORT.COMMON.COMPUTE.FLAG NIL) (RPAQQ DT*VARIABLE.COUNTER 0) (RPAQQ DT*CONSTANT.COUNTER 0) (RPAQQ DT*CONSTANT.ALL (35 36 37)) (RPAQQ DT*ABBREVIATIONS NIL) (RPAQQ DT*FUNCTION.COUNTER 0) (RPAQQ DT*FUNCTION.ALL (34))
(RPAQQ DT*FUNCTION.ADMISSIBLE.THEORIES (ASSOCIATIVE)) (RPAQQ DT*FUNCTION.ACTUAL.THEORIES NIL) (RPAQQ DT*FUNCTION.WITH.ARGUMENT.SYMMETRIES NIL) (RPAQQ DT*FUNCTION.COMPONENTS (PNAME ATTRIBUTES MAX.RANGE.SORT MAX.DOMAIN.SORTS MIN.RANGE.SORTS SORT.LIST
SORT.LIST.INVERSE SORT.TREE.CALC ARGUMENT.SYMMETRIES ARITY G.L.B.OF.RANGES)) (RPAQQ DT*PREDICATE.ADMISSABLE.ATTRIBUTES (SYMMETRIC DEFINED REFLEXIVE)) (RPAQQ DT*PREDICATE.COUNTER 0) (RPAQQ DT*EQUALITY.SYMBOLS ("=" ":=" "=:" ":=:")) (RPAQQ 
DT*EQUALITY.PREDICATES NIL) (RPAQQ DT*NONEQUALITY.PREDICATES (40 39 38 30 31 32 33 2 1)) (RPAQQ DT*PREDICATE.ALL (40 39 38 30 31 32 33 2 1)) (RPAQQ DT*PREDICATE.WITH.ATTRIBUTES NIL) (RPAQQ DT*PREDICATE.COMPONENTS (PNAME POSITIVE.OCCURRENCES 
NEGATIVE.OCCURRENCES DOMAINSORTS ATTRIBUTES REFL.CLAUSE +ROTHERSIDES -ROTHERSIDES +SOTHERSIDES -SOTHERSIDES +TOTHERSIDES -TOTHERSIDES)) (RPAQQ DT*TRUE.PREDICATE 1) (RPAQQ DT*FALSE.PREDICATE 2) (RPAQQ DT*UNI.CREATES.VARIABLES NIL) (RPAQQ 
DT*SIGN.MINUS.SYMBOLS (- --)) (RPAQQ DT*SIGN.PLUS.SYMBOLS (+ ++)) (RPAQQ DT*SYMBOL.KINDS (CONSTANT.ALL FUNCTION.ALL PREDICATE.ALL)))
(PROGN)
(PROGN (SETPROPLIST (QUOTE DT*PREDICATE.WITH.ATTRIBUTES) (QUOTE NIL)))
(PROGN (SETPROPLIST (QUOTE STATEMENT) (QUOTE (DT*INVERSE.TRANSITIVE.CLOSURE (STATEMENT ANY) DT*DIRECT.SUPERSORTS (ANY) DT*MINIMAL.SUBSORTS (STATEMENT) DT*MAX.SUBSORTS ((STATEMENT STATEMENT) (PERSON) (ANY STATEMENT)) DT*TRANSITIVE.CLOSURE (STATEMENT)
DT*DIRECT.SUBSORTS NIL DT*ATTRIBUTE NIL DT*SORT.NUMBER 7))) (SETPROPLIST (QUOTE PERSON) (QUOTE (DT*INVERSE.TRANSITIVE.CLOSURE (PERSON ANY) DT*DIRECT.SUPERSORTS (ANY) DT*MINIMAL.SUBSORTS (PERSON) DT*MAX.SUBSORTS ((STATEMENT) (PERSON PERSON) (ANY
PERSON)) DT*TRANSITIVE.CLOSURE (PERSON) DT*DIRECT.SUBSORTS NIL DT*ATTRIBUTE NIL DT*SORT.NUMBER 6))) (SETPROPLIST (QUOTE ANY) (QUOTE (DT*LEAST.SUPERSORTS ((ANY ANY)) DT*ATTRIBUTE NIL DT*INVERSE.TRANSITIVE.CLOSURE (ANY) DT*DIRECT.SUPERSORTS NIL
DT*MINIMAL.SUBSORTS (PERSON) DT*MAX.SUBSORTS ((STATEMENT STATEMENT) (PERSON PERSON) (ANY ANY)) DT*TRANSITIVE.CLOSURE (STATEMENT PERSON ANY) DT*SORT.NUMBER 1 DT*DIRECT.SUBSORTS (STATEMENT PERSON)))))
(PROGN (RPAQQ ST*STACK1 (NIL NIL NIL NIL NIL ((X_61 PROGN (DT-VARIABLE.DELETE 61) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_61) ST*SYMBOL.ADDRESSES)))) NIL NIL ((X_60 PROGN (DT-VARIABLE.DELETE 60) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE
X_60) ST*SYMBOL.ADDRESSES))) (X_59 PROGN (DT-VARIABLE.DELETE 59) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_59) ST*SYMBOL.ADDRESSES))) (X_58 PROGN (DT-VARIABLE.DELETE 58) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_58) ST*SYMBOL.ADDRESSES)))
(X_57 PROGN (DT-VARIABLE.DELETE 57) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_57) ST*SYMBOL.ADDRESSES)))) ((X_56 PROGN (DT-VARIABLE.DELETE 56) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_56) ST*SYMBOL.ADDRESSES))) (X_55 PROGN (DT-VARIABLE.DELETE
55) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_55) ST*SYMBOL.ADDRESSES))) (X_54 PROGN (DT-VARIABLE.DELETE 54) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_54) ST*SYMBOL.ADDRESSES))) (X_53 PROGN (DT-VARIABLE.DELETE 53) (RPAQ ST*SYMBOL.ADDRESSES
(REMASSOC (QUOTE X_53) ST*SYMBOL.ADDRESSES)))) ((X_52 PROGN (DT-VARIABLE.DELETE 52) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_52) ST*SYMBOL.ADDRESSES))) (X_51 PROGN (DT-VARIABLE.DELETE 51) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_51) 
ST*SYMBOL.ADDRESSES)))) ((X_50 PROGN (DT-VARIABLE.DELETE 50) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_50) ST*SYMBOL.ADDRESSES))) (X_49 PROGN (DT-VARIABLE.DELETE 49) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_49) ST*SYMBOL.ADDRESSES)))) NIL
NIL ((X_48 PROGN (DT-VARIABLE.DELETE 48) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_48) ST*SYMBOL.ADDRESSES))) (X_47 PROGN (DT-VARIABLE.DELETE 47) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_47) ST*SYMBOL.ADDRESSES))) (X_46 PROGN (DT-VARIABLE.DELETE
46) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_46) ST*SYMBOL.ADDRESSES)))) NIL NIL NIL NIL NIL NIL ((X_45 PROGN (DT-VARIABLE.DELETE 45) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_45) ST*SYMBOL.ADDRESSES)))) NIL NIL ((X_44 PROGN (DT-VARIABLE.DELETE
44) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_44) ST*SYMBOL.ADDRESSES)))) ((X_43 PROGN (DT-VARIABLE.DELETE 43) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_43) ST*SYMBOL.ADDRESSES)))) NIL NIL ((X_42 PROGN (DT-VARIABLE.DELETE 42) (RPAQ 
ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_42) ST*SYMBOL.ADDRESSES)))) ((X_41 PROGN (DT-VARIABLE.DELETE 41) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_41) ST*SYMBOL.ADDRESSES)))) NIL NIL ((STATE.AT-LEAST-ONE-KNAVE PROGN (DT-PREDICATE.DELETE 40)
(RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE STATE.AT-LEAST-ONE-KNAVE) ST*SYMBOL.ADDRESSES)))) ((AT-LEAST-ONE-KNAVE PROGN (DT-PREDICATE.DELETE 39) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE AT-LEAST-ONE-KNAVE) ST*SYMBOL.ADDRESSES)))) ((STATE.KNIGHT
PROGN (DT-PREDICATE.DELETE 38) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE STATE.KNIGHT) ST*SYMBOL.ADDRESSES)))) ((WEREWOLF PROGN (DT-PREDICATE.DELETE 30) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE WEREWOLF) ST*SYMBOL.ADDRESSES)))) ((KNAVE PROGN
(DT-PREDICATE.DELETE 31) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE KNAVE) ST*SYMBOL.ADDRESSES)))) ((KNIGHT PROGN (DT-PREDICATE.DELETE 32) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE KNIGHT) ST*SYMBOL.ADDRESSES)))) ((TRUTH PROGN (DT-PREDICATE.DELETE
33) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE TRUTH) ST*SYMBOL.ADDRESSES)))) ((STATE PROGN (DT-FUNCTION.DELETE 34) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE STATE) ST*SYMBOL.ADDRESSES))) (STATEMENT PROGN (DT-SORT.ST.REMOVE (QUOTE STATEMENT))
(RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE STATEMENT) ST*SYMBOL.ADDRESSES))) (STATEMENT REMPROP (QUOTE STATEMENT) (QUOTE ST*DATA))) ((C PROGN (DT-CONSTANT.DELETE 35) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE C) ST*SYMBOL.ADDRESSES))) (B PROGN
(DT-CONSTANT.DELETE 36) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE B) ST*SYMBOL.ADDRESSES))) (A PROGN (DT-CONSTANT.DELETE 37) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE A) ST*SYMBOL.ADDRESSES))) (PERSON PROGN (DT-SORT.ST.REMOVE (QUOTE PERSON))
(RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE PERSON) ST*SYMBOL.ADDRESSES))) (PERSON REMPROP (QUOTE PERSON) (QUOTE ST*DATA))) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL ((FALSE PROGN (DT-PREDICATE.DELETE 2) (RPAQ 
ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE FALSE) ST*SYMBOL.ADDRESSES))) (TRUE PROGN (DT-PREDICATE.DELETE 1) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE TRUE) ST*SYMBOL.ADDRESSES))) (ANY PROGN (DT-SORT.ST.REMOVE (QUOTE ANY)) (RPAQ ST*SYMBOL.ADDRESSES
(REMASSOC (QUOTE ANY) ST*SYMBOL.ADDRESSES))) (ANY REMPROP (QUOTE ANY) (QUOTE ST*DATA))))) (RPAQQ ST*SYMBOL.ADDRESSES (NIL (ANY . T) (TRUE . 1) (FALSE . 2) (PERSON . T) (A . 37) (B . 36) (C . 35) (STATEMENT . T) (STATE . 34) (TRUTH . 33) (KNIGHT
. 32) (KNAVE . 31) (WEREWOLF . 30) (STATE.KNIGHT . 38) (AT-LEAST-ONE-KNAVE . 39) (STATE.AT-LEAST-ONE-KNAVE . 40) (X_41 . 41) (X_42 . 42) (X_43 . 43) (X_44 . 44) (X_45 . 45) (X_46 . 46) (X_47 . 47) (X_48 . 48) (X_49 . 49) (X_50 . 50) (X_51 . 51)
(X_52 . 52) (X_53 . 53) (X_54 . 54) (X_55 . 55) (X_56 . 56) (X_57 . 57) (X_58 . 58) (X_59 . 59) (X_60 . 60) (X_61 . 61))))))))STOP
 
