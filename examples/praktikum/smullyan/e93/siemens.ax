(COND ((FMT-LOAD "31-JAN-85 15:10:28"
NIL(((* PROBLEM 93) COMMENT COMMENT) ((* IN THIS PROBLEM WE ARE GIVEN THAT THERE IS EXACTLY ONE WEREWOLF AND THAT) COMMENT COMMENT) ((* HE IS A KNIGHT,AND THAT THE OTHER TWO ARE KNAVES.ONLY ONE OF THEM,B,MAKES) COMMENT COMMENT) ((* A STATEMENT:
C IS A WEREWOLF.) COMMENT COMMENT) ((* WHO IS THE WEREWOLF?) COMMENT COMMENT) ((*) COMMENT COMMENT) ((* THE FUNCTION STATE AND THE PREDICATES KNIGHT,KNAVE,WEREWOLF,TRUTH AND) COMMENT COMMENT) ((* WEREWOLF MEAN THE SAME AS DESCRIBED IN THE PROBLEMS
88 - 92) COMMENT COMMENT) ((*) COMMENT COMMENT) ((* DECLARATIONS) COMMENT COMMENT) ((*) COMMENT COMMENT) ((TYPE A,B,C : PERSON) (+ 1 NIL) TYPE) ((TYPE STATE (PERSON) :STATEMENT) (+ 1 NIL) TYPE) ((TYPE WEREWOLF (PERSON)) (+ 1 NIL) TYPE) ((TYPE
KNIGHT (PERSON)) (+ 1 NIL) TYPE) ((TYPE KNAVE (PERSON)) (+ 1 NIL) TYPE) ((TYPE TRUTH (STATEMENT)) (+ 1 NIL) TYPE) ((TYPE STATE.WEREWOLF (STATEMENT PERSON)) (+ 1 NIL) TYPE) ((*) COMMENT COMMENT) ((* EXACTLY ONE OF THE THREE PERSONS A,B,C IS A WEREWOLF)
COMMENT COMMENT) ((*) COMMENT COMMENT) ((WEREWOLF (A) OR WEREWOLF (B) OR WEREWOLF (C)) (OR (+ 7 (3) NIL) (OR (+ 7 (4) NIL) (+ 7 (5) NIL))) QUANTIFICATION) ((NOT (WEREWOLF (A) AND WEREWOLF (B) OR WEREWOLF (A) AND WEREWOLF (C) OR WEREWOLF (B) AND
WEREWOLF (C))) (NOT (OR (AND (+ 7 (3) NIL) (+ 7 (4) NIL)) (OR (AND (+ 7 (3) NIL) (+ 7 (5) NIL)) (AND (+ 7 (4) NIL) (+ 7 (5) NIL))))) QUANTIFICATION) ((*) COMMENT COMMENT) ((* THE WEREWOLF IS A KNIGHT) COMMENT COMMENT) ((*) COMMENT COMMENT) ((ALL
X : PERSON WEREWOLF (X) IMPL KNIGHT (X)) (ALL 12 (IMPL (+ 7 (12) NIL) (+ 8 (12) NIL))) QUANTIFICATION) ((*) COMMENT COMMENT) ((* IF A PERSON IS NOT A WEREWOLF THAN HE IS A KNAVE) COMMENT COMMENT) ((*) COMMENT COMMENT) ((ALL X : PERSON NOT (WEREWOLF
(X)) IMPL KNAVE (X)) (ALL 13 (IMPL (NOT (+ 7 (13) NIL)) (+ 9 (13) NIL))) QUANTIFICATION) ((*) COMMENT COMMENT) ((* A KNIGHT ALWAYS TELLS THE TRUTH AND A KNAVE ALWAYS LIES) COMMENT COMMENT) ((*) COMMENT COMMENT) ((ALL X : PERSON TRUTH (STATE (X))
EQV KNIGHT (X)) (ALL 14 (EQV (+ 10 ((6 14)) NIL) (+ 8 (14) NIL))) QUANTIFICATION) ((ALL X : PERSON NOT (TRUTH (STATE (X))) EQV KNAVE (X)) (ALL 15 (EQV (NOT (+ 10 ((6 15)) NIL)) (+ 9 (15) NIL))) QUANTIFICATION) ((*) COMMENT COMMENT) ((* IMPLICATIONS
ABOUT THE STATEMENTS) COMMENT COMMENT) ((*) COMMENT COMMENT) ((ALL X : STATEMENT ALL Y : PERSON STATE.WEREWOLF (X Y) AND TRUTH (X) IMPL WEREWOLF (Y)) (ALL 16 (ALL 17 (IMPL (AND (+ 11 (16 17) NIL) (+ 10 (16) NIL)) (+ 7 (17) NIL)))) QUANTIFICATION)
((ALL X : STATEMENT ALL Y : PERSON STATE.WEREWOLF (X Y) AND NOT (TRUTH (X)) IMPL NOT (WEREWOLF (Y))) (ALL 18 (ALL 19 (IMPL (AND (+ 11 (18 19) NIL) (NOT (+ 10 (18) NIL))) (NOT (+ 7 (19) NIL))))) QUANTIFICATION) ((*) COMMENT COMMENT) ((* ACTUAL
STATEMENT:) COMMENT COMMENT) ((STATE.WEREWOLF (STATE (B) C)) (+ 11 ((6 4) 5) NIL) QUANTIFICATION)))(COND (ST*LOAD.FLAG (PROGN (DT-RESET))
(MEM-RESTORE NIL NIL 20 10326 10500 (QUOTE (10331 10336 10341 10346 10351 10356 10361 10366 10381 10396 10411 10426 10441 10455 10460 10465 10470 10485 10500))(QUOTE (15 TRUE NIL NIL NIL (DEFINED) NIL ((- 1 (POSITIVE))) ((+ 1 (NEGATIVE))) ((+
1 (NIL))) ((- 1 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 FALSE NIL NIL NIL (DEFINED) NIL ((- 2 (POSITIVE))) ((+ 2 (NEGATIVE))) ((+ 2 (NIL))) ((- 2 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 A PERSON (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT
5 B PERSON (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT 5 C PERSON (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT 14 STATE NIL STATEMENT (PERSON) NIL NIL NIL NIL NIL 1 STATEMENT (DT*ST-KIND NIL) FUNCTION 15 WEREWOLF NIL NIL (PERSON) NIL NIL ((- 7 (POSITIVE)))
((+ 7 (NEGATIVE))) ((+ 7 (NIL))) ((- 7 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 KNIGHT NIL NIL (PERSON) NIL NIL ((- 8 (POSITIVE))) ((+ 8 (NEGATIVE))) ((+ 8 (NIL))) ((- 8 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 KNAVE NIL NIL (PERSON)
NIL NIL ((- 9 (POSITIVE))) ((+ 9 (NEGATIVE))) ((+ 9 (NIL))) ((- 9 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 TRUTH NIL NIL (STATEMENT) NIL NIL ((- 10 (POSITIVE))) ((+ 10 (NEGATIVE))) ((+ 10 (NIL))) ((- 10 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE
15 STATE.WEREWOLF NIL NIL (STATEMENT PERSON) NIL NIL ((- 11 (POSITIVE))) ((+ 11 (NEGATIVE))) ((+ 11 (NIL))) ((- 11 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 STATEMENT NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5
STATEMENT NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE)))(PROGN (RPAQQ DT*SORT.ALL (STATEMENT PERSON ANY)) (RPAQQ DT*SORT.NR 4) (RPAQQ DT*SORT.PROPERTIES (DT*MAX.SUBSORTS DT*LEAST.SUPERSORTS
DT*TRANSITIVE.CLOSURE DT*INVERSE.TRANSITIVE.CLOSURE DT*MINIMAL.SUBSORTS DT*DIRECT.SUBSORTS DT*DIRECT.SUPERSORTS DT*DISJOINT.SORTS DT*COMPLETION.SORT)) (RPAQQ DT*SORT.COMMON.COMPUTE.FLAG NIL) (RPAQQ DT*VARIABLE.COUNTER 0) (RPAQQ DT*CONSTANT.COUNTER
0) (RPAQQ DT*CONSTANT.ALL (5 4 3)) (RPAQQ DT*ABBREVIATIONS NIL) (RPAQQ DT*FUNCTION.COUNTER 0) (RPAQQ DT*FUNCTION.ALL (6)) (RPAQQ DT*FUNCTION.ADMISSIBLE.THEORIES (ASSOCIATIVE)) (RPAQQ DT*FUNCTION.ACTUAL.THEORIES NIL) (RPAQQ 
DT*FUNCTION.WITH.ARGUMENT.SYMMETRIES NIL) (RPAQQ DT*FUNCTION.COMPONENTS (PNAME ATTRIBUTES MAX.RANGE.SORT MAX.DOMAIN.SORTS MIN.RANGE.SORTS SORT.LIST SORT.LIST.INVERSE SORT.TREE.CALC ARGUMENT.SYMMETRIES ARITY G.L.B.OF.RANGES)) (RPAQQ 
DT*PREDICATE.ADMISSABLE.ATTRIBUTES (SYMMETRIC DEFINED REFLEXIVE)) (RPAQQ DT*PREDICATE.COUNTER 0) (RPAQQ DT*EQUALITY.SYMBOLS ("=" ":=" "=:" ":=:")) (RPAQQ DT*EQUALITY.PREDICATES NIL) (RPAQQ DT*NONEQUALITY.PREDICATES (11 10 9 8 7 2 1)) (RPAQQ 
DT*PREDICATE.ALL (11 10 9 8 7 2 1)) (RPAQQ DT*PREDICATE.WITH.ATTRIBUTES NIL) (RPAQQ DT*PREDICATE.COMPONENTS (PNAME POSITIVE.OCCURRENCES NEGATIVE.OCCURRENCES DOMAINSORTS ATTRIBUTES REFL.CLAUSE +ROTHERSIDES -ROTHERSIDES +SOTHERSIDES -SOTHERSIDES
+TOTHERSIDES -TOTHERSIDES)) (RPAQQ DT*TRUE.PREDICATE 1) (RPAQQ DT*FALSE.PREDICATE 2) (RPAQQ DT*UNI.CREATES.VARIABLES NIL) (RPAQQ DT*SIGN.MINUS.SYMBOLS (- --)) (RPAQQ DT*SIGN.PLUS.SYMBOLS (+ ++)) (RPAQQ DT*SYMBOL.KINDS (CONSTANT.ALL FUNCTION.ALL
PREDICATE.ALL)))
(PROGN)
(PROGN (SETPROPLIST (QUOTE DT*PREDICATE.WITH.ATTRIBUTES) (QUOTE (DEFINED (2 1)))))
(PROGN (SETPROPLIST (QUOTE STATEMENT) (QUOTE (DT*INVERSE.TRANSITIVE.CLOSURE (STATEMENT ANY) DT*DIRECT.SUPERSORTS (ANY) DT*MINIMAL.SUBSORTS (STATEMENT) DT*MAX.SUBSORTS ((STATEMENT STATEMENT) (PERSON) (ANY STATEMENT)) DT*TRANSITIVE.CLOSURE (STATEMENT)
DT*DIRECT.SUBSORTS NIL DT*ATTRIBUTE NIL DT*SORT.NUMBER 3))) (SETPROPLIST (QUOTE PERSON) (QUOTE (DT*INVERSE.TRANSITIVE.CLOSURE (PERSON ANY) DT*DIRECT.SUPERSORTS (ANY) DT*MINIMAL.SUBSORTS (PERSON) DT*MAX.SUBSORTS ((STATEMENT) (PERSON PERSON) (ANY
PERSON)) DT*TRANSITIVE.CLOSURE (PERSON) DT*DIRECT.SUBSORTS NIL DT*ATTRIBUTE NIL DT*SORT.NUMBER 2))) (SETPROPLIST (QUOTE ANY) (QUOTE (DT*INVERSE.TRANSITIVE.CLOSURE (ANY) DT*DIRECT.SUPERSORTS NIL DT*MINIMAL.SUBSORTS (PERSON) DT*MAX.SUBSORTS ((STATEMENT
STATEMENT) (PERSON PERSON) (ANY ANY)) DT*TRANSITIVE.CLOSURE (STATEMENT PERSON ANY) DT*DIRECT.SUBSORTS (STATEMENT PERSON) DT*ATTRIBUTE NIL DT*SORT.NUMBER 1))))
(PROGN (RPAQQ ST*STACK1 (NIL NIL NIL NIL ((X_19 PROGN (DT-VARIABLE.DELETE 19) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_19) ST*SYMBOL.ADDRESSES))) (X_18 PROGN (DT-VARIABLE.DELETE 18) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_18) 
ST*SYMBOL.ADDRESSES)))) ((X_17 PROGN (DT-VARIABLE.DELETE 17) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_17) ST*SYMBOL.ADDRESSES))) (X_16 PROGN (DT-VARIABLE.DELETE 16) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_16) ST*SYMBOL.ADDRESSES)))) NIL
NIL NIL ((X_15 PROGN (DT-VARIABLE.DELETE 15) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_15) ST*SYMBOL.ADDRESSES)))) ((X_14 PROGN (DT-VARIABLE.DELETE 14) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_14) ST*SYMBOL.ADDRESSES)))) NIL NIL NIL ((X_13
PROGN (DT-VARIABLE.DELETE 13) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_13) ST*SYMBOL.ADDRESSES)))) NIL NIL NIL ((X_12 PROGN (DT-VARIABLE.DELETE 12) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_12) ST*SYMBOL.ADDRESSES)))) NIL NIL NIL NIL NIL
NIL NIL NIL ((STATE.WEREWOLF PROGN (DT-PREDICATE.DELETE 11) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE STATE.WEREWOLF) ST*SYMBOL.ADDRESSES)))) ((TRUTH PROGN (DT-PREDICATE.DELETE 10) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE TRUTH) ST*SYMBOL.ADDRESSES))
)) ((KNAVE PROGN (DT-PREDICATE.DELETE 9) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE KNAVE) ST*SYMBOL.ADDRESSES)))) ((KNIGHT PROGN (DT-PREDICATE.DELETE 8) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE KNIGHT) ST*SYMBOL.ADDRESSES)))) ((WEREWOLF PROGN
(DT-PREDICATE.DELETE 7) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE WEREWOLF) ST*SYMBOL.ADDRESSES)))) ((STATE PROGN (DT-FUNCTION.DELETE 6) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE STATE) ST*SYMBOL.ADDRESSES))) (STATEMENT PROGN (DT-SORT.ST.REMOVE
(QUOTE STATEMENT)) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE STATEMENT) ST*SYMBOL.ADDRESSES))) (STATEMENT REMPROP (QUOTE STATEMENT) (QUOTE ST*DATA))) ((C PROGN (DT-CONSTANT.DELETE 5) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE C) ST*SYMBOL.ADDRESSES)))
(B PROGN (DT-CONSTANT.DELETE 4) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE B) ST*SYMBOL.ADDRESSES))) (A PROGN (DT-CONSTANT.DELETE 3) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE A) ST*SYMBOL.ADDRESSES))) (PERSON PROGN (DT-SORT.ST.REMOVE (QUOTE PERSON))
(RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE PERSON) ST*SYMBOL.ADDRESSES))) (PERSON REMPROP (QUOTE PERSON) (QUOTE ST*DATA))) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL ((FALSE PROGN (DT-PREDICATE.DELETE 2) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE
FALSE) ST*SYMBOL.ADDRESSES))) (TRUE PROGN (DT-PREDICATE.DELETE 1) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE TRUE) ST*SYMBOL.ADDRESSES))) (ANY PROGN (DT-SORT.ST.REMOVE (QUOTE ANY)) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE ANY) ST*SYMBOL.ADDRESSES)))
(ANY REMPROP (QUOTE ANY) (QUOTE ST*DATA))))) (RPAQQ ST*SYMBOL.ADDRESSES (NIL (ANY . T) (TRUE . 1) (FALSE . 2) (PERSON . T) (A . 3) (B . 4) (C . 5) (STATEMENT . T) (STATE . 6) (WEREWOLF . 7) (KNIGHT . 8) (KNAVE . 9) (TRUTH . 10) (STATE.WEREWOLF
. 11) (X_12 . 12) (X_13 . 13) (X_14 . 14) (X_15 . 15) (X_16 . 16) (X_17 . 17) (X_18 . 18) (X_19 . 19))))))))STOP
 
