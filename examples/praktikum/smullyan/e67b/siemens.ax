(COND ((FMT-LOAD "14-DEC-84 17:17:58"
NIL(((* E67B) COMMENT COMMENT) ((*) COMMENT COMMENT) ((* PORTIA^S SUITOR CHOSE CORRECTLY, SO THEY MARRIED AND LIVED QUITE HAPPILY -) COMMENT COMMENT) ((* AT LEAST FOR A WHILE. THEN ONE DAY, PORTIA HAD THE FOLLOWING THOUGHTS:) COMMENT COMMENT)
((* THOUGH MY HUSBAND SHOWED SOME INTELLIGENCE IN CHOOSING THE RIGHT CASKET,) COMMENT COMMENT) ((* THE PROBLEM WASN^T REALLY THAT DIFFICULT. SURELY I COULD HAVE MADE THE) COMMENT COMMENT) ((* PROBLEM HARDER AND GOTTEN A REALLY CLEVER HUSBAND.)
COMMENT COMMENT) ((* SO SHE FORTHWITH DIVORCED HER HUSBAND AND DECIDED TO GET A CLEVERER ONE.) COMMENT COMMENT) ((* THIS TIME SHE HAD THE FOLLOWING INSCRIPTIONS PUT ON THE CASKETS:) COMMENT COMMENT) ((*) COMMENT COMMENT) ((* GOLD: THE PORTRAIT
IS NOT IN THE SILVER CASKET) COMMENT COMMENT) ((* SILVER: THE PORTRAIT IS NOT IN THIS CASKET) COMMENT COMMENT) ((* LEAD: THE PORTRAIT IS IN THIS CASKET) COMMENT COMMENT) ((*) COMMENT COMMENT) ((* PORTIA EXPLAINED TO THE SUITOR THAT AT LEAST ONE
OF THE THREE STATEMENTS) COMMENT COMMENT) ((* WAS TRUE AND AT LEAST ONE OF THEM WAS FALSE.) COMMENT COMMENT) ((* WHICH CASKET CONTAINS THE PORTRAIT?) COMMENT COMMENT) ((*) COMMENT COMMENT) ((* AXIOMS FOR THE 2ND PROBLEM OF PORTIA I. (E67B)) COMMENT
COMMENT) ((*) COMMENT COMMENT) ((* THE SAME FUNCTION, PREDICATES AND SORTS AS IN E67A) COMMENT COMMENT) ((* DECLARATIONS:) COMMENT COMMENT) ((*) COMMENT COMMENT) ((TYPE GOLD,SILVER,LEAD:CASKET) (+ 1 NIL) TYPE) ((TYPE INSCRIPTION (CASKET) :INSCRIPT)
(+ 1 NIL) TYPE) ((TYPE PORTRAIT (CASKET)) (+ 1 NIL) TYPE) ((TYPE TRUTH (INSCRIPT)) (+ 1 NIL) TYPE) ((TYPE INSCR.PORTRAIT (INSCRIPT CASKET)) (+ 1 NIL) TYPE) ((TYPE NEG.INSCR.PORTRAIT (INSCRIPT CASKET)) (+ 1 NIL) TYPE) ((*) COMMENT COMMENT) ((*
THE SAME GENERAL KNOWLEDGE IS USED AS IN E67A) COMMENT COMMENT) ((*) COMMENT COMMENT) ((PORTRAIT (GOLD) OR PORTRAIT (SILVER) OR PORTRAIT (LEAD)) (OR (+ 25 (21) NIL) (OR (+ 25 (22) NIL) (+ 25 (23) NIL))) QUANTIFICATION) ((NOT (PORTRAIT (GOLD) AND
PORTRAIT (SILVER) OR PORTRAIT (SILVER) AND PORTRAIT (LEAD) OR PORTRAIT (LEAD) AND PORTRAIT (GOLD))) (NOT (OR (AND (+ 25 (21) NIL) (+ 25 (22) NIL)) (OR (AND (+ 25 (22) NIL) (+ 25 (23) NIL)) (AND (+ 25 (23) NIL) (+ 25 (21) NIL))))) QUANTIFICATION)
((ALL X:INSCRIPT ALL Y:CASKET INSCR.PORTRAIT (X Y) AND TRUTH (X) IMPL PORTRAIT (Y)) (ALL 29 (ALL 30 (IMPL (AND (+ 27 (29 30) NIL) (+ 26 (29) NIL)) (+ 25 (30) NIL)))) QUANTIFICATION) ((ALL X:INSCRIPT ALL Y:CASKET INSCR.PORTRAIT (X Y) AND NOT TRUTH
(X) IMPL NOT PORTRAIT (Y)) (ALL 31 (ALL 32 (IMPL (AND (+ 27 (31 32) NIL) (NOT (+ 26 (31) NIL))) (NOT (+ 25 (32) NIL))))) QUANTIFICATION) ((ALL X:INSCRIPT ALL Y:CASKET NEG.INSCR.PORTRAIT (X Y) AND TRUTH (X) IMPL NOT PORTRAIT (Y)) (ALL 33 (ALL 34
(IMPL (AND (+ 28 (33 34) NIL) (+ 26 (33) NIL)) (NOT (+ 25 (34) NIL))))) QUANTIFICATION) ((ALL X:INSCRIPT ALL Y:CASKET NEG.INSCR.PORTRAIT (X Y) AND NOT TRUTH (X) IMPL PORTRAIT (Y)) (ALL 35 (ALL 36 (IMPL (AND (+ 28 (35 36) NIL) (NOT (+ 26 (35) NIL)))
(+ 25 (36) NIL)))) QUANTIFICATION) ((*) COMMENT COMMENT) ((* IN ADDITION TO THIS KNOWLEDGE THERE IS INFORMATION SPECIAL TO) COMMENT COMMENT) ((* THIS PROBLEM:) COMMENT COMMENT) ((* ACTUAL INSCRIPTIONS ON THE CASKETS :) COMMENT COMMENT) ((
NEG.INSCR.PORTRAIT (INSCRIPTION (GOLD) SILVER)) (+ 28 ((24 21) 22) NIL) QUANTIFICATION) ((NEG.INSCR.PORTRAIT (INSCRIPTION (SILVER) SILVER)) (+ 28 ((24 22) 22) NIL) QUANTIFICATION) ((INSCR.PORTRAIT (INSCRIPTION (LEAD) LEAD)) (+ 27 ((24 23) 23)
NIL) QUANTIFICATION) ((*) COMMENT COMMENT) ((* AT LEAST ONE OF THE STATEMENTS IS TRUE, AND AT LEAST ONE IS FALSE:) COMMENT COMMENT) ((TRUTH (INSCRIPTION (GOLD)) OR TRUTH (INSCRIPTION (SILVER)) OR TRUTH (INSCRIPTION (LEAD))) (OR (+ 26 ((24 21))
NIL) (OR (+ 26 ((24 22)) NIL) (+ 26 ((24 23)) NIL))) QUANTIFICATION) ((NOT TRUTH (INSCRIPTION (GOLD)) OR NOT TRUTH (INSCRIPTION (SILVER)) OR NOT TRUTH (INSCRIPTION (LEAD))) (OR (NOT (+ 26 ((24 21)) NIL)) (OR (NOT (+ 26 ((24 22)) NIL)) (NOT (+
26 ((24 23)) NIL)))) QUANTIFICATION) ((*) COMMENT COMMENT) ((* WHICH CASKET CONTAINS THE PORTRAIT ?) COMMENT COMMENT)))(COND (ST*LOAD.FLAG (PROGN (DT-RESET))
(PROG ((ADDRLIST (QUOTE (10346 10351 10356 10361 10366 10371 10376 10381 10396 10411 10426 10441 10455 10460 10465 10470 ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 10485 10500))) (DATALIST (QUOTE (15 "TRUE" NIL NIL NIL (DEFINED) NIL ((- 1 (POSITIVE))) ((+ 1
(NEGATIVE))) ((+ 1 (NIL))) ((- 1 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "FALSE" NIL NIL NIL (DEFINED) NIL ((- 2 (POSITIVE))) ((+ 2 (NEGATIVE))) ((+ 2 (NIL))) ((- 2 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 "GOLD" CASKET (ST*ATTRIBUTE
NIL DT*ST-KIND NIL) CONSTANT 5 "SILVER" CASKET (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT 5 "LEAD" CASKET (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT 14 "INSCRIPTION" NIL INSCRIPT (CASKET) NIL NIL NIL NIL NIL 1 INSCRIPT (DT*ST-KIND NIL) FUNCTION
15 "PORTRAIT" NIL NIL (CASKET) NIL NIL ((- 25 (POSITIVE))) ((+ 25 (NEGATIVE))) ((+ 25 (NIL))) ((- 25 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "TRUTH" NIL NIL (INSCRIPT) NIL NIL ((- 26 (POSITIVE))) ((+ 26 (NEGATIVE))) ((+ 26 (NIL))) ((- 26
(NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "INSCR.PORTRAIT" NIL NIL (INSCRIPT CASKET) NIL NIL ((- 27 (POSITIVE))) ((+ 27 (NEGATIVE))) ((+ 27 (NIL))) ((- 27 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "NEG.INSCR.PORTRAIT" NIL NIL (INSCRIPT
CASKET) NIL NIL ((- 28 (POSITIVE))) ((+ 28 (NEGATIVE))) ((+ 28 (NIL))) ((- 28 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 INSCRIPT NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 CASKET NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 INSCRIPT
NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 CASKET NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 INSCRIPT NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 CASKET NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 INSCRIPT NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 5 CASKET NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE))) (INCREMENT (IDIFFERENCE MEM*SIZE 10500)) COUNTER1) (MEM-RESET) (COND ((IGREATERP MEM*SIZE 10500) (SETQ COUNTER1 37) (MAPC ADDRLIST (FUNCTION (LAMBDA (RADDR) (SETA MEM*MEMORY
(SETQ COUNTER1 (SUB1 COUNTER1)) (COND ((EQ RADDR (QUOTE ATP.MEMORY.NIL)) RADDR) ((OR (EQ RADDR 0) (MINUSP RADDR)) RADDR) (T (IPLUS RADDR INCREMENT))))))) (SETQ COUNTER1 (ADD1 MEM*SIZE)) (MAPC DATALIST (FUNCTION (LAMBDA (DATA) (SETA MEM*MEMORY
(SETQ COUNTER1 (SUB1 COUNTER1)) DATA))))) (T (COND ((NEQ MEM*SIZE 10500) (MEM-INITIALIZE 10500))) (SETQ COUNTER1 37) (MAPC ADDRLIST (FUNCTION (LAMBDA (RADDR) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1)) RADDR)))) (SETQ COUNTER1 (ADD1 MEM*SIZE))
(MAPC DATALIST (FUNCTION (LAMBDA (DATA) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1)) DATA)))))) (COND ((IGREATERP MEM*SIZE 10500) (RPAQ MEM*NEXT.RADR (IPLUS 10341 INCREMENT))) (T (RPAQ MEM*NEXT.RADR 10341))) (RPAQ MEM*NEXT.VADR 37) (RPAQ MEM*REST
(ADD1 (IDIFFERENCE MEM*NEXT.RADR MEM*NEXT.VADR))) (RPAQ MEM*FIRST.REUSABLE.VADR NIL) (RPAQ MEM*LAST.REUSABLE.VADR NIL))
(PROGN (RPAQQ DT*SORT.ALL (INSCRIPT CASKET ANY)) (RPAQQ DT*SORT.NR 8) (RPAQQ DT*SORT.PROPERTIES (DT*MAX.SUBSORTS DT*LEAST.SUPERSORTS DT*TRANSITIVE.CLOSURE DT*INVERSE.TRANSITIVE.CLOSURE DT*MINIMAL.SUBSORTS DT*DIRECT.SUBSORTS DT*DIRECT.SUPERSORTS
DT*DISJOINT.SORTS DT*COMPLETION.SORT)) (RPAQQ DT*SORT.COMMON.COMPUTE.FLAG NIL) (RPAQQ DT*VARIABLE.COUNTER 0) (RPAQQ DT*CONSTANT.COUNTER 0) (RPAQQ DT*CONSTANT.ALL (23 22 21)) (RPAQQ DT*ABBREVIATIONS NIL) (RPAQQ DT*FUNCTION.COUNTER 0) (RPAQQ 
DT*FUNCTION.ALL (24)) (RPAQQ DT*FUNCTION.ADMISSIBLE.THEORIES (ASSOCIATIVE)) (RPAQQ DT*FUNCTION.ACTUAL.THEORIES NIL) (RPAQQ DT*FUNCTION.WITH.ARGUMENT.SYMMETRIES NIL) (RPAQQ DT*FUNCTION.COMPONENTS (PNAME ATTRIBUTES MAX.RANGE.SORT MAX.DOMAIN.SORTS
MIN.RANGE.SORTS SORT.LIST SORT.LIST.INVERSE SORT.TREE.CALC ARGUMENT.SYMMETRIES ARITY G.L.B.OF.RANGES)) (RPAQQ DT*PREDICATE.ADMISSABLE.ATTRIBUTES (SYMMETRIC DEFINED REFLEXIVE)) (RPAQQ DT*PREDICATE.COUNTER 0) (RPAQQ DT*EQUALITY.SYMBOLS ("=" ":="
"=:" ":=:")) (RPAQQ DT*EQUALITY.PREDICATES NIL) (RPAQQ DT*NONEQUALITY.PREDICATES (28 27 26 25 2 1)) (RPAQQ DT*PREDICATE.ALL (28 27 26 25 2 1)) (RPAQQ DT*PREDICATE.WITH.ATTRIBUTES NIL) (RPAQQ DT*PREDICATE.COMPONENTS (PNAME POSITIVE.OCCURRENCES
NEGATIVE.OCCURRENCES DOMAINSORTS ATTRIBUTES REFL.CLAUSE +ROTHERSIDES -ROTHERSIDES +SOTHERSIDES -SOTHERSIDES +TOTHERSIDES -TOTHERSIDES)) (RPAQQ DT*TRUE.PREDICATE 1) (RPAQQ DT*FALSE.PREDICATE 2) (RPAQQ DT*UNI.CREATES.VARIABLES NIL) (RPAQQ 
DT*SIGN.MINUS.SYMBOLS (- --)) (RPAQQ DT*SIGN.PLUS.SYMBOLS (+ ++)) (RPAQQ DT*SYMBOL.KINDS (CONSTANT.ALL FUNCTION.ALL PREDICATE.ALL)))
(PROGN)
(PROGN (SETPROPLIST (QUOTE DT*PREDICATE.WITH.ATTRIBUTES) (QUOTE NIL)))
(PROGN (SETPROPLIST (QUOTE INSCRIPT) (QUOTE (DT*INVERSE.TRANSITIVE.CLOSURE (INSCRIPT ANY) DT*DIRECT.SUPERSORTS (ANY) DT*MINIMAL.SUBSORTS (INSCRIPT) DT*MAX.SUBSORTS ((INSCRIPT INSCRIPT) (CASKET) (ANY INSCRIPT)) DT*TRANSITIVE.CLOSURE (INSCRIPT)
DT*DIRECT.SUBSORTS NIL DT*ATTRIBUTE NIL DT*SORT.NUMBER 7))) (SETPROPLIST (QUOTE CASKET) (QUOTE (DT*INVERSE.TRANSITIVE.CLOSURE (CASKET ANY) DT*DIRECT.SUPERSORTS (ANY) DT*MINIMAL.SUBSORTS (CASKET) DT*MAX.SUBSORTS ((INSCRIPT) (CASKET CASKET) (ANY
CASKET)) DT*TRANSITIVE.CLOSURE (CASKET) DT*DIRECT.SUBSORTS NIL DT*ATTRIBUTE NIL DT*SORT.NUMBER 6))) (SETPROPLIST (QUOTE ANY) (QUOTE (DT*LEAST.SUPERSORTS ((ANY ANY)) DT*INVERSE.TRANSITIVE.CLOSURE (ANY) DT*DIRECT.SUPERSORTS NIL DT*MINIMAL.SUBSORTS
(CASKET) DT*MAX.SUBSORTS ((INSCRIPT INSCRIPT) (CASKET CASKET) (ANY ANY)) DT*TRANSITIVE.CLOSURE (INSCRIPT CASKET ANY) DT*DIRECT.SUBSORTS (INSCRIPT CASKET) DT*SORT.NUMBER 1))))
(PROGN (RPAQQ ST*STACK1 (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL ((X_36 PROGN (DT-VARIABLE.DELETE 36) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_36) ST*SYMBOL.ADDRESSES))) (X_35 PROGN (DT-VARIABLE.DELETE 35) (RPAQ ST*SYMBOL.ADDRESSES
(REMASSOC (QUOTE X_35) ST*SYMBOL.ADDRESSES)))) ((X_34 PROGN (DT-VARIABLE.DELETE 34) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_34) ST*SYMBOL.ADDRESSES))) (X_33 PROGN (DT-VARIABLE.DELETE 33) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_33) 
ST*SYMBOL.ADDRESSES)))) ((X_32 PROGN (DT-VARIABLE.DELETE 32) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_32) ST*SYMBOL.ADDRESSES))) (X_31 PROGN (DT-VARIABLE.DELETE 31) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_31) ST*SYMBOL.ADDRESSES)))) ((X_30
PROGN (DT-VARIABLE.DELETE 30) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_30) ST*SYMBOL.ADDRESSES))) (X_29 PROGN (DT-VARIABLE.DELETE 29) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_29) ST*SYMBOL.ADDRESSES)))) NIL NIL NIL NIL NIL ((NEG.INSCR.PORTRAIT
PROGN (DT-PREDICATE.DELETE 28) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE NEG.INSCR.PORTRAIT) ST*SYMBOL.ADDRESSES)))) ((INSCR.PORTRAIT PROGN (DT-PREDICATE.DELETE 27) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE INSCR.PORTRAIT) ST*SYMBOL.ADDRESSES))))
((TRUTH PROGN (DT-PREDICATE.DELETE 26) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE TRUTH) ST*SYMBOL.ADDRESSES)))) ((PORTRAIT PROGN (DT-PREDICATE.DELETE 25) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE PORTRAIT) ST*SYMBOL.ADDRESSES)))) ((INSCRIPTION
PROGN (DT-FUNCTION.DELETE 24) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE INSCRIPTION) ST*SYMBOL.ADDRESSES))) (INSCRIPT PROGN (DT-SORT.ST.REMOVE (QUOTE INSCRIPT)) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE INSCRIPT) ST*SYMBOL.ADDRESSES))) (INSCRIPT
REMPROP (QUOTE INSCRIPT) (QUOTE ST*DATA))) ((LEAD PROGN (DT-CONSTANT.DELETE 23) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE LEAD) ST*SYMBOL.ADDRESSES))) (SILVER PROGN (DT-CONSTANT.DELETE 22) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE SILVER) 
ST*SYMBOL.ADDRESSES))) (GOLD PROGN (DT-CONSTANT.DELETE 21) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE GOLD) ST*SYMBOL.ADDRESSES))) (CASKET PROGN (DT-SORT.ST.REMOVE (QUOTE CASKET)) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE CASKET) ST*SYMBOL.ADDRESSES)))
(CASKET REMPROP (QUOTE CASKET) (QUOTE ST*DATA))) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL ((FALSE PROGN (DT-PREDICATE.DELETE 2) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE FALSE) ST*SYMBOL.ADDRESSES)))
(TRUE PROGN (DT-PREDICATE.DELETE 1) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE TRUE) ST*SYMBOL.ADDRESSES))) (ANY PROGN (DT-SORT.ST.REMOVE (QUOTE ANY)) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE ANY) ST*SYMBOL.ADDRESSES))) (ANY REMPROP (QUOTE ANY)
(QUOTE ST*DATA))))) (RPAQQ ST*SYMBOL.ADDRESSES (NIL (ANY . T) (TRUE . 1) (FALSE . 2) (CASKET . T) (GOLD . 21) (SILVER . 22) (LEAD . 23) (INSCRIPT . T) (INSCRIPTION . 24) (PORTRAIT . 25) (TRUTH . 26) (INSCR.PORTRAIT . 27) (NEG.INSCR.PORTRAIT .
28) (X_29 . 29) (X_30 . 30) (X_31 . 31) (X_32 . 32) (X_33 . 33) (X_34 . 34) (X_35 . 35) (X_36 . 36))))))))STOP
 
