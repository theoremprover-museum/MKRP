(COND ((FMT-LOAD "31-JAN-85 14:12:57"
NIL(((* PROBLEM E92) COMMENT COMMENT) ((*) COMMENT COMMENT) ((* IN THIS PROBLEM WE GET THE FOLLOWING TWO STATEMENTS:) COMMENT COMMENT) ((* A: AT LEAST ONE OF THE THREE OF US IS A KNAVE.) COMMENT COMMENT) ((* B: C IS A WEREWOLF.) COMMENT COMMENT)
((* GIVEN THAT THERE IS EXACTLY ONE WEREWOLF AND THAT HE IS A KNIGHT,) COMMENT COMMENT) ((* WHO IS THE WEREWOLF?) COMMENT COMMENT) ((*) COMMENT COMMENT) ((*) COMMENT COMMENT) ((* THE FUNCTION STATE (X) AND THE PREDICATES TRUTH (X) , KNIGHT (X)
, KNAVE (X) ,) COMMENT COMMENT) ((* AND WEREWOLF (X) MEAN THE SAME AS IN E89.) COMMENT COMMENT) ((* THE FOLLOWING PREDICATES ARE NEW:) COMMENT COMMENT) ((* STATE.WEREWOLF (X Y) - STATEMENT X TELLS THAT PERSON Y IS A WEREWOLF) COMMENT COMMENT)
((* AT-LEAST-ONE-KNAVE (X Y Z) - AT LEAST ONE PERSON X,Y,OR Z IS A KNAVE) COMMENT COMMENT) ((* STATE.AT-LEAST-ONE-KNAVE (S X Y Z) - STATEMENT S TELLS THAT AT LEAST ONE) COMMENT COMMENT) ((* PERSON X,Y, OR Z IS A KNAVE) COMMENT COMMENT) ((*) COMMENT
COMMENT) ((* DECLARATIONS:) COMMENT COMMENT) ((TYPE A,B,C : PERSON) (+ 1 NIL) TYPE) ((TYPE STATE (PERSON) :STATEMENT) (+ 1 NIL) TYPE) ((TYPE TRUTH (STATEMENT)) (+ 1 NIL) TYPE) ((TYPE KNIGHT (PERSON)) (+ 1 NIL) TYPE) ((TYPE KNAVE (PERSON)) (+ 1
NIL) TYPE) ((TYPE WEREWOLF (PERSON)) (+ 1 NIL) TYPE) ((TYPE STATE.WEREWOLF (STATEMENT PERSON)) (+ 1 NIL) TYPE) ((TYPE AT-LEAST-ONE-KNAVE (PERSON PERSON PERSON)) (+ 1 NIL) TYPE) ((TYPE STATE.AT-LEAST-ONE-KNAVE (STATEMENT PERSON PERSON PERSON))
(+ 1 NIL) TYPE) ((*) COMMENT COMMENT) ((* KNIGHT ALWAYS TELL THE TRUTH AND KNAVE ALWAYS LIE:) COMMENT COMMENT) ((ALL X:PERSON KNIGHT (X) EQV TRUTH (STATE (X))) (ALL 50 (EQV (+ 56 (50) NIL) (+ 57 ((58 50)) NIL))) QUANTIFICATION) ((ALL X:PERSON
KNAVE (X) EQV NOT (TRUTH (STATE (X)))) (ALL 49 (EQV (+ 55 (49) NIL) (NOT (+ 57 ((58 49)) NIL)))) QUANTIFICATION) ((*) COMMENT COMMENT) ((* THERE IS EXACTLY ONE WEREWOLF:) COMMENT COMMENT) ((WEREWOLF (A) OR WEREWOLF (B) OR WEREWOLF (C)) (OR (+
54 (61) NIL) (OR (+ 54 (60) NIL) (+ 54 (59) NIL))) QUANTIFICATION) ((NOT (WEREWOLF (A) AND WEREWOLF (B) OR WEREWOLF (B) AND WEREWOLF (C) OR WEREWOLF (C) AND WEREWOLF (A))) (NOT (OR (AND (+ 54 (61) NIL) (+ 54 (60) NIL)) (OR (AND (+ 54 (60) NIL)
(+ 54 (59) NIL)) (AND (+ 54 (59) NIL) (+ 54 (61) NIL))))) QUANTIFICATION) ((*) COMMENT COMMENT) ((* EXPLANATION OF AT-LEAST-ONE-KNAVE:) COMMENT COMMENT) ((ALL X,Y,Z:PERSON AT-LEAST-ONE-KNAVE (X Y Z) EQV KNAVE (X) OR KNAVE (Y) OR KNAVE (Z)) (ALL
46 (ALL 47 (ALL 48 (EQV (+ 52 (48 47 46) NIL) (OR (+ 55 (48) NIL) (OR (+ 55 (47) NIL) (+ 55 (46) NIL))))))) QUANTIFICATION) ((*) COMMENT COMMENT) ((* IMPLICATIONS ABOUT STATEMENTS:) COMMENT COMMENT) ((ALL X:STATEMENT ALL Y:PERSON STATE.WEREWOLF
(X Y) AND TRUTH (X) IMPL WEREWOLF (Y)) (ALL 45 (ALL 44 (IMPL (AND (+ 53 (45 44) NIL) (+ 57 (45) NIL)) (+ 54 (44) NIL)))) QUANTIFICATION) ((ALL X:STATEMENT ALL Y:PERSON STATE.WEREWOLF (X Y) AND NOT (TRUTH (X)) IMPL NOT (WEREWOLF (Y))) (ALL 43 (ALL
42 (IMPL (AND (+ 53 (43 42) NIL) (NOT (+ 57 (43) NIL))) (NOT (+ 54 (42) NIL))))) QUANTIFICATION) ((ALL S:STATEMENT ALL X,Y,Z:PERSON STATE.AT-LEAST-ONE-KNAVE (S X Y Z) AND TRUTH (S) IMPL AT-LEAST-ONE-KNAVE (X Y Z)) (ALL 41 (ALL 64 (ALL 63 (ALL
62 (IMPL (AND (+ 51 (41 62 63 64) NIL) (+ 57 (41) NIL)) (+ 52 (62 63 64) NIL)))))) QUANTIFICATION) ((ALL S:STATEMENT ALL X,Y,Z:PERSON STATE.AT-LEAST-ONE-KNAVE (S X Y Z) AND NOT (TRUTH (S)) IMPL NOT (AT-LEAST-ONE-KNAVE (X Y Z))) (ALL 65 (ALL 68
(ALL 67 (ALL 66 (IMPL (AND (+ 51 (65 66 67 68) NIL) (NOT (+ 57 (65) NIL))) (NOT (+ 52 (66 67 68) NIL))))))) QUANTIFICATION) ((*) COMMENT COMMENT) ((* THE WEREWOLF IS A KNIGHT:) COMMENT COMMENT) ((ALL X:PERSON WEREWOLF (X) IMPL KNIGHT (X)) (ALL
69 (IMPL (+ 54 (69) NIL) (+ 56 (69) NIL))) QUANTIFICATION) ((*) COMMENT COMMENT) ((* ACTUAL STATEMENTS:) COMMENT COMMENT) ((STATE.AT-LEAST-ONE-KNAVE (STATE (A) A B C)) (+ 51 ((58 61) 61 60 59) NIL) QUANTIFICATION) ((STATE.WEREWOLF (STATE (B) C))
(+ 53 ((58 60) 59) NIL) QUANTIFICATION)))(COND (ST*LOAD.FLAG (PROGN (DT-RESET))
(MEM-RESTORE NIL NIL 70 10246 10500 (QUOTE (10251 10256 10261 10266 10271 10276 10281 10286 10470 10465 10460 10455 10441 10426 10411 10396 10381 10366 10351 10336 10331 10326 10321 10316 10311 10306 10301 10296 10291 ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 10485 10500))(QUOTE (15 TRUE NIL NIL NIL (DEFINED) NIL ((- 1 (POSITIVE))) ((+ 1 (NEGATIVE))) ((+ 1 (NIL))) ((- 1 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 FALSE NIL NIL NIL (DEFINED)
NIL ((- 2 (POSITIVE))) ((+ 2 (NEGATIVE))) ((+ 2 (NIL))) ((- 2 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 A PERSON (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT 5 B PERSON (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT 5 C PERSON (ST*ATTRIBUTE NIL DT*ST-KIND
NIL) CONSTANT 14 STATE NIL STATEMENT (PERSON) NIL NIL NIL NIL NIL 1 STATEMENT (DT*ST-KIND NIL) FUNCTION 15 TRUTH NIL NIL (STATEMENT) NIL NIL ((- 57 (POSITIVE))) ((+ 57 (NEGATIVE))) ((+ 57 (NIL))) ((- 57 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE
15 KNIGHT NIL NIL (PERSON) NIL NIL ((- 56 (POSITIVE))) ((+ 56 (NEGATIVE))) ((+ 56 (NIL))) ((- 56 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 KNAVE NIL NIL (PERSON) NIL NIL ((- 55 (POSITIVE))) ((+ 55 (NEGATIVE))) ((+ 55 (NIL))) ((- 55 (NIL)))
NIL NIL (DT*ST-KIND NIL) PREDICATE 15 WEREWOLF NIL NIL (PERSON) NIL NIL ((- 54 (POSITIVE))) ((+ 54 (NEGATIVE))) ((+ 54 (NIL))) ((- 54 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 STATE.WEREWOLF NIL NIL (STATEMENT PERSON) NIL NIL ((- 53 (POSITIVE)))
((+ 53 (NEGATIVE))) ((+ 53 (NIL))) ((- 53 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 AT-LEAST-ONE-KNAVE NIL NIL (PERSON PERSON PERSON) NIL NIL ((- 52 (POSITIVE))) ((+ 52 (NEGATIVE))) ((+ 52 (NIL))) ((- 52 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE
15 STATE.AT-LEAST-ONE-KNAVE NIL NIL (STATEMENT PERSON PERSON PERSON) NIL NIL ((- 51 (POSITIVE))) ((+ 51 (NEGATIVE))) ((+ 51 (NIL))) ((- 51 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON
NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 STATEMENT NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 STATEMENT NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 STATEMENT NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE
5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 STATEMENT NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA
NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE)))(PROGN (RPAQQ DT*SORT.ALL (STATEMENT PERSON
ANY)) (RPAQQ DT*SORT.NR 10) (RPAQQ DT*SORT.PROPERTIES (DT*MAX.SUBSORTS DT*LEAST.SUPERSORTS DT*TRANSITIVE.CLOSURE DT*INVERSE.TRANSITIVE.CLOSURE DT*MINIMAL.SUBSORTS DT*DIRECT.SUBSORTS DT*DIRECT.SUPERSORTS DT*DISJOINT.SORTS DT*COMPLETION.SORT)) (RPAQQ
DT*SORT.COMMON.COMPUTE.FLAG NIL) (RPAQQ DT*VARIABLE.COUNTER 0) (RPAQQ DT*CONSTANT.COUNTER 0) (RPAQQ DT*CONSTANT.ALL (59 60 61)) (RPAQQ DT*ABBREVIATIONS NIL) (RPAQQ DT*FUNCTION.COUNTER 0) (RPAQQ DT*FUNCTION.ALL (58)) (RPAQQ 
DT*FUNCTION.ADMISSIBLE.THEORIES (ASSOCIATIVE)) (RPAQQ DT*FUNCTION.ACTUAL.THEORIES NIL) (RPAQQ DT*FUNCTION.WITH.ARGUMENT.SYMMETRIES NIL) (RPAQQ DT*FUNCTION.COMPONENTS (PNAME ATTRIBUTES MAX.RANGE.SORT MAX.DOMAIN.SORTS MIN.RANGE.SORTS SORT.LIST 
SORT.LIST.INVERSE SORT.TREE.CALC ARGUMENT.SYMMETRIES ARITY G.L.B.OF.RANGES)) (RPAQQ DT*PREDICATE.ADMISSABLE.ATTRIBUTES (SYMMETRIC DEFINED REFLEXIVE)) (RPAQQ DT*PREDICATE.COUNTER 0) (RPAQQ DT*EQUALITY.SYMBOLS ("=" ":=" "=:" ":=:")) (RPAQQ 
DT*EQUALITY.PREDICATES NIL) (RPAQQ DT*NONEQUALITY.PREDICATES (51 52 53 54 55 56 57 2 1)) (RPAQQ DT*PREDICATE.ALL (51 52 53 54 55 56 57 2 1)) (RPAQQ DT*PREDICATE.WITH.ATTRIBUTES NIL) (RPAQQ DT*PREDICATE.COMPONENTS (PNAME POSITIVE.OCCURRENCES 
NEGATIVE.OCCURRENCES DOMAINSORTS ATTRIBUTES REFL.CLAUSE +ROTHERSIDES -ROTHERSIDES +SOTHERSIDES -SOTHERSIDES +TOTHERSIDES -TOTHERSIDES)) (RPAQQ DT*TRUE.PREDICATE 1) (RPAQQ DT*FALSE.PREDICATE 2) (RPAQQ DT*UNI.CREATES.VARIABLES NIL) (RPAQQ 
DT*SIGN.MINUS.SYMBOLS (- --)) (RPAQQ DT*SIGN.PLUS.SYMBOLS (+ ++)) (RPAQQ DT*SYMBOL.KINDS (CONSTANT.ALL FUNCTION.ALL PREDICATE.ALL)))
(PROGN)
(PROGN (SETPROPLIST (QUOTE DT*PREDICATE.WITH.ATTRIBUTES) (QUOTE NIL)))
(PROGN (SETPROPLIST (QUOTE STATEMENT) (QUOTE (DT*INVERSE.TRANSITIVE.CLOSURE (STATEMENT ANY) DT*DIRECT.SUPERSORTS (ANY) DT*MINIMAL.SUBSORTS (STATEMENT) DT*MAX.SUBSORTS ((STATEMENT STATEMENT) (PERSON) (ANY STATEMENT)) DT*TRANSITIVE.CLOSURE (STATEMENT)
DT*DIRECT.SUBSORTS NIL DT*ATTRIBUTE NIL DT*SORT.NUMBER 9))) (SETPROPLIST (QUOTE PERSON) (QUOTE (DT*INVERSE.TRANSITIVE.CLOSURE (PERSON ANY) DT*DIRECT.SUPERSORTS (ANY) DT*MINIMAL.SUBSORTS (PERSON) DT*MAX.SUBSORTS ((STATEMENT) (PERSON PERSON) (ANY
PERSON)) DT*TRANSITIVE.CLOSURE (PERSON) DT*DIRECT.SUBSORTS NIL DT*ATTRIBUTE NIL DT*SORT.NUMBER 8))) (SETPROPLIST (QUOTE ANY) (QUOTE (DT*LEAST.SUPERSORTS ((ANY ANY)) DT*ATTRIBUTE NIL DT*INVERSE.TRANSITIVE.CLOSURE (ANY) DT*DIRECT.SUPERSORTS NIL
DT*MINIMAL.SUBSORTS (PERSON) DT*MAX.SUBSORTS ((STATEMENT STATEMENT) (PERSON PERSON) (ANY ANY)) DT*TRANSITIVE.CLOSURE (STATEMENT PERSON ANY) DT*SORT.NUMBER 1 DT*DIRECT.SUBSORTS (STATEMENT PERSON)))))
(PROGN (RPAQQ ST*STACK1 (NIL NIL NIL NIL NIL ((X_69 PROGN (DT-VARIABLE.DELETE 69) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_69) ST*SYMBOL.ADDRESSES)))) NIL NIL ((X_68 PROGN (DT-VARIABLE.DELETE 68) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE
X_68) ST*SYMBOL.ADDRESSES))) (X_67 PROGN (DT-VARIABLE.DELETE 67) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_67) ST*SYMBOL.ADDRESSES))) (X_66 PROGN (DT-VARIABLE.DELETE 66) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_66) ST*SYMBOL.ADDRESSES)))
(X_65 PROGN (DT-VARIABLE.DELETE 65) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_65) ST*SYMBOL.ADDRESSES)))) ((X_64 PROGN (DT-VARIABLE.DELETE 64) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_64) ST*SYMBOL.ADDRESSES))) (X_63 PROGN (DT-VARIABLE.DELETE
63) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_63) ST*SYMBOL.ADDRESSES))) (X_62 PROGN (DT-VARIABLE.DELETE 62) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_62) ST*SYMBOL.ADDRESSES))) (X_41 PROGN (DT-VARIABLE.DELETE 41) (RPAQ ST*SYMBOL.ADDRESSES
(REMASSOC (QUOTE X_41) ST*SYMBOL.ADDRESSES)))) ((X_42 PROGN (DT-VARIABLE.DELETE 42) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_42) ST*SYMBOL.ADDRESSES))) (X_43 PROGN (DT-VARIABLE.DELETE 43) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_43) 
ST*SYMBOL.ADDRESSES)))) ((X_44 PROGN (DT-VARIABLE.DELETE 44) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_44) ST*SYMBOL.ADDRESSES))) (X_45 PROGN (DT-VARIABLE.DELETE 45) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_45) ST*SYMBOL.ADDRESSES)))) NIL
NIL ((X_46 PROGN (DT-VARIABLE.DELETE 46) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_46) ST*SYMBOL.ADDRESSES))) (X_47 PROGN (DT-VARIABLE.DELETE 47) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_47) ST*SYMBOL.ADDRESSES))) (X_48 PROGN (DT-VARIABLE.DELETE
48) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_48) ST*SYMBOL.ADDRESSES)))) NIL NIL NIL NIL NIL NIL ((X_49 PROGN (DT-VARIABLE.DELETE 49) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_49) ST*SYMBOL.ADDRESSES)))) ((X_50 PROGN (DT-VARIABLE.DELETE
50) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_50) ST*SYMBOL.ADDRESSES)))) NIL NIL ((STATE.AT-LEAST-ONE-KNAVE PROGN (DT-PREDICATE.DELETE 51) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE STATE.AT-LEAST-ONE-KNAVE) ST*SYMBOL.ADDRESSES)))) ((
AT-LEAST-ONE-KNAVE PROGN (DT-PREDICATE.DELETE 52) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE AT-LEAST-ONE-KNAVE) ST*SYMBOL.ADDRESSES)))) ((STATE.WEREWOLF PROGN (DT-PREDICATE.DELETE 53) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE STATE.WEREWOLF)
ST*SYMBOL.ADDRESSES)))) ((WEREWOLF PROGN (DT-PREDICATE.DELETE 54) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE WEREWOLF) ST*SYMBOL.ADDRESSES)))) ((KNAVE PROGN (DT-PREDICATE.DELETE 55) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE KNAVE) ST*SYMBOL.ADDRESSES))
)) ((KNIGHT PROGN (DT-PREDICATE.DELETE 56) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE KNIGHT) ST*SYMBOL.ADDRESSES)))) ((TRUTH PROGN (DT-PREDICATE.DELETE 57) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE TRUTH) ST*SYMBOL.ADDRESSES)))) ((STATE PROGN
(DT-FUNCTION.DELETE 58) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE STATE) ST*SYMBOL.ADDRESSES))) (STATEMENT PROGN (DT-SORT.ST.REMOVE (QUOTE STATEMENT)) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE STATEMENT) ST*SYMBOL.ADDRESSES))) (STATEMENT REMPROP
(QUOTE STATEMENT) (QUOTE ST*DATA))) ((C PROGN (DT-CONSTANT.DELETE 59) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE C) ST*SYMBOL.ADDRESSES))) (B PROGN (DT-CONSTANT.DELETE 60) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE B) ST*SYMBOL.ADDRESSES))) (A
PROGN (DT-CONSTANT.DELETE 61) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE A) ST*SYMBOL.ADDRESSES))) (PERSON PROGN (DT-SORT.ST.REMOVE (QUOTE PERSON)) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE PERSON) ST*SYMBOL.ADDRESSES))) (PERSON REMPROP (QUOTE
PERSON) (QUOTE ST*DATA))) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL ((FALSE PROGN (DT-PREDICATE.DELETE 2) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE FALSE) ST*SYMBOL.ADDRESSES))) (TRUE PROGN (DT-PREDICATE.DELETE 1)
(RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE TRUE) ST*SYMBOL.ADDRESSES))) (ANY PROGN (DT-SORT.ST.REMOVE (QUOTE ANY)) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE ANY) ST*SYMBOL.ADDRESSES))) (ANY REMPROP (QUOTE ANY) (QUOTE ST*DATA))))) (RPAQQ 
ST*SYMBOL.ADDRESSES (NIL (ANY . T) (TRUE . 1) (FALSE . 2) (PERSON . T) (A . 61) (B . 60) (C . 59) (STATEMENT . T) (STATE . 58) (TRUTH . 57) (KNIGHT . 56) (KNAVE . 55) (WEREWOLF . 54) (STATE.WEREWOLF . 53) (AT-LEAST-ONE-KNAVE . 52) (
STATE.AT-LEAST-ONE-KNAVE . 51) (X_50 . 50) (X_49 . 49) (X_48 . 48) (X_47 . 47) (X_46 . 46) (X_45 . 45) (X_44 . 44) (X_43 . 43) (X_42 . 42) (X_41 . 41) (X_62 . 62) (X_63 . 63) (X_64 . 64) (X_65 . 65) (X_66 . 66) (X_67 . 67) (X_68 . 68) (X_69 .
69))))))))STOP
 
