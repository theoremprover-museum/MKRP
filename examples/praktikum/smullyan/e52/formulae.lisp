;;; -*- Mode: LISP; Package: MKRP; Syntax: Common-lisp -*-
(* PROBLEM 52)
(*)
(* ON ANOTHER
DAY OF THAT SAME WEEK, THE TWO BROTHERS MADE THE FOLLOWING STATEMENTS.)
(*)
(* FIRST ONE / I AM TWEEDLEDUM.)
(* SECOND ONE / IF THAT IS REALLY TRUE ,THEN I AM TWEEDLEDEE!)
(*)
(* WHICH WAS WHICH?)
(*)
(*)
(* FORMALIZING THE PROBLEM IN FIRST ORDER LOGIC)
(*)
(TYPE 
FIRSTONE,SECONDONE:PERSON)
(TYPE LION,UNICORN:ANIMAL)
(* LIKE (X Y) MEANS : THE
LYING-BEHAVIOR OF X IS LIKE THE ANIMAL Y.)
(ALL X:PERSON LIKE (X LION) OR LIKE (X UNICORN))
(ALL X:PERSON NOT (LIKE (X LION) AND LIKE
(X UNICORN)))
(LIKE (FIRSTONE
LION) AND LIKE (SECONDONE UNICORN) OR LIKE (FIRSTONE UNICORN) AND LIKE (SECONDONE LION))
(*)
(ALL X:DAYS MO (X) EQV (NOT TU (X) AND NOT WE (X) AND NOT TH (X) AND NOT FR (X) AND NOT SA (X) AND NOT SU (X)))
(ALL X:DAYS TU (X) EQV (NOT MO (X) AND NOT WE (X) AND NOT TH (X) AND NOT FR (X) AND NOT SA (X) AND NOT SU (X)))
(ALL X:DAYS WE (X) EQV (NOT MO (X) AND NOT TU (X) AND NOT TH (X) AND NOT FR (X) AND NOT SA (X) AND NOT SU (X)))
(ALL X:DAYS TH (X) EQV (NOT MO (X) AND NOT TU (X) AND NOT WE (X) AND NOT FR (X) AND NOT SA (X) AND NOT SU (X)))
(ALL X:DAYS FR (X) EQV (NOT MO (X) AND NOT TU (X) AND NOT WE (X) AND NOT TH (X) AND NOT SA (X) AND NOT SU (X)))
(ALL X:DAYS SA (X) EQV (NOT MO (X) AND NOT TU (X) AND NOT WE (X) AND NOT TH (X) AND NOT FR (X) AND NOT SU (X)))
(ALL X:DAYS SU (X) EQV (NOT MO (X) AND NOT TU (X) AND NOT WE (X) AND NOT TH (X) AND NOT FR (X) AND NOT SA (X)))
(*)
(ALL X:DAYS MEMBER (X LYING-DAYS (LION)) EQV (MO (X) OR TU (X) OR WE (X)))
(ALL
X:DAYS MEMBER (X LYING-DAYS (UNICORN)) EQV (TH (X) OR FR (X) OR SA (X)))
(*)
(ALL X:PERSON
ALL Y:ANIMAL LIKE (X Y) IMPL (ALL Z:DAYS (MEMBER (Z LYING-DAYS (Y)) EQV MEMBER (Z LYING-DAYS (X)))))
(*)
(* TWEEDLEDUM3 (X Y Z) MEANS X COULD SAY AT DAY Y THAT Z IS TWEEDLEDUM.)
(ALL X,Z:PERSON ALL Y:DAYS NOT MEMBER (Y LYING-DAYS (X)) AND NOT TWEEDLEDUM (Z) IMPL NOT TWEEDLEDUM3
(X Y Z))
(ALL X,Z:PERSON ALL Y:DAYS NOT MEMBER (Y LYING-DAYS (X)) AND TWEEDLEDUM
(Z) IMPL TWEEDLEDUM3 (X Y Z))
(ALL X,Z:PERSON ALL Y:DAYS MEMBER (Y LYING-DAYS (X)) AND NOT
TWEEDLEDUM (Z) IMPL TWEEDLEDUM3 (X Y Z))
(ALL X,Z:PERSON ALL Y:DAYS MEMBER (Y LYING-DAYS
(X)) AND TWEEDLEDUM (Z) IMPL NOT TWEEDLEDUM3 (X Y Z))
(*)
(* REALLYTRUE
(X Y Z) MEANS X COULD SAY AT DAY Y:IF Z IS TWEEDLEDUM THEN I AM TWEEDLEDEE.)
(ALL X,Z :PERSON
ALL Y:DAYS NOT MEMBER (Y LYING-DAYS (X)) AND NOT (TWEEDLEDUM (Z) IMPL TWEEDLEDEE (X)) IMPL NOT REALLYTRUE (X Y
Z))
(ALL X,Z :PERSON ALL Y:DAYS NOT MEMBER (Y LYING-DAYS
(X)) AND (TWEEDLEDUM (Z) IMPL TWEEDLEDEE (X)) IMPL REALLYTRUE (X Y Z))
(ALL X,Z :PERSON ALL Y:DAYS MEMBER (Y LYING-DAYS (X)) AND NOT (TWEEDLEDUM (Z) IMPL TWEEDLEDEE (X)) IMPL REALLYTRUE
(X Y Z))
(ALL X,Z :PERSON ALL Y:DAYS MEMBER (Y LYING-DAYS (X))
AND (TWEEDLEDUM (Z) IMPL TWEEDLEDEE (X)) IMPL NOT REALLYTRUE (X Y Z))
(*)
(*)
(TWEEDLEDUM (FIRSTONE) AND TWEEDLEDEE (SECONDONE) OR TWEEDLEDEE (FIRSTONE)
AND TWEEDLEDUM (SECONDONE))
(TYPE TODAY:DAYS)
(NOT SU (TODAY) AND TWEEDLEDUM3 (FIRSTONE TODAY FIRSTONE) AND
REALLYTRUE (SECONDONE TODAY FIRSTONE))

(TWEEDLEDEE (FIRSTONE) AND TWEEDLEDUM (SECONDONE))