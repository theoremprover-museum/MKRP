(COND ((FMT-LOAD "12-DEC-84 16:48:13"
NIL(((* THE SECOND TEST.) COMMENT COMMENT) ((* IN THIS TEST, THE SUITOR^S CHANCES (IF HE GUESSED BLINDLY)) COMMENT COMMENT) ((* WERE ONE OUT OF TWO. PORTIA USED ONLY TWO CASKETS, GOLD) COMMENT COMMENT) ((* AND SILVER, AND ONE OF THEM CONTAINED
HER PORTRAIT (NO | I * DAGGER WAS USED IN THIS TEST) . AGAIN EACH CASKET WAS) COMMENT COMMENT) ((* FASHIONED EITHER BY CELLINI OR BELLINI.) COMMENT COMMENT) ((* THE CASKETS READ:) COMMENT COMMENT) ((*) COMMENT COMMENT) ((* GOLD: THE PORTRAIT IS
NOT IN HERE) COMMENT COMMENT) ((* SILVER: EXACTLY ONE OF THESE TWO CASKETS WAS FASHIONED BY BELLIN I) COMMENT COMMENT) ((*) COMMENT COMMENT) ((* WHICH CASKET SHOULD THE SUITOR CHOOSE IN ORDER TO FIND THE PORTR AIT?) COMMENT COMMENT) ((*) COMMENT
COMMENT) ((* WE DEFINE THE FOLLOWING PREDICATES:) COMMENT COMMENT) ((* BELLINI,CELLINI,PORTRAIT,INSCR.PORTRAIT,NEG.INSCR.PORTRAIT) COMMENT COMMENT) ((* MEAN THE SAME AS IN 69A AND 67A) COMMENT COMMENT) ((* EXACTLY.ONE.BELLINI (X Y) - EXACTLY ONE
OF THE CASKETS X,Y) COMMENT COMMENT) ((* WAS FASHIONED BY BELLINI.) COMMENT COMMENT) ((* INSCR.EXACTLY.ONE.BELLINI (X Y Z) - THE INSCRIPTION X TELLS THAT) COMMENT COMMENT) ((* EXACTLY ONE CASKET WAS FASHIONED BY BELLINI) COMMENT COMMENT) ((*)
COMMENT COMMENT) ((* DECLARATIONS:) COMMENT COMMENT) ((TYPE GOLD,SILVER,LEAD : CASKET) (+ 1 NIL) TYPE) ((TYPE BELLINI (CASKET)) (+ 1 NIL) TYPE) ((TYPE CELLINI (CASKET)) (+ 1 NIL) TYPE) ((TYPE PORTRAIT (CASKET)) (+ 1 NIL) TYPE) ((TYPE INSCR.PORTRAIT
(INSCRIPT CASKET)) (+ 1 NIL) TYPE) ((TYPE NEG.INSCR.PORTRAIT (INSCRIPT CASKET)) (+ 1 NIL) TYPE) ((TYPE EXACTLY.ONE.BELLINI (CASKET CASKET)) (+ 1 NIL) TYPE) ((TYPE INSCR.EXACTLY.ONE.BELLINI (INSCRIPT CASKET CASKET)) (+ 1 NIL) TYPE) ((TYPE TRUTH
(INSCRIPT)) (+ 1 NIL) TYPE) ((TYPE INSCRIPTION (CASKET) :INSCRIPT) (+ 1 NIL) TYPE) ((* THE PORTRAIT IS IN EXACTLY ONE CASKET) COMMENT COMMENT) ((PORTRAIT (GOLD) OR PORTRAIT (SILVER)) (OR (+ 55 (40) NIL) (+ 55 (39) NIL)) QUANTIFICATION) ((NOT PORTRAIT
(GOLD) OR NOT PORTRAIT (SILVER)) (OR (NOT (+ 55 (40) NIL)) (NOT (+ 55 (39) NIL))) QUANTIFICATION) ((*) COMMENT COMMENT) ((* IMPLICATIONS TO BE DRAWN FROM INSCRIPTIONS:) COMMENT COMMENT) ((ALL X:INSCRIPT ALL Y:CASKET INSCR.PORTRAIT (X Y) AND TRUTH
(X) IMPL PORTRAIT (Y)) (ALL 42 (ALL 24 (IMPL (AND (+ 56 (42 24) NIL) (+ 44 (42) NIL)) (+ 55 (24) NIL)))) QUANTIFICATION) ((ALL X:INSCRIPT ALL Y:CASKET INSCR.PORTRAIT (X Y) AND NOT TRUTH (X) IMPL NOT PORTRAIT (Y)) (ALL 21 (ALL 17 (IMPL (AND (+
56 (21 17) NIL) (NOT (+ 44 (21) NIL))) (NOT (+ 55 (17) NIL))))) QUANTIFICATION) ((ALL X:INSCRIPT ALL Y:CASKET NEG.INSCR.PORTRAIT (X Y) AND TRUTH (X) IMPL NOT PORTRAIT (Y)) (ALL 15 (ALL 14 (IMPL (AND (+ 49 (15 14) NIL) (+ 44 (15) NIL)) (NOT (+
55 (14) NIL))))) QUANTIFICATION) ((ALL X:INSCRIPT ALL Y:CASKET NEG.INSCR.PORTRAIT (X Y) AND NOT TRUTH (X) IMPL PORTRAIT (Y)) (ALL 12 (ALL 32 (IMPL (AND (+ 49 (12 32) NIL) (NOT (+ 44 (12) NIL))) (+ 55 (32) NIL)))) QUANTIFICATION) ((ALL X:INSCRIPT
ALL Y,Z:CASKET INSCR.EXACTLY.ONE.BELLINI (X Y Z) AND TRUTH (X) IMPL EXACTLY.ONE.BELLINI (Y Z)) (ALL 33 (ALL 60 (ALL 59 (IMPL (AND (+ 47 (33 59 60) NIL) (+ 44 (33) NIL)) (+ 48 (59 60) NIL))))) QUANTIFICATION) ((ALL X:INSCRIPT ALL Y,Z:CASKET 
INSCR.EXACTLY.ONE.BELLINI (X Y Z) AND NOT TRUTH (X) IMPL NOT EXACTLY.ONE.BELLINI (Y Z)) (ALL 61 (ALL 63 (ALL 62 (IMPL (AND (+ 47 (61 62 63) NIL) (NOT (+ 44 (61) NIL))) (NOT (+ 48 (62 63) NIL)))))) QUANTIFICATION) ((*) COMMENT COMMENT) ((* EXACTLY
ONE CASKET WAS FASHIONED BY BELLINI) COMMENT COMMENT) ((ALL Y,Z:CASKET EXACTLY.ONE.BELLINI (Y Z) EQV (BELLINI (Y) OR BELLINI (Z)) AND (NOT BELLINI (Y) OR NOT BELLINI (Z))) (ALL 65 (ALL 64 (EQV (+ 48 (64 65) (KIND (EQV T 460))) (AND (OR (+ 57 (64)
(KIND (EQV NIL 460))) (+ 57 (65) (KIND (EQV NIL 460)))) (OR (NOT (+ 57 (64) (KIND (EQV NIL 460)))) (NOT (+ 57 (65) (KIND (EQV NIL 460))))))))) QUANTIFICATION) ((* BELLINI PUT ONLY TRUE AND CELLINI ONLY FALSE INSCRIPTIONS ON) COMMENT COMMENT) ((*
THE CASKETS) COMMENT COMMENT) ((ALL X:CASKET BELLINI (X) EQV TRUTH (INSCRIPTION (X))) (ALL 66 (EQV (+ 57 (66) (KIND (EQV T 490))) (+ 44 ((43 66)) (KIND (EQV NIL 490))))) QUANTIFICATION) ((ALL X:CASKET CELLINI (X) EQV NOT TRUTH (INSCRIPTION (X)))
(ALL 67 (EQV (+ 50 (67) (KIND (EQV T 500))) (NOT (+ 44 ((43 67)) (KIND (EQV NIL 500)))))) QUANTIFICATION) ((*) COMMENT COMMENT) ((* ACTUAL INSCRIPTIONS) COMMENT COMMENT) ((INSCR.EXACTLY.ONE.BELLINI (INSCRIPTION (SILVER) GOLD SILVER)) (+ 47 ((43
39) 40 39) NIL) QUANTIFICATION) ((NEG.INSCR.PORTRAIT (INSCRIPTION (GOLD) GOLD)) (+ 49 ((43 40) 40) NIL) QUANTIFICATION)))(COND (ST*LOAD.FLAG (PROGN (DT-RESET))
(PROG ((ADDRLIST (QUOTE (10236 10241 10246 10251 10256 10261 10266 10271 10276 ATP.MEMORY.NIL 10455 10410 10425 ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 10440 10395 10380 10365 ATP.MEMORY.NIL ATP.MEMORY.NIL 10350 10335 10321
ATP.MEMORY.NIL 10470 10465 10460 ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 10281 10286 ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 10316 ATP.MEMORY.NIL ATP.MEMORY.NIL
10311 ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 10306 ATP.MEMORY.NIL 10301 10296 ATP.MEMORY.NIL 10291 ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 10485
10500))) (DATALIST (QUOTE (15 "TRUE" NIL NIL NIL (DEFINED) NIL ((- 1 (POSITIVE))) ((+ 1 (NEGATIVE))) ((+ 1 (NIL))) ((- 1 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "FALSE" NIL NIL NIL (DEFINED) NIL ((- 2 (POSITIVE))) ((+ 2 (NEGATIVE))) ((+
2 (NIL))) ((- 2 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 "GOLD" CASKET (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT 5 "SILVER" CASKET (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT 5 "LEAD" CASKET (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT 15 "BELLINI"
NIL NIL (CASKET) NIL NIL ((- 57 (POSITIVE))) ((+ 57 (NEGATIVE))) ((+ 57 (NIL))) ((- 57 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "CELLINI" NIL NIL (CASKET) NIL NIL ((- 50 (POSITIVE))) ((+ 50 (NEGATIVE))) ((+ 50 (NIL))) ((- 50 (NIL))) NIL NIL
(DT*ST-KIND NIL) PREDICATE 15 "PORTRAIT" NIL NIL (CASKET) NIL NIL ((- 55 (POSITIVE))) ((+ 55 (NEGATIVE))) ((+ 55 (NIL))) ((- 55 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "INSCR.PORTRAIT" NIL NIL (INSCRIPT CASKET) NIL NIL ((- 56 (POSITIVE)))
((+ 56 (NEGATIVE))) ((+ 56 (NIL))) ((- 56 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "NEG.INSCR.PORTRAIT" NIL NIL (INSCRIPT CASKET) NIL NIL ((- 49 (POSITIVE))) ((+ 49 (NEGATIVE))) ((+ 49 (NIL))) ((- 49 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE
15 "EXACTLY.ONE.BELLINI" NIL NIL (CASKET CASKET) NIL NIL ((- 48 (POSITIVE))) ((+ 48 (NEGATIVE))) ((+ 48 (NIL))) ((- 48 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "INSCR.EXACTLY.ONE.BELLINI" NIL NIL (INSCRIPT CASKET CASKET) NIL NIL ((- 47 (POSITIVE)))
((+ 47 (NEGATIVE))) ((+ 47 (NIL))) ((- 47 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "TRUTH" NIL NIL (INSCRIPT) NIL NIL ((- 44 (POSITIVE))) ((+ 44 (NEGATIVE))) ((+ 44 (NIL))) ((- 44 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 14 "INSCRIPTION"
NIL INSCRIPT (CASKET) NIL NIL NIL NIL NIL 1 INSCRIPT (DT*ST-KIND NIL) FUNCTION 5 INSCRIPT NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 CASKET NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 INSCRIPT NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE
5 CASKET NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 INSCRIPT NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 CASKET NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 INSCRIPT NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 CASKET NIL (ST*DATA
NIL DT*ST-KIND SYS-VAR) VARIABLE 5 INSCRIPT NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 CASKET NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 CASKET NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 INSCRIPT NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
VARIABLE 5 CASKET NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 CASKET NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 CASKET NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 CASKET NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 CASKET NIL (ST*DATA
NIL DT*ST-KIND SYS-VAR) VARIABLE 5 CASKET NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE))) (INCREMENT (IDIFFERENCE MEM*SIZE 10500)) COUNTER1) (MEM-RESET) (COND ((IGREATERP MEM*SIZE 10500) (SETQ COUNTER1 68) (MAPC ADDRLIST (FUNCTION (LAMBDA (RADDR)
(SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1)) (COND ((EQ RADDR (QUOTE ATP.MEMORY.NIL)) RADDR) ((OR (EQ RADDR 0) (MINUSP RADDR)) RADDR) (T (IPLUS RADDR INCREMENT))))))) (SETQ COUNTER1 (ADD1 MEM*SIZE)) (MAPC DATALIST (FUNCTION (LAMBDA (DATA)
(SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1)) DATA))))) (T (COND ((NEQ MEM*SIZE 10500) (MEM-INITIALIZE 10500))) (SETQ COUNTER1 68) (MAPC ADDRLIST (FUNCTION (LAMBDA (RADDR) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1)) RADDR)))) (SETQ COUNTER1
(ADD1 MEM*SIZE)) (MAPC DATALIST (FUNCTION (LAMBDA (DATA) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1)) DATA)))))) (COND ((IGREATERP MEM*SIZE 10500) (RPAQ MEM*NEXT.RADR (IPLUS 10231 INCREMENT))) (T (RPAQ MEM*NEXT.RADR 10231))) (RPAQ MEM*NEXT.VADR
68) (RPAQ MEM*REST (ADD1 (IDIFFERENCE MEM*NEXT.RADR MEM*NEXT.VADR))) (RPAQ MEM*FIRST.REUSABLE.VADR NIL) (RPAQ MEM*LAST.REUSABLE.VADR NIL))
(PROGN (RPAQQ DT*SORT.ALL (INSCRIPT CASKET ANY)) (RPAQQ DT*SORT.NR 11) (RPAQQ DT*SORT.PROPERTIES (DT*MAX.SUBSORTS DT*LEAST.SUPERSORTS DT*TRANSITIVE.CLOSURE DT*INVERSE.TRANSITIVE.CLOSURE DT*MINIMAL.SUBSORTS DT*DIRECT.SUBSORTS DT*DIRECT.SUPERSORTS
DT*DISJOINT.SORTS DT*COMPLETION.SORT)) (RPAQQ DT*SORT.COMMON.COMPUTE.FLAG NIL) (RPAQQ DT*VARIABLE.COUNTER 0) (RPAQQ DT*CONSTANT.COUNTER 0) (RPAQQ DT*CONSTANT.ALL (38 39 40)) (RPAQQ DT*ABBREVIATIONS NIL) (RPAQQ DT*FUNCTION.COUNTER 0) (RPAQQ 
DT*FUNCTION.ALL (43)) (RPAQQ DT*FUNCTION.ADMISSIBLE.THEORIES (ASSOCIATIVE)) (RPAQQ DT*FUNCTION.ACTUAL.THEORIES NIL) (RPAQQ DT*FUNCTION.WITH.ARGUMENT.SYMMETRIES NIL) (RPAQQ DT*FUNCTION.COMPONENTS (PNAME ATTRIBUTES MAX.RANGE.SORT MAX.DOMAIN.SORTS
MIN.RANGE.SORTS SORT.LIST SORT.LIST.INVERSE SORT.TREE.CALC ARGUMENT.SYMMETRIES ARITY G.L.B.OF.RANGES)) (RPAQQ DT*PREDICATE.ADMISSABLE.ATTRIBUTES (SYMMETRIC DEFINED REFLEXIVE)) (RPAQQ DT*PREDICATE.COUNTER 0) (RPAQQ DT*EQUALITY.SYMBOLS ("=" ":="
"=:" ":=:")) (RPAQQ DT*EQUALITY.PREDICATES NIL) (RPAQQ DT*NONEQUALITY.PREDICATES (44 47 48 49 56 55 50 57 2 1)) (RPAQQ DT*PREDICATE.ALL (44 47 48 49 56 55 50 57 2 1)) (RPAQQ DT*PREDICATE.WITH.ATTRIBUTES NIL) (RPAQQ DT*PREDICATE.COMPONENTS (PNAME
POSITIVE.OCCURRENCES NEGATIVE.OCCURRENCES DOMAINSORTS ATTRIBUTES REFL.CLAUSE +ROTHERSIDES -ROTHERSIDES +SOTHERSIDES -SOTHERSIDES +TOTHERSIDES -TOTHERSIDES)) (RPAQQ DT*TRUE.PREDICATE 1) (RPAQQ DT*FALSE.PREDICATE 2) (RPAQQ DT*UNI.CREATES.VARIABLES
NIL) (RPAQQ DT*SIGN.MINUS.SYMBOLS (- --)) (RPAQQ DT*SIGN.PLUS.SYMBOLS (+ ++)) (RPAQQ DT*SYMBOL.KINDS (CONSTANT.ALL FUNCTION.ALL PREDICATE.ALL)))
(PROGN)
(PROGN (SETPROPLIST (QUOTE DT*PREDICATE.WITH.ATTRIBUTES) (QUOTE NIL)))
(PROGN (SETPROPLIST (QUOTE INSCRIPT) (QUOTE (DT*INVERSE.TRANSITIVE.CLOSURE (INSCRIPT ANY) DT*DIRECT.SUPERSORTS (ANY) DT*MINIMAL.SUBSORTS (INSCRIPT) DT*MAX.SUBSORTS ((INSCRIPT INSCRIPT) (CASKET) (ANY INSCRIPT)) DT*TRANSITIVE.CLOSURE (INSCRIPT)
DT*DIRECT.SUBSORTS NIL DT*ATTRIBUTE NIL DT*SORT.NUMBER 10))) (SETPROPLIST (QUOTE CASKET) (QUOTE (DT*LEAST.SUPERSORTS ((CASKET CASKET) (ANY ANY)) DT*INVERSE.TRANSITIVE.CLOSURE (CASKET ANY) DT*DIRECT.SUPERSORTS (ANY) DT*MINIMAL.SUBSORTS (CASKET)
DT*MAX.SUBSORTS ((INSCRIPT) (CASKET CASKET) (ANY CASKET)) DT*TRANSITIVE.CLOSURE (CASKET) DT*DIRECT.SUBSORTS NIL DT*ATTRIBUTE NIL DT*SORT.NUMBER 8))) (SETPROPLIST (QUOTE ANY) (QUOTE (DT*LEAST.SUPERSORTS ((CASKET ANY) (ANY ANY)) 
DT*INVERSE.TRANSITIVE.CLOSURE (ANY) DT*DIRECT.SUPERSORTS NIL DT*MINIMAL.SUBSORTS (CASKET) DT*MAX.SUBSORTS ((INSCRIPT INSCRIPT) (CASKET CASKET) (ANY ANY)) DT*TRANSITIVE.CLOSURE (INSCRIPT CASKET ANY) DT*DIRECT.SUBSORTS (INSCRIPT CASKET) DT*ATTRIBUTE
NIL DT*SORT.NUMBER 1))))
(PROGN (RPAQQ ST*STACK1 (NIL NIL NIL NIL NIL ((X_67 PROGN (DT-VARIABLE.DELETE 67) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_67) ST*SYMBOL.ADDRESSES)))) ((X_66 PROGN (DT-VARIABLE.DELETE 66) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_66) 
ST*SYMBOL.ADDRESSES)))) NIL NIL ((X_65 PROGN (DT-VARIABLE.DELETE 65) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_65) ST*SYMBOL.ADDRESSES))) (X_64 PROGN (DT-VARIABLE.DELETE 64) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_64) ST*SYMBOL.ADDRESSES))))
NIL NIL ((X_63 PROGN (DT-VARIABLE.DELETE 63) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_63) ST*SYMBOL.ADDRESSES))) (X_62 PROGN (DT-VARIABLE.DELETE 62) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_62) ST*SYMBOL.ADDRESSES))) (X_61 PROGN (
DT-VARIABLE.DELETE 61) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_61) ST*SYMBOL.ADDRESSES)))) ((X_60 PROGN (DT-VARIABLE.DELETE 60) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_60) ST*SYMBOL.ADDRESSES))) (X_59 PROGN (DT-VARIABLE.DELETE 59) (RPAQ
ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_59) ST*SYMBOL.ADDRESSES))) (X_33 PROGN (DT-VARIABLE.DELETE 33) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_33) ST*SYMBOL.ADDRESSES)))) ((X_32 PROGN (DT-VARIABLE.DELETE 32) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC
(QUOTE X_32) ST*SYMBOL.ADDRESSES))) (X_12 PROGN (DT-VARIABLE.DELETE 12) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_12) ST*SYMBOL.ADDRESSES)))) ((X_14 PROGN (DT-VARIABLE.DELETE 14) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_14) ST*SYMBOL.ADDRESSES)))
(X_15 PROGN (DT-VARIABLE.DELETE 15) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_15) ST*SYMBOL.ADDRESSES)))) ((X_17 PROGN (DT-VARIABLE.DELETE 17) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_17) ST*SYMBOL.ADDRESSES))) (X_21 PROGN (DT-VARIABLE.DELETE
21) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_21) ST*SYMBOL.ADDRESSES)))) ((X_24 PROGN (DT-VARIABLE.DELETE 24) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_24) ST*SYMBOL.ADDRESSES))) (X_42 PROGN (DT-VARIABLE.DELETE 42) (RPAQ ST*SYMBOL.ADDRESSES
(REMASSOC (QUOTE X_42) ST*SYMBOL.ADDRESSES)))) NIL NIL NIL NIL NIL ((INSCRIPTION PROGN (DT-FUNCTION.DELETE 43) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE INSCRIPTION) ST*SYMBOL.ADDRESSES)))) ((TRUTH PROGN (DT-PREDICATE.DELETE 44) (RPAQ 
ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE TRUTH) ST*SYMBOL.ADDRESSES)))) ((INSCR.EXACTLY.ONE.BELLINI PROGN (DT-PREDICATE.DELETE 47) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE INSCR.EXACTLY.ONE.BELLINI) ST*SYMBOL.ADDRESSES)))) ((EXACTLY.ONE.BELLINI
PROGN (DT-PREDICATE.DELETE 48) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE EXACTLY.ONE.BELLINI) ST*SYMBOL.ADDRESSES)))) ((NEG.INSCR.PORTRAIT PROGN (DT-PREDICATE.DELETE 49) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE NEG.INSCR.PORTRAIT) 
ST*SYMBOL.ADDRESSES)))) ((INSCR.PORTRAIT PROGN (DT-PREDICATE.DELETE 56) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE INSCR.PORTRAIT) ST*SYMBOL.ADDRESSES))) (INSCRIPT PROGN (DT-SORT.ST.REMOVE (QUOTE INSCRIPT)) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC
(QUOTE INSCRIPT) ST*SYMBOL.ADDRESSES))) (INSCRIPT REMPROP (QUOTE INSCRIPT) (QUOTE ST*DATA))) ((PORTRAIT PROGN (DT-PREDICATE.DELETE 55) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE PORTRAIT) ST*SYMBOL.ADDRESSES)))) ((CELLINI PROGN (DT-PREDICATE.DELETE
50) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE CELLINI) ST*SYMBOL.ADDRESSES)))) ((BELLINI PROGN (DT-PREDICATE.DELETE 57) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE BELLINI) ST*SYMBOL.ADDRESSES)))) ((LEAD PROGN (DT-CONSTANT.DELETE 38) (RPAQ 
ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE LEAD) ST*SYMBOL.ADDRESSES))) (SILVER PROGN (DT-CONSTANT.DELETE 39) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE SILVER) ST*SYMBOL.ADDRESSES))) (GOLD PROGN (DT-CONSTANT.DELETE 40) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC
(QUOTE GOLD) ST*SYMBOL.ADDRESSES))) (CASKET PROGN (DT-SORT.ST.REMOVE (QUOTE CASKET)) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE CASKET) ST*SYMBOL.ADDRESSES))) (CASKET REMPROP (QUOTE CASKET) (QUOTE ST*DATA))) NIL NIL NIL NIL NIL NIL NIL NIL NIL
NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL ((FALSE PROGN (DT-PREDICATE.DELETE 2) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE FALSE) ST*SYMBOL.ADDRESSES))) (TRUE PROGN (DT-PREDICATE.DELETE 1) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE TRUE)
ST*SYMBOL.ADDRESSES))) (ANY PROGN (DT-SORT.ST.REMOVE (QUOTE ANY)) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE ANY) ST*SYMBOL.ADDRESSES))) (ANY REMPROP (QUOTE ANY) (QUOTE ST*DATA))))) (RPAQQ ST*SYMBOL.ADDRESSES (NIL (ANY . T) (TRUE . 1) (FALSE .
2) (CASKET . T) (GOLD . 40) (SILVER . 39) (LEAD . 38) (BELLINI . 57) (CELLINI . 50) (PORTRAIT . 55) (INSCRIPT . T) (INSCR.PORTRAIT . 56) (NEG.INSCR.PORTRAIT . 49) (EXACTLY.ONE.BELLINI . 48) (INSCR.EXACTLY.ONE.BELLINI . 47) (TRUTH . 44) (INSCRIPTION
. 43) (X_42 . 42) (X_24 . 24) (X_21 . 21) (X_17 . 17) (X_15 . 15) (X_14 . 14) (X_12 . 12) (X_32 . 32) (X_33 . 33) (X_59 . 59) (X_60 . 60) (X_61 . 61) (X_62 . 62) (X_63 . 63) (X_64 . 64) (X_65 . 65) (X_66 . 66) (X_67 . 67))))))))STOP
 
