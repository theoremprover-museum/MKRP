(COND ((FMT-LOAD "25-JAN-85 13:32:31"
NIL(((* PROBLEM E89) COMMENT COMMENT) ((*) COMMENT COMMENT) ((* AGAIN, EACH OF A,B,C IS A KNIGHT OR A KNAVE AND AXACTLY ONE OF THEM) COMMENT COMMENT) ((* IS A WEREWOLF. THEY MAKE THE FOLLOWING STATEMENTS:) COMMENT COMMENT) ((* A: I AM A WEREWOLF)
COMMENT COMMENT) ((* B: I AM A WEREWOLF) COMMENT COMMENT) ((* C: AT MOST ONE OF US IS A KNIGHT) COMMENT COMMENT) ((* GIVE A COMPLETE CLASSIFICATION OF A,B, AND C.) COMMENT COMMENT) ((*) COMMENT COMMENT) ((*) COMMENT COMMENT) ((*) COMMENT COMMENT)
((* WE DEFINE THE FOLLOWING FUNCTION:) COMMENT COMMENT) ((* STATE (X) MAPS AN ELEMENT OF THE SORT PERSON TO AN ELEMENT OF THE) COMMENT COMMENT) ((* SORT STATEMENT. IT MEANS THAT PERSON X MADE STATEMENT STATE (X)) COMMENT COMMENT) ((*) COMMENT
COMMENT) ((* WE DEFINE THE FOLLOWING PREDICATES:) COMMENT COMMENT) ((* TRUTH (X) - STATEMENT X IS TRUE) COMMENT COMMENT) ((* KNIGHT (X) - PERSON X IS A KNIGHT) COMMENT COMMENT) ((* KNAVE (X) - PERSON X IS A KNAVE) COMMENT COMMENT) ((* WEREWOLF
(X) - PERSON X IS A WEREWOLF) COMMENT COMMENT) ((* STATE.WEREWOLF (Y X) - STATEMENT X TELLS THAT PERSON Y IS A WEREWOLF) COMMENT COMMENT) ((* AT-MOST-ONE KNIGHT (X Y Z) - AT MOST ONE PERSON X,Y OR Z IS A KNIGHT) COMMENT COMMENT) ((* 
STATE.AT-MOST-ONE-KNIGHT (S X Y Z) - STATEMENT S TELLS THAT AT MOST ONE) COMMENT COMMENT) ((* PERSON X,Y OR Z IS A KNIGHT) COMMENT COMMENT) ((*) COMMENT COMMENT) ((*) COMMENT COMMENT) ((*) COMMENT COMMENT) ((* DECLARATIONS:) COMMENT COMMENT) ((TYPE
A,B,C : PERSON) (+ 1 NIL) TYPE) ((TYPE STATE (PERSON) :STATEMENT) (+ 1 NIL) TYPE) ((TYPE KNIGHT (PERSON)) (+ 1 NIL) TYPE) ((TYPE KNAVE (PERSON)) (+ 1 NIL) TYPE) ((TYPE WEREWOLF (PERSON)) (+ 1 NIL) TYPE) ((TYPE TRUTH (STATEMENT)) (+ 1 NIL) TYPE)
((TYPE STATE.WEREWOLF (STATEMENT PERSON)) (+ 1 NIL) TYPE) ((TYPE AT-MOST-ONE-KNIGHT (PERSON PERSON PERSON)) (+ 1 NIL) TYPE) ((TYPE STATE.AT-MOST-ONE-KNIGHT (STATEMENT PERSON PERSON PERSON)) (+ 1 NIL) TYPE) ((*) COMMENT COMMENT) ((* EVERY INHABITANT
IS EITHER A KNIGHT OR A KNAVE:) COMMENT COMMENT) ((ALL X:PERSON KNIGHT (X) OR KNAVE (X)) (ALL 14 (OR (+ 7 (14) NIL) (+ 8 (14) NIL))) QUANTIFICATION) ((ALL X:PERSON NOT (KNIGHT (X) AND KNAVE (X))) (ALL 15 (NOT (AND (+ 7 (15) NIL) (+ 8 (15) NIL))))
QUANTIFICATION) ((*) COMMENT COMMENT) ((* KNIGHT ALWAYS TELL THE TRUTH AND KNAVE ALWAYS LIE:) COMMENT COMMENT) ((ALL X:PERSON KNIGHT (X) EQV TRUTH (STATE (X))) (ALL 16 (EQV (+ 7 (16) NIL) (+ 10 ((6 16)) NIL))) QUANTIFICATION) ((ALL X:PERSON KNAVE
(X) EQV NOT (TRUTH (STATE (X)))) (ALL 17 (EQV (+ 8 (17) NIL) (NOT (+ 10 ((6 17)) NIL)))) QUANTIFICATION) ((*) COMMENT COMMENT) ((* A WEREWOLF CAN BE A KNIGHT OR A KNAVE:) COMMENT COMMENT) ((ALL X:PERSON WEREWOLF (X) IMPL KNIGHT (X) OR KNAVE (X))
(ALL 18 (IMPL (+ 9 (18) NIL) (OR (+ 7 (18) NIL) (+ 8 (18) NIL)))) QUANTIFICATION) ((*) COMMENT COMMENT) ((* THERE IS EXACTLY ONE WEREWOLF:) COMMENT COMMENT) ((WEREWOLF (A) OR WEREWOLF (B) OR WEREWOLF (C)) (OR (+ 9 (3) NIL) (OR (+ 9 (4) NIL) (+
9 (5) NIL))) QUANTIFICATION) ((NOT (WEREWOLF (A) AND WEREWOLF (B) OR WEREWOLF (B) AND WEREWOLF (C) OR WEREWOLF (C) AND WEREWOLF (A))) (NOT (OR (AND (+ 9 (3) NIL) (+ 9 (4) NIL)) (OR (AND (+ 9 (4) NIL) (+ 9 (5) NIL)) (AND (+ 9 (5) NIL) (+ 9 (3)
NIL))))) QUANTIFICATION) ((*) COMMENT COMMENT) ((* EXPLANATION OF AT-MOST-ONE-KNIGHT:) COMMENT COMMENT) ((ALL X,Y,Z:PERSON AT-MOST-ONE-KNIGHT (X Y Z) EQV NOT (KNIGHT (X) AND KNIGHT (Y) OR KNIGHT (Y) AND KNIGHT (Z) OR KNIGHT (Z) AND KNIGHT (X)))
(ALL 21 (ALL 20 (ALL 19 (EQV (+ 12 (19 20 21) NIL) (NOT (OR (AND (+ 7 (19) NIL) (+ 7 (20) NIL)) (OR (AND (+ 7 (20) NIL) (+ 7 (21) NIL)) (AND (+ 7 (21) NIL) (+ 7 (19) NIL))))))))) QUANTIFICATION) ((*) COMMENT COMMENT) ((* IMPLICATIONS ABOUT STATEMENTS:)
COMMENT COMMENT) ((ALL X:STATEMENT ALL Y:PERSON STATE.WEREWOLF (X Y) AND TRUTH (X) IMPL WEREWOLF (Y)) (ALL 23 (ALL 22 (IMPL (AND (+ 11 (23 22) NIL) (+ 10 (23) NIL)) (+ 9 (22) NIL)))) QUANTIFICATION) ((ALL X:STATEMENT ALL Y:PERSON STATE.WEREWOLF
(X Y) AND NOT (TRUTH (X)) IMPL NOT (WEREWOLF (Y))) (ALL 24 (ALL 25 (IMPL (AND (+ 11 (24 25) NIL) (NOT (+ 10 (24) NIL))) (NOT (+ 9 (25) NIL))))) QUANTIFICATION) ((ALL S:STATEMENT ALL X,Y,Z:PERSON STATE.AT-MOST-ONE-KNIGHT (S X Y Z) AND TRUTH (S)
IMPL AT-MOST-ONE-KNIGHT (X Y Z)) (ALL 26 (ALL 29 (ALL 28 (ALL 27 (IMPL (AND (+ 13 (26 27 28 29) NIL) (+ 10 (26) NIL)) (+ 12 (27 28 29) NIL)))))) QUANTIFICATION) ((ALL S:STATEMENT ALL X,Y,Z:PERSON STATE.AT-MOST-ONE-KNIGHT (S X Y Z) AND NOT (TRUTH
(S)) IMPL NOT (AT-MOST-ONE-KNIGHT (X Y Z))) (ALL 30 (ALL 33 (ALL 32 (ALL 31 (IMPL (AND (+ 13 (30 31 32 33) NIL) (NOT (+ 10 (30) NIL))) (NOT (+ 12 (31 32 33) NIL))))))) QUANTIFICATION) ((*) COMMENT COMMENT) ((* ACTUAL STATEMENTS:) COMMENT COMMENT)
((STATE.WEREWOLF (STATE (A) A)) (+ 11 ((6 3) 3) NIL) QUANTIFICATION) ((STATE.WEREWOLF (STATE (B) B)) (+ 11 ((6 4) 4) NIL) QUANTIFICATION) ((STATE.AT-MOST-ONE-KNIGHT (STATE (C) A B C)) (+ 13 ((6 5) 3 4 5) NIL) QUANTIFICATION)))(COND (ST*LOAD.FLAG (PROGN
(DT-RESET))
(MEM-RESTORE NIL NIL 34 10236 10500 (QUOTE (10241 10246 10251 10256 10261 10266 10271 10276 10281 10286 10296 10291 10301 10306 10311 10316 10321 10326 10331 10336 10351 10366 10381 10396 10411 10426 10441 10455 10460 10465 10470 10485 10500))(QUOTE
(15 TRUE NIL NIL NIL (DEFINED) NIL ((- 1 (POSITIVE))) ((+ 1 (NEGATIVE))) ((+ 1 (NIL))) ((- 1 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 FALSE NIL NIL NIL (DEFINED) NIL ((- 2 (POSITIVE))) ((+ 2 (NEGATIVE))) ((+ 2 (NIL))) ((- 2 (NIL))) NIL NIL
(DT*ST-KIND NIL) PREDICATE 5 A PERSON (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT 5 B PERSON (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT 5 C PERSON (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT 14 STATE NIL STATEMENT (PERSON) NIL NIL NIL NIL NIL 1
STATEMENT (DT*ST-KIND NIL) FUNCTION 15 KNIGHT NIL NIL (PERSON) NIL NIL ((- 7 (POSITIVE))) ((+ 7 (NEGATIVE))) ((+ 7 (NIL))) ((- 7 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 KNAVE NIL NIL (PERSON) NIL NIL ((- 8 (POSITIVE))) ((+ 8 (NEGATIVE)))
((+ 8 (NIL))) ((- 8 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 WEREWOLF NIL NIL (PERSON) NIL NIL ((- 9 (POSITIVE))) ((+ 9 (NEGATIVE))) ((+ 9 (NIL))) ((- 9 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 TRUTH NIL NIL (STATEMENT) NIL NIL ((- 10
(POSITIVE))) ((+ 10 (NEGATIVE))) ((+ 10 (NIL))) ((- 10 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 STATE.WEREWOLF NIL NIL (STATEMENT PERSON) NIL NIL ((- 11 (POSITIVE))) ((+ 11 (NEGATIVE))) ((+ 11 (NIL))) ((- 11 (NIL))) NIL NIL (DT*ST-KIND NIL)
PREDICATE 15 AT-MOST-ONE-KNIGHT NIL NIL (PERSON PERSON PERSON) NIL NIL ((- 12 (POSITIVE))) ((+ 12 (NEGATIVE))) ((+ 12 (NIL))) ((- 12 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 STATE.AT-MOST-ONE-KNIGHT NIL NIL (STATEMENT PERSON PERSON PERSON)
NIL NIL ((- 13 (POSITIVE))) ((+ 13 (NEGATIVE))) ((+ 13 (NIL))) ((- 13 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA
NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 STATEMENT NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 STATEMENT NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON
NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 STATEMENT NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 5 STATEMENT NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 PERSON NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE)))(PROGN
(RPAQQ DT*SORT.ALL (STATEMENT PERSON ANY)) (RPAQQ DT*SORT.NR 4) (RPAQQ DT*SORT.PROPERTIES (DT*MAX.SUBSORTS DT*LEAST.SUPERSORTS DT*TRANSITIVE.CLOSURE DT*INVERSE.TRANSITIVE.CLOSURE DT*MINIMAL.SUBSORTS DT*DIRECT.SUBSORTS DT*DIRECT.SUPERSORTS 
DT*DISJOINT.SORTS DT*COMPLETION.SORT)) (RPAQQ DT*SORT.COMMON.COMPUTE.FLAG NIL) (RPAQQ DT*VARIABLE.COUNTER 0) (RPAQQ DT*CONSTANT.COUNTER 0) (RPAQQ DT*CONSTANT.ALL (5 4 3)) (RPAQQ DT*ABBREVIATIONS NIL) (RPAQQ DT*FUNCTION.COUNTER 0) (RPAQQ DT*FUNCTION.ALL
(6)) (RPAQQ DT*FUNCTION.ADMISSIBLE.THEORIES (ASSOCIATIVE)) (RPAQQ DT*FUNCTION.ACTUAL.THEORIES NIL) (RPAQQ DT*FUNCTION.WITH.ARGUMENT.SYMMETRIES NIL) (RPAQQ DT*FUNCTION.COMPONENTS (PNAME ATTRIBUTES MAX.RANGE.SORT MAX.DOMAIN.SORTS MIN.RANGE.SORTS
SORT.LIST SORT.LIST.INVERSE SORT.TREE.CALC ARGUMENT.SYMMETRIES ARITY G.L.B.OF.RANGES)) (RPAQQ DT*PREDICATE.ADMISSABLE.ATTRIBUTES (SYMMETRIC DEFINED REFLEXIVE)) (RPAQQ DT*PREDICATE.COUNTER 0) (RPAQQ DT*EQUALITY.SYMBOLS ("=" ":=" "=:" ":=:")) (RPAQQ
DT*EQUALITY.PREDICATES NIL) (RPAQQ DT*NONEQUALITY.PREDICATES (13 12 11 10 9 8 7 2 1)) (RPAQQ DT*PREDICATE.ALL (13 12 11 10 9 8 7 2 1)) (RPAQQ DT*PREDICATE.WITH.ATTRIBUTES NIL) (RPAQQ DT*PREDICATE.COMPONENTS (PNAME POSITIVE.OCCURRENCES 
NEGATIVE.OCCURRENCES DOMAINSORTS ATTRIBUTES REFL.CLAUSE +ROTHERSIDES -ROTHERSIDES +SOTHERSIDES -SOTHERSIDES +TOTHERSIDES -TOTHERSIDES)) (RPAQQ DT*TRUE.PREDICATE 1) (RPAQQ DT*FALSE.PREDICATE 2) (RPAQQ DT*UNI.CREATES.VARIABLES NIL) (RPAQQ 
DT*SIGN.MINUS.SYMBOLS (- --)) (RPAQQ DT*SIGN.PLUS.SYMBOLS (+ ++)) (RPAQQ DT*SYMBOL.KINDS (CONSTANT.ALL FUNCTION.ALL PREDICATE.ALL)))
(PROGN)
(PROGN (SETPROPLIST (QUOTE DT*PREDICATE.WITH.ATTRIBUTES) (QUOTE (DEFINED (2 1)))))
(PROGN (SETPROPLIST (QUOTE STATEMENT) (QUOTE (DT*ATTRIBUTE NIL DT*INVERSE.TRANSITIVE.CLOSURE (STATEMENT ANY) DT*DIRECT.SUPERSORTS (ANY) DT*MINIMAL.SUBSORTS (STATEMENT) DT*MAX.SUBSORTS ((STATEMENT STATEMENT) (PERSON) (ANY STATEMENT)) 
DT*TRANSITIVE.CLOSURE (STATEMENT) DT*SORT.NUMBER 3 DT*DIRECT.SUBSORTS NIL))) (SETPROPLIST (QUOTE PERSON) (QUOTE (DT*ATTRIBUTE NIL DT*INVERSE.TRANSITIVE.CLOSURE (PERSON ANY) DT*DIRECT.SUPERSORTS (ANY) DT*MINIMAL.SUBSORTS (PERSON) DT*MAX.SUBSORTS
((STATEMENT) (PERSON PERSON) (ANY PERSON)) DT*TRANSITIVE.CLOSURE (PERSON) DT*SORT.NUMBER 2 DT*DIRECT.SUBSORTS NIL))) (SETPROPLIST (QUOTE ANY) (QUOTE (DT*ATTRIBUTE NIL DT*INVERSE.TRANSITIVE.CLOSURE (ANY) DT*DIRECT.SUPERSORTS NIL DT*MINIMAL.SUBSORTS
(PERSON) DT*MAX.SUBSORTS ((STATEMENT STATEMENT) (PERSON PERSON) (ANY ANY)) DT*TRANSITIVE.CLOSURE (STATEMENT PERSON ANY) DT*SORT.NUMBER 1 DT*DIRECT.SUBSORTS (STATEMENT PERSON)))))
(PROGN (RPAQQ ST*STACK1 (NIL NIL NIL NIL NIL NIL ((X_33 PROGN (DT-VARIABLE.DELETE 33) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_33) ST*SYMBOL.ADDRESSES))) (X_32 PROGN (DT-VARIABLE.DELETE 32) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_32)
ST*SYMBOL.ADDRESSES))) (X_31 PROGN (DT-VARIABLE.DELETE 31) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_31) ST*SYMBOL.ADDRESSES))) (X_30 PROGN (DT-VARIABLE.DELETE 30) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_30) ST*SYMBOL.ADDRESSES)))) ((X_29
PROGN (DT-VARIABLE.DELETE 29) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_29) ST*SYMBOL.ADDRESSES))) (X_28 PROGN (DT-VARIABLE.DELETE 28) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_28) ST*SYMBOL.ADDRESSES))) (X_27 PROGN (DT-VARIABLE.DELETE 27)
(RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_27) ST*SYMBOL.ADDRESSES))) (X_26 PROGN (DT-VARIABLE.DELETE 26) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_26) ST*SYMBOL.ADDRESSES)))) ((X_25 PROGN (DT-VARIABLE.DELETE 25) (RPAQ ST*SYMBOL.ADDRESSES
(REMASSOC (QUOTE X_25) ST*SYMBOL.ADDRESSES))) (X_24 PROGN (DT-VARIABLE.DELETE 24) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_24) ST*SYMBOL.ADDRESSES)))) ((X_22 PROGN (DT-VARIABLE.DELETE 22) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_22) 
ST*SYMBOL.ADDRESSES))) (X_23 PROGN (DT-VARIABLE.DELETE 23) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_23) ST*SYMBOL.ADDRESSES)))) NIL NIL ((X_21 PROGN (DT-VARIABLE.DELETE 21) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_21) ST*SYMBOL.ADDRESSES)))
(X_20 PROGN (DT-VARIABLE.DELETE 20) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_20) ST*SYMBOL.ADDRESSES))) (X_19 PROGN (DT-VARIABLE.DELETE 19) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_19) ST*SYMBOL.ADDRESSES)))) NIL NIL NIL NIL NIL NIL ((X_18
PROGN (DT-VARIABLE.DELETE 18) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_18) ST*SYMBOL.ADDRESSES)))) NIL NIL ((X_17 PROGN (DT-VARIABLE.DELETE 17) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_17) ST*SYMBOL.ADDRESSES)))) ((X_16 PROGN (
DT-VARIABLE.DELETE 16) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_16) ST*SYMBOL.ADDRESSES)))) NIL NIL ((X_15 PROGN (DT-VARIABLE.DELETE 15) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_15) ST*SYMBOL.ADDRESSES)))) ((X_14 PROGN (DT-VARIABLE.DELETE
14) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_14) ST*SYMBOL.ADDRESSES)))) NIL NIL ((STATE.AT-MOST-ONE-KNIGHT PROGN (DT-PREDICATE.DELETE 13) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE STATE.AT-MOST-ONE-KNIGHT) ST*SYMBOL.ADDRESSES)))) ((
AT-MOST-ONE-KNIGHT PROGN (DT-PREDICATE.DELETE 12) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE AT-MOST-ONE-KNIGHT) ST*SYMBOL.ADDRESSES)))) ((STATE.WEREWOLF PROGN (DT-PREDICATE.DELETE 11) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE STATE.WEREWOLF)
ST*SYMBOL.ADDRESSES)))) ((TRUTH PROGN (DT-PREDICATE.DELETE 10) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE TRUTH) ST*SYMBOL.ADDRESSES)))) ((WEREWOLF PROGN (DT-PREDICATE.DELETE 9) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE WEREWOLF) ST*SYMBOL.ADDRESSES)))
) ((KNAVE PROGN (DT-PREDICATE.DELETE 8) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE KNAVE) ST*SYMBOL.ADDRESSES)))) ((KNIGHT PROGN (DT-PREDICATE.DELETE 7) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE KNIGHT) ST*SYMBOL.ADDRESSES)))) ((STATE PROGN (
DT-FUNCTION.DELETE 6) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE STATE) ST*SYMBOL.ADDRESSES))) (STATEMENT PROGN (DT-SORT.ST.REMOVE (QUOTE STATEMENT)) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE STATEMENT) ST*SYMBOL.ADDRESSES))) (STATEMENT REMPROP
(QUOTE STATEMENT) (QUOTE ST*DATA))) ((C PROGN (DT-CONSTANT.DELETE 5) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE C) ST*SYMBOL.ADDRESSES))) (B PROGN (DT-CONSTANT.DELETE 4) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE B) ST*SYMBOL.ADDRESSES))) (A PROGN
(DT-CONSTANT.DELETE 3) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE A) ST*SYMBOL.ADDRESSES))) (PERSON PROGN (DT-SORT.ST.REMOVE (QUOTE PERSON)) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE PERSON) ST*SYMBOL.ADDRESSES))) (PERSON REMPROP (QUOTE PERSON)
(QUOTE ST*DATA))) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL ((FALSE PROGN (DT-PREDICATE.DELETE 2) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE FALSE) ST*SYMBOL.ADDRESSES))) (TRUE
PROGN (DT-PREDICATE.DELETE 1) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE TRUE) ST*SYMBOL.ADDRESSES))) (ANY PROGN (DT-SORT.ST.REMOVE (QUOTE ANY)) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE ANY) ST*SYMBOL.ADDRESSES))) (ANY REMPROP (QUOTE ANY) (QUOTE
ST*DATA))))) (RPAQQ ST*SYMBOL.ADDRESSES (NIL (ANY . T) (TRUE . 1) (FALSE . 2) (PERSON . T) (A . 3) (B . 4) (C . 5) (STATEMENT . T) (STATE . 6) (KNIGHT . 7) (KNAVE . 8) (WEREWOLF . 9) (TRUTH . 10) (STATE.WEREWOLF . 11) (AT-MOST-ONE-KNIGHT . 12)
(STATE.AT-MOST-ONE-KNIGHT . 13) (X_14 . 14) (X_15 . 15) (X_16 . 16) (X_17 . 17) (X_18 . 18) (X_19 . 19) (X_20 . 20) (X_21 . 21) (X_23 . 23) (X_22 . 22) (X_24 . 24) (X_25 . 25) (X_26 . 26) (X_27 . 27) (X_28 . 28) (X_29 . 29) (X_30 . 30) (X_31 .
31) (X_32 . 32) (X_33 . 33))))))))STOP
 
