(COND ((FMT-LOAD "31-JAN-85 13:29:23"
NIL(((* 70A) COMMENT COMMENT) ((* THE FOURTH AND FINAL TALE IS THE MOST BAFFLING OF ALL,AND IT ILLUSTRATES) COMMENT COMMENT) ((* A LOGICAL PRINCIPLE OF BASIC IMPORTANCE.) COMMENT COMMENT) ((* THE SUITOR OF THE LAST STORY PASSED ALL THREE TESTS
AND HAPPILY) COMMENT COMMENT) ((* CLAIMED PORTIA III AS HIS BRIDE.THEY HAD MANY CHILDREN,) COMMENT COMMENT) ((* GREAT-GRANDCHILDREN,ETC.) COMMENT COMMENT) ((* SEVERAL GENERATIONS LATER A DESCENDANT WAS BORN IN AMERICA WHO) COMMENT COMMENT) ((*
LOOKED SO MUCH LIKE THE ANCESTRAL PORTRAITS THAT SHE WAS NAMED PORTIA NTH.) COMMENT COMMENT) ((* WHEN THIS PORTIA GREW TO YOUNG WOMANHOOD SHE ALSO DECIDED TO SELECT HER) COMMENT COMMENT) ((* HUSBAND BY THE CASKET METHOD.) COMMENT COMMENT) ((*
THE TEST SHE USED APPEARED SIMPLE ENOUGH;SHE HAD ONLY TWO CASKETS,) COMMENT COMMENT) ((* SILVER AND GOLD,IN ONE OF WHICH WAS PORTIAS PRTRAIT.) COMMENT COMMENT) ((* THE LIDS BORE THE FOLLOWING INSCRIPTIONS:) COMMENT COMMENT) ((* GOLD: THE PORTRAIT
IS NOT IN HERE.) COMMENT COMMENT) ((* SILVER:EXACTLY ONE OF THESE TWO STATEMENTS IS TRUE.) COMMENT COMMENT) ((* WHICH CASKET WOULD YOU CHOOSE?) COMMENT COMMENT) ((*) COMMENT COMMENT) ((* WE DEFINE THE FOLLOWING PREDICATES:) COMMENT COMMENT) ((*
PORTRAIT,TRUTH,INSCRIPT.PORTRAIT,NEG.INSCRIPT.PORTRAIT MEAN THE SAME AS DESCRIBED) COMMENT COMMENT) ((* IN 67,68 AND 69.000000) COMMENT COMMENT) ((* INSCR.EXACTLY.ONE.STAT.TRUE (X Y Z) ...THE INSCRIPTION X TELLS THAT) COMMENT COMMENT) ((* EXACTLY
ONE OF THE STATEMENTS Y Z IS TRUE.) COMMENT COMMENT) ((* EXACTLY.ONE.STAT.TRUE (X Y) ...EXACTLY ONE OF THE STATEMENTS X Y IS TRUE) COMMENT COMMENT) ((*) COMMENT COMMENT) ((* WE DEFINE THE FOLLOWING FUNCTIONS:) COMMENT COMMENT) ((* INSCRIPTION
MEANS THE SAME AS DESCRIBED IN 67,68,69) COMMENT COMMENT) ((*) COMMENT COMMENT) ((* DECLARATIONS) COMMENT COMMENT) ((*) COMMENT COMMENT) ((TYPE GOLD,SILVER : CASKET) (+ 1 NIL) TYPE) ((TYPE INSCRIPTION (CASKET) :INSCRIPT) (+ 1 NIL) TYPE) ((TYPE
PORTRAIT (CASKET)) (+ 1 NIL) TYPE) ((TYPE TRUTH (INSCRIPT)) (+ 1 NIL) TYPE) ((TYPE INSCRIPT.PORTRAIT (INSCRIPT CASKET)) (+ 1 NIL) TYPE) ((TYPE NEG.INSCRIPT.PORTRAIT (INSCRIPT CASKET)) (+ 1 NIL) TYPE) ((TYPE INSCR.EXACTLY.ONE.STAT.TRUE (INSCRIPT
INSCRIPT INSCRIPT)) (+ 1 NIL) TYPE) ((TYPE EXACTLY.ONE.STAT.TRUE (INSCRIPT INSCRIPT)) (+ 1 NIL) TYPE) ((*) COMMENT COMMENT) ((* THE PORTRAIT IS IN EXACTLY ONE CASKET) COMMENT COMMENT) ((*) COMMENT COMMENT) ((PORTRAIT (GOLD) OR PORTRAIT (SILVER))
(OR (+ 36 (39) NIL) (+ 36 (38) NIL)) QUANTIFICATION) ((NOT (PORTRAIT (GOLD) AND PORTRAIT (SILVER))) (NOT (AND (+ 36 (39) NIL) (+ 36 (38) NIL))) QUANTIFICATION) ((*) COMMENT COMMENT) ((* MEANING OF THE PREDICATE EXACTLY.ONE.STAT.TRUE) COMMENT COMMENT)
((*) COMMENT COMMENT) ((ALL X,Y : INSCRIPT EXACTLY.ONE.STAT.TRUE (X Y) EQV (TRUTH (X) OR TRUTH (Y)) AND (NOT (TRUTH (X)) OR NOT (TRUTH (Y)))) (ALL 29 (ALL 30 (EQV (+ 31 (30 29) NIL) (AND (OR (+ 35 (30) NIL) (+ 35 (29) NIL)) (OR (NOT (+ 35 (30)
NIL)) (NOT (+ 35 (29) NIL))))))) QUANTIFICATION) ((*) COMMENT COMMENT) ((* ACTUAL INSCRIPTIONS) COMMENT COMMENT) ((*) COMMENT COMMENT) ((NEG.INSCRIPT.PORTRAIT (INSCRIPTION (GOLD) GOLD)) (+ 33 ((37 39) 39) NIL) QUANTIFICATION) ((
INSCR.EXACTLY.ONE.STAT.TRUE (INSCRIPTION (SILVER) INSCRIPTION (GOLD) INSCRIPTION (SILVER))) (+ 32 ((37 38) (37 39) (37 38)) NIL) QUANTIFICATION)))(COND (ST*LOAD.FLAG (PROGN (DT-RESET))
(MEM-RESTORE 12 28 40 10346 10500 (QUOTE (10470 10465 10460 10446 10431 10416 10401 10386 10371 10356 10351 0 ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL -28 -15 -14 -13 ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 10485 10500))(QUOTE (15 TRUE NIL NIL NIL (DEFINED)
NIL ((- 1 (POSITIVE))) ((+ 1 (NEGATIVE))) ((+ 1 (NIL))) ((- 1 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 FALSE NIL NIL NIL (DEFINED) NIL ((- 2 (POSITIVE))) ((+ 2 (NEGATIVE))) ((+ 2 (NIL))) ((- 2 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5
GOLD CASKET (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT 5 SILVER CASKET (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT 14 INSCRIPTION NIL INSCRIPT (CASKET) NIL NIL NIL NIL NIL 1 INSCRIPT (DT*ST-KIND NIL) FUNCTION 15 PORTRAIT NIL NIL (CASKET) NIL NIL
((- 36 (POSITIVE))) ((+ 36 (NEGATIVE))) ((+ 36 (NIL))) ((- 36 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 TRUTH NIL NIL (INSCRIPT) NIL NIL ((- 35 (POSITIVE))) ((+ 35 (NEGATIVE))) ((+ 35 (NIL))) ((- 35 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE
15 INSCRIPT.PORTRAIT NIL NIL (INSCRIPT CASKET) NIL NIL ((- 34 (POSITIVE))) ((+ 34 (NEGATIVE))) ((+ 34 (NIL))) ((- 34 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 NEG.INSCRIPT.PORTRAIT NIL NIL (INSCRIPT CASKET) NIL NIL ((- 33 (POSITIVE))) ((+
33 (NEGATIVE))) ((+ 33 (NIL))) ((- 33 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 INSCR.EXACTLY.ONE.STAT.TRUE NIL NIL (INSCRIPT INSCRIPT INSCRIPT) NIL NIL ((- 32 (POSITIVE))) ((+ 32 (NEGATIVE))) ((+ 32 (NIL))) ((- 32 (NIL))) NIL NIL (DT*ST-KIND
NIL) PREDICATE 15 EXACTLY.ONE.STAT.TRUE NIL NIL (INSCRIPT INSCRIPT) NIL NIL ((- 31 (POSITIVE))) ((+ 31 (NEGATIVE))) ((+ 31 (NIL))) ((- 31 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 INSCRIPT NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 INSCRIPT
NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE)))(PROGN (RPAQQ DT*SORT.ALL (INSCRIPT CASKET ANY)) (RPAQQ DT*SORT.NR 8) (RPAQQ DT*SORT.PROPERTIES (DT*MAX.SUBSORTS DT*LEAST.SUPERSORTS DT*TRANSITIVE.CLOSURE DT*INVERSE.TRANSITIVE.CLOSURE DT*MINIMAL.SUBSORTS
DT*DIRECT.SUBSORTS DT*DIRECT.SUPERSORTS DT*DISJOINT.SORTS DT*COMPLETION.SORT)) (RPAQQ DT*SORT.COMMON.COMPUTE.FLAG NIL) (RPAQQ DT*VARIABLE.COUNTER 0) (RPAQQ DT*CONSTANT.COUNTER 0) (RPAQQ DT*CONSTANT.ALL (38 39)) (RPAQQ DT*ABBREVIATIONS NIL) (RPAQQ
DT*FUNCTION.COUNTER 0) (RPAQQ DT*FUNCTION.ALL (37)) (RPAQQ DT*FUNCTION.ADMISSIBLE.THEORIES (ASSOCIATIVE)) (RPAQQ DT*FUNCTION.ACTUAL.THEORIES NIL) (RPAQQ DT*FUNCTION.WITH.ARGUMENT.SYMMETRIES NIL) (RPAQQ DT*FUNCTION.COMPONENTS (PNAME ATTRIBUTES
MAX.RANGE.SORT MAX.DOMAIN.SORTS MIN.RANGE.SORTS SORT.LIST SORT.LIST.INVERSE SORT.TREE.CALC ARGUMENT.SYMMETRIES ARITY G.L.B.OF.RANGES)) (RPAQQ DT*PREDICATE.ADMISSABLE.ATTRIBUTES (SYMMETRIC DEFINED REFLEXIVE)) (RPAQQ DT*PREDICATE.COUNTER 0) (RPAQQ
DT*EQUALITY.SYMBOLS ("=" ":=" "=:" ":=:")) (RPAQQ DT*EQUALITY.PREDICATES NIL) (RPAQQ DT*NONEQUALITY.PREDICATES (31 32 33 34 35 36 2 1)) (RPAQQ DT*PREDICATE.ALL (31 32 33 34 35 36 2 1)) (RPAQQ DT*PREDICATE.WITH.ATTRIBUTES NIL) (RPAQQ 
DT*PREDICATE.COMPONENTS (PNAME POSITIVE.OCCURRENCES NEGATIVE.OCCURRENCES DOMAINSORTS ATTRIBUTES REFL.CLAUSE +ROTHERSIDES -ROTHERSIDES +SOTHERSIDES -SOTHERSIDES +TOTHERSIDES -TOTHERSIDES)) (RPAQQ DT*TRUE.PREDICATE 1) (RPAQQ DT*FALSE.PREDICATE 2)
(RPAQQ DT*UNI.CREATES.VARIABLES NIL) (RPAQQ DT*SIGN.MINUS.SYMBOLS (- --)) (RPAQQ DT*SIGN.PLUS.SYMBOLS (+ ++)) (RPAQQ DT*SYMBOL.KINDS (CONSTANT.ALL FUNCTION.ALL PREDICATE.ALL)))
(PROGN)
(PROGN (SETPROPLIST (QUOTE DT*PREDICATE.WITH.ATTRIBUTES) (QUOTE NIL)))
(PROGN (SETPROPLIST (QUOTE INSCRIPT) (QUOTE (DT*INVERSE.TRANSITIVE.CLOSURE (INSCRIPT ANY) DT*DIRECT.SUPERSORTS (ANY) DT*MINIMAL.SUBSORTS (INSCRIPT) DT*MAX.SUBSORTS ((INSCRIPT INSCRIPT) (CASKET) (ANY INSCRIPT)) DT*TRANSITIVE.CLOSURE (INSCRIPT)
DT*DIRECT.SUBSORTS NIL DT*ATTRIBUTE NIL DT*SORT.NUMBER 7))) (SETPROPLIST (QUOTE CASKET) (QUOTE (DT*INVERSE.TRANSITIVE.CLOSURE (CASKET ANY) DT*DIRECT.SUPERSORTS (ANY) DT*MINIMAL.SUBSORTS (CASKET) DT*MAX.SUBSORTS ((INSCRIPT) (CASKET CASKET) (ANY
CASKET)) DT*TRANSITIVE.CLOSURE (CASKET) DT*DIRECT.SUBSORTS NIL DT*ATTRIBUTE NIL DT*SORT.NUMBER 6))) (SETPROPLIST (QUOTE ANY) (QUOTE (DT*LEAST.SUPERSORTS ((ANY ANY)) DT*ATTRIBUTE NIL DT*INVERSE.TRANSITIVE.CLOSURE (ANY) DT*DIRECT.SUPERSORTS NIL
DT*MINIMAL.SUBSORTS (CASKET) DT*MAX.SUBSORTS ((INSCRIPT INSCRIPT) (CASKET CASKET) (ANY ANY)) DT*TRANSITIVE.CLOSURE (INSCRIPT CASKET ANY) DT*SORT.NUMBER 1 DT*DIRECT.SUBSORTS (INSCRIPT CASKET)))))
(PROGN (RPAQQ ST*STACK1 (NIL NIL NIL NIL NIL NIL ((X_29 PROGN (DT-VARIABLE.DELETE 29) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_29) ST*SYMBOL.ADDRESSES))) (X_30 PROGN (DT-VARIABLE.DELETE 30) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_30)
ST*SYMBOL.ADDRESSES)))) NIL NIL NIL NIL NIL NIL NIL NIL ((EXACTLY.ONE.STAT.TRUE PROGN (DT-PREDICATE.DELETE 31) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE EXACTLY.ONE.STAT.TRUE) ST*SYMBOL.ADDRESSES)))) ((INSCR.EXACTLY.ONE.STAT.TRUE PROGN (
DT-PREDICATE.DELETE 32) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE INSCR.EXACTLY.ONE.STAT.TRUE) ST*SYMBOL.ADDRESSES)))) ((NEG.INSCRIPT.PORTRAIT PROGN (DT-PREDICATE.DELETE 33) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE NEG.INSCRIPT.PORTRAIT) 
ST*SYMBOL.ADDRESSES)))) ((INSCRIPT.PORTRAIT PROGN (DT-PREDICATE.DELETE 34) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE INSCRIPT.PORTRAIT) ST*SYMBOL.ADDRESSES)))) ((TRUTH PROGN (DT-PREDICATE.DELETE 35) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE
TRUTH) ST*SYMBOL.ADDRESSES)))) ((PORTRAIT PROGN (DT-PREDICATE.DELETE 36) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE PORTRAIT) ST*SYMBOL.ADDRESSES)))) ((INSCRIPTION PROGN (DT-FUNCTION.DELETE 37) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE INSCRIPTION)
ST*SYMBOL.ADDRESSES))) (INSCRIPT PROGN (DT-SORT.ST.REMOVE (QUOTE INSCRIPT)) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE INSCRIPT) ST*SYMBOL.ADDRESSES))) (INSCRIPT REMPROP (QUOTE INSCRIPT) (QUOTE ST*DATA))) ((SILVER PROGN (DT-CONSTANT.DELETE 38)
(RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE SILVER) ST*SYMBOL.ADDRESSES))) (GOLD PROGN (DT-CONSTANT.DELETE 39) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE GOLD) ST*SYMBOL.ADDRESSES))) (CASKET PROGN (DT-SORT.ST.REMOVE (QUOTE CASKET)) (RPAQ 
ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE CASKET) ST*SYMBOL.ADDRESSES))) (CASKET REMPROP (QUOTE CASKET) (QUOTE ST*DATA))) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL ((FALSE PROGN
(DT-PREDICATE.DELETE 2) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE FALSE) ST*SYMBOL.ADDRESSES))) (TRUE PROGN (DT-PREDICATE.DELETE 1) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE TRUE) ST*SYMBOL.ADDRESSES))) (ANY PROGN (DT-SORT.ST.REMOVE (QUOTE ANY))
(RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE ANY) ST*SYMBOL.ADDRESSES))) (ANY REMPROP (QUOTE ANY) (QUOTE ST*DATA))))) (RPAQQ ST*SYMBOL.ADDRESSES (NIL (ANY . T) (TRUE . 1) (FALSE . 2) (CASKET . T) (GOLD . 39) (SILVER . 38) (INSCRIPT . T) (INSCRIPTION
. 37) (PORTRAIT . 36) (TRUTH . 35) (INSCRIPT.PORTRAIT . 34) (NEG.INSCRIPT.PORTRAIT . 33) (INSCR.EXACTLY.ONE.STAT.TRUE . 32) (EXACTLY.ONE.STAT.TRUE . 31) (X_30 . 30) (X_29 . 29))))))))STOP
 
