(COND ((FMT-LOAD "11-DEC-84 19:38:27"
NIL(((* THE SUITOR OF THE LAST TALE PASSED BOTH TESTS AND HAPPILY) COMMENT COMMENT) ((* CLAIMED PORTIA II AS HIS BRIDE. THEY LIVED HAPPILY EVER AFTER) COMMENT COMMENT) ((* AND HAD A LOVELY DAUGHTER PORTIA III - HENCEFORTH TO BE CALLED) COMMENT
COMMENT) ((* PORTIA . WHEN SHE GREW UP TO YOUNG WOMANHOOD, SHE WAS BORN) COMMENT COMMENT) ((* SMART AND BEAUTIFUL - JUST LIKE HER MOMMY AND GRANDMOMMY. SHE) COMMENT COMMENT) ((* ALSO DECIDED TO CHOOSE HER HUSBAND BY THE CASKET METHOD. THE) COMMENT
COMMENT) ((* SUITOR HAD TO PASS THREE TESTS IN ORDER TO WIN HER! THE TESTS) COMMENT COMMENT) ((* WERE QUITE INGENIOUS. SHE WENT BACK TO HER GRANDMOTHER^S IDEA) COMMENT COMMENT) ((* OF HAVING ONLY ONE STATEMENT INSCRIBED ON EACH CASKET RATHER)
COMMENT COMMENT) ((* THAN TWO. BUT SHE INTRODUCED THE FOLLOWING WRINKLE: SHE EX-) COMMENT COMMENT) ((* PLAINED TO THE SUITOR THAT EACH CASKET WAS FASHIONED BY ONE OF) COMMENT COMMENT) ((* TWO FAMOUS FLORENTINE CRAFTSMEN - CELLINI OR BELLINI. WHENEVER)
COMMENT COMMENT) ((* CELLINI FASHIONED A CASKET, HE ALWAYS PUT A FALSE INSCRIPTION) COMMENT COMMENT) ((* ON IT, WHEREAS BELLINI PUT ONLY TRUE INSCRIPTIONS ON HIS) COMMENT COMMENT) ((* CASKETS.) COMMENT COMMENT) ((*) COMMENT COMMENT) ((*) COMMENT
COMMENT) ((* 69A. THE FIRST TEST.) COMMENT COMMENT) ((*) COMMENT COMMENT) ((* IN THIS UNUSUAL TEST THE SUITOR (IF HE GUESSED BLINDLY) WOULD) COMMENT COMMENT) ((* HAVE A TWO OUT OF THREE RATHER THAN A ONE OUT OF THREE CHANCE.) COMMENT COMMENT)
((* INSTEAD OF USING A PORTRAIT, PORTIA USED A DAGGER WHICH WAS) COMMENT COMMENT) ((* PLACED IN ONE OF THE THREE CASKETS; THE OTHER TWO CASKETS WERE) COMMENT COMMENT) ((* EMPTY. IF THE SUITOR COULD AVOID THE CASKET WITH THE DAGGER,) COMMENT COMMENT)
((* THEN HE COULD TAKE THE NEXT TEST. THE INSCRIPTIONS ON THE) COMMENT COMMENT) ((* CASKETS WERE AS FOLLOWS :) COMMENT COMMENT) ((*) COMMENT COMMENT) ((* GOLD: THE DAGGER IS IN THIS CASKET) COMMENT COMMENT) ((* SILVER: THIS CASKET IS EMPTY) COMMENT
COMMENT) ((* LEAD: AT MOST ONE OF THESE THREE CASKETS WAS FASHIONED BY) COMMENT COMMENT) ((* BELLINI) COMMENT COMMENT) ((*) COMMENT COMMENT) ((* WHICH CASKET SHOULD THE SUITOR CHOOSE? INSCRIPTION *) COMMENT COMMENT) ((*) COMMENT COMMENT) ((* WE
DEFINE THE FOLLOWING PREDICATES:) COMMENT COMMENT) ((*) COMMENT COMMENT) ((* BELLINI (X) - THE CASKET X WAS FASHIONED BY BELLINI) COMMENT COMMENT) ((* CELLINI (X) - THE CASKET X WAS FASHIONED BY CELLINI) COMMENT COMMENT) ((* DAGGER (X) - THE CASKET
X CONTAINS THE DAGGER) COMMENT COMMENT) ((* INSCR.DAGGER (X Y) - THE INSCRIPTION X TELLS THAT THE DAGGER) COMMENT COMMENT) ((* IS IN CASKET Y) COMMENT COMMENT) ((* NEG.INSCR.DAGGER (X Y) - THE INSCRIPTION X TELLS THAT THE) COMMENT COMMENT) ((*
DAGGER IS NOT IN CASKET Y) COMMENT COMMENT) ((* INSCR.ONE.BELLINI (X U V Z) - INSCRIPTION X TELLS THAT AT MOST ONE INSCRIPTION * OF THE CASKETS U,V,Z WAS FASHIONED BY BELLINI) COMMENT COMMENT) ((* ONE.BELLINI (U V Z) - AT MOST ONE OF THE CASKETS
U,V,Z WAS) COMMENT COMMENT) ((* FASHIONED BY BELLINI) COMMENT COMMENT) ((*) COMMENT COMMENT) ((*) COMMENT COMMENT) ((* WE DEFINE THE FOLLOWING FUNCTION:) COMMENT COMMENT) ((*) COMMENT COMMENT) ((* INSCRIPTION (X) - MAPS AN ELEMENT OF THE SORT
CASKET TO AN) COMMENT COMMENT) ((* ELEMENT OF THE SORT INSCRIPT) COMMENT COMMENT) ((*) COMMENT COMMENT) ((TYPE GOLD,SILVER,LEAD : CASKET) (+ 1 NIL) TYPE) ((TYPE INSCRIPTION (CASKET) :INSCRIPT) (+ 1 NIL) TYPE) ((TYPE BELLINI (CASKET)) (+ 1 NIL)
TYPE) ((TYPE CELLINI (CASKET)) (+ 1 NIL) TYPE) ((TYPE DAGGER (CASKET)) (+ 1 NIL) TYPE) ((TYPE TRUTH (INSCRIPT)) (+ 1 NIL) TYPE) ((TYPE INSCR.DAGGER (INSCRIPT CASKET)) (+ 1 NIL) TYPE) ((TYPE NEG.INSCR.DAGGER (INSCRIPT CASKET)) (+ 1 NIL) TYPE) ((TYPE
ONE.BELLINI (CASKET CASKET CASKET)) (+ 1 NIL) TYPE) ((TYPE INSCR.ONE.BELLINI (INSCRIPT CASKET CASKET CASKET)) (+ 1 NIL) TYPE) ((*) COMMENT COMMENT) ((*) COMMENT COMMENT) ((* THE DAGGER IS IN EXACTLY ONE OF THE THREE CASKETS:) COMMENT COMMENT)
((DAGGER (GOLD) OR DAGGER (SILVER) OR DAGGER (LEAD)) (OR (+ 41 (47) NIL) (OR (+ 41 (46) NIL) (+ 41 (45) NIL))) QUANTIFICATION) ((NOT (DAGGER (GOLD) AND DAGGER (SILVER) OR DAGGER (SILVER) AND DAGGER (LEAD) OR DAGGER (LEAD) AND DAGGER (GOLD))) (NOT
(OR (AND (+ 41 (47) NIL) (+ 41 (46) NIL)) (OR (AND (+ 41 (46) NIL) (+ 41 (45) NIL)) (AND (+ 41 (45) NIL) (+ 41 (47) NIL))))) QUANTIFICATION) ((*) COMMENT COMMENT) ((* IMPLICATIONS TO BE DRAWN FROM INSCRIPTIONS:) COMMENT COMMENT) ((ALL X:INSCRIPT
ALL Y:CASKET INSCR.DAGGER (X Y) AND TRUTH (X) IMPL DAGGER (Y)) (ALL 8 (ALL 9 (IMPL (AND (+ 39 (8 9) NIL) (+ 40 (8) NIL)) (+ 41 (9) NIL)))) QUANTIFICATION) ((ALL X:INSCRIPT ALL Y:CASKET INSCR.DAGGER (X Y) AND NOT TRUTH (X) IMPL NOT DAGGER (Y))
(ALL 12 (ALL 13 (IMPL (AND (+ 39 (12 13) NIL) (NOT (+ 40 (12) NIL))) (NOT (+ 41 (13) NIL))))) QUANTIFICATION) ((ALL X:INSCRIPT ALL Y:CASKET NEG.INSCR.DAGGER (X Y) AND TRUTH (X) IMPL NOT DAGGER (Y)) (ALL 14 (ALL 15 (IMPL (AND (+ 38 (14 15) NIL)
(+ 40 (14) NIL)) (NOT (+ 41 (15) NIL))))) QUANTIFICATION) ((ALL X:INSCRIPT ALL Y:CASKET NEG.INSCR.DAGGER (X Y) AND NOT TRUTH (X) IMPL DAGGER (Y)) (ALL 17 (ALL 18 (IMPL (AND (+ 38 (17 18) NIL) (NOT (+ 40 (17) NIL))) (+ 41 (18) NIL)))) QUANTIFICATION)
((ALL X:INSCRIPT ALL U,V,W:CASKET INSCR.ONE.BELLINI (X U V W) AND TRUTH (X) IMPL ONE.BELLINI (U V W)) (ALL 19 (ALL 50 (ALL 49 (ALL 48 (IMPL (AND (+ 36 (19 48 49 50) NIL) (+ 40 (19) NIL)) (+ 37 (48 49 50) NIL)))))) QUANTIFICATION) ((ALL X:INSCRIPT
ALL U,V,W:CASKET INSCR.ONE.BELLINI (X U V W) AND NOT TRUTH (X) IMPL NOT ONE.BELLINI (U V W)) (ALL 51 (ALL 54 (ALL 53 (ALL 52 (IMPL (AND (+ 36 (51 52 53 54) NIL) (NOT (+ 40 (51) NIL))) (NOT (+ 37 (52 53 54) NIL))))))) QUANTIFICATION) ((*) COMMENT
COMMENT) ((* BELLINI PUT TRUE AND CELLINI FALSE INSCRITIONS ON THE CASKET:) COMMENT COMMENT) ((ALL X:CASKET BELLINI (X) EQV TRUTH (INSCRIPTION (X))) (ALL 55 (EQV (+ 43 (55) (KIND (EQV T 800))) (+ 40 ((44 55)) (KIND (EQV NIL 800))))) QUANTIFICATION)
((ALL X:CASKET CELLINI (X) EQV NOT TRUTH (INSCRIPTION (X))) (ALL 56 (EQV (+ 42 (56) (KIND (EQV T 810))) (NOT (+ 40 ((44 56)) (KIND (EQV NIL 810)))))) QUANTIFICATION) ((*) COMMENT COMMENT) ((* AT MOST ONE CASKET WAS FASHIONED BY BELLINI:) COMMENT
COMMENT) ((ALL U,V,W:CASKET ONE.BELLINI (U V W) EQV NOT (BELLINI (U) AND BELLINI (V) OR BELLINI (V) AND BELLINI (W) OR BELLINI (W) AND BELLINI (U))) (ALL 59 (ALL 58 (ALL 57 (EQV (+ 37 (57 58 59) (KIND (EQV T 840))) (NOT (OR (AND (+ 43 (57) (KIND
(EQV NIL 840))) (+ 43 (58) (KIND (EQV NIL 840)))) (OR (AND (+ 43 (58) (KIND (EQV NIL 840))) (+ 43 (59) (KIND (EQV NIL 840)))) (AND (+ 43 (59) (KIND (EQV NIL 840))) (+ 43 (57) (KIND (EQV NIL 840))))))))))) QUANTIFICATION) ((*) COMMENT COMMENT)
((* ACTUAL INSCRIPTIONS:) COMMENT COMMENT) ((INSCR.DAGGER (INSCRIPTION (GOLD) GOLD)) (+ 39 ((44 47) 47) NIL) QUANTIFICATION) ((NEG.INSCR.DAGGER (INSCRIPTION (SILVER) SILVER)) (+ 38 ((44 46) 46) NIL) QUANTIFICATION) ((INSCR.ONE.BELLINI (INSCRIPTION
(LEAD) GOLD SILVER LEAD)) (+ 36 ((44 45) 47 46 45) NIL) QUANTIFICATION)))(COND (ST*LOAD.FLAG (PROGN (DT-RESET))
(PROG ((ADDRLIST (QUOTE (10221 10226 10231 10236 10241 10246 10251 10256 10261 10266 10271 10276 10470 10465 10460 10455 10441 10426 10411 10396 10381 10366 10351 10336 ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 10281 10286 10291 ATP.MEMORY.NIL 10296 10301 10306 10311 ATP.MEMORY.NIL ATP.MEMORY.NIL
10316 10321 ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 10485 10500))) (DATALIST (QUOTE (15 "TRUE" NIL NIL NIL (DEFINED) NIL ((- 1 (POSITIVE))) ((+ 1 (NEGATIVE))) ((+ 1 (NIL))) ((- 1 (NIL))) NIL NIL (DT*ST-KIND NIL)
PREDICATE 15 "FALSE" NIL NIL NIL (DEFINED) NIL ((- 2 (POSITIVE))) ((+ 2 (NEGATIVE))) ((+ 2 (NIL))) ((- 2 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 "GOLD" CASKET (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT 5 "SILVER" CASKET (ST*ATTRIBUTE NIL
DT*ST-KIND NIL) CONSTANT 5 "LEAD" CASKET (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT 14 "INSCRIPTION" NIL INSCRIPT (CASKET) NIL NIL NIL NIL NIL 1 INSCRIPT (DT*ST-KIND NIL) FUNCTION 15 "BELLINI" NIL NIL (CASKET) NIL NIL ((- 43 (POSITIVE))) ((+ 43
(NEGATIVE))) ((+ 43 (NIL))) ((- 43 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "CELLINI" NIL NIL (CASKET) NIL NIL ((- 42 (POSITIVE))) ((+ 42 (NEGATIVE))) ((+ 42 (NIL))) ((- 42 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "DAGGER" NIL NIL (CASKET)
NIL NIL ((- 41 (POSITIVE))) ((+ 41 (NEGATIVE))) ((+ 41 (NIL))) ((- 41 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "TRUTH" NIL NIL (INSCRIPT) NIL NIL ((- 40 (POSITIVE))) ((+ 40 (NEGATIVE))) ((+ 40 (NIL))) ((- 40 (NIL))) NIL NIL (DT*ST-KIND NIL)
PREDICATE 15 "INSCR.DAGGER" NIL NIL (INSCRIPT CASKET) NIL NIL ((- 39 (POSITIVE))) ((+ 39 (NEGATIVE))) ((+ 39 (NIL))) ((- 39 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "NEG.INSCR.DAGGER" NIL NIL (INSCRIPT CASKET) NIL NIL ((- 38 (POSITIVE)))
((+ 38 (NEGATIVE))) ((+ 38 (NIL))) ((- 38 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "ONE.BELLINI" NIL NIL (CASKET CASKET CASKET) NIL NIL ((- 37 (POSITIVE))) ((+ 37 (NEGATIVE))) ((+ 37 (NIL))) ((- 37 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE
15 "INSCR.ONE.BELLINI" NIL NIL (INSCRIPT CASKET CASKET CASKET) NIL NIL ((- 36 (POSITIVE))) ((+ 36 (NEGATIVE))) ((+ 36 (NIL))) ((- 36 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 INSCRIPT NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 CASKET NIL
(ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 INSCRIPT NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 CASKET NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 INSCRIPT NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 CASKET NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 5 INSCRIPT NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 CASKET NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 INSCRIPT NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 CASKET NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5
CASKET NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 CASKET NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 INSCRIPT NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 CASKET NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 CASKET NIL (ST*DATA NIL
DT*ST-KIND SYS-VAR) VARIABLE 5 CASKET NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 CASKET NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 CASKET NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 CASKET NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE
5 CASKET NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 CASKET NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE))) (INCREMENT (IDIFFERENCE MEM*SIZE 10500)) COUNTER1) (MEM-RESET) (COND ((IGREATERP MEM*SIZE 10500) (SETQ COUNTER1 60) (MAPC ADDRLIST
(FUNCTION (LAMBDA (RADDR) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1)) (COND ((EQ RADDR (QUOTE ATP.MEMORY.NIL)) RADDR) ((OR (EQ RADDR 0) (MINUSP RADDR)) RADDR) (T (IPLUS RADDR INCREMENT))))))) (SETQ COUNTER1 (ADD1 MEM*SIZE)) (MAPC DATALIST
(FUNCTION (LAMBDA (DATA) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1)) DATA))))) (T (COND ((NEQ MEM*SIZE 10500) (MEM-INITIALIZE 10500))) (SETQ COUNTER1 60) (MAPC ADDRLIST (FUNCTION (LAMBDA (RADDR) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1))
RADDR)))) (SETQ COUNTER1 (ADD1 MEM*SIZE)) (MAPC DATALIST (FUNCTION (LAMBDA (DATA) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1)) DATA)))))) (COND ((IGREATERP MEM*SIZE 10500) (RPAQ MEM*NEXT.RADR (IPLUS 10216 INCREMENT))) (T (RPAQ MEM*NEXT.RADR
10216))) (RPAQ MEM*NEXT.VADR 60) (RPAQ MEM*REST (ADD1 (IDIFFERENCE MEM*NEXT.RADR MEM*NEXT.VADR))) (RPAQ MEM*FIRST.REUSABLE.VADR NIL) (RPAQ MEM*LAST.REUSABLE.VADR NIL))
(PROGN (RPAQQ DT*SORT.ALL (INSCRIPT CASKET ANY)) (RPAQQ DT*SORT.NR 8) (RPAQQ DT*SORT.PROPERTIES (DT*MAX.SUBSORTS DT*LEAST.SUPERSORTS DT*TRANSITIVE.CLOSURE DT*INVERSE.TRANSITIVE.CLOSURE DT*MINIMAL.SUBSORTS DT*DIRECT.SUBSORTS DT*DIRECT.SUPERSORTS
DT*DISJOINT.SORTS DT*COMPLETION.SORT)) (RPAQQ DT*SORT.COMMON.COMPUTE.FLAG NIL) (RPAQQ DT*VARIABLE.COUNTER 0) (RPAQQ DT*CONSTANT.COUNTER 0) (RPAQQ DT*CONSTANT.ALL (45 46 47)) (RPAQQ DT*ABBREVIATIONS NIL) (RPAQQ DT*FUNCTION.COUNTER 0) (RPAQQ 
DT*FUNCTION.ALL (44)) (RPAQQ DT*FUNCTION.ADMISSIBLE.THEORIES (ASSOCIATIVE)) (RPAQQ DT*FUNCTION.ACTUAL.THEORIES NIL) (RPAQQ DT*FUNCTION.WITH.ARGUMENT.SYMMETRIES NIL) (RPAQQ DT*FUNCTION.COMPONENTS (PNAME ATTRIBUTES MAX.RANGE.SORT MAX.DOMAIN.SORTS
MIN.RANGE.SORTS SORT.LIST SORT.LIST.INVERSE SORT.TREE.CALC ARGUMENT.SYMMETRIES ARITY G.L.B.OF.RANGES)) (RPAQQ DT*PREDICATE.ADMISSABLE.ATTRIBUTES (SYMMETRIC DEFINED REFLEXIVE)) (RPAQQ DT*PREDICATE.COUNTER 0) (RPAQQ DT*EQUALITY.SYMBOLS ("=" ":="
"=:" ":=:")) (RPAQQ DT*EQUALITY.PREDICATES NIL) (RPAQQ DT*NONEQUALITY.PREDICATES (36 37 38 39 40 41 42 43 2 1)) (RPAQQ DT*PREDICATE.ALL (36 37 38 39 40 41 42 43 2 1)) (RPAQQ DT*PREDICATE.WITH.ATTRIBUTES NIL) (RPAQQ DT*PREDICATE.COMPONENTS (PNAME
POSITIVE.OCCURRENCES NEGATIVE.OCCURRENCES DOMAINSORTS ATTRIBUTES REFL.CLAUSE +ROTHERSIDES -ROTHERSIDES +SOTHERSIDES -SOTHERSIDES +TOTHERSIDES -TOTHERSIDES)) (RPAQQ DT*TRUE.PREDICATE 1) (RPAQQ DT*FALSE.PREDICATE 2) (RPAQQ DT*UNI.CREATES.VARIABLES
NIL) (RPAQQ DT*SIGN.MINUS.SYMBOLS (- --)) (RPAQQ DT*SIGN.PLUS.SYMBOLS (+ ++)) (RPAQQ DT*SYMBOL.KINDS (CONSTANT.ALL FUNCTION.ALL PREDICATE.ALL)))
(PROGN)
(PROGN (SETPROPLIST (QUOTE DT*PREDICATE.WITH.ATTRIBUTES) (QUOTE NIL)))
(PROGN (SETPROPLIST (QUOTE INSCRIPT) (QUOTE (DT*INVERSE.TRANSITIVE.CLOSURE (INSCRIPT ANY) DT*DIRECT.SUPERSORTS (ANY) DT*MINIMAL.SUBSORTS (INSCRIPT) DT*MAX.SUBSORTS ((INSCRIPT INSCRIPT) (CASKET) (ANY INSCRIPT)) DT*TRANSITIVE.CLOSURE (INSCRIPT)
DT*DIRECT.SUBSORTS NIL DT*ATTRIBUTE NIL DT*SORT.NUMBER 7))) (SETPROPLIST (QUOTE CASKET) (QUOTE (DT*INVERSE.TRANSITIVE.CLOSURE (CASKET ANY) DT*DIRECT.SUPERSORTS (ANY) DT*MINIMAL.SUBSORTS (CASKET) DT*MAX.SUBSORTS ((INSCRIPT) (CASKET CASKET) (ANY
CASKET)) DT*TRANSITIVE.CLOSURE (CASKET) DT*DIRECT.SUBSORTS NIL DT*ATTRIBUTE NIL DT*SORT.NUMBER 6))) (SETPROPLIST (QUOTE ANY) (QUOTE (DT*LEAST.SUPERSORTS ((ANY ANY)) DT*INVERSE.TRANSITIVE.CLOSURE (ANY) DT*DIRECT.SUPERSORTS NIL DT*MINIMAL.SUBSORTS
(CASKET) DT*MAX.SUBSORTS ((INSCRIPT INSCRIPT) (CASKET CASKET) (ANY ANY)) DT*TRANSITIVE.CLOSURE (INSCRIPT CASKET ANY) DT*DIRECT.SUBSORTS (INSCRIPT CASKET) DT*ATTRIBUTE NIL DT*SORT.NUMBER 1))))
(PROGN (RPAQQ ST*STACK1 (NIL NIL NIL NIL NIL NIL ((X_59 PROGN (DT-VARIABLE.DELETE 59) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_59) ST*SYMBOL.ADDRESSES))) (X_58 PROGN (DT-VARIABLE.DELETE 58) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_58)
ST*SYMBOL.ADDRESSES))) (X_57 PROGN (DT-VARIABLE.DELETE 57) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_57) ST*SYMBOL.ADDRESSES)))) NIL NIL ((X_56 PROGN (DT-VARIABLE.DELETE 56) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_56) ST*SYMBOL.ADDRESSES))))
((X_55 PROGN (DT-VARIABLE.DELETE 55) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_55) ST*SYMBOL.ADDRESSES)))) NIL NIL ((X_54 PROGN (DT-VARIABLE.DELETE 54) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_54) ST*SYMBOL.ADDRESSES))) (X_53 PROGN (
DT-VARIABLE.DELETE 53) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_53) ST*SYMBOL.ADDRESSES))) (X_52 PROGN (DT-VARIABLE.DELETE 52) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_52) ST*SYMBOL.ADDRESSES))) (X_51 PROGN (DT-VARIABLE.DELETE 51) (RPAQ
ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_51) ST*SYMBOL.ADDRESSES)))) ((X_50 PROGN (DT-VARIABLE.DELETE 50) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_50) ST*SYMBOL.ADDRESSES))) (X_49 PROGN (DT-VARIABLE.DELETE 49) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC
(QUOTE X_49) ST*SYMBOL.ADDRESSES))) (X_48 PROGN (DT-VARIABLE.DELETE 48) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_48) ST*SYMBOL.ADDRESSES))) (X_19 PROGN (DT-VARIABLE.DELETE 19) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_19) ST*SYMBOL.ADDRESSES))))
((X_18 PROGN (DT-VARIABLE.DELETE 18) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_18) ST*SYMBOL.ADDRESSES))) (X_17 PROGN (DT-VARIABLE.DELETE 17) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_17) ST*SYMBOL.ADDRESSES)))) ((X_15 PROGN (DT-VARIABLE.DELETE
15) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_15) ST*SYMBOL.ADDRESSES))) (X_14 PROGN (DT-VARIABLE.DELETE 14) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_14) ST*SYMBOL.ADDRESSES)))) ((X_13 PROGN (DT-VARIABLE.DELETE 13) (RPAQ ST*SYMBOL.ADDRESSES
(REMASSOC (QUOTE X_13) ST*SYMBOL.ADDRESSES))) (X_12 PROGN (DT-VARIABLE.DELETE 12) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_12) ST*SYMBOL.ADDRESSES)))) ((X_9 PROGN (DT-VARIABLE.DELETE 9) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_9) 
ST*SYMBOL.ADDRESSES))) (X_8 PROGN (DT-VARIABLE.DELETE 8) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_8) ST*SYMBOL.ADDRESSES)))) NIL NIL NIL NIL NIL NIL NIL ((INSCR.ONE.BELLINI PROGN (DT-PREDICATE.DELETE 36) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC
(QUOTE INSCR.ONE.BELLINI) ST*SYMBOL.ADDRESSES)))) ((ONE.BELLINI PROGN (DT-PREDICATE.DELETE 37) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE ONE.BELLINI) ST*SYMBOL.ADDRESSES)))) ((NEG.INSCR.DAGGER PROGN (DT-PREDICATE.DELETE 38) (RPAQ ST*SYMBOL.ADDRESSES
(REMASSOC (QUOTE NEG.INSCR.DAGGER) ST*SYMBOL.ADDRESSES)))) ((INSCR.DAGGER PROGN (DT-PREDICATE.DELETE 39) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE INSCR.DAGGER) ST*SYMBOL.ADDRESSES)))) ((TRUTH PROGN (DT-PREDICATE.DELETE 40) (RPAQ ST*SYMBOL.ADDRESSES
(REMASSOC (QUOTE TRUTH) ST*SYMBOL.ADDRESSES)))) ((DAGGER PROGN (DT-PREDICATE.DELETE 41) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE DAGGER) ST*SYMBOL.ADDRESSES)))) ((CELLINI PROGN (DT-PREDICATE.DELETE 42) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE
CELLINI) ST*SYMBOL.ADDRESSES)))) ((BELLINI PROGN (DT-PREDICATE.DELETE 43) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE BELLINI) ST*SYMBOL.ADDRESSES)))) ((INSCRIPTION PROGN (DT-FUNCTION.DELETE 44) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE INSCRIPTION)
ST*SYMBOL.ADDRESSES))) (INSCRIPT PROGN (DT-SORT.ST.REMOVE (QUOTE INSCRIPT)) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE INSCRIPT) ST*SYMBOL.ADDRESSES))) (INSCRIPT REMPROP (QUOTE INSCRIPT) (QUOTE ST*DATA))) ((LEAD PROGN (DT-CONSTANT.DELETE 45) (RPAQ
ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE LEAD) ST*SYMBOL.ADDRESSES))) (SILVER PROGN (DT-CONSTANT.DELETE 46) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE SILVER) ST*SYMBOL.ADDRESSES))) (GOLD PROGN (DT-CONSTANT.DELETE 47) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC
(QUOTE GOLD) ST*SYMBOL.ADDRESSES))) (CASKET PROGN (DT-SORT.ST.REMOVE (QUOTE CASKET)) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE CASKET) ST*SYMBOL.ADDRESSES))) (CASKET REMPROP (QUOTE CASKET) (QUOTE ST*DATA))) NIL NIL NIL NIL NIL NIL NIL NIL NIL
NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL ((FALSE PROGN (DT-PREDICATE.DELETE 2) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC
(QUOTE FALSE) ST*SYMBOL.ADDRESSES))) (TRUE PROGN (DT-PREDICATE.DELETE 1) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE TRUE) ST*SYMBOL.ADDRESSES))) (ANY PROGN (DT-SORT.ST.REMOVE (QUOTE ANY)) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE ANY) 
ST*SYMBOL.ADDRESSES))) (ANY REMPROP (QUOTE ANY) (QUOTE ST*DATA))))) (RPAQQ ST*SYMBOL.ADDRESSES (NIL (ANY . T) (TRUE . 1) (FALSE . 2) (CASKET . T) (GOLD . 47) (SILVER . 46) (LEAD . 45) (INSCRIPT . T) (INSCRIPTION . 44) (BELLINI . 43) (CELLINI .
42) (DAGGER . 41) (TRUTH . 40) (INSCR.DAGGER . 39) (NEG.INSCR.DAGGER . 38) (ONE.BELLINI . 37) (INSCR.ONE.BELLINI . 36) (X_8 . 8) (X_9 . 9) (X_12 . 12) (X_13 . 13) (X_14 . 14) (X_15 . 15) (X_17 . 17) (X_18 . 18) (X_19 . 19) (X_48 . 48) (X_49 .
49) (X_50 . 50) (X_51 . 51) (X_52 . 52) (X_53 . 53) (X_54 . 54) (X_55 . 55) (X_56 . 56) (X_57 . 57) (X_58 . 58) (X_59 . 59))))))))STOP
 
