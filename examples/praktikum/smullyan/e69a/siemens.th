(COND ((FMT-LOAD " 5-DEC-84 16:58:26"
NIL(((NOT DAGGER (GOLD) AND NOT DAGGER (SILVER) AND NOT DAGGER (LEAD)) (AND (NOT (+ 27 (35) NIL)) (AND (NOT (+ 27 (34) NIL)) (NOT (+ 27 (33) NIL)))) QUANTIFICATION)))(COND (ST*LOAD.FLAG (PROGN (DT-RESET))
(PROG ((ADDRLIST (QUOTE (10221 10226 10231 10236 10241 10246 10251 10256 10261 10266 10271 10276 10470 10465 10460 ATP.MEMORY.NIL 10455 ATP.MEMORY.NIL 10441 10426 10411 10396 10381 ATP.MEMORY.NIL ATP.MEMORY.NIL 10366 10351 10336 10321 10316 10311
ATP.MEMORY.NIL 10306 10301 10296 10291 ATP.MEMORY.NIL ATP.MEMORY.NIL 10286 10281 ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 10485 10500))) (DATALIST (QUOTE (15 "TRUE" NIL NIL NIL (DEFINED) NIL ((- 1 (POSITIVE)))
((+ 1 (NEGATIVE))) ((+ 1 (NIL))) ((- 1 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "FALSE" NIL NIL NIL (DEFINED) NIL ((- 2 (POSITIVE))) ((+ 2 (NEGATIVE))) ((+ 2 (NIL))) ((- 2 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 "GOLD" CASKET (ST*ATTRIBUTE
NIL DT*ST-KIND NIL) CONSTANT 5 "SILVER" CASKET (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT 5 "LEAD" CASKET (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT 14 "INSCRIPTION" NIL INSCRIPT (CASKET) NIL NIL NIL NIL NIL 1 INSCRIPT (DT*ST-KIND NIL) FUNCTION
15 "BELLINI" NIL NIL (CASKET) NIL NIL ((- 29 (POSITIVE))) ((+ 29 (NEGATIVE))) ((+ 29 (NIL))) ((- 29 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "CELLINI" NIL NIL (CASKET) NIL NIL ((- 28 (POSITIVE))) ((+ 28 (NEGATIVE))) ((+ 28 (NIL))) ((- 28
(NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "DAGGER" NIL NIL (CASKET) NIL NIL ((- 27 (POSITIVE))) ((+ 27 (NEGATIVE))) ((+ 27 (NIL))) ((- 27 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "TRUTH" NIL NIL (INSCRIPT) NIL NIL ((- 26 (POSITIVE)))
((+ 26 (NEGATIVE))) ((+ 26 (NIL))) ((- 26 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "INSCR.DAGGER" NIL NIL (INSCRIPT CASKET) NIL NIL ((- 25 (POSITIVE))) ((+ 25 (NEGATIVE))) ((+ 25 (NIL))) ((- 25 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15
"NEG.INSCR.DAGGER" NIL NIL (INSCRIPT CASKET) NIL NIL ((- 22 (POSITIVE))) ((+ 22 (NEGATIVE))) ((+ 22 (NIL))) ((- 22 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "ONE.BELLINI" NIL NIL (CASKET CASKET CASKET) NIL NIL ((- 21 (POSITIVE))) ((+ 21 (NEGATIVE)))
((+ 21 (NIL))) ((- 21 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "INSCR.ONE.BELLINI" NIL NIL (INSCRIPT CASKET CASKET CASKET) NIL NIL ((- 20 (POSITIVE))) ((+ 20 (NEGATIVE))) ((+ 20 (NIL))) ((- 20 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5
INSCRIPT NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 CASKET NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 INSCRIPT NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 CASKET NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 INSCRIPT NIL (ST*DATA
NIL DT*ST-KIND SYS-VAR) VARIABLE 5 CASKET NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 INSCRIPT NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 CASKET NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 INSCRIPT NIL (ST*DATA NIL DT*ST-KIND SYS-VAR)
VARIABLE 5 CASKET NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 CASKET NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 CASKET NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 INSCRIPT NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 CASKET NIL
(ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 CASKET NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 CASKET NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 CASKET NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 CASKET NIL (ST*DATA NIL DT*ST-KIND
SYS-VAR) VARIABLE 5 CASKET NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 CASKET NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 CASKET NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE))) (INCREMENT (IDIFFERENCE MEM*SIZE 10500)) COUNTER1) (MEM-RESET)
(COND ((IGREATERP MEM*SIZE 10500) (SETQ COUNTER1 48) (MAPC ADDRLIST (FUNCTION (LAMBDA (RADDR) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1)) (COND ((EQ RADDR (QUOTE ATP.MEMORY.NIL)) RADDR) ((OR (EQ RADDR 0) (MINUSP RADDR)) RADDR) (T (IPLUS RADDR
INCREMENT))))))) (SETQ COUNTER1 (ADD1 MEM*SIZE)) (MAPC DATALIST (FUNCTION (LAMBDA (DATA) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1)) DATA))))) (T (COND ((NEQ MEM*SIZE 10500) (MEM-INITIALIZE 10500))) (SETQ COUNTER1 48) (MAPC ADDRLIST (FUNCTION
(LAMBDA (RADDR) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1)) RADDR)))) (SETQ COUNTER1 (ADD1 MEM*SIZE)) (MAPC DATALIST (FUNCTION (LAMBDA (DATA) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1)) DATA)))))) (COND ((IGREATERP MEM*SIZE 10500) (RPAQ
MEM*NEXT.RADR (IPLUS 10216 INCREMENT))) (T (RPAQ MEM*NEXT.RADR 10216))) (RPAQ MEM*NEXT.VADR 48) (RPAQ MEM*REST (ADD1 (IDIFFERENCE MEM*NEXT.RADR MEM*NEXT.VADR))) (RPAQ MEM*FIRST.REUSABLE.VADR NIL) (RPAQ MEM*LAST.REUSABLE.VADR NIL))
(PROGN (RPAQQ DT*SORT.ALL (INSCRIPT CASKET ANY)) (RPAQQ DT*SORT.NR 6) (RPAQQ DT*SORT.PROPERTIES (DT*MAX.SUBSORTS DT*LEAST.SUPERSORTS DT*TRANSITIVE.CLOSURE DT*INVERSE.TRANSITIVE.CLOSURE DT*MINIMAL.SUBSORTS DT*DIRECT.SUBSORTS DT*DIRECT.SUPERSORTS
DT*DISJOINT.SORTS DT*COMPLETION.SORT)) (RPAQQ DT*SORT.COMMON.COMPUTE.FLAG NIL) (RPAQQ DT*VARIABLE.COUNTER 0) (RPAQQ DT*CONSTANT.COUNTER 0) (RPAQQ DT*CONSTANT.ALL (33 34 35)) (RPAQQ DT*ABBREVIATIONS NIL) (RPAQQ DT*FUNCTION.COUNTER 0) (RPAQQ 
DT*FUNCTION.ALL (31)) (RPAQQ DT*FUNCTION.ADMISSIBLE.THEORIES (ASSOCIATIVE)) (RPAQQ DT*FUNCTION.ACTUAL.THEORIES NIL) (RPAQQ DT*FUNCTION.WITH.ARGUMENT.SYMMETRIES NIL) (RPAQQ DT*FUNCTION.COMPONENTS (PNAME ATTRIBUTES MAX.RANGE.SORT MAX.DOMAIN.SORTS
MIN.RANGE.SORTS SORT.LIST SORT.LIST.INVERSE SORT.TREE.CALC ARGUMENT.SYMMETRIES ARITY G.L.B.OF.RANGES)) (RPAQQ DT*PREDICATE.ADMISSABLE.ATTRIBUTES (SYMMETRIC DEFINED REFLEXIVE)) (RPAQQ DT*PREDICATE.COUNTER 0) (RPAQQ DT*EQUALITY.SYMBOLS ("=" ":="
"=:" ":=:")) (RPAQQ DT*EQUALITY.PREDICATES NIL) (RPAQQ DT*NONEQUALITY.PREDICATES (20 21 22 25 26 27 28 29 2 1)) (RPAQQ DT*PREDICATE.ALL (20 21 22 25 26 27 28 29 2 1)) (RPAQQ DT*PREDICATE.WITH.ATTRIBUTES NIL) (RPAQQ DT*PREDICATE.COMPONENTS (PNAME
POSITIVE.OCCURRENCES NEGATIVE.OCCURRENCES DOMAINSORTS ATTRIBUTES REFL.CLAUSE +ROTHERSIDES -ROTHERSIDES +SOTHERSIDES -SOTHERSIDES +TOTHERSIDES -TOTHERSIDES)) (RPAQQ DT*TRUE.PREDICATE 1) (RPAQQ DT*FALSE.PREDICATE 2) (RPAQQ DT*UNI.CREATES.VARIABLES
NIL) (RPAQQ DT*SIGN.MINUS.SYMBOLS (- --)) (RPAQQ DT*SIGN.PLUS.SYMBOLS (+ ++)) (RPAQQ DT*SYMBOL.KINDS (CONSTANT.ALL FUNCTION.ALL PREDICATE.ALL)))
(PROGN)
(PROGN (SETPROPLIST (QUOTE DT*PREDICATE.WITH.ATTRIBUTES) (QUOTE NIL)))
(PROGN (SETPROPLIST (QUOTE INSCRIPT) (QUOTE (DT*INVERSE.TRANSITIVE.CLOSURE (INSCRIPT ANY) DT*DIRECT.SUPERSORTS (ANY) DT*MINIMAL.SUBSORTS (INSCRIPT) DT*MAX.SUBSORTS ((INSCRIPT INSCRIPT) (CASKET) (ANY INSCRIPT)) DT*TRANSITIVE.CLOSURE (INSCRIPT)
DT*DIRECT.SUBSORTS NIL DT*ATTRIBUTE NIL DT*SORT.NUMBER 5))) (SETPROPLIST (QUOTE CASKET) (QUOTE (DT*INVERSE.TRANSITIVE.CLOSURE (CASKET ANY) DT*DIRECT.SUPERSORTS (ANY) DT*MINIMAL.SUBSORTS (CASKET) DT*MAX.SUBSORTS ((INSCRIPT) (CASKET CASKET) (ANY
CASKET)) DT*TRANSITIVE.CLOSURE (CASKET) DT*DIRECT.SUBSORTS NIL DT*ATTRIBUTE NIL DT*SORT.NUMBER 4))) (SETPROPLIST (QUOTE ANY) (QUOTE (DT*LEAST.SUPERSORTS ((ANY ANY)) DT*INVERSE.TRANSITIVE.CLOSURE (ANY) DT*DIRECT.SUPERSORTS NIL DT*MINIMAL.SUBSORTS
(CASKET) DT*MAX.SUBSORTS ((INSCRIPT INSCRIPT) (CASKET CASKET) (ANY ANY)) DT*TRANSITIVE.CLOSURE (INSCRIPT CASKET ANY) DT*DIRECT.SUBSORTS (INSCRIPT CASKET) DT*ATTRIBUTE NIL DT*SORT.NUMBER 1))))
(PROGN (RPAQQ ST*STACK1 (NIL NIL NIL)) (RPAQQ ST*SYMBOL.ADDRESSES (NIL (ANY . T) (TRUE . 1) (FALSE . 2) (CASKET . T) (GOLD . 35) (SILVER . 34) (LEAD . 33) (INSCRIPT . T) (INSCRIPTION . 31) (BELLINI . 29) (CELLINI . 28) (DAGGER . 27) (TRUTH . 26)
(INSCR.DAGGER . 25) (NEG.INSCR.DAGGER . 22) (ONE.BELLINI . 21) (INSCR.ONE.BELLINI . 20) (X_19 . 19) (X_18 . 18) (X_17 . 17) (X_15 . 15) (X_14 . 14) (X_13 . 13) (X_12 . 12) (X_9 . 9) (X_8 . 8) (X_36 . 36) (X_37 . 37) (X_38 . 38) (X_39 . 39) (X_40
. 40) (X_41 . 41) (X_42 . 42) (X_43 . 43) (X_44 . 44) (X_45 . 45) (X_46 . 46) (X_47 . 47))))))))STOP
 
