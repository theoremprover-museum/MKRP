(COND ((FMT-LOAD "22-NOV-84 18:48:54" NIL (((* AXIOMS OF PROBLEM 39 %.) COMMENT COMMENT) ((* THERE ARE THREE PEOPLE
:A,B,C.) COMMENT COMMENT) ((* ONE IS A NORMAL, ONE IS A KNIGHT, ONE IS A KNAVE.) COMMENT COMMENT) ((* A SAYS :
I AM NORMAL.) COMMENT COMMENT) ((* B SAYS : THAT IS TRUE.) COMMENT COMMENT) ((* C SAYS : I AM NOT NORMAL.) COMMENT
COMMENT) ((* WHAT ARE A,B,C ?) COMMENT COMMENT) ((*) COMMENT COMMENT) ((* NORMAL2 (X Y) MEANS : X SAYS Y IS NORMAL.)
COMMENT COMMENT) ((* NNORMAL2 (X Y) MEANS : X SAYS Y IS NOT NORMAL.) COMMENT COMMENT) ((*) COMMENT COMMENT) ((ALL
X KNIGHT (X) EQV NOT KNAVE (X) AND NOT NORMAL (X)) (ALL 82 (EQV (+ 81 (82) (KIND (EQV T 130))) (AND (NOT (+ 79
(82) (KIND (EQV NIL 130)))) (NOT (+ 78 (82) (KIND (EQV NIL 130))))))) QUANTIFICATION) ((ALL X KNAVE (X) EQV NOT
KNIGHT (X) AND NOT NORMAL (X)) (ALL 66 (EQV (+ 79 (66) (KIND (EQV T 140))) (AND (NOT (+ 81 (66) (KIND (EQV NIL
140)))) (NOT (+ 78 (66) (KIND (EQV NIL 140))))))) QUANTIFICATION) ((ALL X NORMAL (X) EQV NOT KNAVE (X) AND NOT
KNIGHT (X)) (ALL 37 (EQV (+ 78 (37) (KIND (EQV T 150))) (AND (NOT (+ 79 (37) (KIND (EQV NIL 150)))) (NOT (+ 81
(37) (KIND (EQV NIL 150))))))) QUANTIFICATION) ((ALL X,Y NORMAL2 (X Y) AND KNAVE (X) IMPL NOT NORMAL (Y)) (ALL
25 (ALL 24 (IMPL (AND (+ 49 (24 25) NIL) (+ 79 (24) NIL)) (NOT (+ 78 (25) NIL))))) QUANTIFICATION) ((ALL X,Y NORMAL2
(X Y) AND KNIGHT (X) IMPL NORMAL (Y)) (ALL 74 (ALL 32 (IMPL (AND (+ 49 (32 74) NIL) (+ 81 (32) NIL)) (+ 78 (74)
NIL)))) QUANTIFICATION) ((ALL X,Y NNORMAL2 (X Y) AND KNAVE (X) IMPL NORMAL (Y)) (ALL 87 (ALL 86 (IMPL (AND (+ 88
(86 87) NIL) (+ 79 (86) NIL)) (+ 78 (87) NIL)))) QUANTIFICATION) ((ALL X,Y NNORMAL2 (X Y) AND KNIGHT (X) IMPL NOT
NORMAL (Y)) (ALL 90 (ALL 89 (IMPL (AND (+ 88 (89 90) NIL) (+ 81 (89) NIL)) (NOT (+ 78 (90) NIL))))) QUANTIFICATION)
((KNAVE (A) OR KNAVE (B) OR KNAVE (C)) (OR (+ 79 (91) NIL) (OR (+ 79 (92) NIL) (+ 79 (93) NIL))) QUANTIFICATION)
((KNIGHT (A) OR KNIGHT (B) OR KNIGHT (C)) (OR (+ 81 (91) NIL) (OR (+ 81 (92) NIL) (+ 81 (93) NIL))) QUANTIFICATION)
((NORMAL (A) OR NORMAL (B) OR NORMAL (C)) (OR (+ 78 (91) NIL) (OR (+ 78 (92) NIL) (+ 78 (93) NIL))) QUANTIFICATION)
((NORMAL2 (A A)) (+ 49 (91 91) NIL) QUANTIFICATION) ((NORMAL2 (B A)) (+ 49 (92 91) NIL) QUANTIFICATION) ((NNORMAL2
(C C)) (+ 88 (93 93) NIL) QUANTIFICATION))) (COND (ST*LOAD.FLAG (PROGN (DT-RESET)) (PROG ((ADDRLIST (QUOTE (19830
19835 19840 19845 19850 19865 19870 19875 ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 19970 19965 ATP.MEMORY.NIL
19950 19935 ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 19880 ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 19920 ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 19900 ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL 19915 ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 19885 ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 19905 19910 ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL 19985 20000))) (DATALIST (QUOTE (15 "TRUE" NIL NIL NIL (DEFINED) NIL ((- 1 (POSITIVE)))
((+ 1 (NEGATIVE))) ((+ 1 (NIL))) ((- 1 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "FALSE" NIL NIL NIL (DEFINED)
NIL ((- 2 (POSITIVE))) ((+ 2 (NEGATIVE))) ((+ 2 (NIL))) ((- 2 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 ANY
NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 15 "KNIGHT" NIL NIL (ANY) NIL NIL ((- 81 (POSITIVE))) ((+ 81 (NEGATIVE)))
((+ 81 (NIL))) ((- 81 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "KNAVE" NIL NIL (ANY) NIL NIL ((- 79 (POSITIVE)))
((+ 79 (NEGATIVE))) ((+ 79 (NIL))) ((- 79 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 "NORMAL" NIL NIL (ANY)
NIL NIL ((- 78 (POSITIVE))) ((+ 78 (NEGATIVE))) ((+ 78 (NIL))) ((- 78 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE
5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL
(ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 15 "NORMAL2" NIL
NIL (ANY ANY) NIL NIL ((- 49 (POSITIVE))) ((+ 49 (NEGATIVE))) ((+ 49 (NIL))) ((- 49 (NIL))) NIL NIL (DT*ST-KIND
NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE
5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 15 "NNORMAL2"
NIL NIL (ANY ANY) NIL NIL ((- 88 (POSITIVE))) ((+ 88 (NEGATIVE))) ((+ 88 (NIL))) ((- 88 (NIL))) NIL NIL (DT*ST-KIND
NIL) PREDICATE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 ANY NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE
5 "A" ANY (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT 5 "B" ANY (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT 5 "C"
ANY (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT))) (INCREMENT (IDIFFERENCE MEM*SIZE 20000)) COUNTER1) (MEM-RESET)
(COND ((IGREATERP MEM*SIZE 20000) (SETQ COUNTER1 94) (MAPC ADDRLIST (FUNCTION (LAMBDA (RADDR) (SETA MEM*MEMORY
(SETQ COUNTER1 (SUB1 COUNTER1)) (COND ((EQ RADDR (QUOTE ATP.MEMORY.NIL)) RADDR) ((OR (EQ RADDR 0) (MINUSP RADDR))
RADDR) (T (IPLUS RADDR INCREMENT))))))) (SETQ COUNTER1 (ADD1 MEM*SIZE)) (MAPC DATALIST (FUNCTION (LAMBDA (DATA)
(SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1)) DATA))))) (T (COND ((NEQ MEM*SIZE 20000) (MEM-INITIALIZE 20000)))
(SETQ COUNTER1 94) (MAPC ADDRLIST (FUNCTION (LAMBDA (RADDR) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1)) RADDR))))
(SETQ COUNTER1 (ADD1 MEM*SIZE)) (MAPC DATALIST (FUNCTION (LAMBDA (DATA) (SETA MEM*MEMORY (SETQ COUNTER1 (SUB1 COUNTER1))
DATA)))))) (COND ((IGREATERP MEM*SIZE 20000) (RPAQ MEM*NEXT.RADR (IPLUS 19825 INCREMENT))) (T (RPAQ MEM*NEXT.RADR
19825))) (RPAQ MEM*NEXT.VADR 94) (RPAQ MEM*REST (ADD1 (IDIFFERENCE MEM*NEXT.RADR MEM*NEXT.VADR))) (RPAQ 
MEM*FIRST.REUSABLE.VADR NIL) (RPAQ MEM*LAST.REUSABLE.VADR NIL)) (PROGN (RPAQQ DT*SORT.ALL (ANY)) (RPAQQ DT*SORT.NR
2) (RPAQQ DT*SORT.PROPERTIES (DT*MAX.SUBSORTS DT*LEAST.SUPERSORTS DT*TRANSITIVE.CLOSURE DT*INVERSE.TRANSITIVE.CLOSURE
DT*MINIMAL.SUBSORTS DT*DIRECT.SUBSORTS DT*DIRECT.SUPERSORTS DT*DISJOINT.SORTS DT*COMPLETION.SORT)) (RPAQQ 
DT*SORT.COMMON.COMPUTE.FLAG NIL) (RPAQQ DT*VARIABLE.COUNTER 0) (RPAQQ DT*CONSTANT.COUNTER 0) (RPAQQ DT*CONSTANT.ALL
(93 92 91)) (RPAQQ DT*ABBREVIATIONS NIL) (RPAQQ DT*FUNCTION.COUNTER 0) (RPAQQ DT*FUNCTION.ALL NIL) (RPAQQ 
DT*FUNCTION.ADMISSIBLE.THEORIES (ASSOCIATIVE)) (RPAQQ DT*FUNCTION.ACTUAL.THEORIES NIL) (RPAQQ 
DT*FUNCTION.WITH.ARGUMENT.SYMMETRIES NIL) (RPAQQ DT*FUNCTION.COMPONENTS (PNAME ATTRIBUTES MAX.RANGE.SORT 
MAX.DOMAIN.SORTS MIN.RANGE.SORTS SORT.LIST SORT.LIST.INVERSE SORT.TREE.CALC ARGUMENT.SYMMETRIES ARITY G.L.B.OF.RANGES))
(RPAQQ DT*PREDICATE.ADMISSABLE.ATTRIBUTES (SYMMETRIC DEFINED REFLEXIVE)) (RPAQQ DT*PREDICATE.COUNTER 0) (RPAQQ
DT*EQUALITY.SYMBOLS ("=" ":=" "=:" ":=:")) (RPAQQ DT*EQUALITY.PREDICATES NIL) (RPAQQ DT*NONEQUALITY.PREDICATES
(88 49 78 79 81 2 1)) (RPAQQ DT*PREDICATE.ALL (88 49 78 79 81 2 1)) (RPAQQ DT*PREDICATE.WITH.ATTRIBUTES NIL) (RPAQQ
DT*PREDICATE.COMPONENTS (PNAME POSITIVE.OCCURRENCES NEGATIVE.OCCURRENCES DOMAINSORTS ATTRIBUTES REFL.CLAUSE +ROTHERSIDES
-ROTHERSIDES +SOTHERSIDES -SOTHERSIDES +TOTHERSIDES -TOTHERSIDES)) (RPAQQ DT*TRUE.PREDICATE 1) (RPAQQ DT*FALSE.PREDICATE
2) (RPAQQ DT*UNI.CREATES.VARIABLES NIL) (RPAQQ DT*SIGN.MINUS.SYMBOLS (- --)) (RPAQQ DT*SIGN.PLUS.SYMBOLS (+ ++))
(RPAQQ DT*SYMBOL.KINDS (CONSTANT.ALL FUNCTION.ALL PREDICATE.ALL))) (PROGN) (PROGN (SETPROPLIST (QUOTE 
DT*PREDICATE.WITH.ATTRIBUTES) (QUOTE NIL))) (PROGN (SETPROPLIST (QUOTE ANY) (QUOTE (DT*ATTRIBUTE NIL 
DT*INVERSE.TRANSITIVE.CLOSURE (ANY) DT*DIRECT.SUPERSORTS NIL DT*MINIMAL.SUBSORTS (ANY) DT*MAX.SUBSORTS ((ANY ANY))
DT*TRANSITIVE.CLOSURE (ANY) DT*DIRECT.SUBSORTS NIL DT*SORT.NUMBER 1)))) (PROGN (RPAQQ ST*STACK1 (NIL NIL NIL NIL
NIL NIL ((C PROGN (DT-CONSTANT.DELETE 93) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE C) ST*SYMBOL.ADDRESSES)))
(B PROGN (DT-CONSTANT.DELETE 92) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE B) ST*SYMBOL.ADDRESSES))) (A PROGN
(DT-CONSTANT.DELETE 91) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE A) ST*SYMBOL.ADDRESSES)))) ((X_90 PROGN (
DT-VARIABLE.DELETE 90) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_90) ST*SYMBOL.ADDRESSES))) (X_89 PROGN (
DT-VARIABLE.DELETE 89) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_89) ST*SYMBOL.ADDRESSES)))) ((NNORMAL2 PROGN
(DT-PREDICATE.DELETE 88) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE NNORMAL2) ST*SYMBOL.ADDRESSES))) (X_87 PROGN
(DT-VARIABLE.DELETE 87) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_87) ST*SYMBOL.ADDRESSES))) (X_86 PROGN (
DT-VARIABLE.DELETE 86) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_86) ST*SYMBOL.ADDRESSES)))) ((X_74 PROGN (
DT-VARIABLE.DELETE 74) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_74) ST*SYMBOL.ADDRESSES))) (X_32 PROGN (
DT-VARIABLE.DELETE 32) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_32) ST*SYMBOL.ADDRESSES)))) ((NORMAL2 PROGN
(DT-PREDICATE.DELETE 49) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE NORMAL2) ST*SYMBOL.ADDRESSES))) (X_25 PROGN
(DT-VARIABLE.DELETE 25) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_25) ST*SYMBOL.ADDRESSES))) (X_24 PROGN (
DT-VARIABLE.DELETE 24) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_24) ST*SYMBOL.ADDRESSES)))) ((X_37 PROGN (
DT-VARIABLE.DELETE 37) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_37) ST*SYMBOL.ADDRESSES)))) ((X_66 PROGN (
DT-VARIABLE.DELETE 66) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_66) ST*SYMBOL.ADDRESSES)))) ((NORMAL PROGN
(DT-PREDICATE.DELETE 78) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE NORMAL) ST*SYMBOL.ADDRESSES))) (KNAVE PROGN
(DT-PREDICATE.DELETE 79) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE KNAVE) ST*SYMBOL.ADDRESSES))) (KNIGHT PROGN
(DT-PREDICATE.DELETE 81) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE KNIGHT) ST*SYMBOL.ADDRESSES))) (X_82 PROGN
(DT-VARIABLE.DELETE 82) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_82) ST*SYMBOL.ADDRESSES)))) NIL NIL NIL NIL
NIL NIL NIL NIL NIL NIL NIL ((FALSE PROGN (DT-PREDICATE.DELETE 2) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE FALSE)
ST*SYMBOL.ADDRESSES))) (TRUE PROGN (DT-PREDICATE.DELETE 1) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE TRUE) 
ST*SYMBOL.ADDRESSES))) (ANY PROGN (DT-SORT.ST.REMOVE (QUOTE ANY)) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE ANY)
ST*SYMBOL.ADDRESSES))) (ANY REMPROP (QUOTE ANY) (QUOTE ST*DATA))))) (RPAQQ ST*SYMBOL.ADDRESSES (NIL (ANY . T) (TRUE
. 1) (FALSE . 2) (X_82 . 82) (KNIGHT . 81) (KNAVE . 79) (NORMAL . 78) (X_66 . 66) (X_37 . 37) (X_24 . 24) (X_25
. 25) (NORMAL2 . 49) (X_32 . 32) (X_74 . 74) (X_86 . 86) (X_87 . 87) (NNORMAL2 . 88) (X_89 . 89) (X_90 . 90) (A
. 91) (B . 92) (C . 93))))))))STOP
 
