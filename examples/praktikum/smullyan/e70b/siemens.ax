(COND ((FMT-LOAD "31-JAN-85 13:40:04"
NIL(((* 70B) COMMENT COMMENT) ((*) COMMENT COMMENT) ((* THE SUITOR DID NOT PASS THE LAST TEST BUT PORTIA SAID:I WILL FORGET THE) COMMENT COMMENT) ((* LAST TEST AND GIVE YOU A SIMPLER ONE IN WHICH YOUR CHANCES OF WINNING ME) COMMENT COMMENT) ((*
WILL BE TWO OUT OF THREE RATHER THAN ONE OUT OF TWO.IT RESEMBLES ONE OF) COMMENT COMMENT) ((* THE TESTS GIVEN BY MY ANCESTOR PORTIA III.NOW SURELY YOU SHOULD BE ABLE) COMMENT COMMENT) ((* TO PASS THIS ONE!) COMMENT COMMENT) ((* SO SAYING,SHE LED
THE SUITOR INTO ANOTHER ROOM IN WHICH THERE WERE THREE) COMMENT COMMENT) ((* CASKETS - GOLD,SILVER,AND LEAD.PORTIA EXPLAINED THAT ONE OF THEM CONTAINED) COMMENT COMMENT) ((* A DAGGER AND THE OTHER TWO WERE EMPTY.TO WIN HER,THE SUITOR MERELY NEED)
COMMENT COMMENT) ((* CHOOSE ONE OF THE EMPTY ONES.THE INSCRIPTIONS ON THE CASKETS READ AS FOLLOWS:) COMMENT COMMENT) ((* GOLD:THE DAGGER IS IN THIS CASKET.) COMMENT COMMENT) ((* SILVER:THIS CASKET IS EMPTY.) COMMENT COMMENT) ((* AT MOST ONE OF
THESE THREE STATEMENTS IS TRUE.) COMMENT COMMENT) ((*) COMMENT COMMENT) ((* WE DEFINE THE FOLLOWING PREDICATES:) COMMENT COMMENT) ((* TRUTH,DAGGER,INSCR.DAGGER,NEG.INSCR.DAGGER MEAN THE SAME AS DESCRIBED IN 68 AND 69) COMMENT COMMENT) ((* 
INSCR.ATMOST.ONE STAT.TRUE (X U V W) ...THE INSCRIPTION X TELLS AT MOST) COMMENT COMMENT) ((* ONE OF THE STATEMENTS U,V,W IS TRUE.) COMMENT COMMENT) ((* ATMOST.ONE.STAT.TRUE (U V W) ...AT MOST ONE OF THE STATEMENTS U,V,W IS TRUE) COMMENT COMMENT)
((*) COMMENT COMMENT) ((* WE DEFINE THE FOLLOWING FUNCTION:) COMMENT COMMENT) ((* INSCRIPTION (X) MEAN THE SAME AS DESCRIBED IN 67) COMMENT COMMENT) ((*) COMMENT COMMENT) ((* DECLARATIONS:) COMMENT COMMENT) ((*) COMMENT COMMENT) ((TYPE GOLD,SILVER,LEAD
: CASKET) (+ 1 NIL) TYPE) ((TYPE INSCRIPTION (CASKET) :INSCRIPT) (+ 1 NIL) TYPE) ((TYPE TRUTH (INSCRIPT)) (+ 1 NIL) TYPE) ((TYPE DAGGER (CASKET)) (+ 1 NIL) TYPE) ((TYPE INSCR.DAGGER (INSCRIPT CASKET)) (+ 1 NIL) TYPE) ((TYPE INSCR.NEG.DAGGER (INSCRIPT
CASKET)) (+ 1 NIL) TYPE) ((TYPE INSCR.ATMOST.ONE.STAT.TRUE (INSCRIPT INSCRIPT INSCRIPT INSCRIPT)) (+ 1 NIL) TYPE) ((TYPE ATMOST.ONE.STAT.TRUE (INSCRIPT INSCRIPT INSCRIPT)) (+ 1 NIL) TYPE) ((*) COMMENT COMMENT) ((* THE DAGGER IS IN EXACTLY ONE
CASKET) COMMENT COMMENT) ((DAGGER (GOLD) OR DAGGER (SILVER) OR DAGGER (LEAD)) (OR (+ 27 (32) NIL) (OR (+ 27 (31) NIL) (+ 27 (30) NIL))) QUANTIFICATION) ((NOT ((DAGGER (GOLD) AND DAGGER (SILVER)) OR (DAGGER (SILVER) AND DAGGER (LEAD)) OR (DAGGER
(GOLD) AND DAGGER (LEAD)))) (NOT (OR (AND (+ 27 (32) NIL) (+ 27 (31) NIL)) (OR (AND (+ 27 (31) NIL) (+ 27 (30) NIL)) (AND (+ 27 (32) NIL) (+ 27 (30) NIL))))) QUANTIFICATION) ((*) COMMENT COMMENT) ((* MEANING OF THE PREDICATE ATMOST.ONE.STAT.TRUE
(X Y Z)) COMMENT COMMENT) ((ALL X,Y,Z : INSCRIPT ATMOST.ONE.STAT.TRUE (X Y Z) EQV NOT ((TRUTH (X) AND TRUTH (Y)) OR (TRUTH (X) AND TRUTH (Z)) OR (TRUTH (Y) AND TRUTH (Z)))) (ALL 19 (ALL 20 (ALL 21 (EQV (+ 23 (21 20 19) NIL) (NOT (OR (AND (+ 28
(21) NIL) (+ 28 (20) NIL)) (OR (AND (+ 28 (21) NIL) (+ 28 (19) NIL)) (AND (+ 28 (20) NIL) (+ 28 (19) NIL))))))))) QUANTIFICATION) ((*) COMMENT COMMENT) ((* ACTUAL INSCRIPTIONS:) COMMENT COMMENT) ((*) COMMENT COMMENT) ((INSCR.DAGGER (INSCRIPTION
(GOLD) GOLD)) (+ 26 ((29 32) 32) NIL) QUANTIFICATION) ((NEG.INSCR.DAGGER (INSCRIPTION (SILVER) SILVER)) (+ 18 ((29 31) 31) NIL) QUANTIFICATION) ((INSCR.ATMOST.ONE.STAT.TRUE (INSCRIPTION (LEAD) INSCRIPTION (GOLD) INSCRIPTION (SILVER) INSCRIPTION
(LEAD))) (+ 24 ((29 30) (29 32) (29 31) (29 30)) NIL) QUANTIFICATION)))(COND (ST*LOAD.FLAG (PROGN (DT-RESET))
(MEM-RESTORE 13 17 33 10321 10500 (QUOTE (10470 10465 10460 10455 10441 10426 10411 10396 10381 10366 ATP.MEMORY.NIL 10351 10346 10341 10336 0 -17 -16 -15 -14 ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 10485 10500))(QUOTE (15 TRUE NIL NIL NIL (DEFINED) NIL ((- 1 (POSITIVE))) ((+ 1 (NEGATIVE))) ((+ 1 (NIL))) ((- 1 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 FALSE NIL NIL NIL (DEFINED)
NIL ((- 2 (POSITIVE))) ((+ 2 (NEGATIVE))) ((+ 2 (NIL))) ((- 2 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 GOLD CASKET (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT 5 SILVER CASKET (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT 5 LEAD CASKET (ST*ATTRIBUTE
NIL DT*ST-KIND NIL) CONSTANT 14 INSCRIPTION NIL INSCRIPT (CASKET) NIL NIL NIL NIL NIL 1 INSCRIPT (DT*ST-KIND NIL) FUNCTION 15 TRUTH NIL NIL (INSCRIPT) NIL NIL ((- 28 (POSITIVE))) ((+ 28 (NEGATIVE))) ((+ 28 (NIL))) ((- 28 (NIL))) NIL NIL (DT*ST-KIND
NIL) PREDICATE 15 DAGGER NIL NIL (CASKET) NIL NIL ((- 27 (POSITIVE))) ((+ 27 (NEGATIVE))) ((+ 27 (NIL))) ((- 27 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 INSCR.DAGGER NIL NIL (INSCRIPT CASKET) NIL NIL ((- 26 (POSITIVE))) ((+ 26 (NEGATIVE)))
((+ 26 (NIL))) ((- 26 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 INSCR.NEG.DAGGER NIL NIL (INSCRIPT CASKET) NIL NIL ((- 25 (POSITIVE))) ((+ 25 (NEGATIVE))) ((+ 25 (NIL))) ((- 25 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 
INSCR.ATMOST.ONE.STAT.TRUE NIL NIL (INSCRIPT INSCRIPT INSCRIPT INSCRIPT) NIL NIL ((- 24 (POSITIVE))) ((+ 24 (NEGATIVE))) ((+ 24 (NIL))) ((- 24 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 ATMOST.ONE.STAT.TRUE NIL NIL (INSCRIPT INSCRIPT INSCRIPT)
NIL NIL ((- 23 (POSITIVE))) ((+ 23 (NEGATIVE))) ((+ 23 (NIL))) ((- 23 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 INSCRIPT NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 INSCRIPT NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 INSCRIPT NIL (ST*DATA
NIL DT*ST-KIND SYS-VAR) VARIABLE 15 NEG.INSCR.DAGGER NIL NIL (ANY ANY) NIL NIL ((- 18 (POSITIVE))) ((+ 18 (NEGATIVE))) ((+ 18 (NIL))) ((- 18 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE)))(PROGN (RPAQQ DT*SORT.ALL (INSCRIPT CASKET ANY)) (RPAQQ DT*SORT.NR
6) (RPAQQ DT*SORT.PROPERTIES (DT*MAX.SUBSORTS DT*LEAST.SUPERSORTS DT*TRANSITIVE.CLOSURE DT*INVERSE.TRANSITIVE.CLOSURE DT*MINIMAL.SUBSORTS DT*DIRECT.SUBSORTS DT*DIRECT.SUPERSORTS DT*DISJOINT.SORTS DT*COMPLETION.SORT)) (RPAQQ DT*SORT.COMMON.COMPUTE.FLAG
NIL) (RPAQQ DT*VARIABLE.COUNTER 0) (RPAQQ DT*CONSTANT.COUNTER 0) (RPAQQ DT*CONSTANT.ALL (30 31 32)) (RPAQQ DT*ABBREVIATIONS NIL) (RPAQQ DT*FUNCTION.COUNTER 0) (RPAQQ DT*FUNCTION.ALL (29)) (RPAQQ DT*FUNCTION.ADMISSIBLE.THEORIES (ASSOCIATIVE)) (RPAQQ
DT*FUNCTION.ACTUAL.THEORIES NIL) (RPAQQ DT*FUNCTION.WITH.ARGUMENT.SYMMETRIES NIL) (RPAQQ DT*FUNCTION.COMPONENTS (PNAME ATTRIBUTES MAX.RANGE.SORT MAX.DOMAIN.SORTS MIN.RANGE.SORTS SORT.LIST SORT.LIST.INVERSE SORT.TREE.CALC ARGUMENT.SYMMETRIES ARITY
G.L.B.OF.RANGES)) (RPAQQ DT*PREDICATE.ADMISSABLE.ATTRIBUTES (SYMMETRIC DEFINED REFLEXIVE)) (RPAQQ DT*PREDICATE.COUNTER 0) (RPAQQ DT*EQUALITY.SYMBOLS ("=" ":=" "=:" ":=:")) (RPAQQ DT*EQUALITY.PREDICATES NIL) (RPAQQ DT*NONEQUALITY.PREDICATES (18
23 24 25 26 27 28 2 1)) (RPAQQ DT*PREDICATE.ALL (18 23 24 25 26 27 28 2 1)) (RPAQQ DT*PREDICATE.WITH.ATTRIBUTES NIL) (RPAQQ DT*PREDICATE.COMPONENTS (PNAME POSITIVE.OCCURRENCES NEGATIVE.OCCURRENCES DOMAINSORTS ATTRIBUTES REFL.CLAUSE +ROTHERSIDES
-ROTHERSIDES +SOTHERSIDES -SOTHERSIDES +TOTHERSIDES -TOTHERSIDES)) (RPAQQ DT*TRUE.PREDICATE 1) (RPAQQ DT*FALSE.PREDICATE 2) (RPAQQ DT*UNI.CREATES.VARIABLES NIL) (RPAQQ DT*SIGN.MINUS.SYMBOLS (- --)) (RPAQQ DT*SIGN.PLUS.SYMBOLS (+ ++)) (RPAQQ 
DT*SYMBOL.KINDS (CONSTANT.ALL FUNCTION.ALL PREDICATE.ALL)))
(PROGN)
(PROGN (SETPROPLIST (QUOTE DT*PREDICATE.WITH.ATTRIBUTES) (QUOTE NIL)))
(PROGN (SETPROPLIST (QUOTE INSCRIPT) (QUOTE (DT*INVERSE.TRANSITIVE.CLOSURE (INSCRIPT ANY) DT*DIRECT.SUPERSORTS (ANY) DT*MINIMAL.SUBSORTS (INSCRIPT) DT*MAX.SUBSORTS ((INSCRIPT INSCRIPT) (CASKET) (ANY INSCRIPT)) DT*TRANSITIVE.CLOSURE (INSCRIPT)
DT*DIRECT.SUBSORTS NIL DT*ATTRIBUTE NIL DT*SORT.NUMBER 5))) (SETPROPLIST (QUOTE CASKET) (QUOTE (DT*INVERSE.TRANSITIVE.CLOSURE (CASKET ANY) DT*DIRECT.SUPERSORTS (ANY) DT*MINIMAL.SUBSORTS (CASKET) DT*MAX.SUBSORTS ((INSCRIPT) (CASKET CASKET) (ANY
CASKET)) DT*TRANSITIVE.CLOSURE (CASKET) DT*DIRECT.SUBSORTS NIL DT*ATTRIBUTE NIL DT*SORT.NUMBER 4))) (SETPROPLIST (QUOTE ANY) (QUOTE (DT*LEAST.SUPERSORTS ((ANY ANY)) DT*ATTRIBUTE NIL DT*INVERSE.TRANSITIVE.CLOSURE (ANY) DT*DIRECT.SUPERSORTS NIL
DT*MINIMAL.SUBSORTS (CASKET) DT*MAX.SUBSORTS ((INSCRIPT INSCRIPT) (CASKET CASKET) (ANY ANY)) DT*TRANSITIVE.CLOSURE (INSCRIPT CASKET ANY) DT*SORT.NUMBER 1 DT*DIRECT.SUBSORTS (INSCRIPT CASKET)))))
(PROGN (RPAQQ ST*STACK1 (NIL NIL ((NEG.INSCR.DAGGER PROGN (DT-PREDICATE.DELETE 18) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE NEG.INSCR.DAGGER) ST*SYMBOL.ADDRESSES)))) NIL NIL NIL NIL ((X_19 PROGN (DT-VARIABLE.DELETE 19) (RPAQ ST*SYMBOL.ADDRESSES
(REMASSOC (QUOTE X_19) ST*SYMBOL.ADDRESSES))) (X_20 PROGN (DT-VARIABLE.DELETE 20) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_20) ST*SYMBOL.ADDRESSES))) (X_21 PROGN (DT-VARIABLE.DELETE 21) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE X_21) 
ST*SYMBOL.ADDRESSES)))) NIL NIL NIL NIL NIL NIL ((ATMOST.ONE.STAT.TRUE PROGN (DT-PREDICATE.DELETE 23) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE ATMOST.ONE.STAT.TRUE) ST*SYMBOL.ADDRESSES)))) ((INSCR.ATMOST.ONE.STAT.TRUE PROGN (DT-PREDICATE.DELETE
24) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE INSCR.ATMOST.ONE.STAT.TRUE) ST*SYMBOL.ADDRESSES)))) ((INSCR.NEG.DAGGER PROGN (DT-PREDICATE.DELETE 25) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE INSCR.NEG.DAGGER) ST*SYMBOL.ADDRESSES)))) ((INSCR.DAGGER
PROGN (DT-PREDICATE.DELETE 26) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE INSCR.DAGGER) ST*SYMBOL.ADDRESSES)))) ((DAGGER PROGN (DT-PREDICATE.DELETE 27) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE DAGGER) ST*SYMBOL.ADDRESSES)))) ((TRUTH PROGN (
DT-PREDICATE.DELETE 28) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE TRUTH) ST*SYMBOL.ADDRESSES)))) ((INSCRIPTION PROGN (DT-FUNCTION.DELETE 29) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE INSCRIPTION) ST*SYMBOL.ADDRESSES))) (INSCRIPT PROGN (
DT-SORT.ST.REMOVE (QUOTE INSCRIPT)) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE INSCRIPT) ST*SYMBOL.ADDRESSES))) (INSCRIPT REMPROP (QUOTE INSCRIPT) (QUOTE ST*DATA))) ((LEAD PROGN (DT-CONSTANT.DELETE 30) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE
LEAD) ST*SYMBOL.ADDRESSES))) (SILVER PROGN (DT-CONSTANT.DELETE 31) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE SILVER) ST*SYMBOL.ADDRESSES))) (GOLD PROGN (DT-CONSTANT.DELETE 32) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE GOLD) ST*SYMBOL.ADDRESSES)))
(CASKET PROGN (DT-SORT.ST.REMOVE (QUOTE CASKET)) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE CASKET) ST*SYMBOL.ADDRESSES))) (CASKET REMPROP (QUOTE CASKET) (QUOTE ST*DATA))) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
NIL NIL NIL NIL NIL NIL NIL NIL ((FALSE PROGN (DT-PREDICATE.DELETE 2) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE FALSE) ST*SYMBOL.ADDRESSES))) (TRUE PROGN (DT-PREDICATE.DELETE 1) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE TRUE) ST*SYMBOL.ADDRESSES)))
(ANY PROGN (DT-SORT.ST.REMOVE (QUOTE ANY)) (RPAQ ST*SYMBOL.ADDRESSES (REMASSOC (QUOTE ANY) ST*SYMBOL.ADDRESSES))) (ANY REMPROP (QUOTE ANY) (QUOTE ST*DATA))))) (RPAQQ ST*SYMBOL.ADDRESSES (NIL (ANY . T) (TRUE . 1) (FALSE . 2) (CASKET . T) (GOLD
. 32) (SILVER . 31) (LEAD . 30) (INSCRIPT . T) (INSCRIPTION . 29) (TRUTH . 28) (DAGGER . 27) (INSCR.DAGGER . 26) (INSCR.NEG.DAGGER . 25) (INSCR.ATMOST.ONE.STAT.TRUE . 24) (ATMOST.ONE.STAT.TRUE . 23) (X_21 . 21) (X_20 . 20) (X_19 . 19) (NEG.INSCR.DAGGER
. 18))))))))STOP
 
