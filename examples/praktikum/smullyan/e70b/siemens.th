(COND ((FMT-LOAD "31-JAN-85 13:42:23"
NIL(((NOT (DAGGER (GOLD)) AND NOT (DAGGER (SILVER)) AND NOT (DAGGER (LEAD))) (AND (NOT (+ 27 (32) NIL)) (AND (NOT (+ 27 (31) NIL)) (NOT (+ 27 (30) NIL)))) QUANTIFICATION)))(COND (ST*LOAD.FLAG (PROGN (DT-RESET))
(MEM-RESTORE 13 17 33 10321 10500 (QUOTE (10470 10465 10460 10455 10441 10426 10411 10396 10381 10366 ATP.MEMORY.NIL 10351 10346 10341 10336 0 -17 -16 -15 -14 ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL
ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL ATP.MEMORY.NIL 10485 10500))(QUOTE (15 TRUE NIL NIL NIL (DEFINED) NIL ((- 1 (POSITIVE))) ((+ 1 (NEGATIVE))) ((+ 1 (NIL))) ((- 1 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 FALSE NIL NIL NIL (DEFINED)
NIL ((- 2 (POSITIVE))) ((+ 2 (NEGATIVE))) ((+ 2 (NIL))) ((- 2 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 GOLD CASKET (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT 5 SILVER CASKET (ST*ATTRIBUTE NIL DT*ST-KIND NIL) CONSTANT 5 LEAD CASKET (ST*ATTRIBUTE
NIL DT*ST-KIND NIL) CONSTANT 14 INSCRIPTION NIL INSCRIPT (CASKET) NIL NIL NIL NIL NIL 1 INSCRIPT (DT*ST-KIND NIL) FUNCTION 15 TRUTH NIL NIL (INSCRIPT) NIL NIL ((- 28 (POSITIVE))) ((+ 28 (NEGATIVE))) ((+ 28 (NIL))) ((- 28 (NIL))) NIL NIL (DT*ST-KIND
NIL) PREDICATE 15 DAGGER NIL NIL (CASKET) NIL NIL ((- 27 (POSITIVE))) ((+ 27 (NEGATIVE))) ((+ 27 (NIL))) ((- 27 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 INSCR.DAGGER NIL NIL (INSCRIPT CASKET) NIL NIL ((- 26 (POSITIVE))) ((+ 26 (NEGATIVE)))
((+ 26 (NIL))) ((- 26 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 INSCR.NEG.DAGGER NIL NIL (INSCRIPT CASKET) NIL NIL ((- 25 (POSITIVE))) ((+ 25 (NEGATIVE))) ((+ 25 (NIL))) ((- 25 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 
INSCR.ATMOST.ONE.STAT.TRUE NIL NIL (INSCRIPT INSCRIPT INSCRIPT INSCRIPT) NIL NIL ((- 24 (POSITIVE))) ((+ 24 (NEGATIVE))) ((+ 24 (NIL))) ((- 24 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 15 ATMOST.ONE.STAT.TRUE NIL NIL (INSCRIPT INSCRIPT INSCRIPT)
NIL NIL ((- 23 (POSITIVE))) ((+ 23 (NEGATIVE))) ((+ 23 (NIL))) ((- 23 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE 5 INSCRIPT NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 INSCRIPT NIL (ST*DATA NIL DT*ST-KIND SYS-VAR) VARIABLE 5 INSCRIPT NIL (ST*DATA
NIL DT*ST-KIND SYS-VAR) VARIABLE 15 NEG.INSCR.DAGGER NIL NIL (ANY ANY) NIL NIL ((- 18 (POSITIVE))) ((+ 18 (NEGATIVE))) ((+ 18 (NIL))) ((- 18 (NIL))) NIL NIL (DT*ST-KIND NIL) PREDICATE)))(PROGN (RPAQQ DT*SORT.ALL (INSCRIPT CASKET ANY)) (RPAQQ DT*SORT.NR
6) (RPAQQ DT*SORT.PROPERTIES (DT*MAX.SUBSORTS DT*LEAST.SUPERSORTS DT*TRANSITIVE.CLOSURE DT*INVERSE.TRANSITIVE.CLOSURE DT*MINIMAL.SUBSORTS DT*DIRECT.SUBSORTS DT*DIRECT.SUPERSORTS DT*DISJOINT.SORTS DT*COMPLETION.SORT)) (RPAQQ DT*SORT.COMMON.COMPUTE.FLAG
NIL) (RPAQQ DT*VARIABLE.COUNTER 0) (RPAQQ DT*CONSTANT.COUNTER 0) (RPAQQ DT*CONSTANT.ALL (30 31 32)) (RPAQQ DT*ABBREVIATIONS NIL) (RPAQQ DT*FUNCTION.COUNTER 0) (RPAQQ DT*FUNCTION.ALL (29)) (RPAQQ DT*FUNCTION.ADMISSIBLE.THEORIES (ASSOCIATIVE)) (RPAQQ
DT*FUNCTION.ACTUAL.THEORIES NIL) (RPAQQ DT*FUNCTION.WITH.ARGUMENT.SYMMETRIES NIL) (RPAQQ DT*FUNCTION.COMPONENTS (PNAME ATTRIBUTES MAX.RANGE.SORT MAX.DOMAIN.SORTS MIN.RANGE.SORTS SORT.LIST SORT.LIST.INVERSE SORT.TREE.CALC ARGUMENT.SYMMETRIES ARITY
G.L.B.OF.RANGES)) (RPAQQ DT*PREDICATE.ADMISSABLE.ATTRIBUTES (SYMMETRIC DEFINED REFLEXIVE)) (RPAQQ DT*PREDICATE.COUNTER 0) (RPAQQ DT*EQUALITY.SYMBOLS ("=" ":=" "=:" ":=:")) (RPAQQ DT*EQUALITY.PREDICATES NIL) (RPAQQ DT*NONEQUALITY.PREDICATES (18
23 24 25 26 27 28 2 1)) (RPAQQ DT*PREDICATE.ALL (18 23 24 25 26 27 28 2 1)) (RPAQQ DT*PREDICATE.WITH.ATTRIBUTES NIL) (RPAQQ DT*PREDICATE.COMPONENTS (PNAME POSITIVE.OCCURRENCES NEGATIVE.OCCURRENCES DOMAINSORTS ATTRIBUTES REFL.CLAUSE +ROTHERSIDES
-ROTHERSIDES +SOTHERSIDES -SOTHERSIDES +TOTHERSIDES -TOTHERSIDES)) (RPAQQ DT*TRUE.PREDICATE 1) (RPAQQ DT*FALSE.PREDICATE 2) (RPAQQ DT*UNI.CREATES.VARIABLES NIL) (RPAQQ DT*SIGN.MINUS.SYMBOLS (- --)) (RPAQQ DT*SIGN.PLUS.SYMBOLS (+ ++)) (RPAQQ 
DT*SYMBOL.KINDS (CONSTANT.ALL FUNCTION.ALL PREDICATE.ALL)))
(PROGN)
(PROGN (SETPROPLIST (QUOTE DT*PREDICATE.WITH.ATTRIBUTES) (QUOTE NIL)))
(PROGN (SETPROPLIST (QUOTE INSCRIPT) (QUOTE (DT*INVERSE.TRANSITIVE.CLOSURE (INSCRIPT ANY) DT*DIRECT.SUPERSORTS (ANY) DT*MINIMAL.SUBSORTS (INSCRIPT) DT*MAX.SUBSORTS ((INSCRIPT INSCRIPT) (CASKET) (ANY INSCRIPT)) DT*TRANSITIVE.CLOSURE (INSCRIPT)
DT*DIRECT.SUBSORTS NIL DT*ATTRIBUTE NIL DT*SORT.NUMBER 5))) (SETPROPLIST (QUOTE CASKET) (QUOTE (DT*INVERSE.TRANSITIVE.CLOSURE (CASKET ANY) DT*DIRECT.SUPERSORTS (ANY) DT*MINIMAL.SUBSORTS (CASKET) DT*MAX.SUBSORTS ((INSCRIPT) (CASKET CASKET) (ANY
CASKET)) DT*TRANSITIVE.CLOSURE (CASKET) DT*DIRECT.SUBSORTS NIL DT*ATTRIBUTE NIL DT*SORT.NUMBER 4))) (SETPROPLIST (QUOTE ANY) (QUOTE (DT*LEAST.SUPERSORTS ((ANY ANY)) DT*ATTRIBUTE NIL DT*INVERSE.TRANSITIVE.CLOSURE (ANY) DT*DIRECT.SUPERSORTS NIL
DT*MINIMAL.SUBSORTS (CASKET) DT*MAX.SUBSORTS ((INSCRIPT INSCRIPT) (CASKET CASKET) (ANY ANY)) DT*TRANSITIVE.CLOSURE (INSCRIPT CASKET ANY) DT*SORT.NUMBER 1 DT*DIRECT.SUBSORTS (INSCRIPT CASKET)))))
(PROGN (RPAQQ ST*STACK1 (NIL NIL NIL)) (RPAQQ ST*SYMBOL.ADDRESSES (NIL (ANY . T) (TRUE . 1) (FALSE . 2) (CASKET . T) (GOLD . 32) (SILVER . 31) (LEAD . 30) (INSCRIPT . T) (INSCRIPTION . 29) (TRUTH . 28) (DAGGER . 27) (INSCR.DAGGER . 26) (
INSCR.NEG.DAGGER . 25) (INSCR.ATMOST.ONE.STAT.TRUE . 24) (ATMOST.ONE.STAT.TRUE . 23) (X_21 . 21) (X_20 . 20) (X_19 . 19) (NEG.INSCR.DAGGER . 18))))))))STOP
 
