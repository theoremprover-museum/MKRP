;;; -*- Package: MKRP; Base: 10; Mode: LISP; Syntax: Common-lisp -*-

(problem TH1-PROBLEM proved
    ((type-constants ANY)
    (constants (SK1132 ANY) (SK1135 ANY) (SK1134 ANY) (SK1133 ANY) (SK1136 ANY) (SK1137 ANY) (P (O ANY)) (SK1131 (ANY  ANY)) (SK1138 (ANY  ANY))))
    (resolution-proof
        (cnf (
            (clause R.= ((X_28 ANY)) (+ (= X_28 X_28)))
            (clause T1 ((X_13 ANY)(X_12 ANY)) (+ (P X_12)) (+ (P SK1137)) (+ (P (SK1138 X_13))) (+ (P X_13)))
            (clause T2 ((X_15 ANY)(X_14 ANY)) (+ (P X_14)) (+ (P SK1137)) (- (P X_15)) (- (P (SK1138 X_15))))
            (clause T3 ((X_18 ANY)(X_17 ANY)(X_16 ANY)) (+ (P X_16)) (+ (P X_17)) (- (P SK1136)) (- (P X_18)))
            (clause T4 ((X_21 ANY)(X_20 ANY)(X_19 ANY)) (+ (P X_19)) (+ (P SK1136)) (- (P X_20)) (- (P X_21)))
            (clause T5 ((X_22 ANY)) (+ (P SK1133)) (+ (P X_22)) (- (P SK1134)) (- (P SK1135)))
            (clause T6 ((X_23 ANY)) (+ (P SK1133)) (+ (P SK1134)) (- (P X_23)) (- (P SK1135)))
            (clause T7 ((X_25 ANY)(X_24 ANY)) (+ (P (SK1131 X_24))) (+ (P X_24)) (- (P X_25)) (- (P SK1132)))
            (clause T8 ((X_27 ANY)(X_26 ANY)) (- (P X_26)) (- (P (SK1131 X_26))) (- (P X_27)) (- (P SK1132))))
            (delta-relation ))
        (factoring step-0 
          (clause T1.Ren0 ((X_43 ANY)(X_44 ANY)) (+ (P SK1137)) (+ (P (SK1138 X_43))) (+ (P X_43)))
          (T1 (position 1) (position 0))
          (substitution (X_12) (SK1137))
          (substitution (X_13 X_12) (X_43 X_44)))
        (factoring step-1 
          (clause T2.Ren1 ((X_61 ANY)(X_62 ANY)) (+ (P SK1137)) (- (P X_61)) (- (P (SK1138 X_61))))
          (T2 (position 1) (position 0))
          (substitution (X_14) (SK1137))
          (substitution (X_15 X_14) (X_61 X_62)))
        (factoring step-2 
          (clause T3.Ren2 ((X_90 ANY)(X_91 ANY)(X_92 ANY)) (+ (P X_92)) (+ (P X_91)) (- (P SK1136)))
          (T3 (position 2) (position 3))
          (substitution (X_18) (SK1136))
          (substitution (X_18 X_17 X_16) (X_90 X_91 X_92)))
        (factoring step-3 
          (clause T3.Ren3 ((X_93 ANY)(X_94 ANY)) (+ (P X_94)) (- (P SK1136)))
          (T3.Ren2 (position 0) (position 1))
          (substitution (X_91) (X_92))
          (substitution (X_91 X_92) (X_93 X_94)))
        (factoring step-4 
          (clause T4.Ren4 ((X_117 ANY)(X_118 ANY)(X_119 ANY)) (+ (P X_119)) (+ (P SK1136)) (- (P X_118)))
          (T4 (position 2) (position 3))
          (substitution (X_21) (X_20))
          (substitution (X_21 X_20 X_19) (X_117 X_118 X_119)))
        (factoring step-5 
          (clause T4.Ren5 ((X_120 ANY)(X_121 ANY)) (+ (P SK1136)) (- (P X_120)))
          (T4.Ren4 (position 1) (position 0))
          (substitution (X_119) (SK1136))
          (substitution (X_118 X_119) (X_120 X_121)))
        (resolution step-0 
          (clause T4.Ren6 ((X_124 ANY)(X_125 ANY)) (+ (P SK1136)) (+ (P SK1137)) (+ (P SK1136)))
          (T4.Ren5 (position 1)) (T1.Ren0 (position 1))
          (substitution (X_120 X_43) ((SK1138 SK1136) SK1136))
          (substitution (X_120 X_43) (X_124 X_125)))
        (resolution step-1 
          (clause T4.Ren7 ((X_126 ANY)(X_127 ANY)) (+ (P SK1136)) (+ (P SK1136)) (+ (P SK1136)))
          (T4.Ren6 (position 1)) (T4.Ren5 (position 1))
          (substitution (X_124 X_125 X_120) ((SK1138 SK1136) SK1136 SK1137))
          (substitution (X_124 X_125) (X_126 X_127)))
        (factoring step-6 
          (clause T4.Ren8 ((X_128 ANY)(X_129 ANY)) (+ (P SK1136)) (+ (P SK1136)))
          (T4.Ren7 (position 0) (position 2))
          (substitution (X_126 X_127) ((SK1138 SK1136) SK1136))
          (substitution (X_126 X_127) (X_128 X_129)))
        (factoring step-7 
          (clause T8.Ren9 ((X_74 ANY)(X_76 ANY)) (- (P X_76)) (- (P (SK1131 X_76))) (- (P SK1132)))
          (T8 (position 3) (position 2))
          (substitution (X_27) (SK1132))
          (substitution (X_27 X_26) (X_74 X_76))))
    (prover mkrp 
        (options (TWO_RULES)
         (TWO_RULES.MAXLEVEL . 1)
         (TWO_SUPPRESS.NORULES)
         (RED.I_CLAUSE.MULTIPLE.LITERALS)
         (RED.I_CLAUSE.PURITY . PARTIAL)
         (RED.I_CLAUSE.TAUTOLOGY . T)
         (RED.I_CLAUSE.TAUTOLOGY.RECHECK . PARTIAL)
         (RED.I_CLAUSE.SUBSUMPTION . T)
         (RED.I_CLAUSE.SUBSUMPTION.RECHECK . PARTIAL)
         (RED.I_CLAUSE.REPL.FACTORING . T)
         (RED.I_CLAUSE.REPL.FACTORING.RECHECK . T)
         (RED.I_CLAUSE.REPL.RESOLUTION . SIMPLE)
         (RED.I_CLAUSE.REPL.RESOLUTION.RECHECK . T)
         (RED.I_CLAUSE.REWRITING . DEM)
         (RED.I_LINK.INCOMPATIBILITY . T)
         (RED.I_LINK.TAUTOLOGY . REMOVE-INHIBIT)
         (RED.I_LINK.TAUTOLOGY.RECHECK)
         (RED.I_LINK.SUBSUMPTION . REMOVE-INHIBIT)
         (RED.I_LINK.SUBSUMPTION.RECHECK)
         (RED.D_CLAUSE.MULTIPLE.LITERALS)
         (RED.D_CLAUSE.PURITY . PARTIAL)
         (RED.D_CLAUSE.TAUTOLOGY . REMOVE-INHIBIT)
         (RED.D_CLAUSE.TAUTOLOGY.RECHECK)
         (RED.D_CLAUSE.SUBSUMPTION.FORWARD . REMOVE-INHIBIT)
         (RED.D_CLAUSE.SUBSUMPTION.BACKWARD . REMOVE)
         (RED.D_CLAUSE.SUBSUMPTION.RECHECK)
         (RED.D_CLAUSE.REPL.FACTORING . T)
         (RED.D_CLAUSE.REPL.FACTORING.RECHECK . T)
         (RED.D_CLAUSE.REPL.RESOLUTION . SIMPLE)
         (RED.D_CLAUSE.REPL.RESOLUTION.RECHECK . T)
         (RED.D_CLAUSE.REWRITING . DEM)
         (RED.D_LINK.INCOMPATIBILITY . T)
         (RED.D_LINK.TAUTOLOGY . REMOVE-INHIBIT)
         (RED.D_LINK.TAUTOLOGY.RECHECK)
         (RED.D_LINK.SUBSUMPTION . REMOVE-INHIBIT)
         (RED.D_LINK.SUBSUMPTION.RECHECK)
         (FAC_INITIAL)
         (FAC_EACH.STEP)
         (STR_RESOLUTION . SET-OF-SUPPORT)
         (STR_R.SELECTION * 10 (+ 2 VARIABLES (* 2 DEPTH) (* 3 NOLIT)))
         (STR_LINK.DEPTH)
         (STR_TERM.DEPTH)
         (STR_FINITE.DOMAIN . T)
         (TERM_UNITS . T)
         (TERM_ITERATIONS . 5)
         (TERM_SET.OF.SUPPORT)
         (TERM_BREADTH.FIRST)
         (SORT_LITERALS)
         (SORT_MAX.UNIFICATION.RULE.STEPS . 100)
         (SORT_MAX.UNIFICATION.TREE.DEPTH . 100)
         (SORT_MAX.UNIFICATION.TREE.OPEN.NODES . 20)
         (SORT_UNIFIER.STOP.NUMBER . 100)
         (SORT_SHOW.VARIABLE.SORTS . T)
         (ER_PARAMODULATION . HEURISTIC-COMPLETION)
         (ER_WEIGHT.POLYNOMIALS)
         (ER_P.SELECTION * WEIGHT (IF SUPPORT 1 1.5) (IF EQUATIONAL 1 2))
         (ER_COMPLETION . UNFAILING)
         (ER_CP.REDUCTION . T)
         (ER_ORDERING . LEXICOGRAPHIC-RECURSIVE-PATH)
         (ER_OPERATOR.ORDERING * - + 0 1)
         (ER_KNUTH.BENDIX.WEIGHT (+ 1) (* 1) (- 0) (0 1) (1 1))
         (ER_POLYNOMIAL.WEIGHT (+ (X Y) (+ (* 2 Y) X)) (* (X Y) (+ (* X Y) X)) (- (X) (* X X)) (0 NIL 2) (1 NIL 2))
         (ER_NARROW.DEPTH . 0)
         (ER_NARROW.NEXT . DEPTH)
         (ER_NARROW.TEST NORM C DELTA SL N)
         (GEN_SPLITTING . 0)
         (GEN_PRESIMPLIFICATION . T)
         (GEN_MIN.EXPRESSION.LENGTH.FOR.FILE)
         (GEN_MIN.EXPRESSION.SIZE.FOR.FILE)
         (GEN_MANUAL.CONTROL)
         (GEN_MAXIMUM.STEPS)
         (GEN_MAXIMUM.TIME)
         (GEN_GRAPH.SAVING)
         (GEN_SAVE.FILE . SAVEDEFAULT)
         (GEN_LISP.GARBAGE.COLLECTION)
         (GEN_COMMON.LISP . T)
         (GEN_OTHER.PROVER . MKRP)
         (TR_PREPROCESSING)
         (TR_STEP.MODE . LR)
         (TR_DUMP)
         (TR_CLAUSE.MODE . I)
         (TR_LINK.MODE . I)
         (TR_TRACE.FILE)
         (TR_TERMINAL . T)
         (PR_INFIX.FORM . T)
         (PR_PREFIX.FORM)
         (PR_OPTIONS)
         (PR_AXIOM.CLAUSES . T)
         (PR_SYMBOLS)
         (PR_DIRECT.PROOF . T)
         (PR_VARIABLE.PRINT.NAMES X Y Z U V W XX YY ZZ UU VV WW XXX YYY ZZZ UUU VVV WWW)
         (PR_PROTOCOL . POST)
         (PR_LEFT.MARGIN . 0)
         (PR_RIGHT.MARGIN . 117)
         (PR_LATEX)
         (PR_LINELENGTH . 117)
         (PR_LITERALS)
        )))